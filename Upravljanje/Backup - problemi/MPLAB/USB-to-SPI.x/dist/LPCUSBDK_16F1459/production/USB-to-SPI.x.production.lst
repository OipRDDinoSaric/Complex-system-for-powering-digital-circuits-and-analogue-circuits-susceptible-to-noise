

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri May 19 18:12:11 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    10                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	swtext1,local,class=CONST,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x20,48,_BDT
    61                           	dabs	1,0x58,8,_CtrlTrfData
    62                           	dabs	1,0x50,8,_SetupPkt
    63                           	dabs	1,0xA0,64,_cdc_data_tx
    64                           	dabs	1,0x120,64,_cdc_data_rx
    65                           	dabs	1,0x7E,2
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011D                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  018E                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0197                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019D                     	;# 
   140  019E                     	;# 
   141  019F                     	;# 
   142  020C                     	;# 
   143  020D                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  0212                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0213                     	;# 
   150  0214                     	;# 
   151  0214                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  0391                     	;# 
   160  0392                     	;# 
   161  0393                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  039A                     	;# 
   166  039B                     	;# 
   167  0611                     	;# 
   168  0612                     	;# 
   169  0613                     	;# 
   170  0613                     	;# 
   171  0614                     	;# 
   172  0615                     	;# 
   173  0616                     	;# 
   174  0616                     	;# 
   175  0691                     	;# 
   176  0692                     	;# 
   177  0693                     	;# 
   178  0694                     	;# 
   179  0695                     	;# 
   180  0E8E                     	;# 
   181  0E8F                     	;# 
   182  0E90                     	;# 
   183  0E91                     	;# 
   184  0E92                     	;# 
   185  0E93                     	;# 
   186  0E94                     	;# 
   187  0E94                     	;# 
   188  0E95                     	;# 
   189  0E96                     	;# 
   190  0E97                     	;# 
   191  0E98                     	;# 
   192  0E99                     	;# 
   193  0E9A                     	;# 
   194  0E9B                     	;# 
   195  0E9C                     	;# 
   196  0E9D                     	;# 
   197  0E9E                     	;# 
   198  0E9F                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  008C                     	;# 
   237  008D                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  0111                     	;# 
   257  0112                     	;# 
   258  0113                     	;# 
   259  0114                     	;# 
   260  0115                     	;# 
   261  0116                     	;# 
   262  0117                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  011D                     	;# 
   266  018C                     	;# 
   267  018D                     	;# 
   268  018E                     	;# 
   269  0191                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0194                     	;# 
   275  0195                     	;# 
   276  0196                     	;# 
   277  0197                     	;# 
   278  0199                     	;# 
   279  019A                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  020C                     	;# 
   287  020D                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0216                     	;# 
   300  0216                     	;# 
   301  0217                     	;# 
   302  0217                     	;# 
   303  0391                     	;# 
   304  0392                     	;# 
   305  0393                     	;# 
   306  0394                     	;# 
   307  0395                     	;# 
   308  0396                     	;# 
   309  039A                     	;# 
   310  039B                     	;# 
   311  0611                     	;# 
   312  0612                     	;# 
   313  0613                     	;# 
   314  0613                     	;# 
   315  0614                     	;# 
   316  0615                     	;# 
   317  0616                     	;# 
   318  0616                     	;# 
   319  0691                     	;# 
   320  0692                     	;# 
   321  0693                     	;# 
   322  0694                     	;# 
   323  0695                     	;# 
   324  0E8E                     	;# 
   325  0E8F                     	;# 
   326  0E90                     	;# 
   327  0E91                     	;# 
   328  0E92                     	;# 
   329  0E93                     	;# 
   330  0E94                     	;# 
   331  0E94                     	;# 
   332  0E95                     	;# 
   333  0E96                     	;# 
   334  0E97                     	;# 
   335  0E98                     	;# 
   336  0E99                     	;# 
   337  0E9A                     	;# 
   338  0E9B                     	;# 
   339  0E9C                     	;# 
   340  0E9D                     	;# 
   341  0E9E                     	;# 
   342  0E9F                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0016                     	;# 
   374  0017                     	;# 
   375  0018                     	;# 
   376  0019                     	;# 
   377  001A                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0095                     	;# 
   386  0096                     	;# 
   387  0097                     	;# 
   388  0098                     	;# 
   389  0099                     	;# 
   390  009A                     	;# 
   391  009B                     	;# 
   392  009B                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  0111                     	;# 
   401  0112                     	;# 
   402  0113                     	;# 
   403  0114                     	;# 
   404  0115                     	;# 
   405  0116                     	;# 
   406  0117                     	;# 
   407  0118                     	;# 
   408  0119                     	;# 
   409  011D                     	;# 
   410  018C                     	;# 
   411  018D                     	;# 
   412  018E                     	;# 
   413  0191                     	;# 
   414  0191                     	;# 
   415  0192                     	;# 
   416  0193                     	;# 
   417  0193                     	;# 
   418  0194                     	;# 
   419  0195                     	;# 
   420  0196                     	;# 
   421  0197                     	;# 
   422  0199                     	;# 
   423  019A                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019C                     	;# 
   427  019D                     	;# 
   428  019E                     	;# 
   429  019F                     	;# 
   430  020C                     	;# 
   431  020D                     	;# 
   432  0211                     	;# 
   433  0211                     	;# 
   434  0212                     	;# 
   435  0212                     	;# 
   436  0213                     	;# 
   437  0213                     	;# 
   438  0214                     	;# 
   439  0214                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0216                     	;# 
   444  0216                     	;# 
   445  0217                     	;# 
   446  0217                     	;# 
   447  0391                     	;# 
   448  0392                     	;# 
   449  0393                     	;# 
   450  0394                     	;# 
   451  0395                     	;# 
   452  0396                     	;# 
   453  039A                     	;# 
   454  039B                     	;# 
   455  0611                     	;# 
   456  0612                     	;# 
   457  0613                     	;# 
   458  0613                     	;# 
   459  0614                     	;# 
   460  0615                     	;# 
   461  0616                     	;# 
   462  0616                     	;# 
   463  0691                     	;# 
   464  0692                     	;# 
   465  0693                     	;# 
   466  0694                     	;# 
   467  0695                     	;# 
   468  0E8E                     	;# 
   469  0E8F                     	;# 
   470  0E90                     	;# 
   471  0E91                     	;# 
   472  0E92                     	;# 
   473  0E93                     	;# 
   474  0E94                     	;# 
   475  0E94                     	;# 
   476  0E95                     	;# 
   477  0E96                     	;# 
   478  0E97                     	;# 
   479  0E98                     	;# 
   480  0E99                     	;# 
   481  0E9A                     	;# 
   482  0E9B                     	;# 
   483  0E9C                     	;# 
   484  0E9D                     	;# 
   485  0E9E                     	;# 
   486  0E9F                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  000E                     	;# 
   513  0011                     	;# 
   514  0012                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  001A                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  008E                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0097                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009A                     	;# 
   535  009B                     	;# 
   536  009B                     	;# 
   537  009C                     	;# 
   538  009D                     	;# 
   539  009E                     	;# 
   540  009F                     	;# 
   541  010C                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  0111                     	;# 
   545  0112                     	;# 
   546  0113                     	;# 
   547  0114                     	;# 
   548  0115                     	;# 
   549  0116                     	;# 
   550  0117                     	;# 
   551  0118                     	;# 
   552  0119                     	;# 
   553  011D                     	;# 
   554  018C                     	;# 
   555  018D                     	;# 
   556  018E                     	;# 
   557  0191                     	;# 
   558  0191                     	;# 
   559  0192                     	;# 
   560  0193                     	;# 
   561  0193                     	;# 
   562  0194                     	;# 
   563  0195                     	;# 
   564  0196                     	;# 
   565  0197                     	;# 
   566  0199                     	;# 
   567  019A                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019C                     	;# 
   571  019D                     	;# 
   572  019E                     	;# 
   573  019F                     	;# 
   574  020C                     	;# 
   575  020D                     	;# 
   576  0211                     	;# 
   577  0211                     	;# 
   578  0212                     	;# 
   579  0212                     	;# 
   580  0213                     	;# 
   581  0213                     	;# 
   582  0214                     	;# 
   583  0214                     	;# 
   584  0215                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0216                     	;# 
   588  0216                     	;# 
   589  0217                     	;# 
   590  0217                     	;# 
   591  0391                     	;# 
   592  0392                     	;# 
   593  0393                     	;# 
   594  0394                     	;# 
   595  0395                     	;# 
   596  0396                     	;# 
   597  039A                     	;# 
   598  039B                     	;# 
   599  0611                     	;# 
   600  0612                     	;# 
   601  0613                     	;# 
   602  0613                     	;# 
   603  0614                     	;# 
   604  0615                     	;# 
   605  0616                     	;# 
   606  0616                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0E8E                     	;# 
   613  0E8F                     	;# 
   614  0E90                     	;# 
   615  0E91                     	;# 
   616  0E92                     	;# 
   617  0E93                     	;# 
   618  0E94                     	;# 
   619  0E94                     	;# 
   620  0E95                     	;# 
   621  0E96                     	;# 
   622  0E97                     	;# 
   623  0E98                     	;# 
   624  0E99                     	;# 
   625  0E9A                     	;# 
   626  0E9B                     	;# 
   627  0E9C                     	;# 
   628  0E9D                     	;# 
   629  0E9E                     	;# 
   630  0E9F                     	;# 
   631  0FE4                     	;# 
   632  0FE5                     	;# 
   633  0FE6                     	;# 
   634  0FE7                     	;# 
   635  0FE8                     	;# 
   636  0FE9                     	;# 
   637  0FEA                     	;# 
   638  0FEB                     	;# 
   639  0FED                     	;# 
   640  0FEE                     	;# 
   641  0FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0095                     	;# 
   674  0096                     	;# 
   675  0097                     	;# 
   676  0098                     	;# 
   677  0099                     	;# 
   678  009A                     	;# 
   679  009B                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  009F                     	;# 
   685  010C                     	;# 
   686  010D                     	;# 
   687  010E                     	;# 
   688  0111                     	;# 
   689  0112                     	;# 
   690  0113                     	;# 
   691  0114                     	;# 
   692  0115                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0118                     	;# 
   696  0119                     	;# 
   697  011D                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700  018E                     	;# 
   701  0191                     	;# 
   702  0191                     	;# 
   703  0192                     	;# 
   704  0193                     	;# 
   705  0193                     	;# 
   706  0194                     	;# 
   707  0195                     	;# 
   708  0196                     	;# 
   709  0197                     	;# 
   710  0199                     	;# 
   711  019A                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019F                     	;# 
   718  020C                     	;# 
   719  020D                     	;# 
   720  0211                     	;# 
   721  0211                     	;# 
   722  0212                     	;# 
   723  0212                     	;# 
   724  0213                     	;# 
   725  0213                     	;# 
   726  0214                     	;# 
   727  0214                     	;# 
   728  0215                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0216                     	;# 
   732  0216                     	;# 
   733  0217                     	;# 
   734  0217                     	;# 
   735  0391                     	;# 
   736  0392                     	;# 
   737  0393                     	;# 
   738  0394                     	;# 
   739  0395                     	;# 
   740  0396                     	;# 
   741  039A                     	;# 
   742  039B                     	;# 
   743  0611                     	;# 
   744  0612                     	;# 
   745  0613                     	;# 
   746  0613                     	;# 
   747  0614                     	;# 
   748  0615                     	;# 
   749  0616                     	;# 
   750  0616                     	;# 
   751  0691                     	;# 
   752  0692                     	;# 
   753  0693                     	;# 
   754  0694                     	;# 
   755  0695                     	;# 
   756  0E8E                     	;# 
   757  0E8F                     	;# 
   758  0E90                     	;# 
   759  0E91                     	;# 
   760  0E92                     	;# 
   761  0E93                     	;# 
   762  0E94                     	;# 
   763  0E94                     	;# 
   764  0E95                     	;# 
   765  0E96                     	;# 
   766  0E97                     	;# 
   767  0E98                     	;# 
   768  0E99                     	;# 
   769  0E9A                     	;# 
   770  0E9B                     	;# 
   771  0E9C                     	;# 
   772  0E9D                     	;# 
   773  0E9E                     	;# 
   774  0E9F                     	;# 
   775  0FE4                     	;# 
   776  0FE5                     	;# 
   777  0FE6                     	;# 
   778  0FE7                     	;# 
   779  0FE8                     	;# 
   780  0FE9                     	;# 
   781  0FEA                     	;# 
   782  0FEB                     	;# 
   783  0FED                     	;# 
   784  0FEE                     	;# 
   785  0FEF                     	;# 
   786  0000                     	;# 
   787  0001                     	;# 
   788  0002                     	;# 
   789  0003                     	;# 
   790  0004                     	;# 
   791  0005                     	;# 
   792  0006                     	;# 
   793  0007                     	;# 
   794  0008                     	;# 
   795  0009                     	;# 
   796  000A                     	;# 
   797  000B                     	;# 
   798  000C                     	;# 
   799  000D                     	;# 
   800  000E                     	;# 
   801  0011                     	;# 
   802  0012                     	;# 
   803  0015                     	;# 
   804  0016                     	;# 
   805  0016                     	;# 
   806  0017                     	;# 
   807  0018                     	;# 
   808  0019                     	;# 
   809  001A                     	;# 
   810  001B                     	;# 
   811  001C                     	;# 
   812  008C                     	;# 
   813  008D                     	;# 
   814  008E                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0095                     	;# 
   818  0096                     	;# 
   819  0097                     	;# 
   820  0098                     	;# 
   821  0099                     	;# 
   822  009A                     	;# 
   823  009B                     	;# 
   824  009B                     	;# 
   825  009C                     	;# 
   826  009D                     	;# 
   827  009E                     	;# 
   828  009F                     	;# 
   829  010C                     	;# 
   830  010D                     	;# 
   831  010E                     	;# 
   832  0111                     	;# 
   833  0112                     	;# 
   834  0113                     	;# 
   835  0114                     	;# 
   836  0115                     	;# 
   837  0116                     	;# 
   838  0117                     	;# 
   839  0118                     	;# 
   840  0119                     	;# 
   841  011D                     	;# 
   842  018C                     	;# 
   843  018D                     	;# 
   844  018E                     	;# 
   845  0191                     	;# 
   846  0191                     	;# 
   847  0192                     	;# 
   848  0193                     	;# 
   849  0193                     	;# 
   850  0194                     	;# 
   851  0195                     	;# 
   852  0196                     	;# 
   853  0197                     	;# 
   854  0199                     	;# 
   855  019A                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019C                     	;# 
   859  019D                     	;# 
   860  019E                     	;# 
   861  019F                     	;# 
   862  020C                     	;# 
   863  020D                     	;# 
   864  0211                     	;# 
   865  0211                     	;# 
   866  0212                     	;# 
   867  0212                     	;# 
   868  0213                     	;# 
   869  0213                     	;# 
   870  0214                     	;# 
   871  0214                     	;# 
   872  0215                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0216                     	;# 
   876  0216                     	;# 
   877  0217                     	;# 
   878  0217                     	;# 
   879  0391                     	;# 
   880  0392                     	;# 
   881  0393                     	;# 
   882  0394                     	;# 
   883  0395                     	;# 
   884  0396                     	;# 
   885  039A                     	;# 
   886  039B                     	;# 
   887  0611                     	;# 
   888  0612                     	;# 
   889  0613                     	;# 
   890  0613                     	;# 
   891  0614                     	;# 
   892  0615                     	;# 
   893  0616                     	;# 
   894  0616                     	;# 
   895  0691                     	;# 
   896  0692                     	;# 
   897  0693                     	;# 
   898  0694                     	;# 
   899  0695                     	;# 
   900  0E8E                     	;# 
   901  0E8F                     	;# 
   902  0E90                     	;# 
   903  0E91                     	;# 
   904  0E92                     	;# 
   905  0E93                     	;# 
   906  0E94                     	;# 
   907  0E94                     	;# 
   908  0E95                     	;# 
   909  0E96                     	;# 
   910  0E97                     	;# 
   911  0E98                     	;# 
   912  0E99                     	;# 
   913  0E9A                     	;# 
   914  0E9B                     	;# 
   915  0E9C                     	;# 
   916  0E9D                     	;# 
   917  0E9E                     	;# 
   918  0E9F                     	;# 
   919  0FE4                     	;# 
   920  0FE5                     	;# 
   921  0FE6                     	;# 
   922  0FE7                     	;# 
   923  0FE8                     	;# 
   924  0FE9                     	;# 
   925  0FEA                     	;# 
   926  0FEB                     	;# 
   927  0FED                     	;# 
   928  0FEE                     	;# 
   929  0FEF                     	;# 
   930                           
   931                           	psect	stringtext
   932  031B                     __pstringtext:	
   933  031B                     _USB_SD_Ptr:	
   934  031B  34E0               	retlw	low (_sd000| (0+32768))
   935  031C  3483               	retlw	high (_sd000| (0+32768))
   936  031D  3466               	retlw	low (_sd001| (0+32768))
   937  031E  3483               	retlw	high (_sd001| (0+32768))
   938  031F  349A               	retlw	low (_sd002| (0+32768))
   939  0320  3483               	retlw	high (_sd002| (0+32768))
   940  0321                     __end_of_USB_SD_Ptr:	
   941  0321                     _USB_CD_Ptr:	
   942  0321  3423               	retlw	low (_configDescriptor1| (0+32768))
   943  0322  3483               	retlw	high (_configDescriptor1| (0+32768))
   944  0323                     __end_of_USB_CD_Ptr:	
   945  0323                     _configDescriptor1:	
   946  0323  3409               	retlw	9
   947  0324  3402               	retlw	2
   948  0325  3443               	retlw	67
   949  0326  3400               	retlw	0
   950  0327  3402               	retlw	2
   951  0328  3401               	retlw	1
   952  0329  3400               	retlw	0
   953  032A  34C0               	retlw	192
   954  032B  3432               	retlw	50
   955  032C  3409               	retlw	9
   956  032D  3404               	retlw	4
   957  032E  3400               	retlw	0
   958  032F  3400               	retlw	0
   959  0330  3401               	retlw	1
   960  0331  3402               	retlw	2
   961  0332  3402               	retlw	2
   962  0333  3401               	retlw	1
   963  0334  3400               	retlw	0
   964  0335  3405               	retlw	5
   965  0336  3424               	retlw	36
   966  0337  3400               	retlw	0
   967  0338  3410               	retlw	16
   968  0339  3401               	retlw	1
   969  033A  3404               	retlw	4
   970  033B  3424               	retlw	36
   971  033C  3402               	retlw	2
   972  033D  3402               	retlw	2
   973  033E  3405               	retlw	5
   974  033F  3424               	retlw	36
   975  0340  3406               	retlw	6
   976  0341  3400               	retlw	0
   977  0342  3401               	retlw	1
   978  0343  3405               	retlw	5
   979  0344  3424               	retlw	36
   980  0345  3401               	retlw	1
   981  0346  3400               	retlw	0
   982  0347  3401               	retlw	1
   983  0348  3407               	retlw	7
   984  0349  3405               	retlw	5
   985  034A  3481               	retlw	129
   986  034B  3403               	retlw	3
   987  034C  3408               	retlw	8
   988  034D  3400               	retlw	0
   989  034E  3402               	retlw	2
   990  034F  3409               	retlw	9
   991  0350  3404               	retlw	4
   992  0351  3401               	retlw	1
   993  0352  3400               	retlw	0
   994  0353  3402               	retlw	2
   995  0354  340A               	retlw	10
   996  0355  3400               	retlw	0
   997  0356  3400               	retlw	0
   998  0357  3400               	retlw	0
   999  0358  3407               	retlw	7
  1000  0359  3405               	retlw	5
  1001  035A  3402               	retlw	2
  1002  035B  3402               	retlw	2
  1003  035C  3440               	retlw	64
  1004  035D  3400               	retlw	0
  1005  035E  3400               	retlw	0
  1006  035F  3407               	retlw	7
  1007  0360  3405               	retlw	5
  1008  0361  3482               	retlw	130
  1009  0362  3402               	retlw	2
  1010  0363  3440               	retlw	64
  1011  0364  3400               	retlw	0
  1012  0365  3400               	retlw	0
  1013  0366                     __end_of_configDescriptor1:	
  1014  0366                     _sd001:	
  1015  0366  3434               	retlw	52
  1016  0367  3403               	retlw	3
  1017  0368  344D               	retlw	77
  1018  0369  3400               	retlw	0
  1019  036A  3469               	retlw	105
  1020  036B  3400               	retlw	0
  1021  036C  3463               	retlw	99
  1022  036D  3400               	retlw	0
  1023  036E  3472               	retlw	114
  1024  036F  3400               	retlw	0
  1025  0370  346F               	retlw	111
  1026  0371  3400               	retlw	0
  1027  0372  3463               	retlw	99
  1028  0373  3400               	retlw	0
  1029  0374  3468               	retlw	104
  1030  0375  3400               	retlw	0
  1031  0376  3469               	retlw	105
  1032  0377  3400               	retlw	0
  1033  0378  3470               	retlw	112
  1034  0379  3400               	retlw	0
  1035  037A  3420               	retlw	32
  1036  037B  3400               	retlw	0
  1037  037C  3454               	retlw	84
  1038  037D  3400               	retlw	0
  1039  037E  3465               	retlw	101
  1040  037F  3400               	retlw	0
  1041  0380  3463               	retlw	99
  1042  0381  3400               	retlw	0
  1043  0382  3468               	retlw	104
  1044  0383  3400               	retlw	0
  1045  0384  346E               	retlw	110
  1046  0385  3400               	retlw	0
  1047  0386  346F               	retlw	111
  1048  0387  3400               	retlw	0
  1049  0388  346C               	retlw	108
  1050  0389  3400               	retlw	0
  1051  038A  346F               	retlw	111
  1052  038B  3400               	retlw	0
  1053  038C  3467               	retlw	103
  1054  038D  3400               	retlw	0
  1055  038E  3479               	retlw	121
  1056  038F  3400               	retlw	0
  1057  0390  3420               	retlw	32
  1058  0391  3400               	retlw	0
  1059  0392  3449               	retlw	73
  1060  0393  3400               	retlw	0
  1061  0394  346E               	retlw	110
  1062  0395  3400               	retlw	0
  1063  0396  3463               	retlw	99
  1064  0397  3400               	retlw	0
  1065  0398  342E               	retlw	46
  1066  0399  3400               	retlw	0
  1067  039A                     __end_of_sd001:	
  1068  039A                     _sd002:	
  1069  039A  3434               	retlw	52
  1070  039B  3403               	retlw	3
  1071  039C  3443               	retlw	67
  1072  039D  3400               	retlw	0
  1073  039E  3444               	retlw	68
  1074  039F  3400               	retlw	0
  1075  03A0  3443               	retlw	67
  1076  03A1  3400               	retlw	0
  1077  03A2  3420               	retlw	32
  1078  03A3  3400               	retlw	0
  1079  03A4  3452               	retlw	82
  1080  03A5  3400               	retlw	0
  1081  03A6  3453               	retlw	83
  1082  03A7  3400               	retlw	0
  1083  03A8  342D               	retlw	45
  1084  03A9  3400               	retlw	0
  1085  03AA  3432               	retlw	50
  1086  03AB  3400               	retlw	0
  1087  03AC  3433               	retlw	51
  1088  03AD  3400               	retlw	0
  1089  03AE  3432               	retlw	50
  1090  03AF  3400               	retlw	0
  1091  03B0  3420               	retlw	32
  1092  03B1  3400               	retlw	0
  1093  03B2  3445               	retlw	69
  1094  03B3  3400               	retlw	0
  1095  03B4  346D               	retlw	109
  1096  03B5  3400               	retlw	0
  1097  03B6  3475               	retlw	117
  1098  03B7  3400               	retlw	0
  1099  03B8  346C               	retlw	108
  1100  03B9  3400               	retlw	0
  1101  03BA  3461               	retlw	97
  1102  03BB  3400               	retlw	0
  1103  03BC  3474               	retlw	116
  1104  03BD  3400               	retlw	0
  1105  03BE  3469               	retlw	105
  1106  03BF  3400               	retlw	0
  1107  03C0  346F               	retlw	111
  1108  03C1  3400               	retlw	0
  1109  03C2  346E               	retlw	110
  1110  03C3  3400               	retlw	0
  1111  03C4  3420               	retlw	32
  1112  03C5  3400               	retlw	0
  1113  03C6  3444               	retlw	68
  1114  03C7  3400               	retlw	0
  1115  03C8  3465               	retlw	101
  1116  03C9  3400               	retlw	0
  1117  03CA  346D               	retlw	109
  1118  03CB  3400               	retlw	0
  1119  03CC  346F               	retlw	111
  1120  03CD  3400               	retlw	0
  1121  03CE                     __end_of_sd002:	
  1122  03CE                     _device_dsc:	
  1123  03CE  3412               	retlw	18
  1124  03CF  3401               	retlw	1
  1125  03D0  3400               	retlw	0
  1126  03D1  3402               	retlw	2
  1127  03D2  3402               	retlw	2
  1128  03D3  3400               	retlw	0
  1129  03D4  3400               	retlw	0
  1130  03D5  3408               	retlw	8
  1131  03D6  34D8               	retlw	216
  1132  03D7  3404               	retlw	4
  1133  03D8  340A               	retlw	10
  1134  03D9  3400               	retlw	0
  1135  03DA  3400               	retlw	0
  1136  03DB  3401               	retlw	1
  1137  03DC  3401               	retlw	1
  1138  03DD  3402               	retlw	2
  1139  03DE  3400               	retlw	0
  1140  03DF  3401               	retlw	1
  1141  03E0                     __end_of_device_dsc:	
  1142  03E0                     _sd000:	
  1143  03E0  3404               	retlw	4
  1144  03E1  3403               	retlw	3
  1145  03E2  3409               	retlw	9
  1146  03E3  3404               	retlw	4
  1147  03E4                     __end_of_sd000:	
  1148  000B                     _INTCONbits	set	11
  1149  0011                     _PIR1bits	set	17
  1150  0012                     _PIR2bits	set	18
  1151  0072                     _RC2	set	114
  1152  0075                     _RC5	set	117
  1153  0099                     _OSCCON	set	153
  1154  0091                     _PIE1bits	set	145
  1155  0092                     _PIE2bits	set	146
  1156  046C                     _TRISB4	set	1132
  1157  046E                     _TRISB6	set	1134
  1158  0472                     _TRISC2	set	1138
  1159  0475                     _TRISC5	set	1141
  1160  0476                     _TRISC6	set	1142
  1161  0477                     _TRISC7	set	1143
  1162  0C72                     _ANSC2	set	3186
  1163  0211                     _SSP1BUF	set	529
  1164  0211                     _SSPBUF	set	529
  1165  0215                     _SSPCON1bits	set	533
  1166  0214                     _SSPSTATbits	set	532
  1167  039B                     _ACTCON	set	923
  1168  0E96                     _UADDR	set	3734
  1169  0E91                     _UCFG	set	3729
  1170  0E8E                     _UCON	set	3726
  1171  0E8E                     _UCONbits	set	3726
  1172  0E97                     _UEIE	set	3735
  1173  0E93                     _UEIR	set	3731
  1174  0E98                     _UEP0bits	set	3736
  1175  0E92                     _UIE	set	3730
  1176  0E92                     _UIEbits	set	3730
  1177  0E90                     _UIR	set	3728
  1178  0E90                     _UIRbits	set	3728
  1179  0E8F                     _USTAT	set	3727
  1180  0E98                     _UEP0	set	3736
  1181  0E99                     _UEP1	set	3737
  1182                           
  1183                           ; #config settings
  1184  0000                     
  1185                           	psect	cinit
  1186  0014                     start_initialization:	
  1187  0014                     __initialization:	
  1188                           
  1189                           ; Clear objects allocated to BANK1
  1190  0014  0021               	movlb	1	; select bank1
  1191  0015  01E0               	clrf	__pbssBANK1& (0+127)
  1192  0016  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  1193  0017  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  1194  0018  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  1195  0019  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  1196  001A  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  1197                           
  1198                           ; Clear objects allocated to BANK3
  1199  001B  30A0               	movlw	low __pbssBANK3
  1200  001C  0084               	movwf	4
  1201  001D  3001               	movlw	high __pbssBANK3
  1202  001E  0085               	movwf	5
  1203  001F  304A               	movlw	74
  1204  0020  3188  2079  3180   	fcall	clear_ram0
  1205                           
  1206                           ; Clear objects allocated to BANK4
  1207  0023  3020               	movlw	low __pbssBANK4
  1208  0024  0084               	movwf	4
  1209  0025  3002               	movlw	high __pbssBANK4
  1210  0026  0085               	movwf	5
  1211  0027  3012               	movlw	18
  1212  0028  3188  2079  3180   	fcall	clear_ram0
  1213                           
  1214                           ; Clear objects allocated to BANK5
  1215  002B  30A0               	movlw	low __pbssBANK5
  1216  002C  0084               	movwf	4
  1217  002D  3002               	movlw	high __pbssBANK5
  1218  002E  0085               	movwf	5
  1219  002F  3040               	movlw	64
  1220  0030  3188  2079  3180   	fcall	clear_ram0
  1221                           
  1222                           ; Clear objects allocated to BANK6
  1223  0033  3020               	movlw	low __pbssBANK6
  1224  0034  0084               	movwf	4
  1225  0035  3003               	movlw	high __pbssBANK6
  1226  0036  0085               	movwf	5
  1227  0037  3040               	movlw	64
  1228  0038  3188  2079         	fcall	clear_ram0
  1229  003A                     end_of_initialization:	
  1230                           ;End of C runtime variable initialization code
  1231                           
  1232  003A                     __end_of__initialization:	
  1233  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1234  003B  0020               	movlb	0
  1235  003C  318E  2E90         	ljmp	_main	;jump to C main() function
  1236                           
  1237                           	psect	bssBANK1
  1238  00E0                     __pbssBANK1:	
  1239  00E0                     _pBDTEntryEP0OutNext:	
  1240  00E0                     	ds	2
  1241  00E2                     _USBDeviceState:	
  1242  00E2                     	ds	1
  1243  00E3                     _controlTransferState:	
  1244  00E3                     	ds	1
  1245  00E4                     _pBDTEntryEP0OutCurrent:	
  1246  00E4                     	ds	1
  1247  00E5                     _USTATcopy:	
  1248  00E5                     	ds	1
  1249                           
  1250                           	psect	bssBANK3
  1251  01A0                     __pbssBANK3:	
  1252  01A0                     _outPipes:	
  1253  01A0                     	ds	7
  1254  01A7                     _pBDTEntryIn:	
  1255  01A7                     	ds	6
  1256  01AD                     _pBDTEntryOut:	
  1257  01AD                     	ds	6
  1258  01B3                     _inPipes:	
  1259  01B3                     	ds	5
  1260  01B8                     _BaudRateGen:	
  1261  01B8                     	ds	4
  1262  01BC                     _USB1msTickCount:	
  1263  01BC                     	ds	4
  1264  01C0                     _ep_data_in:	
  1265  01C0                     	ds	3
  1266  01C3                     _ep_data_out:	
  1267  01C3                     	ds	3
  1268  01C6                     _CDCDataInHandle:	
  1269  01C6                     	ds	2
  1270  01C8                     _CDCDataOutHandle:	
  1271  01C8                     	ds	2
  1272  01CA                     _pCDCDst:	
  1273  01CA                     	ds	2
  1274  01CC                     _pCDCSrc:	
  1275  01CC                     	ds	2
  1276  01CE                     _BothEP0OutUOWNsSet:	
  1277  01CE                     	ds	1
  1278  01CF                     _RemoteWakeup:	
  1279  01CF                     	ds	1
  1280  01D0                     _USBBusIsSuspended:	
  1281  01D0                     	ds	1
  1282  01D1                     _USBDeferINDataStagePackets:	
  1283  01D1                     	ds	1
  1284  01D2                     _USBDeferOUTDataStagePackets:	
  1285  01D2                     	ds	1
  1286  01D3                     _USBDeferStatusStagePacket:	
  1287  01D3                     	ds	1
  1288  01D4                     _USBStatusStageEnabledFlag1:	
  1289  01D4                     	ds	1
  1290  01D5                     _USBStatusStageEnabledFlag2:	
  1291  01D5                     	ds	1
  1292  01D6                     _USBStatusStageTimeoutCounter:	
  1293  01D6                     	ds	1
  1294  01D7                     _USBTicksSinceSuspendEnd:	
  1295  01D7                     	ds	1
  1296  01D8                     _cdc_mem_type:	
  1297  01D8                     	ds	1
  1298  01D9                     _cdc_rx_len:	
  1299  01D9                     	ds	1
  1300  01DA                     _cdc_trf_state:	
  1301  01DA                     	ds	1
  1302  01DB                     _cdc_tx_len:	
  1303  01DB                     	ds	1
  1304  01DC                     _control_signal_bitmap:	
  1305  01DC                     	ds	1
  1306  01DD                     _endpoint_number:	
  1307  01DD                     	ds	1
  1308  01DE                     _pDst:	
  1309  01DE                     	ds	1
  1310  01DF                     _shortPacketStatus:	
  1311  01DF                     	ds	1
  1312  01E0                     _line_coding:	
  1313  01E0                     	ds	7
  1314  01E7                     _USBAlternateInterface:	
  1315  01E7                     	ds	2
  1316  01E9                     _USBActiveConfiguration:	
  1317  01E9                     	ds	1
  1318                           
  1319                           	psect	bssBANK4
  1320  0220                     __pbssBANK4:	
  1321  0220                     _cdc_notice:	
  1322  0220                     	ds	10
  1323  022A                     _dummy_encapsulated_cmd_response:	
  1324  022A                     	ds	8
  1325                           
  1326                           	psect	bssBANK5
  1327  02A0                     __pbssBANK5:	
  1328  02A0                     _readBuffer:	
  1329  02A0                     	ds	64
  1330                           
  1331                           	psect	bssBANK6
  1332  0320                     __pbssBANK6:	
  1333  0320                     _writeBuffer:	
  1334  0320                     	ds	64
  1335                           
  1336                           	psect	clrtext
  1337  0879                     clear_ram0:	
  1338                           ;	Called with FSR0 containing the base address, and
  1339                           ;	WREG with the size to clear
  1340                           
  1341  0879  0064               	clrwdt	;clear the watchdog before getting into this loop
  1342  087A                     clrloop0:	
  1343  087A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1344  087B  3101               	addfsr 0,1
  1345  087C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1346  087D  287A               	goto	clrloop0	;have we reached the end yet?
  1347  087E  3400               	retlw	0	;all done for this memory range, return
  1348                           
  1349                           	psect	cstackBANK3
  1350  01EA                     __pcstackBANK3:	
  1351  01EA                     ??_main:	
  1352                           
  1353                           ; 0 bytes @ 0x0
  1354  01EA                     	ds	2
  1355  01EC                     main@a:	
  1356                           
  1357                           ; 1 bytes @ 0x2
  1358  01EC                     	ds	1
  1359  01ED                     main@numBytesRead:	
  1360                           
  1361                           ; 1 bytes @ 0x3
  1362  01ED                     	ds	1
  1363  01EE                     main@i:	
  1364                           
  1365                           ; 1 bytes @ 0x4
  1366  01EE                     	ds	1
  1367                           
  1368                           	psect	cstackBANK2
  1369  0160                     __pcstackBANK2:	
  1370  0160                     ??_SYSTEM_Initialize:	
  1371  0160                     ?_USBConfigureEndpoint:	
  1372                           ; 0 bytes @ 0x0
  1373                           
  1374  0160                     ??_USBDeviceInit:	
  1375                           ; 0 bytes @ 0x0
  1376                           
  1377  0160                     ??_USBDeviceAttach:	
  1378                           ; 0 bytes @ 0x0
  1379                           
  1380  0160                     ?_putUSBUSART:	
  1381                           ; 0 bytes @ 0x0
  1382                           
  1383  0160                     ??_SPI_Init:	
  1384                           ; 0 bytes @ 0x0
  1385                           
  1386  0160                     ??_SPI_Write:	
  1387                           ; 0 bytes @ 0x0
  1388                           
  1389  0160                     ?_USBTransferOnePacket:	
  1390                           ; 0 bytes @ 0x0
  1391                           
  1392  0160                     USBTransferOnePacket@dir:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395  0160                     USBConfigureEndpoint@direction:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0160                     putUSBUSART@length:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0160                     SYSTEM_Initialize@state:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404                           
  1405                           ; 1 bytes @ 0x0
  1406  0160                     	ds	1
  1407  0161                     ??_USBConfigureEndpoint:	
  1408  0161                     ??_putUSBUSART:	
  1409                           ; 0 bytes @ 0x1
  1410                           
  1411  0161                     SPI_Write@TempVar:	
  1412                           ; 0 bytes @ 0x1
  1413                           
  1414  0161                     USBDeviceInit@p:	
  1415                           ; 1 bytes @ 0x1
  1416                           
  1417  0161                     USBTransferOnePacket@data:	
  1418                           ; 2 bytes @ 0x1
  1419                           
  1420                           
  1421                           ; 2 bytes @ 0x1
  1422  0161                     	ds	1
  1423  0162                     putUSBUSART@data:	
  1424  0162                     SPI_Write@data:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427                           
  1428                           ; 1 bytes @ 0x2
  1429  0162                     	ds	1
  1430  0163                     USBDeviceInit@i_821:	
  1431  0163                     USBTransferOnePacket@len:	
  1432                           ; 1 bytes @ 0x3
  1433                           
  1434                           
  1435                           ; 1 bytes @ 0x3
  1436  0163                     	ds	1
  1437  0164                     ??_USBTransferOnePacket:	
  1438  0164                     USBDeviceInit@i:	
  1439                           ; 0 bytes @ 0x4
  1440                           
  1441                           
  1442                           ; 1 bytes @ 0x4
  1443  0164                     	ds	1
  1444  0165                     USBConfigureEndpoint@EPNum:	
  1445                           
  1446                           ; 1 bytes @ 0x5
  1447  0165                     	ds	1
  1448  0166                     USBConfigureEndpoint@handle:	
  1449                           
  1450                           ; 1 bytes @ 0x6
  1451  0166                     	ds	1
  1452  0167                     ?_USBEnableEndpoint:	
  1453  0167                     USBEnableEndpoint@options:	
  1454                           ; 0 bytes @ 0x7
  1455                           
  1456                           
  1457                           ; 1 bytes @ 0x7
  1458  0167                     	ds	1
  1459  0168                     ??_USBEnableEndpoint:	
  1460  0168                     USBTransferOnePacket@ep:	
  1461                           ; 0 bytes @ 0x8
  1462                           
  1463                           
  1464                           ; 1 bytes @ 0x8
  1465  0168                     	ds	1
  1466  0169                     USBTransferOnePacket@handle:	
  1467                           
  1468                           ; 2 bytes @ 0x9
  1469  0169                     	ds	1
  1470  016A                     USBEnableEndpoint@p:	
  1471                           
  1472                           ; 2 bytes @ 0xA
  1473  016A                     	ds	1
  1474  016B                     ??_CDCTxService:	
  1475  016B                     ?_getsUSBUSART:	
  1476                           ; 0 bytes @ 0xB
  1477                           
  1478  016B                     getsUSBUSART@len:	
  1479                           ; 1 bytes @ 0xB
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0xB
  1483  016B                     	ds	1
  1484  016C                     ??_getsUSBUSART:	
  1485  016C                     USBEnableEndpoint@ep:	
  1486                           ; 0 bytes @ 0xC
  1487                           
  1488  016C                     CDCTxService@i:	
  1489                           ; 1 bytes @ 0xC
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0xC
  1493  016C                     	ds	1
  1494  016D                     ??_CDCInitEP:	
  1495  016D                     CDCTxService@byte_to_send:	
  1496                           ; 0 bytes @ 0xD
  1497                           
  1498                           
  1499                           ; 1 bytes @ 0xD
  1500  016D                     	ds	1
  1501  016E                     getsUSBUSART@buffer:	
  1502                           
  1503                           ; 1 bytes @ 0xE
  1504  016E                     	ds	1
  1505                           
  1506                           	psect	cstackBANK1
  1507  00E6                     __pcstackBANK1:	
  1508  00E6                     ??_USBCtrlEPService:	
  1509                           
  1510                           ; 0 bytes @ 0x0
  1511  00E6                     	ds	3
  1512  00E9                     ??_USBDeviceTasks:	
  1513                           
  1514                           ; 0 bytes @ 0x3
  1515  00E9                     	ds	2
  1516  00EB                     ??_SYS_InterruptHigh:	
  1517                           
  1518                           ; 0 bytes @ 0x5
  1519  00EB                     	ds	1
  1520                           
  1521                           	psect	cstackCOMMON
  1522  0070                     __pcstackCOMMON:	
  1523  0070                     ?_SYSTEM_Initialize:	
  1524  0070                     ?_CDCInitEP:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0070                     ?_USBCheckCDCRequest:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0070                     ??_USBCheckCDCRequest:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0070                     ?_USBWakeFromSuspend:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0070                     ?_USBSuspend:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0070                     ?_USBIncrement1msInternalTimers:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0070                     ??_USBIncrement1msInternalTimers:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0070                     ?_USBCtrlEPAllowStatusStage:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0070                     ??_USBCtrlEPAllowStatusStage:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0070                     ?_USBStallHandler:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0070                     ??_USBStallHandler:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0070                     ?_USBCtrlEPService:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0070                     ?_USBCtrlTrfTxService:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0070                     ??_USBCtrlTrfTxService:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0070                     ?_USBCtrlTrfSetupHandler:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0070                     ?_USBCtrlTrfOutHandler:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0070                     ?_USBCtrlTrfInHandler:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0070                     ?_USBCheckStdRequest:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0070                     ?_USBStdFeatureReqHandler:	
  1579                           ; 0 bytes @ 0x0
  1580                           
  1581  0070                     ?_USBDeviceInit:	
  1582                           ; 0 bytes @ 0x0
  1583                           
  1584  0070                     ?_USBDeviceTasks:	
  1585                           ; 0 bytes @ 0x0
  1586                           
  1587  0070                     ?_USBDeviceAttach:	
  1588                           ; 0 bytes @ 0x0
  1589                           
  1590  0070                     ?_USBCtrlEPAllowDataStage:	
  1591                           ; 0 bytes @ 0x0
  1592                           
  1593  0070                     ?_USBCtrlEPServiceComplete:	
  1594                           ; 0 bytes @ 0x0
  1595                           
  1596  0070                     ?_USBCtrlTrfRxService:	
  1597                           ; 0 bytes @ 0x0
  1598                           
  1599  0070                     ?_USBStdSetCfgHandler:	
  1600                           ; 0 bytes @ 0x0
  1601                           
  1602  0070                     ?_USBStdGetDscHandler:	
  1603                           ; 0 bytes @ 0x0
  1604                           
  1605  0070                     ??_USBStdGetDscHandler:	
  1606                           ; 0 bytes @ 0x0
  1607                           
  1608  0070                     ?_USBStdGetStatusHandler:	
  1609                           ; 0 bytes @ 0x0
  1610                           
  1611  0070                     ??_USBStdGetStatusHandler:	
  1612                           ; 0 bytes @ 0x0
  1613                           
  1614  0070                     ?_CDCTxService:	
  1615                           ; 0 bytes @ 0x0
  1616                           
  1617  0070                     ?_SYS_InterruptHigh:	
  1618                           ; 0 bytes @ 0x0
  1619                           
  1620  0070                     ?_SPI_Init:	
  1621                           ; 0 bytes @ 0x0
  1622                           
  1623  0070                     ?_SPI_Write:	
  1624                           ; 0 bytes @ 0x0
  1625                           
  1626  0070                     ?_main:	
  1627                           ; 0 bytes @ 0x0
  1628                           
  1629  0070                     ?i1_USBDeviceInit:	
  1630                           ; 0 bytes @ 0x0
  1631                           
  1632  0070                     ??i1_USBDeviceInit:	
  1633                           ; 0 bytes @ 0x0
  1634                           
  1635  0070                     ?i1_USBConfigureEndpoint:	
  1636                           ; 0 bytes @ 0x0
  1637                           
  1638  0070                     ?i1_CDCInitEP:	
  1639                           ; 0 bytes @ 0x0
  1640                           
  1641  0070                     ?i1_SYSTEM_Initialize:	
  1642                           ; 0 bytes @ 0x0
  1643                           
  1644  0070                     ??i1_SYSTEM_Initialize:	
  1645                           ; 0 bytes @ 0x0
  1646                           
  1647  0070                     ?_memset:	
  1648                           ; 0 bytes @ 0x0
  1649                           
  1650  0070                     ?i1_USBTransferOnePacket:	
  1651                           ; 2 bytes @ 0x0
  1652                           
  1653  0070                     i1USBTransferOnePacket@dir:	
  1654                           ; 2 bytes @ 0x0
  1655                           
  1656  0070                     i1USBConfigureEndpoint@direction:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     i1SYSTEM_Initialize@state:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0070                     memset@p1:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665                           
  1666                           ; 2 bytes @ 0x0
  1667  0070                     	ds	1
  1668  0071                     ??i1_USBConfigureEndpoint:	
  1669  0071                     USBStdGetStatusHandler@p:	
  1670                           ; 0 bytes @ 0x1
  1671                           
  1672  0071                     i1USBDeviceInit@p:	
  1673                           ; 2 bytes @ 0x1
  1674                           
  1675  0071                     i1USBTransferOnePacket@data:	
  1676                           ; 2 bytes @ 0x1
  1677                           
  1678                           
  1679                           ; 2 bytes @ 0x1
  1680  0071                     	ds	1
  1681  0072                     ??_USBCtrlTrfRxService:	
  1682  0072                     USBCtrlTrfTxService@byteToSend:	
  1683                           ; 0 bytes @ 0x2
  1684                           
  1685  0072                     memset@c:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688                           
  1689                           ; 2 bytes @ 0x2
  1690  0072                     	ds	1
  1691  0073                     ??_USBCtrlTrfInHandler:	
  1692  0073                     ??_USBCtrlEPAllowDataStage:	
  1693                           ; 0 bytes @ 0x3
  1694                           
  1695  0073                     i1USBDeviceInit@i_821:	
  1696                           ; 0 bytes @ 0x3
  1697                           
  1698  0073                     i1USBTransferOnePacket@len:	
  1699                           ; 1 bytes @ 0x3
  1700                           
  1701                           
  1702                           ; 1 bytes @ 0x3
  1703  0073                     	ds	1
  1704  0074                     ??i1_USBTransferOnePacket:	
  1705  0074                     USBCtrlTrfRxService@i:	
  1706                           ; 0 bytes @ 0x4
  1707                           
  1708  0074                     i1USBDeviceInit@i:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711  0074                     memset@n:	
  1712                           ; 1 bytes @ 0x4
  1713                           
  1714                           
  1715                           ; 2 bytes @ 0x4
  1716  0074                     	ds	1
  1717  0075                     ??_USBCtrlEPServiceComplete:	
  1718  0075                     USBCtrlTrfRxService@byteToRead:	
  1719                           ; 0 bytes @ 0x5
  1720                           
  1721  0075                     USBCtrlTrfInHandler@lastDTS:	
  1722                           ; 1 bytes @ 0x5
  1723                           
  1724  0075                     i1USBConfigureEndpoint@EPNum:	
  1725                           ; 1 bytes @ 0x5
  1726                           
  1727                           
  1728                           ; 1 bytes @ 0x5
  1729  0075                     	ds	1
  1730  0076                     ??_memset:	
  1731  0076                     ??_USBCtrlTrfOutHandler:	
  1732                           ; 0 bytes @ 0x6
  1733                           
  1734  0076                     i1USBConfigureEndpoint@handle:	
  1735                           ; 0 bytes @ 0x6
  1736                           
  1737  0076                     memset@p:	
  1738                           ; 1 bytes @ 0x6
  1739                           
  1740                           
  1741                           ; 2 bytes @ 0x6
  1742  0076                     	ds	1
  1743  0077                     ?i1_USBEnableEndpoint:	
  1744  0077                     i1USBEnableEndpoint@options:	
  1745                           ; 0 bytes @ 0x7
  1746                           
  1747                           
  1748                           ; 1 bytes @ 0x7
  1749  0077                     	ds	1
  1750  0078                     ??i1_USBEnableEndpoint:	
  1751  0078                     i1USBTransferOnePacket@ep:	
  1752                           ; 0 bytes @ 0x8
  1753                           
  1754                           
  1755                           ; 1 bytes @ 0x8
  1756  0078                     	ds	1
  1757  0079                     i1USBTransferOnePacket@handle:	
  1758                           
  1759                           ; 2 bytes @ 0x9
  1760  0079                     	ds	1
  1761  007A                     i1USBEnableEndpoint@p:	
  1762                           
  1763                           ; 2 bytes @ 0xA
  1764  007A                     	ds	2
  1765  007C                     i1USBEnableEndpoint@ep:	
  1766                           
  1767                           ; 1 bytes @ 0xC
  1768  007C                     	ds	1
  1769  007D                     ??i1_CDCInitEP:	
  1770                           
  1771                           ; 0 bytes @ 0xD
  1772  007D                     	ds	1
  1773  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1774                           
  1775                           	psect	cstackBANK0
  1776  0060                     __pcstackBANK0:	
  1777                           ; 0 bytes @ 0xE
  1778                           
  1779  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1780  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x0
  1785  0060                     	ds	2
  1786  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1787                           
  1788                           ; 2 bytes @ 0x2
  1789  0062                     	ds	2
  1790  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1791                           
  1792                           ; 2 bytes @ 0x4
  1793  0064                     	ds	2
  1794  0066                     ??_USBWakeFromSuspend:	
  1795  0066                     ??_USBSuspend:	
  1796                           ; 0 bytes @ 0x6
  1797                           
  1798  0066                     ??_USBStdFeatureReqHandler:	
  1799                           ; 0 bytes @ 0x6
  1800                           
  1801  0066                     ??_USBStdSetCfgHandler:	
  1802                           ; 0 bytes @ 0x6
  1803                           
  1804                           
  1805                           ; 0 bytes @ 0x6
  1806  0066                     	ds	1
  1807  0067                     USBStdSetCfgHandler@p:	
  1808                           
  1809                           ; 2 bytes @ 0x7
  1810  0067                     	ds	1
  1811  0068                     USBStdFeatureReqHandler@pUEP:	
  1812                           
  1813                           ; 2 bytes @ 0x8
  1814  0068                     	ds	1
  1815  0069                     USBStdSetCfgHandler@i_1174:	
  1816                           
  1817                           ; 1 bytes @ 0x9
  1818  0069                     	ds	1
  1819  006A                     USBStdSetCfgHandler@i:	
  1820  006A                     USBStdFeatureReqHandler@current_ep_data:	
  1821                           ; 1 bytes @ 0xA
  1822                           
  1823                           
  1824                           ; 1 bytes @ 0xA
  1825  006A                     	ds	1
  1826  006B                     USBStdFeatureReqHandler@p:	
  1827                           
  1828                           ; 2 bytes @ 0xB
  1829  006B                     	ds	2
  1830  006D                     ??_USBCheckStdRequest:	
  1831                           
  1832                           ; 0 bytes @ 0xD
  1833  006D                     	ds	1
  1834  006E                     ??_USBCtrlTrfSetupHandler:	
  1835                           
  1836                           ; 0 bytes @ 0xE
  1837  006E                     	ds	1
  1838  006F                     USBDeviceTasks@i:	
  1839                           
  1840                           ; 1 bytes @ 0xF
  1841  006F                     	ds	1
  1842                           
  1843                           	psect	maintext
  1844  0E90                     __pmaintext:	
  1845 ;;
  1846 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1847 ;;
  1848 ;; *************** function _main *****************
  1849 ;; Defined at:
  1850 ;;		line 16 in file "../src/main.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  i               1    4[BANK3 ] unsigned char 
  1855 ;;  numBytesRead    1    3[BANK3 ] unsigned char 
  1856 ;;  a               1    2[BANK3 ] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;		None               void
  1859 ;; Registers used:
  1860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : B1F/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1867 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  1868 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  1869 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  1870 ;;Total ram usage:        5 bytes
  1871 ;; Hardware stack levels required when called:   13
  1872 ;; This function calls:
  1873 ;;		_CDCInitEP
  1874 ;;		_CDCTxService
  1875 ;;		_SPI_Init
  1876 ;;		_SPI_Write
  1877 ;;		_SYSTEM_Initialize
  1878 ;;		_USBDeviceAttach
  1879 ;;		_USBDeviceInit
  1880 ;;		_getsUSBUSART
  1881 ;;		_putUSBUSART
  1882 ;; This function is called by:
  1883 ;;		Startup code after reset
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _main
  1889  0E90                     _main:	
  1890                           
  1891                           ;main.c: 18: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1895  0E90  3000               	movlw	0
  1896  0E91  3188  20BA  318E   	fcall	_SYSTEM_Initialize
  1897                           
  1898                           ;main.c: 19: USBDeviceInit();
  1899  0E94  3183  23E4  318E   	fcall	_USBDeviceInit
  1900                           
  1901                           ;main.c: 20: USBDeviceAttach();
  1902  0E97  3189  211C  318E   	fcall	_USBDeviceAttach
  1903                           
  1904                           ;main.c: 21: CDCInitEP();
  1905  0E9A  318A  2286  318E   	fcall	_CDCInitEP
  1906                           
  1907                           ;main.c: 22: {line_coding.dwDTERate=1200;};
  1908  0E9D  3000               	movlw	0
  1909  0E9E  0023               	movlb	3	; select bank3
  1910  0E9F  00E3               	movwf	(_line_coding+3)^(0+384)
  1911  0EA0  3000               	movlw	0
  1912  0EA1  00E2               	movwf	(_line_coding+2)^(0+384)
  1913  0EA2  3004               	movlw	4
  1914  0EA3  00E1               	movwf	(_line_coding+1)^(0+384)
  1915  0EA4  30B0               	movlw	176
  1916  0EA5  00E0               	movwf	_line_coding^(0+384)
  1917                           
  1918                           ;main.c: 24: SPI_Init();
  1919  0EA6  3188  207F  318E   	fcall	_SPI_Init
  1920                           
  1921                           ;main.c: 27: TRISC5 = 0;
  1922  0EA9  0021               	movlb	1	; select bank1
  1923  0EAA  128E               	bcf	14,5	;volatile
  1924                           
  1925                           ;main.c: 28: TRISC2 = 0;
  1926  0EAB  110E               	bcf	14,2	;volatile
  1927                           
  1928                           ;main.c: 29: ANSC2 = 0;
  1929  0EAC  0023               	movlb	3	; select bank3
  1930  0EAD  110E               	bcf	14,2	;volatile
  1931                           
  1932                           ;main.c: 30: RC2 = 0;
  1933  0EAE  0020               	movlb	0	; select bank0
  1934  0EAF  110E               	bcf	14,2	;volatile
  1935  0EB0                     l4302:	
  1936                           ;main.c: 32: while(1){
  1937                           
  1938                           
  1939                           ;main.c: 33: if( (cdc_trf_state == 0) == 1){
  1940  0EB0  0023               	movlb	3	; select bank3
  1941  0EB1  085A               	movf	_cdc_trf_state^(0+384),w
  1942  0EB2  1D03               	btfss	3,2
  1943  0EB3  2EFA               	goto	l4324
  1944                           
  1945                           ;main.c: 34: uint8_t i, numBytesRead, a;
  1946                           ;main.c: 36: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  1947  0EB4  3040               	movlw	64
  1948  0EB5  00EA               	movwf	??_main^(0+384)
  1949  0EB6  086A               	movf	??_main^(0+384),w
  1950  0EB7  0022               	movlb	2	; select bank2
  1951  0EB8  00EB               	movwf	getsUSBUSART@len^(0+256)
  1952  0EB9  30A0               	movlw	(low (_readBuffer| (0+512)))& (0+255)
  1953  0EBA  318C  2444  318E   	fcall	_getsUSBUSART
  1954  0EBD  0023               	movlb	3	; select bank3
  1955  0EBE  00EB               	movwf	(??_main+1)^(0+384)
  1956  0EBF  086B               	movf	(??_main+1)^(0+384),w
  1957  0EC0  00ED               	movwf	main@numBytesRead^(0+384)
  1958                           
  1959                           ;main.c: 38: if(numBytesRead > 0){
  1960  0EC1  086D               	movf	main@numBytesRead^(0+384),w
  1961  0EC2  1903               	btfsc	3,2
  1962  0EC3  2EFA               	goto	l4324
  1963                           
  1964                           ;main.c: 40: RC5 = 1;
  1965  0EC4  0020               	movlb	0	; select bank0
  1966  0EC5  168E               	bsf	14,5	;volatile
  1967                           
  1968                           ;main.c: 41: RC5 = 0;
  1969  0EC6  128E               	bcf	14,5	;volatile
  1970                           
  1971                           ;main.c: 43: for(i=0; i<numBytesRead; i++){
  1972  0EC7  0023               	movlb	3	; select bank3
  1973  0EC8  01EE               	clrf	main@i^(0+384)
  1974  0EC9                     l4320:	
  1975  0EC9  086D               	movf	main@numBytesRead^(0+384),w
  1976  0ECA  026E               	subwf	main@i^(0+384),w
  1977  0ECB  1803               	btfsc	3,0
  1978  0ECC  2EEE               	goto	l643
  1979                           
  1980                           ;main.c: 44: a = readBuffer[i];
  1981  0ECD  086E               	movf	main@i^(0+384),w
  1982  0ECE  3EA0               	addlw	(low (_readBuffer| (0+512)))& (0+255)
  1983  0ECF  0086               	movwf	6
  1984  0ED0  3002               	movlw	2	; select bank5/6
  1985  0ED1  0087               	movwf	7
  1986  0ED2  0801               	movf	1,w
  1987  0ED3  00EA               	movwf	??_main^(0+384)
  1988  0ED4  086A               	movf	??_main^(0+384),w
  1989  0ED5  00EC               	movwf	main@a^(0+384)
  1990                           
  1991                           ;main.c: 45: SPI_Write(a);
  1992  0ED6  086C               	movf	main@a^(0+384),w
  1993  0ED7  3188  2092  318E   	fcall	_SPI_Write
  1994                           
  1995                           ;main.c: 46: writeBuffer[i] = readBuffer[i];
  1996  0EDA  0023               	movlb	3	; select bank3
  1997  0EDB  086E               	movf	main@i^(0+384),w
  1998  0EDC  3EA0               	addlw	(low (_readBuffer| (0+512)))& (0+255)
  1999  0EDD  0086               	movwf	6
  2000  0EDE  3002               	movlw	2	; select bank5/6
  2001  0EDF  0087               	movwf	7
  2002  0EE0  0801               	movf	1,w
  2003  0EE1  00EA               	movwf	??_main^(0+384)
  2004  0EE2  086E               	movf	main@i^(0+384),w
  2005  0EE3  3E20               	addlw	(low (_writeBuffer| (0+768)))& (0+255)
  2006  0EE4  0086               	movwf	6
  2007  0EE5  3003               	movlw	3	; select bank6/7
  2008  0EE6  0087               	movwf	7
  2009  0EE7  086A               	movf	??_main^(0+384),w
  2010  0EE8  0081               	movwf	1
  2011  0EE9  3001               	movlw	1
  2012  0EEA  00EA               	movwf	??_main^(0+384)
  2013  0EEB  086A               	movf	??_main^(0+384),w
  2014  0EEC  07EE               	addwf	main@i^(0+384),f
  2015  0EED  2EC9               	goto	l4320
  2016  0EEE                     l643:	
  2017                           
  2018                           ;main.c: 47: }
  2019                           ;main.c: 49: RC5 = 1;
  2020  0EEE  0020               	movlb	0	; select bank0
  2021  0EEF  168E               	bsf	14,5	;volatile
  2022                           
  2023                           ;main.c: 50: putUSBUSART(writeBuffer, numBytesRead);
  2024  0EF0  0023               	movlb	3	; select bank3
  2025  0EF1  086D               	movf	main@numBytesRead^(0+384),w
  2026  0EF2  00EA               	movwf	??_main^(0+384)
  2027  0EF3  086A               	movf	??_main^(0+384),w
  2028  0EF4  0022               	movlb	2	; select bank2
  2029  0EF5  00E0               	movwf	putUSBUSART@length^(0+256)
  2030  0EF6  3020               	movlw	(low (_writeBuffer| (0+768)))& (0+255)
  2031  0EF7  3189  2101  318E   	fcall	_putUSBUSART
  2032  0EFA                     l4324:	
  2033                           
  2034                           ;main.c: 51: }
  2035                           ;main.c: 52: }
  2036                           ;main.c: 53: CDCTxService();
  2037  0EFA  3182  224B  318E   	fcall	_CDCTxService
  2038  0EFD  2EB0               	goto	l4302
  2039  0EFE                     __end_of_main:	
  2040                           
  2041                           	psect	text1
  2042  0901                     __ptext1:	
  2043 ;; *************** function _putUSBUSART *****************
  2044 ;; Defined at:
  2045 ;;		line 556 in file "../lib/usb/src/usb_device_cdc.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  data            1    wreg     PTR unsigned char 
  2048 ;;		 -> writeBuffer(64), 
  2049 ;;  length          1    0[BANK2 ] unsigned char 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  data            1    2[BANK2 ] PTR unsigned char 
  2052 ;;		 -> writeBuffer(64), 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;		None               void
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2062 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;Total ram usage:        3 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:   10
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _putUSBUSART
  2078  0901                     _putUSBUSART:	
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  2082                           ;putUSBUSART@data stored from wreg
  2083  0901  0022               	movlb	2	; select bank2
  2084  0902  00E2               	movwf	putUSBUSART@data^(0+256)
  2085                           
  2086                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2087  0903  0021               	movlb	1	; select bank1
  2088  0904  1112               	bcf	18,2	;volatile
  2089                           
  2090                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2091  0905  0023               	movlb	3	; select bank3
  2092  0906  085A               	movf	_cdc_trf_state^(0+384),w
  2093  0907  1D03               	btfss	3,2
  2094  0908  2919               	goto	l4180
  2095                           
  2096                           ;usb_device_cdc.c: 583: {
  2097                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2098  0909  0022               	movlb	2	; select bank2
  2099  090A  0862               	movf	putUSBUSART@data^(0+256),w
  2100  090B  00E1               	movwf	??_putUSBUSART^(0+256)
  2101  090C  0861               	movf	??_putUSBUSART^(0+256),w
  2102  090D  0023               	movlb	3	; select bank3
  2103  090E  00CC               	movwf	_pCDCSrc^(0+384)
  2104  090F  0022               	movlb	2	; select bank2
  2105  0910  0860               	movf	putUSBUSART@length^(0+256),w
  2106  0911  00E1               	movwf	??_putUSBUSART^(0+256)
  2107  0912  0861               	movf	??_putUSBUSART^(0+256),w
  2108  0913  0023               	movlb	3	; select bank3
  2109  0914  00DB               	movwf	_cdc_tx_len^(0+384)
  2110  0915  01D8               	clrf	_cdc_mem_type^(0+384)
  2111  0916  0AD8               	incf	_cdc_mem_type^(0+384),f
  2112  0917  01DA               	clrf	_cdc_trf_state^(0+384)
  2113  0918  0ADA               	incf	_cdc_trf_state^(0+384),f
  2114  0919                     l4180:	
  2115                           
  2116                           ;usb_device_cdc.c: 585: }
  2117                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2118  0919  0021               	movlb	1	; select bank1
  2119  091A  1512               	bsf	18,2	;volatile
  2120  091B  0008               	return
  2121  091C                     __end_of_putUSBUSART:	
  2122                           
  2123                           	psect	text2
  2124  0C44                     __ptext2:	
  2125 ;; *************** function _getsUSBUSART *****************
  2126 ;; Defined at:
  2127 ;;		line 485 in file "../lib/usb/src/usb_device_cdc.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  buffer          1    wreg     PTR unsigned char 
  2130 ;;		 -> readBuffer(64), 
  2131 ;;  len             1   11[BANK2 ] unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  buffer          1   14[BANK2 ] PTR unsigned char 
  2134 ;;		 -> readBuffer(64), 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      unsigned char 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2144 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;Total ram usage:        4 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:   11
  2151 ;; This function calls:
  2152 ;;		_USBTransferOnePacket
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _getsUSBUSART
  2160  0C44                     _getsUSBUSART:	
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2164                           ;getsUSBUSART@buffer stored from wreg
  2165  0C44  0022               	movlb	2	; select bank2
  2166  0C45  00EE               	movwf	getsUSBUSART@buffer^(0+256)
  2167                           
  2168                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2169  0C46  0023               	movlb	3	; select bank3
  2170  0C47  01D9               	clrf	_cdc_rx_len^(0+384)
  2171                           
  2172                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2173  0C48  0848               	movf	_CDCDataOutHandle^(0+384),w
  2174  0C49  0449               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  2175  0C4A  1903               	btfsc	3,2
  2176  0C4B  2C52               	goto	l4152
  2177  0C4C  0848               	movf	_CDCDataOutHandle^(0+384),w
  2178  0C4D  0086               	movwf	6
  2179  0C4E  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2180  0C4F  0087               	movwf	7
  2181  0C50  1B81               	btfsc	1,7
  2182  0C51  2C9D               	goto	l4166
  2183  0C52                     l4152:	
  2184                           
  2185                           ;usb_device_cdc.c: 490: {
  2186                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2187  0C52  0848               	movf	_CDCDataOutHandle^(0+384),w
  2188  0C53  0086               	movwf	6
  2189  0C54  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2190  0C55  0087               	movwf	7
  2191  0C56  3141               	addfsr 1,1
  2192  0C57  0022               	movlb	2	; select bank2
  2193  0C58  086B               	movf	getsUSBUSART@len^(0+256),w
  2194  0C59  0201               	subwf	1,w
  2195  0C5A  1803               	skipnc
  2196  0C5B  2C67               	goto	l4156
  2197                           
  2198                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2199  0C5C  0023               	movlb	3	; select bank3
  2200  0C5D  0848               	movf	_CDCDataOutHandle^(0+384),w
  2201  0C5E  0086               	movwf	6
  2202  0C5F  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2203  0C60  0087               	movwf	7
  2204  0C61  3141               	addfsr 1,1
  2205  0C62  0801               	movf	1,w
  2206  0C63  0022               	movlb	2	; select bank2
  2207  0C64  00EC               	movwf	??_getsUSBUSART^(0+256)
  2208  0C65  086C               	movf	??_getsUSBUSART^(0+256),w
  2209  0C66  00EB               	movwf	getsUSBUSART@len^(0+256)
  2210  0C67                     l4156:	
  2211                           
  2212                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2213  0C67  0023               	movlb	3	; select bank3
  2214  0C68  01D9               	clrf	_cdc_rx_len^(0+384)
  2215  0C69                     l4162:	
  2216  0C69  0022               	movlb	2	; select bank2
  2217  0C6A  086B               	movf	getsUSBUSART@len^(0+256),w
  2218  0C6B  0023               	movlb	3	; select bank3
  2219  0C6C  0259               	subwf	_cdc_rx_len^(0+384),w
  2220  0C6D  1803               	btfsc	3,0
  2221  0C6E  2C88               	goto	l4164
  2222                           
  2223                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2224  0C6F  0859               	movf	_cdc_rx_len^(0+384),w
  2225  0C70  3E20               	addlw	32
  2226  0C71  0086               	movwf	6
  2227  0C72  3001               	movlw	1	; select bank2/3
  2228  0C73  0087               	movwf	7
  2229  0C74  0801               	movf	1,w
  2230  0C75  0022               	movlb	2	; select bank2
  2231  0C76  00EC               	movwf	??_getsUSBUSART^(0+256)
  2232  0C77  0023               	movlb	3	; select bank3
  2233  0C78  0859               	movf	_cdc_rx_len^(0+384),w
  2234  0C79  0022               	movlb	2	; select bank2
  2235  0C7A  076E               	addwf	getsUSBUSART@buffer^(0+256),w
  2236  0C7B  00ED               	movwf	(??_getsUSBUSART+1)^(0+256)
  2237  0C7C  086D               	movf	(??_getsUSBUSART+1)^(0+256),w
  2238  0C7D  0086               	movwf	6
  2239  0C7E  3002               	movlw	2	; select bank4/5
  2240  0C7F  0087               	movwf	7
  2241  0C80  086C               	movf	??_getsUSBUSART^(0+256),w
  2242  0C81  0081               	movwf	1
  2243  0C82  3001               	movlw	1
  2244  0C83  00EC               	movwf	??_getsUSBUSART^(0+256)
  2245  0C84  086C               	movf	??_getsUSBUSART^(0+256),w
  2246  0C85  0023               	movlb	3	; select bank3
  2247  0C86  07D9               	addwf	_cdc_rx_len^(0+384),f
  2248  0C87  2C69               	goto	l4162
  2249  0C88                     l4164:	
  2250                           
  2251                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2252  0C88  0022               	movlb	2	; select bank2
  2253  0C89  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  2254  0C8A  3020               	movlw	32
  2255  0C8B  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  2256  0C8C  3001               	movlw	1
  2257  0C8D  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  2258  0C8E  3040               	movlw	64
  2259  0C8F  00EC               	movwf	??_getsUSBUSART^(0+256)
  2260  0C90  086C               	movf	??_getsUSBUSART^(0+256),w
  2261  0C91  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  2262  0C92  3002               	movlw	2
  2263  0C93  3187  2709         	fcall	_USBTransferOnePacket
  2264  0C95  0022               	movlb	2	; select bank2
  2265  0C96  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  2266  0C97  0023               	movlb	3	; select bank3
  2267  0C98  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  2268  0C99  0022               	movlb	2	; select bank2
  2269  0C9A  0860               	movf	?_USBTransferOnePacket^(0+256),w
  2270  0C9B  0023               	movlb	3	; select bank3
  2271  0C9C  00C8               	movwf	_CDCDataOutHandle^(0+384)
  2272  0C9D                     l4166:	
  2273                           
  2274                           ;usb_device_cdc.c: 510: }
  2275                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2276  0C9D  0859               	movf	_cdc_rx_len^(0+384),w
  2277  0C9E  0008               	return
  2278  0C9F                     __end_of_getsUSBUSART:	
  2279                           
  2280                           	psect	text3
  2281  03E4                     __ptext3:	
  2282 ;; *************** function _USBDeviceInit *****************
  2283 ;; Defined at:
  2284 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  p               2    1[BANK2 ] PTR unsigned char 
  2289 ;;		 -> UEP1(1), 
  2290 ;;  i               1    3[BANK2 ] unsigned char 
  2291 ;;  i               1    4[BANK2 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;Total ram usage:        5 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:   10
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _USBDeviceInit
  2317  03E4                     _USBDeviceInit:	
  2318                           
  2319                           ;usb_device.c: 279: uint8_t i;
  2320                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  2321                           
  2322                           ;incstack = 0
  2323                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2324  03E4  0021               	movlb	1	; select bank1
  2325  03E5  1112               	bcf	18,2	;volatile
  2326                           
  2327                           ;usb_device.c: 285: ;
  2328                           ;usb_device.c: 288: {UEIR = 0;};
  2329  03E6  003D               	movlb	29	; select bank29
  2330  03E7  0193               	clrf	19	;volatile
  2331                           
  2332                           ;usb_device.c: 291: {UIR = 0;};
  2333  03E8  0190               	clrf	16	;volatile
  2334                           
  2335                           ;usb_device.c: 294: UEP0 = 0;
  2336  03E9  0198               	clrf	24	;volatile
  2337                           
  2338                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  2339  03EA  300E               	movlw	14
  2340  03EB  0022               	movlb	2	; select bank2
  2341  03EC  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  2342  03ED  3099               	movlw	153
  2343  03EE  00E1               	movwf	USBDeviceInit@p^(0+256)
  2344  03EF  01E3               	clrf	USBDeviceInit@i_821^(0+256)
  2345  03F0  3002               	movlw	2
  2346  03F1  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  2347  03F2  1803               	btfsc	3,0
  2348  03F3  2C05               	goto	l4060
  2349  03F4                     l4052:	
  2350  03F4  0861               	movf	USBDeviceInit@p^(0+256),w
  2351  03F5  0086               	movwf	6
  2352  03F6  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  2353  03F7  0087               	movwf	7
  2354  03F8  0181               	clrf	1
  2355  03F9  3001               	movlw	1
  2356  03FA  07E1               	addwf	USBDeviceInit@p^(0+256),f
  2357  03FB  3000               	movlw	0
  2358  03FC  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  2359  03FD  3001               	movlw	1
  2360  03FE  00E0               	movwf	??_USBDeviceInit^(0+256)
  2361  03FF  0860               	movf	??_USBDeviceInit^(0+256),w
  2362  0400  07E3               	addwf	USBDeviceInit@i_821^(0+256),f
  2363  0401  3002               	movlw	2
  2364  0402  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  2365  0403  1C03               	skipc
  2366  0404  2BF4               	goto	l4052
  2367  0405                     l4060:	
  2368                           
  2369                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2370  0405  3016               	movlw	22
  2371  0406  003D               	movlb	29	; select bank29
  2372  0407  0091               	movwf	17	;volatile
  2373  0408  309F               	movlw	159
  2374  0409  0097               	movwf	23	;volatile
  2375  040A  307B               	movlw	123
  2376  040B  0092               	movwf	18	;volatile
  2377                           
  2378                           ;usb_device.c: 301: ;
  2379                           ;usb_device.c: 304: ;
  2380                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  2381  040C  0022               	movlb	2	; select bank2
  2382  040D  01E4               	clrf	USBDeviceInit@i^(0+256)
  2383  040E  300C               	movlw	12
  2384  040F  0264               	subwf	USBDeviceInit@i^(0+256),w
  2385  0410  1803               	btfsc	3,0
  2386  0411  2C2B               	goto	l173
  2387  0412                     l4068:	
  2388                           
  2389                           ;usb_device.c: 308: {
  2390                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  2391  0412  0864               	movf	USBDeviceInit@i^(0+256),w
  2392  0413  00E0               	movwf	??_USBDeviceInit^(0+256)
  2393  0414  3001               	movlw	1
  2394  0415                     u3745:	
  2395  0415  35E0               	lslf	??_USBDeviceInit^(0+256),f
  2396  0416  3EFF               	addlw	-1
  2397  0417  1D03               	skipz
  2398  0418  2C15               	goto	u3745
  2399  0419  3560               	lslf	??_USBDeviceInit^(0+256),w
  2400  041A  3E20               	addlw	32
  2401  041B  0086               	movwf	6
  2402  041C  0187               	clrf	7
  2403  041D  3000               	movlw	0
  2404  041E  3FC0               	movwi [0]fsr1
  2405  041F  3000               	movlw	0
  2406  0420  3FC1               	movwi [1]fsr1
  2407  0421  3FC2               	movwi [2]fsr1
  2408  0422  3FC3               	movwi [3]fsr1
  2409  0423  3001               	movlw	1
  2410  0424  00E0               	movwf	??_USBDeviceInit^(0+256)
  2411  0425  0860               	movf	??_USBDeviceInit^(0+256),w
  2412  0426  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2413  0427  300C               	movlw	12
  2414  0428  0264               	subwf	USBDeviceInit@i^(0+256),w
  2415  0429  1C03               	skipc
  2416  042A  2C12               	goto	l4068
  2417  042B                     l173:	
  2418                           
  2419                           ;usb_device.c: 310: }
  2420                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  2421  042B  003D               	movlb	29	; select bank29
  2422  042C  170E               	bsf	14,6	;volatile
  2423                           
  2424                           ;usb_device.c: 316: UADDR = 0x00;
  2425  042D  0196               	clrf	22	;volatile
  2426                           
  2427                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  2428  042E  120E               	bcf	14,4	;volatile
  2429                           
  2430                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  2431  042F  130E               	bcf	14,6	;volatile
  2432  0430                     l4080:	
  2433                           ;usb_device.c: 325: do
  2434                           
  2435                           
  2436                           ;usb_device.c: 326: {
  2437                           ;usb_device.c: 327: (UIR &= 0xF7);
  2438  0430  30F7               	movlw	247
  2439  0431  0022               	movlb	2	; select bank2
  2440  0432  00E0               	movwf	??_USBDeviceInit^(0+256)
  2441  0433  0860               	movf	??_USBDeviceInit^(0+256),w
  2442  0434  003D               	movlb	29	; select bank29
  2443  0435  0590               	andwf	16,f	;volatile
  2444                           
  2445                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  2446  0436  0023               	movlb	3	; select bank3
  2447  0437  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  2448                           
  2449                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  2450  0438  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  2451                           
  2452                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  2453  0439  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  2454  043A  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  2455                           
  2456                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  2457  043B  003D               	movlb	29	; select bank29
  2458  043C  1990               	btfsc	16,3	;volatile
  2459  043D  2C30               	goto	l4080
  2460                           
  2461                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  2462  043E  3001               	movlw	1
  2463  043F  0022               	movlb	2	; select bank2
  2464  0440  00E0               	movwf	??_USBDeviceInit^(0+256)
  2465  0441  0860               	movf	??_USBDeviceInit^(0+256),w
  2466  0442  0023               	movlb	3	; select bank3
  2467  0443  00D4               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  2468                           
  2469                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  2470  0444  3001               	movlw	1
  2471  0445  0022               	movlb	2	; select bank2
  2472  0446  00E0               	movwf	??_USBDeviceInit^(0+256)
  2473  0447  0860               	movf	??_USBDeviceInit^(0+256),w
  2474  0448  0023               	movlb	3	; select bank3
  2475  0449  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  2476                           
  2477                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  2478  044A  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  2479                           
  2480                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  2481  044B  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  2482                           
  2483                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  2484  044C  01D0               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  2485                           
  2486                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  2487  044D  0022               	movlb	2	; select bank2
  2488  044E  01E4               	clrf	USBDeviceInit@i^(0+256)
  2489  044F  3003               	movlw	3
  2490  0450  0264               	subwf	USBDeviceInit@i^(0+256),w
  2491  0451  1803               	btfsc	3,0
  2492  0452  2C77               	goto	l4108
  2493  0453                     l4102:	
  2494                           
  2495                           ;usb_device.c: 346: {
  2496                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  2497  0453  3564               	lslf	USBDeviceInit@i^(0+256),w
  2498  0454  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  2499  0455  0086               	movwf	6
  2500  0456  3001               	movlw	1	; select bank3/4
  2501  0457  0087               	movwf	7
  2502  0458  3000               	movlw	0
  2503  0459  3FC0               	movwi [0]fsr1
  2504  045A  3FC1               	movwi [1]fsr1
  2505                           
  2506                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  2507  045B  3564               	lslf	USBDeviceInit@i^(0+256),w
  2508  045C  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2509  045D  0086               	movwf	6
  2510  045E  3001               	movlw	1	; select bank3/4
  2511  045F  0087               	movwf	7
  2512  0460  3000               	movlw	0
  2513  0461  3FC0               	movwi [0]fsr1
  2514  0462  3FC1               	movwi [1]fsr1
  2515                           
  2516                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  2517  0463  0864               	movf	USBDeviceInit@i^(0+256),w
  2518  0464  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2519  0465  0086               	movwf	6
  2520  0466  3001               	movlw	1	; select bank3/4
  2521  0467  0087               	movwf	7
  2522  0468  0181               	clrf	1
  2523                           
  2524                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  2525  0469  0864               	movf	USBDeviceInit@i^(0+256),w
  2526  046A  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2527  046B  0086               	movwf	6
  2528  046C  3001               	movlw	1	; select bank3/4
  2529  046D  0087               	movwf	7
  2530  046E  0181               	clrf	1
  2531  046F  3001               	movlw	1
  2532  0470  00E0               	movwf	??_USBDeviceInit^(0+256)
  2533  0471  0860               	movf	??_USBDeviceInit^(0+256),w
  2534  0472  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2535  0473  3003               	movlw	3
  2536  0474  0264               	subwf	USBDeviceInit@i^(0+256),w
  2537  0475  1C03               	skipc
  2538  0476  2C53               	goto	l4102
  2539  0477                     l4108:	
  2540                           
  2541                           ;usb_device.c: 351: }
  2542                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2543  0477  3028               	movlw	40
  2544  0478  0023               	movlb	3	; select bank3
  2545  0479  00A7               	movwf	_pBDTEntryIn^(0+384)
  2546  047A  3000               	movlw	0
  2547  047B  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  2548                           
  2549                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  2550  047C  3016               	movlw	22
  2551  047D  003D               	movlb	29	; select bank29
  2552  047E  0098               	movwf	24	;volatile
  2553                           
  2554                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2555  047F  3000               	movlw	0
  2556  0480  0020               	movlb	0	; select bank0
  2557  0481  00A3               	movwf	35	;volatile
  2558  0482  3050               	movlw	80
  2559  0483  00A2               	movwf	34	;volatile
  2560                           
  2561                           ;usb_device.c: 359: BDT[0].CNT = 8;
  2562  0484  3008               	movlw	8
  2563  0485  00A1               	movwf	33	;volatile
  2564                           
  2565                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  2566  0486  3004               	movlw	4
  2567  0487  0022               	movlb	2	; select bank2
  2568  0488  00E0               	movwf	??_USBDeviceInit^(0+256)
  2569  0489  0860               	movf	??_USBDeviceInit^(0+256),w
  2570  048A  0020               	movlb	0	; select bank0
  2571  048B  00A0               	movwf	32	;volatile
  2572                           
  2573                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  2574  048C  17A0               	bsf	32,7	;volatile
  2575                           
  2576                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  2577  048D  0023               	movlb	3	; select bank3
  2578  048E  01E9               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  2579                           
  2580                           ;usb_device.c: 366: USB1msTickCount = 0;
  2581  048F  3000               	movlw	0
  2582  0490  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  2583  0491  3000               	movlw	0
  2584  0492  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  2585  0493  3000               	movlw	0
  2586  0494  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  2587  0495  3000               	movlw	0
  2588  0496  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  2589                           
  2590                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  2591  0497  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  2592                           
  2593                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  2594  0498  0021               	movlb	1	; select bank1
  2595  0499  01E2               	clrf	_USBDeviceState^(0+128)	;volatile
  2596  049A  0008               	return
  2597  049B                     __end_of_USBDeviceInit:	
  2598                           
  2599                           	psect	text4
  2600  091C                     __ptext4:	
  2601 ;; *************** function _USBDeviceAttach *****************
  2602 ;; Defined at:
  2603 ;;		line 1352 in file "../lib/usb/src/usb_device.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;Total ram usage:        1 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:   10
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function _USBDeviceAttach
  2633  091C                     _USBDeviceAttach:	
  2634                           
  2635                           ;usb_device.c: 1356: {
  2636                           ;usb_device.c: 1357: if(1 == 1)
  2637                           
  2638                           ;incstack = 0
  2639                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2640  091C  0021               	movlb	1	; select bank1
  2641  091D  0862               	movf	_USBDeviceState^(0+128),w	;volatile
  2642  091E  1D03               	btfss	3,2
  2643  091F  0008               	return
  2644                           
  2645                           ;usb_device.c: 1358: {
  2646                           ;usb_device.c: 1360: UCON = 0;
  2647  0920  003D               	movlb	29	; select bank29
  2648  0921  018E               	clrf	14	;volatile
  2649                           
  2650                           ;usb_device.c: 1363: UIE = 0;
  2651  0922  0192               	clrf	18	;volatile
  2652                           
  2653                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2654  0923  3016               	movlw	22
  2655  0924  0091               	movwf	17	;volatile
  2656  0925  309F               	movlw	159
  2657  0926  0097               	movwf	23	;volatile
  2658  0927  307B               	movlw	123
  2659  0928  0092               	movwf	18	;volatile
  2660                           
  2661                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2662  0929  0021               	movlb	1	; select bank1
  2663  092A  1512               	bsf	18,2	;volatile
  2664  092B  170B               	bsf	11,6	;volatile
  2665  092C  178B               	bsf	11,7	;volatile
  2666  092D                     l233:	
  2667                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2668                           
  2669  092D  003D               	movlb	29	; select bank29
  2670  092E  198E               	btfsc	14,3	;volatile
  2671  092F  2932               	goto	l4144
  2672  0930  158E               	bsf	14,3	;volatile
  2673  0931  292D               	goto	l233
  2674  0932                     l4144:	
  2675                           
  2676                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  2677  0932  3001               	movlw	1
  2678  0933  0022               	movlb	2	; select bank2
  2679  0934  00E0               	movwf	??_USBDeviceAttach^(0+256)
  2680  0935  0860               	movf	??_USBDeviceAttach^(0+256),w
  2681  0936  0021               	movlb	1	; select bank1
  2682  0937  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  2683  0938  0008               	return
  2684  0939                     __end_of_USBDeviceAttach:	
  2685                           
  2686                           	psect	text5
  2687  08BA                     __ptext5:	
  2688 ;; *************** function _SYSTEM_Initialize *****************
  2689 ;; Defined at:
  2690 ;;		line 82 in file "system.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  state           1    wreg     enum E2613
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  state           1    0[BANK2 ] enum E2613
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:   10
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _SYSTEM_Initialize
  2720  08BA                     _SYSTEM_Initialize:	
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  2724                           ;SYSTEM_Initialize@state stored from wreg
  2725  08BA  0022               	movlb	2	; select bank2
  2726  08BB  00E0               	movwf	SYSTEM_Initialize@state^(0+256)
  2727                           
  2728                           ;system.c: 84: switch(state)
  2729  08BC  28C4               	goto	l4022
  2730  08BD                     l4018:	
  2731                           ;system.c: 85: {
  2732                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  2733                           
  2734                           
  2735                           ;system.c: 90: OSCCON = 0xFC;
  2736  08BD  30FC               	movlw	252
  2737  08BE  0021               	movlb	1	; select bank1
  2738  08BF  0099               	movwf	25	;volatile
  2739                           
  2740                           ;system.c: 91: ACTCON = 0x90;
  2741  08C0  3090               	movlw	144
  2742  08C1  0027               	movlb	7	; select bank7
  2743  08C2  009B               	movwf	27	;volatile
  2744                           
  2745                           ;system.c: 102: }
  2746                           
  2747                           ;system.c: 101: break;
  2748                           
  2749                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  2750                           
  2751                           ;system.c: 98: break;
  2752                           
  2753                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  2754                           
  2755                           ;system.c: 95: break;
  2756  08C3  0008               	return
  2757  08C4                     l4022:	
  2758  08C4  0022               	movlb	2	; select bank2
  2759  08C5  0860               	movf	SYSTEM_Initialize@state^(0+256),w
  2760                           
  2761                           ; Switch size 1, requested type "space"
  2762                           ; Number of cases is 3, Range of values is 0 to 2
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; simple_byte           10     6 (average)
  2766                           ; direct_byte           12     6 (fixed)
  2767                           ; jumptable            260     6 (fixed)
  2768                           ;	Chosen strategy is simple_byte
  2769  08C6  3A00               	xorlw	0	; case 0
  2770  08C7  1903               	skipnz
  2771  08C8  28BD               	goto	l4018
  2772  08C9  3A01               	xorlw	1	; case 1
  2773  08CA  1903               	skipnz
  2774  08CB  28D0               	goto	l565
  2775  08CC  3A03               	xorlw	3	; case 2
  2776  08CD  1903               	skipnz
  2777  08CE  28D0               	goto	l565
  2778  08CF  28D0               	goto	l565
  2779  08D0                     l565:	
  2780  08D0  0008               	return
  2781  08D1                     __end_of_SYSTEM_Initialize:	
  2782                           
  2783                           	psect	text6
  2784  0892                     __ptext6:	
  2785 ;; *************** function _SPI_Write *****************
  2786 ;; Defined at:
  2787 ;;		line 18 in file "../src/spi.h"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  data            1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  data            1    2[BANK2 ] unsigned char 
  2792 ;;  TempVar         1    1[BANK2 ] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;		None               void
  2795 ;; Registers used:
  2796 ;;		wreg
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;Total ram usage:        3 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:   10
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_main
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function _SPI_Write
  2818  0892                     _SPI_Write:	
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _SPI_Write: [wreg]
  2822                           ;SPI_Write@data stored from wreg
  2823  0892  0022               	movlb	2	; select bank2
  2824  0893  00E2               	movwf	SPI_Write@data^(0+256)
  2825                           
  2826                           ;spi.h: 19: unsigned char TempVar;
  2827                           ;spi.h: 20: TempVar = SSP1BUF;
  2828  0894  0024               	movlb	4	; select bank4
  2829  0895  0811               	movf	17,w	;volatile
  2830  0896  0022               	movlb	2	; select bank2
  2831  0897  00E0               	movwf	??_SPI_Write^(0+256)
  2832  0898  0860               	movf	??_SPI_Write^(0+256),w
  2833  0899  00E1               	movwf	SPI_Write@TempVar^(0+256)
  2834                           
  2835                           ;spi.h: 21: PIR1bits.SSP1IF = 0;
  2836  089A  0020               	movlb	0	; select bank0
  2837  089B  1191               	bcf	17,3	;volatile
  2838                           
  2839                           ;spi.h: 22: SSP1BUF = data;
  2840  089C  0022               	movlb	2	; select bank2
  2841  089D  0862               	movf	SPI_Write@data^(0+256),w
  2842  089E  0024               	movlb	4	; select bank4
  2843  089F  0091               	movwf	17	;volatile
  2844  08A0                     l622:	
  2845                           ;spi.h: 23: while(!PIR1bits.SSP1IF);
  2846                           
  2847  08A0  0020               	movlb	0	; select bank0
  2848  08A1  1D91               	btfss	17,3	;volatile
  2849  08A2  28A0               	goto	l622
  2850                           
  2851                           ;spi.h: 24: RC2 = 1;
  2852  08A3  150E               	bsf	14,2	;volatile
  2853  08A4  0008               	return
  2854  08A5                     __end_of_SPI_Write:	
  2855                           
  2856                           	psect	text7
  2857  087F                     __ptext7:	
  2858 ;; *************** function _SPI_Init *****************
  2859 ;; Defined at:
  2860 ;;		line 1 in file "../src/spi.h"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;		None               void
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:   10
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _SPI_Init
  2890  087F                     _SPI_Init:	
  2891                           
  2892                           ;spi.h: 2: TRISB6 = 0;
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  2896  087F  0021               	movlb	1	; select bank1
  2897  0880  130D               	bcf	13,6	;volatile
  2898                           
  2899                           ;spi.h: 3: TRISB4 = 1;
  2900  0881  160D               	bsf	13,4	;volatile
  2901                           
  2902                           ;spi.h: 4: TRISC7 = 0;
  2903  0882  138E               	bcf	14,7	;volatile
  2904                           
  2905                           ;spi.h: 5: TRISC6 = 0;
  2906  0883  130E               	bcf	14,6	;volatile
  2907                           
  2908                           ;spi.h: 7: PIR1bits.SSP1IF = 0;
  2909  0884  0020               	movlb	0	; select bank0
  2910  0885  1191               	bcf	17,3	;volatile
  2911                           
  2912                           ;spi.h: 8: PIE1bits.SSP1IE = 0;
  2913  0886  0021               	movlb	1	; select bank1
  2914  0887  1191               	bcf	17,3	;volatile
  2915                           
  2916                           ;spi.h: 11: SSPCON1bits.SSPEN = 1;
  2917  0888  0024               	movlb	4	; select bank4
  2918  0889  1695               	bsf	21,5	;volatile
  2919                           
  2920                           ;spi.h: 12: SSPCON1bits.CKP = 0;
  2921  088A  1215               	bcf	21,4	;volatile
  2922                           
  2923                           ;spi.h: 13: SSPSTATbits.CKE = 1;
  2924  088B  1714               	bsf	20,6	;volatile
  2925                           
  2926                           ;spi.h: 14: SSPCON1bits.SSPM = 0x01;
  2927  088C  0815               	movf	21,w	;volatile
  2928  088D  39F0               	andlw	-16
  2929  088E  3801               	iorlw	1
  2930  088F  0095               	movwf	21	;volatile
  2931                           
  2932                           ;spi.h: 15: SSPSTATbits.SMP = 0;
  2933  0890  1394               	bcf	20,7	;volatile
  2934  0891  0008               	return
  2935  0892                     __end_of_SPI_Init:	
  2936                           
  2937                           	psect	text8
  2938  024B                     __ptext8:	
  2939 ;; *************** function _CDCTxService *****************
  2940 ;; Defined at:
  2941 ;;		line 836 in file "../lib/usb/src/usb_device_cdc.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  byte_to_send    1   13[BANK2 ] unsigned char 
  2946 ;;  i               1   12[BANK2 ] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;		None               void
  2949 ;; Registers used:
  2950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;Total ram usage:        3 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:   11
  2963 ;; This function calls:
  2964 ;;		_USBTransferOnePacket
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _CDCTxService
  2972  024B                     _CDCTxService:	
  2973                           
  2974                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  2975                           ;usb_device_cdc.c: 839: uint8_t i;
  2976                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2980  024B  0021               	movlb	1	; select bank1
  2981  024C  1112               	bcf	18,2	;volatile
  2982                           
  2983                           ;usb_device_cdc.c: 843: {};
  2984                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  2985  024D  0023               	movlb	3	; select bank3
  2986  024E  0846               	movf	_CDCDataInHandle^(0+384),w
  2987  024F  0447               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  2988  0250  1903               	btfsc	3,2
  2989  0251  2A5B               	goto	l4190
  2990  0252  0846               	movf	_CDCDataInHandle^(0+384),w
  2991  0253  0086               	movwf	6
  2992  0254  0847               	movf	(_CDCDataInHandle+1)^(0+384),w
  2993  0255  0087               	movwf	7
  2994  0256  1F81               	btfss	1,7
  2995  0257  2A5B               	goto	l4190
  2996                           
  2997                           ;usb_device_cdc.c: 846: {
  2998                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  2999  0258  0021               	movlb	1	; select bank1
  3000  0259  1512               	bsf	18,2	;volatile
  3001                           
  3002                           ;usb_device_cdc.c: 848: return;
  3003  025A  0008               	return
  3004  025B                     l4190:	
  3005                           
  3006                           ;usb_device_cdc.c: 849: }
  3007                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3008  025B  3003               	movlw	3
  3009  025C  0023               	movlb	3	; select bank3
  3010  025D  065A               	xorwf	_cdc_trf_state^(0+384),w
  3011  025E  1903               	btfsc	3,2
  3012                           
  3013                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3014  025F  01DA               	clrf	_cdc_trf_state^(0+384)
  3015                           
  3016                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3017  0260  085A               	movf	_cdc_trf_state^(0+384),w
  3018  0261  1D03               	btfss	3,2
  3019  0262  2A66               	goto	l4198
  3020                           
  3021                           ;usb_device_cdc.c: 863: {
  3022                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3023  0263  0021               	movlb	1	; select bank1
  3024  0264  1512               	bsf	18,2	;volatile
  3025                           
  3026                           ;usb_device_cdc.c: 865: return;
  3027  0265  0008               	return
  3028  0266                     l4198:	
  3029                           
  3030                           ;usb_device_cdc.c: 866: }
  3031                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3032  0266  3002               	movlw	2
  3033  0267  0023               	movlb	3	; select bank3
  3034  0268  065A               	xorwf	_cdc_trf_state^(0+384),w
  3035  0269  1D03               	btfss	3,2
  3036  026A  2A86               	goto	l4204
  3037                           
  3038                           ;usb_device_cdc.c: 872: {
  3039                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3040  026B  0022               	movlb	2	; select bank2
  3041  026C  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3042  026D  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3043  026E  3000               	movlw	0
  3044  026F  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3045  0270  3000               	movlw	0
  3046  0271  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3047  0272  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  3048  0273  3002               	movlw	2
  3049  0274  3187  2709  3182   	fcall	_USBTransferOnePacket
  3050  0277  0022               	movlb	2	; select bank2
  3051  0278  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3052  0279  0023               	movlb	3	; select bank3
  3053  027A  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3054  027B  0022               	movlb	2	; select bank2
  3055  027C  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3056  027D  0023               	movlb	3	; select bank3
  3057  027E  00C6               	movwf	_CDCDataInHandle^(0+384)
  3058                           
  3059                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3060  027F  3003               	movlw	3
  3061  0280  0022               	movlb	2	; select bank2
  3062  0281  00EB               	movwf	??_CDCTxService^(0+256)
  3063  0282  086B               	movf	??_CDCTxService^(0+256),w
  3064  0283  0023               	movlb	3	; select bank3
  3065  0284  00DA               	movwf	_cdc_trf_state^(0+384)
  3066                           
  3067                           ;usb_device_cdc.c: 876: }
  3068  0285  2B18               	goto	l4252
  3069  0286                     l4204:	
  3070                           
  3071                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3072  0286  035A               	decf	_cdc_trf_state^(0+384),w
  3073  0287  1D03               	btfss	3,2
  3074  0288  2B18               	goto	l4252
  3075                           
  3076                           ;usb_device_cdc.c: 878: {
  3077                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3078  0289  3041               	movlw	65
  3079  028A  025B               	subwf	_cdc_tx_len^(0+384),w
  3080  028B  1C03               	skipc
  3081  028C  2A8F               	goto	l4210
  3082                           
  3083                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3084  028D  3040               	movlw	64
  3085  028E  2A91               	goto	L1
  3086  028F                     l4210:	
  3087                           
  3088                           ;usb_device_cdc.c: 884: else
  3089                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3090  028F  0023               	movlb	3	; select bank3
  3091  0290  085B               	movf	_cdc_tx_len^(0+384),w
  3092  0291                     L1:	
  3093  0291  0022               	movlb	2	; select bank2
  3094  0292  00EB               	movwf	??_CDCTxService^(0+256)
  3095  0293  086B               	movf	??_CDCTxService^(0+256),w
  3096  0294  00ED               	movwf	CDCTxService@byte_to_send^(0+256)
  3097                           
  3098                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3099  0295  036D               	decf	CDCTxService@byte_to_send^(0+256),w
  3100  0296  3AFF               	xorlw	255
  3101  0297  0023               	movlb	3	; select bank3
  3102  0298  075B               	addwf	_cdc_tx_len^(0+384),w
  3103  0299  0022               	movlb	2	; select bank2
  3104  029A  00EB               	movwf	??_CDCTxService^(0+256)
  3105  029B  086B               	movf	??_CDCTxService^(0+256),w
  3106  029C  0023               	movlb	3	; select bank3
  3107  029D  00DB               	movwf	_cdc_tx_len^(0+384)
  3108                           
  3109                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3110  029E  30A0               	movlw	160
  3111  029F  0022               	movlb	2	; select bank2
  3112  02A0  00EB               	movwf	??_CDCTxService^(0+256)
  3113  02A1  086B               	movf	??_CDCTxService^(0+256),w
  3114  02A2  0023               	movlb	3	; select bank3
  3115  02A3  00CA               	movwf	_pCDCDst^(0+384)
  3116                           
  3117                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3118  02A4  0022               	movlb	2	; select bank2
  3119  02A5  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  3120  02A6  00EB               	movwf	??_CDCTxService^(0+256)
  3121  02A7  086B               	movf	??_CDCTxService^(0+256),w
  3122  02A8  00EC               	movwf	CDCTxService@i^(0+256)
  3123                           
  3124                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3125  02A9  0023               	movlb	3	; select bank3
  3126  02AA  0858               	movf	_cdc_mem_type^(0+384),w
  3127  02AB  1903               	btfsc	3,2
  3128  02AC  2ACB               	goto	l4230
  3129  02AD  2AED               	goto	l4240
  3130  02AE                     l4222:	
  3131                           ;usb_device_cdc.c: 896: {
  3132                           ;usb_device_cdc.c: 897: while(i)
  3133                           
  3134                           
  3135                           ;usb_device_cdc.c: 898: {
  3136                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3137  02AE  0023               	movlb	3	; select bank3
  3138  02AF  084C               	movf	_pCDCSrc^(0+384),w
  3139  02B0  0086               	movwf	6
  3140  02B1  3003               	movlw	3	; select bank6/7
  3141  02B2  0087               	movwf	7
  3142  02B3  0801               	movf	1,w
  3143  02B4  0022               	movlb	2	; select bank2
  3144  02B5  00EB               	movwf	??_CDCTxService^(0+256)
  3145  02B6  0023               	movlb	3	; select bank3
  3146  02B7  084A               	movf	_pCDCDst^(0+384),w
  3147  02B8  0086               	movwf	6
  3148  02B9  0187               	clrf	7
  3149  02BA  0022               	movlb	2	; select bank2
  3150  02BB  086B               	movf	??_CDCTxService^(0+256),w
  3151  02BC  0081               	movwf	1
  3152                           
  3153                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3154  02BD  3001               	movlw	1
  3155  02BE  00EB               	movwf	??_CDCTxService^(0+256)
  3156  02BF  086B               	movf	??_CDCTxService^(0+256),w
  3157  02C0  0023               	movlb	3	; select bank3
  3158  02C1  07CA               	addwf	_pCDCDst^(0+384),f
  3159                           
  3160                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3161  02C2  3001               	movlw	1
  3162  02C3  0022               	movlb	2	; select bank2
  3163  02C4  00EB               	movwf	??_CDCTxService^(0+256)
  3164  02C5  086B               	movf	??_CDCTxService^(0+256),w
  3165  02C6  0023               	movlb	3	; select bank3
  3166  02C7  07CC               	addwf	_pCDCSrc^(0+384),f
  3167                           
  3168                           ;usb_device_cdc.c: 902: i--;
  3169  02C8  3001               	movlw	1
  3170  02C9  0022               	movlb	2	; select bank2
  3171  02CA  02EC               	subwf	CDCTxService@i^(0+256),f
  3172  02CB                     l4230:	
  3173  02CB  0022               	movlb	2	; select bank2
  3174  02CC  086C               	movf	CDCTxService@i^(0+256),w
  3175  02CD  1903               	btfsc	3,2
  3176  02CE  2AF1               	goto	l4242
  3177  02CF  2AAE               	goto	l4222
  3178  02D0                     l4232:	
  3179                           ;usb_device_cdc.c: 905: else
  3180                           ;usb_device_cdc.c: 906: {
  3181                           ;usb_device_cdc.c: 907: while(i)
  3182                           
  3183                           ;usb_device_cdc.c: 903: }
  3184                           ;usb_device_cdc.c: 904: }
  3185                           
  3186                           
  3187                           ;usb_device_cdc.c: 908: {
  3188                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3189  02D0  0023               	movlb	3	; select bank3
  3190  02D1  084C               	movf	_pCDCSrc^(0+384),w
  3191  02D2  0086               	movwf	6
  3192  02D3  3003               	movlw	3	; select bank6/7
  3193  02D4  0087               	movwf	7
  3194  02D5  0801               	movf	1,w
  3195  02D6  0022               	movlb	2	; select bank2
  3196  02D7  00EB               	movwf	??_CDCTxService^(0+256)
  3197  02D8  0023               	movlb	3	; select bank3
  3198  02D9  084A               	movf	_pCDCDst^(0+384),w
  3199  02DA  0086               	movwf	6
  3200  02DB  0187               	clrf	7
  3201  02DC  0022               	movlb	2	; select bank2
  3202  02DD  086B               	movf	??_CDCTxService^(0+256),w
  3203  02DE  0081               	movwf	1
  3204                           
  3205                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3206  02DF  3001               	movlw	1
  3207  02E0  00EB               	movwf	??_CDCTxService^(0+256)
  3208  02E1  086B               	movf	??_CDCTxService^(0+256),w
  3209  02E2  0023               	movlb	3	; select bank3
  3210  02E3  07CA               	addwf	_pCDCDst^(0+384),f
  3211                           
  3212                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3213  02E4  3001               	movlw	1
  3214  02E5  0022               	movlb	2	; select bank2
  3215  02E6  00EB               	movwf	??_CDCTxService^(0+256)
  3216  02E7  086B               	movf	??_CDCTxService^(0+256),w
  3217  02E8  0023               	movlb	3	; select bank3
  3218  02E9  07CC               	addwf	_pCDCSrc^(0+384),f
  3219                           
  3220                           ;usb_device_cdc.c: 912: i--;
  3221  02EA  3001               	movlw	1
  3222  02EB  0022               	movlb	2	; select bank2
  3223  02EC  02EC               	subwf	CDCTxService@i^(0+256),f
  3224  02ED                     l4240:	
  3225  02ED  0022               	movlb	2	; select bank2
  3226  02EE  086C               	movf	CDCTxService@i^(0+256),w
  3227  02EF  1D03               	btfss	3,2
  3228  02F0  2AD0               	goto	l4232
  3229  02F1                     l4242:	
  3230                           
  3231                           ;usb_device_cdc.c: 913: }
  3232                           ;usb_device_cdc.c: 914: }
  3233                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3234  02F1  0023               	movlb	3	; select bank3
  3235  02F2  085B               	movf	_cdc_tx_len^(0+384),w
  3236  02F3  1D03               	btfss	3,2
  3237  02F4  2B02               	goto	l4250
  3238                           
  3239                           ;usb_device_cdc.c: 921: {
  3240                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  3241  02F5  3040               	movlw	64
  3242  02F6  0022               	movlb	2	; select bank2
  3243  02F7  066D               	xorwf	CDCTxService@byte_to_send^(0+256),w
  3244  02F8  1D03               	btfss	3,2
  3245  02F9  2AFC               	goto	l4248
  3246                           
  3247                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3248  02FA  3002               	movlw	2
  3249  02FB  2AFE               	goto	L2
  3250  02FC                     l4248:	
  3251                           
  3252                           ;usb_device_cdc.c: 924: else
  3253                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3254  02FC  3003               	movlw	3
  3255  02FD  0022               	movlb	2	; select bank2
  3256  02FE                     L2:	
  3257  02FE  00EB               	movwf	??_CDCTxService^(0+256)
  3258  02FF  086B               	movf	??_CDCTxService^(0+256),w
  3259  0300  0023               	movlb	3	; select bank3
  3260  0301  00DA               	movwf	_cdc_trf_state^(0+384)
  3261  0302                     l4250:	
  3262                           
  3263                           ;usb_device_cdc.c: 926: }
  3264                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3265  0302  0022               	movlb	2	; select bank2
  3266  0303  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3267  0304  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3268  0305  30A0               	movlw	160
  3269  0306  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3270  0307  3000               	movlw	0
  3271  0308  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3272  0309  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  3273  030A  00EB               	movwf	??_CDCTxService^(0+256)
  3274  030B  086B               	movf	??_CDCTxService^(0+256),w
  3275  030C  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3276  030D  3002               	movlw	2
  3277  030E  3187  2709         	fcall	_USBTransferOnePacket
  3278  0310  0022               	movlb	2	; select bank2
  3279  0311  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3280  0312  0023               	movlb	3	; select bank3
  3281  0313  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3282  0314  0022               	movlb	2	; select bank2
  3283  0315  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3284  0316  0023               	movlb	3	; select bank3
  3285  0317  00C6               	movwf	_CDCDataInHandle^(0+384)
  3286  0318                     l4252:	
  3287                           
  3288                           ;usb_device_cdc.c: 929: }
  3289                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3290  0318  0021               	movlb	1	; select bank1
  3291  0319  1512               	bsf	18,2	;volatile
  3292  031A  0008               	return
  3293  031B                     __end_of_CDCTxService:	
  3294                           
  3295                           	psect	text9
  3296  0A86                     __ptext9:	
  3297 ;; *************** function _CDCInitEP *****************
  3298 ;; Defined at:
  3299 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;		None               void
  3306 ;; Registers used:
  3307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;Total ram usage:        1 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:   12
  3320 ;; This function calls:
  3321 ;;		_USBEnableEndpoint
  3322 ;;		_USBTransferOnePacket
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function _CDCInitEP
  3330  0A86                     _CDCInitEP:	
  3331                           
  3332                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3336  0A86  3000               	movlw	0
  3337  0A87  0023               	movlb	3	; select bank3
  3338  0A88  00E3               	movwf	(_line_coding+3)^(0+384)
  3339  0A89  3000               	movlw	0
  3340  0A8A  00E2               	movwf	(_line_coding+2)^(0+384)
  3341  0A8B  304B               	movlw	75
  3342  0A8C  00E1               	movwf	(_line_coding+1)^(0+384)
  3343  0A8D  3000               	movlw	0
  3344  0A8E  00E0               	movwf	_line_coding^(0+384)
  3345                           
  3346                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  3347  0A8F  01E4               	clrf	(_line_coding^(0+384)+4)
  3348                           
  3349                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  3350  0A90  01E5               	clrf	(_line_coding^(0+384)+5)
  3351                           
  3352                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  3353  0A91  3008               	movlw	8
  3354  0A92  0022               	movlb	2	; select bank2
  3355  0A93  00ED               	movwf	??_CDCInitEP^(0+256)
  3356  0A94  086D               	movf	??_CDCInitEP^(0+256),w
  3357  0A95  0023               	movlb	3	; select bank3
  3358  0A96  00E6               	movwf	(_line_coding^(0+384)+6)
  3359                           
  3360                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  3361  0A97  01D9               	clrf	_cdc_rx_len^(0+384)
  3362                           
  3363                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  3364  0A98  301A               	movlw	26
  3365  0A99  0022               	movlb	2	; select bank2
  3366  0A9A  00ED               	movwf	??_CDCInitEP^(0+256)
  3367  0A9B  086D               	movf	??_CDCInitEP^(0+256),w
  3368  0A9C  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3369  0A9D  3001               	movlw	1
  3370  0A9E  3189  2198  318A   	fcall	_USBEnableEndpoint
  3371                           
  3372                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  3373  0AA1  301E               	movlw	30
  3374  0AA2  0022               	movlb	2	; select bank2
  3375  0AA3  00ED               	movwf	??_CDCInitEP^(0+256)
  3376  0AA4  086D               	movf	??_CDCInitEP^(0+256),w
  3377  0AA5  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3378  0AA6  3002               	movlw	2
  3379  0AA7  3189  2198  318A   	fcall	_USBEnableEndpoint
  3380                           
  3381                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3382  0AAA  0022               	movlb	2	; select bank2
  3383  0AAB  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3384  0AAC  3020               	movlw	32
  3385  0AAD  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3386  0AAE  3001               	movlw	1
  3387  0AAF  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3388  0AB0  3040               	movlw	64
  3389  0AB1  00ED               	movwf	??_CDCInitEP^(0+256)
  3390  0AB2  086D               	movf	??_CDCInitEP^(0+256),w
  3391  0AB3  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3392  0AB4  3002               	movlw	2
  3393  0AB5  3187  2709         	fcall	_USBTransferOnePacket
  3394  0AB7  0022               	movlb	2	; select bank2
  3395  0AB8  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3396  0AB9  0023               	movlb	3	; select bank3
  3397  0ABA  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  3398  0ABB  0022               	movlb	2	; select bank2
  3399  0ABC  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3400  0ABD  0023               	movlb	3	; select bank3
  3401  0ABE  00C8               	movwf	_CDCDataOutHandle^(0+384)
  3402                           
  3403                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  3404  0ABF  01C6               	clrf	_CDCDataInHandle^(0+384)
  3405  0AC0  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  3406                           
  3407                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  3408  0AC1  01DA               	clrf	_cdc_trf_state^(0+384)
  3409  0AC2  0008               	return
  3410  0AC3                     __end_of_CDCInitEP:	
  3411                           
  3412                           	psect	text10
  3413  0709                     __ptext10:	
  3414 ;; *************** function _USBTransferOnePacket *****************
  3415 ;; Defined at:
  3416 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  ep              1    wreg     unsigned char 
  3419 ;;  dir             1    0[BANK2 ] unsigned char 
  3420 ;;  data            2    1[BANK2 ] PTR unsigned char 
  3421 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  3422 ;;  len             1    3[BANK2 ] unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  ep              1    8[BANK2 ] unsigned char 
  3425 ;;  handle          2    9[BANK2 ] PTR volatile struct __BD
  3426 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  2    0[BANK2 ] PTR void 
  3429 ;; Registers used:
  3430 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3436 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;Total ram usage:       11 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:   10
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_CDCInitEP
  3447 ;;		_getsUSBUSART
  3448 ;;		_CDCTxService
  3449 ;;		_USBCDCEventHandler
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _USBTransferOnePacket
  3455  0709                     _USBTransferOnePacket:	
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  3459                           ;USBTransferOnePacket@ep stored from wreg
  3460  0709  0022               	movlb	2	; select bank2
  3461  070A  00E8               	movwf	USBTransferOnePacket@ep^(0+256)
  3462                           
  3463                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  3464                           ;usb_device.c: 1000: if(dir != 0)
  3465  070B  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3466  070C  1903               	btfsc	3,2
  3467  070D  2F17               	goto	l3992
  3468                           
  3469                           ;usb_device.c: 1001: {
  3470                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  3471  070E  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3472  070F  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3473  0710  0086               	movwf	6
  3474  0711  3001               	movlw	1	; select bank3/4
  3475  0712  0087               	movwf	7
  3476  0713  3F40               	moviw [0]fsr1
  3477  0714  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3478  0715  3F41               	moviw [1]fsr1
  3479  0716  2F1F               	goto	L3
  3480  0717                     l3992:	
  3481                           ;usb_device.c: 1004: }
  3482                           
  3483                           
  3484                           ;usb_device.c: 1005: else
  3485                           ;usb_device.c: 1006: {
  3486                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  3487  0717  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3488  0718  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3489  0719  0086               	movwf	6
  3490  071A  3001               	movlw	1	; select bank3/4
  3491  071B  0087               	movwf	7
  3492  071C  3F40               	moviw [0]fsr1
  3493  071D  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3494  071E  3F41               	moviw [1]fsr1
  3495  071F                     L3:	
  3496  071F  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  3497                           
  3498                           ;usb_device.c: 1009: }
  3499                           ;usb_device.c: 1013: if(handle == 0)
  3500  0720  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3501  0721  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+256),w
  3502  0722  1D03               	btfss	3,2
  3503  0723  2F27               	goto	l4000
  3504                           
  3505                           ;usb_device.c: 1014: {
  3506                           ;usb_device.c: 1015: return 0;
  3507  0724  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  3508  0725  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  3509  0726  0008               	return
  3510  0727                     l4000:	
  3511                           
  3512                           ;usb_device.c: 1016: }
  3513                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  3514  0727  30FF               	movlw	255
  3515  0728  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  3516  0729  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3517  072A  307F               	movlw	127
  3518  072B  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  3519  072C  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3520  072D  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3521  072E  0086               	movwf	6
  3522  072F  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3523  0730  0087               	movwf	7
  3524  0731  3142               	addfsr 1,2
  3525  0732  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3526  0733  3FC0               	movwi [0]fsr1
  3527  0734  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  3528  0735  3FC1               	movwi [1]fsr1
  3529                           
  3530                           ;usb_device.c: 1030: handle->CNT = len;
  3531  0736  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3532  0737  3E01               	addlw	1
  3533  0738  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3534  0739  3000               	movlw	0
  3535  073A  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  3536  073B  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3537  073C  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3538  073D  0086               	movwf	6
  3539  073E  0865               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  3540  073F  0087               	movwf	7
  3541  0740  0863               	movf	USBTransferOnePacket@len^(0+256),w
  3542  0741  0081               	movwf	1
  3543                           
  3544                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  3545  0742  3040               	movlw	64
  3546  0743  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3547  0744  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3548  0745  0086               	movwf	6
  3549  0746  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3550  0747  0087               	movwf	7
  3551  0748  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3552  0749  0581               	andwf	1,f
  3553                           
  3554                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  3555  074A  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3556  074B  0086               	movwf	6
  3557  074C  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3558  074D  0087               	movwf	7
  3559  074E  1581               	bsf	1,3
  3560                           
  3561                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  3562  074F  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3563  0750  0086               	movwf	6
  3564  0751  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3565  0752  0087               	movwf	7
  3566  0753  1781               	bsf	1,7
  3567                           
  3568                           ;usb_device.c: 1036: if(dir != 0)
  3569  0754  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3570  0755  1903               	btfsc	3,2
  3571  0756  2F70               	goto	l4010
  3572                           
  3573                           ;usb_device.c: 1037: {
  3574                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  3575  0757  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3576  0758  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3577  0759  0086               	movwf	6
  3578  075A  3001               	movlw	1	; select bank3/4
  3579  075B  0087               	movwf	7
  3580  075C  3F40               	moviw [0]fsr1
  3581  075D  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3582  075E  3F41               	moviw [1]fsr1
  3583  075F  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3584  0760  3004               	movlw	4
  3585  0761  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3586  0762  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3587  0763  3000               	movlw	0
  3588  0764  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3589  0765  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3590  0766  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3591  0767  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3592  0768  0086               	movwf	6
  3593  0769  3001               	movlw	1	; select bank3/4
  3594  076A  0087               	movwf	7
  3595  076B  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3596  076C  3FC0               	movwi [0]fsr1
  3597  076D  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3598  076E  3FC1               	movwi [1]fsr1
  3599                           
  3600                           ;usb_device.c: 1040: }
  3601  076F  2F88               	goto	l4012
  3602  0770                     l4010:	
  3603                           
  3604                           ;usb_device.c: 1041: else
  3605                           ;usb_device.c: 1042: {
  3606                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  3607  0770  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3608  0771  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3609  0772  0086               	movwf	6
  3610  0773  3001               	movlw	1	; select bank3/4
  3611  0774  0087               	movwf	7
  3612  0775  3F40               	moviw [0]fsr1
  3613  0776  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3614  0777  3F41               	moviw [1]fsr1
  3615  0778  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3616  0779  3004               	movlw	4
  3617  077A  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3618  077B  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3619  077C  3000               	movlw	0
  3620  077D  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3621  077E  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3622  077F  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3623  0780  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3624  0781  0086               	movwf	6
  3625  0782  3001               	movlw	1	; select bank3/4
  3626  0783  0087               	movwf	7
  3627  0784  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3628  0785  3FC0               	movwi [0]fsr1
  3629  0786  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3630  0787  3FC1               	movwi [1]fsr1
  3631  0788                     l4012:	
  3632                           
  3633                           ;usb_device.c: 1045: }
  3634                           ;usb_device.c: 1046: return (void*)handle;
  3635  0788  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3636  0789  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  3637  078A  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3638  078B  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  3639  078C  0008               	return
  3640  078D                     __end_of_USBTransferOnePacket:	
  3641                           
  3642                           	psect	text11
  3643  0998                     __ptext11:	
  3644 ;; *************** function _USBEnableEndpoint *****************
  3645 ;; Defined at:
  3646 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  ep              1    wreg     unsigned char 
  3649 ;;  options         1    7[BANK2 ] unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  ep              1   12[BANK2 ] unsigned char 
  3652 ;;  p               2   10[BANK2 ] PTR unsigned char 
  3653 ;;		 -> UEP0(1), 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;		None               void
  3656 ;; Registers used:
  3657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3663 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;Total ram usage:        6 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:   11
  3670 ;; This function calls:
  3671 ;;		_USBConfigureEndpoint
  3672 ;; This function is called by:
  3673 ;;		_CDCInitEP
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _USBEnableEndpoint
  3679  0998                     _USBEnableEndpoint:	
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3683                           ;USBEnableEndpoint@ep stored from wreg
  3684  0998  0022               	movlb	2	; select bank2
  3685  0999  00EC               	movwf	USBEnableEndpoint@ep^(0+256)
  3686                           
  3687                           ;usb_device.c: 880: unsigned char* p;
  3688                           ;usb_device.c: 884: if(options & 0x04)
  3689  099A  1D67               	btfss	USBEnableEndpoint@options^(0+256),2
  3690  099B  29A1               	goto	l3980
  3691                           
  3692                           ;usb_device.c: 885: {
  3693                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  3694  099C  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3695  099D  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3696  099E  318B  2305  3189   	fcall	_USBConfigureEndpoint
  3697  09A1                     l3980:	
  3698                           
  3699                           ;usb_device.c: 887: }
  3700                           ;usb_device.c: 888: if(options & 0x02)
  3701  09A1  0022               	movlb	2	; select bank2
  3702  09A2  1CE7               	btfss	USBEnableEndpoint@options^(0+256),1
  3703  09A3  29A9               	goto	l3984
  3704                           
  3705                           ;usb_device.c: 889: {
  3706                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  3707  09A4  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3708  09A5  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  3709  09A6  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3710  09A7  318B  2305         	fcall	_USBConfigureEndpoint
  3711  09A9                     l3984:	
  3712                           
  3713                           ;usb_device.c: 891: }
  3714                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  3715  09A9  0022               	movlb	2	; select bank2
  3716  09AA  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3717  09AB  3E98               	addlw	152
  3718  09AC  00E8               	movwf	??_USBEnableEndpoint^(0+256)
  3719  09AD  01E9               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  3720  09AE  300E               	movlw	14
  3721  09AF  3DE9               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  3722  09B0  0868               	movf	??_USBEnableEndpoint^(0+256),w
  3723  09B1  00EA               	movwf	USBEnableEndpoint@p^(0+256)
  3724  09B2  0869               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  3725  09B3  00EB               	movwf	(USBEnableEndpoint@p+1)^(0+256)
  3726                           
  3727                           ;usb_device.c: 901: *p = options;
  3728  09B4  086A               	movf	USBEnableEndpoint@p^(0+256),w
  3729  09B5  0086               	movwf	6
  3730  09B6  086B               	movf	(USBEnableEndpoint@p+1)^(0+256),w
  3731  09B7  0087               	movwf	7
  3732  09B8  0867               	movf	USBEnableEndpoint@options^(0+256),w
  3733  09B9  0081               	movwf	1
  3734  09BA  0008               	return
  3735  09BB                     __end_of_USBEnableEndpoint:	
  3736                           
  3737                           	psect	text12
  3738  0B05                     __ptext12:	
  3739 ;; *************** function _USBConfigureEndpoint *****************
  3740 ;; Defined at:
  3741 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  EPNum           1    wreg     unsigned char 
  3744 ;;  direction       1    0[BANK2 ] unsigned char 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  EPNum           1    5[BANK2 ] unsigned char 
  3747 ;;  handle          1    6[BANK2 ] PTR volatile struct __BD
  3748 ;;		 -> BDT(48), 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3758 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;Total ram usage:        7 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:   10
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_USBEnableEndpoint
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _USBConfigureEndpoint
  3774  0B05                     _USBConfigureEndpoint:	
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  3778                           ;USBConfigureEndpoint@EPNum stored from wreg
  3779  0B05  0022               	movlb	2	; select bank2
  3780  0B06  00E5               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  3781                           
  3782                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  3783                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  3784  0B07  3020               	movlw	32
  3785  0B08  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3786  0B09  0861               	movf	??_USBConfigureEndpoint^(0+256),w
  3787  0B0A  00E6               	movwf	USBConfigureEndpoint@handle^(0+256)
  3788                           
  3789                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  3790  0B0B  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  3791  0B0C  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3792  0B0D  3001               	movlw	1
  3793  0B0E                     u3625:	
  3794  0B0E  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  3795  0B0F  0B89               	decfsz	9,f
  3796  0B10  2B0E               	goto	u3625
  3797  0B11  0865               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  3798  0B12  00E2               	movwf	(??_USBConfigureEndpoint+1)^(0+256)
  3799  0B13  3001               	movlw	1
  3800  0B14                     u3635:	
  3801  0B14  35E2               	lslf	(??_USBConfigureEndpoint+1)^(0+256),f
  3802  0B15  3EFF               	addlw	-1
  3803  0B16  1D03               	skipz
  3804  0B17  2B14               	goto	u3635
  3805  0B18  3562               	lslf	(??_USBConfigureEndpoint+1)^(0+256),w
  3806  0B19  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  3807  0B1A  00E3               	movwf	(??_USBConfigureEndpoint+2)^(0+256)
  3808  0B1B  3001               	movlw	1
  3809  0B1C                     u3645:	
  3810  0B1C  35E3               	lslf	(??_USBConfigureEndpoint+2)^(0+256),f
  3811  0B1D  3EFF               	addlw	-1
  3812  0B1E  1D03               	skipz
  3813  0B1F  2B1C               	goto	u3645
  3814  0B20  3563               	lslf	(??_USBConfigureEndpoint+2)^(0+256),w
  3815  0B21  00E4               	movwf	(??_USBConfigureEndpoint+3)^(0+256)
  3816  0B22  0864               	movf	(??_USBConfigureEndpoint+3)^(0+256),w
  3817  0B23  07E6               	addwf	USBConfigureEndpoint@handle^(0+256),f
  3818                           
  3819                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  3820  0B24  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3821  0B25  0086               	movwf	6
  3822  0B26  0187               	clrf	7
  3823  0B27  1381               	bcf	1,7
  3824                           
  3825                           ;usb_device.c: 1557: if(direction == 0)
  3826  0B28  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  3827  0B29  1D03               	btfss	3,2
  3828  0B2A  2B35               	goto	l3970
  3829                           
  3830                           ;usb_device.c: 1558: {
  3831                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  3832  0B2B  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  3833  0B2C  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3834  0B2D  0086               	movwf	6
  3835  0B2E  3001               	movlw	1	; select bank3/4
  3836  0B2F  0087               	movwf	7
  3837  0B30  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3838  0B31  3FC0               	movwi [0]fsr1
  3839  0B32  3000               	movlw	0
  3840  0B33  3FC1               	movwi [1]fsr1
  3841                           
  3842                           ;usb_device.c: 1560: }
  3843  0B34  2B3E               	goto	l3972
  3844  0B35                     l3970:	
  3845                           
  3846                           ;usb_device.c: 1561: else
  3847                           ;usb_device.c: 1562: {
  3848                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  3849  0B35  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  3850  0B36  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3851  0B37  0086               	movwf	6
  3852  0B38  3001               	movlw	1	; select bank3/4
  3853  0B39  0087               	movwf	7
  3854  0B3A  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3855  0B3B  3FC0               	movwi [0]fsr1
  3856  0B3C  3000               	movlw	0
  3857  0B3D  3FC1               	movwi [1]fsr1
  3858  0B3E                     l3972:	
  3859                           
  3860                           ;usb_device.c: 1564: }
  3861                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  3862  0B3E  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3863  0B3F  0086               	movwf	6
  3864  0B40  0187               	clrf	7
  3865  0B41  1301               	bcf	1,6
  3866                           
  3867                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  3868  0B42  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3869  0B43  3E04               	addlw	4
  3870  0B44  0086               	movwf	6
  3871  0B45  0187               	clrf	7
  3872  0B46  1701               	bsf	1,6
  3873  0B47  0008               	return
  3874  0B48                     __end_of_USBConfigureEndpoint:	
  3875                           
  3876                           	psect	intentry
  3877  0004                     __pintentry:	
  3878 ;; *************** function _SYS_InterruptHigh *****************
  3879 ;; Defined at:
  3880 ;;		line 107 in file "system.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;		None               void
  3887 ;; Registers used:
  3888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;Total ram usage:        1 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    9
  3901 ;; This function calls:
  3902 ;;		_USBDeviceTasks
  3903 ;; This function is called by:
  3904 ;;		Interrupt level 1
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908  0004                     _SYS_InterruptHigh:	
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3912  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3913  0005  3180               	pagesel	$
  3914  0006  0020               	movlb	0	; select bank0
  3915  0007  087F               	movf	127,w
  3916  0008  0021               	movlb	1	; select bank1
  3917  0009  00EB               	movwf	??_SYS_InterruptHigh^(0+128)
  3918                           
  3919                           ;system.c: 110: USBDeviceTasks();
  3920  000A  3181  2167         	fcall	_USBDeviceTasks
  3921  000C  0021               	movlb	1	; select bank1
  3922  000D  086B               	movf	??_SYS_InterruptHigh^(0+128),w
  3923  000E  0020               	movlb	0	; select bank0
  3924  000F  00FF               	movwf	127
  3925  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3926  0011  0009               	retfie
  3927  0012                     __end_of_SYS_InterruptHigh:	
  3928                           
  3929                           	psect	text14
  3930  0167                     __ptext14:	
  3931 ;; *************** function _USBDeviceTasks *****************
  3932 ;; Defined at:
  3933 ;;		line 477 in file "../lib/usb/src/usb_device.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  i               1   15[BANK0 ] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;		None               void
  3940 ;; Registers used:
  3941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;Total ram usage:        3 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    8
  3954 ;; This function calls:
  3955 ;;		_USBCtrlEPAllowStatusStage
  3956 ;;		_USBCtrlEPService
  3957 ;;		_USBIncrement1msInternalTimers
  3958 ;;		_USBStallHandler
  3959 ;;		_USBSuspend
  3960 ;;		_USBWakeFromSuspend
  3961 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3962 ;;		i1_USBDeviceInit
  3963 ;; This function is called by:
  3964 ;;		_SYS_InterruptHigh
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function _USBDeviceTasks
  3970  0167                     _USBDeviceTasks:	
  3971                           
  3972                           ;usb_device.c: 479: uint8_t i;
  3973                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  3974                           
  3975                           ;incstack = 0
  3976                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3977  0167  0021               	movlb	1	; select bank1
  3978  0168  0362               	decf	_USBDeviceState^(0+128),w	;volatile
  3979  0169  1D03               	btfss	3,2
  3980  016A  2976               	goto	i1l3524
  3981                           
  3982                           ;usb_device.c: 591: {
  3983                           ;usb_device.c: 601: if(!UCONbits.SE0)
  3984  016B  003D               	movlb	29	; select bank29
  3985  016C  1A8E               	btfsc	14,5	;volatile
  3986  016D  2976               	goto	i1l3524
  3987                           
  3988                           ;usb_device.c: 602: {
  3989                           ;usb_device.c: 608: {UIR = 0;};
  3990  016E  0190               	clrf	16	;volatile
  3991                           
  3992                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  3993  016F  1412               	bsf	18,0	;volatile
  3994                           
  3995                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  3996  0170  1612               	bsf	18,4	;volatile
  3997                           
  3998                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  3999  0171  3002               	movlw	2
  4000  0172  0021               	movlb	1	; select bank1
  4001  0173  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4002  0174  0869               	movf	??_USBDeviceTasks^(0+128),w
  4003  0175  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  4004  0176                     i1l3524:	
  4005                           
  4006                           ;usb_device.c: 617: }
  4007                           ;usb_device.c: 618: }
  4008                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4009  0176  003D               	movlb	29	; select bank29
  4010  0177  1910               	btfsc	16,2	;volatile
  4011  0178  1D12               	btfss	18,2	;volatile
  4012  0179  2983               	goto	i1l3532
  4013                           
  4014                           ;usb_device.c: 635: {
  4015                           ;usb_device.c: 636: (UIR &= 0xFB);
  4016  017A  30FB               	movlw	251
  4017  017B  0021               	movlb	1	; select bank1
  4018  017C  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4019  017D  0869               	movf	??_USBDeviceTasks^(0+128),w
  4020  017E  003D               	movlb	29	; select bank29
  4021  017F  0590               	andwf	16,f	;volatile
  4022                           
  4023                           ;usb_device.c: 640: USBWakeFromSuspend();
  4024  0180  3189  2178  3181   	fcall	_USBWakeFromSuspend
  4025  0183                     i1l3532:	
  4026                           
  4027                           ;usb_device.c: 642: }
  4028                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4029  0183  003D               	movlb	29	; select bank29
  4030  0184  1C8E               	btfss	14,1	;volatile
  4031  0185  2989               	goto	i1l184
  4032                           
  4033                           ;usb_device.c: 648: {
  4034                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4035  0186  0020               	movlb	0	; select bank0
  4036  0187  1112               	bcf	18,2	;volatile
  4037                           
  4038                           ;usb_device.c: 650: return;
  4039  0188  0008               	return
  4040  0189                     i1l184:	
  4041                           
  4042                           ;usb_device.c: 651: }
  4043                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4044  0189  1810               	btfsc	16,0	;volatile
  4045  018A  1C12               	btfss	18,0	;volatile
  4046  018B  299A               	goto	i1l3546
  4047                           
  4048                           ;usb_device.c: 664: {
  4049                           ;usb_device.c: 665: USBDeviceInit();
  4050  018C  3184  249B  3181   	fcall	i1_USBDeviceInit
  4051                           
  4052                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4053  018F  0021               	movlb	1	; select bank1
  4054  0190  1512               	bsf	18,2	;volatile
  4055                           
  4056                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4057  0191  3004               	movlw	4
  4058  0192  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4059  0193  0869               	movf	??_USBDeviceTasks^(0+128),w
  4060  0194  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  4061                           
  4062                           ;usb_device.c: 681: (UIR &= 0xFE);
  4063  0195  30FE               	movlw	254
  4064  0196  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4065  0197  0869               	movf	??_USBDeviceTasks^(0+128),w
  4066  0198  003D               	movlb	29	; select bank29
  4067  0199  0590               	andwf	16,f	;volatile
  4068  019A                     i1l3546:	
  4069                           
  4070                           ;usb_device.c: 682: }
  4071                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4072  019A  1A10               	btfsc	16,4	;volatile
  4073  019B  1E12               	btfss	18,4	;volatile
  4074  019C  29A0               	goto	i1l3552
  4075                           
  4076                           ;usb_device.c: 688: {
  4077                           ;usb_device.c: 694: USBSuspend();
  4078  019D  3189  2139  3181   	fcall	_USBSuspend
  4079  01A0                     i1l3552:	
  4080                           
  4081                           ;usb_device.c: 696: }
  4082                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4083  01A0  003D               	movlb	29	; select bank29
  4084  01A1  1F10               	btfss	16,6	;volatile
  4085  01A2  29CA               	goto	i1l3568
  4086                           
  4087                           ;usb_device.c: 709: {
  4088                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4089  01A3  1F12               	btfss	18,6	;volatile
  4090  01A4  29B5               	goto	i1l3558
  4091                           
  4092                           ;usb_device.c: 712: {
  4093                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4094  01A5  3073               	movlw	115
  4095  01A6  0020               	movlb	0	; select bank0
  4096  01A7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4097  01A8  3000               	movlw	0
  4098  01A9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4099  01AA  3000               	movlw	0
  4100  01AB  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4101  01AC  3000               	movlw	0
  4102  01AD  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4103  01AE  3001               	movlw	1
  4104  01AF  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4105  01B0  3000               	movlw	0
  4106  01B1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4107  01B2  318A  224E  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4108  01B5                     i1l3558:	
  4109                           
  4110                           ;usb_device.c: 714: }
  4111                           ;usb_device.c: 715: (UIR &= 0xBF);
  4112  01B5  30BF               	movlw	191
  4113  01B6  0021               	movlb	1	; select bank1
  4114  01B7  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4115  01B8  0869               	movf	??_USBDeviceTasks^(0+128),w
  4116  01B9  003D               	movlb	29	; select bank29
  4117  01BA  0590               	andwf	16,f	;volatile
  4118                           
  4119                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4120  01BB  3188  20E9  3181   	fcall	_USBIncrement1msInternalTimers
  4121                           
  4122                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4123  01BE  0023               	movlb	3	; select bank3
  4124  01BF  0856               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4125  01C0  1903               	btfsc	3,2
  4126  01C1  29C4               	goto	i1l190
  4127                           
  4128                           ;usb_device.c: 736: {
  4129                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4130  01C2  3001               	movlw	1
  4131  01C3  02D6               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4132  01C4                     i1l190:	
  4133                           
  4134                           ;usb_device.c: 738: }
  4135                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4136  01C4  0856               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4137  01C5  1D03               	btfss	3,2
  4138  01C6  29CA               	goto	i1l3568
  4139                           
  4140                           ;usb_device.c: 745: {
  4141                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4142  01C7  3187  278D  3181   	fcall	_USBCtrlEPAllowStatusStage
  4143  01CA                     i1l3568:	
  4144                           
  4145                           ;usb_device.c: 747: }
  4146                           ;usb_device.c: 749: }
  4147                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4148  01CA  003D               	movlb	29	; select bank29
  4149  01CB  1A90               	btfsc	16,5	;volatile
  4150  01CC  1E92               	btfss	18,5	;volatile
  4151  01CD  29D1               	goto	i1l3574
  4152                           
  4153                           ;usb_device.c: 752: {
  4154                           ;usb_device.c: 753: USBStallHandler();
  4155  01CE  3189  21BB  3181   	fcall	_USBStallHandler
  4156  01D1                     i1l3574:	
  4157                           
  4158                           ;usb_device.c: 754: }
  4159                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4160  01D1  003D               	movlb	29	; select bank29
  4161  01D2  1890               	btfsc	16,1	;volatile
  4162  01D3  1C92               	btfss	18,1	;volatile
  4163  01D4  29E7               	goto	i1l3582
  4164                           
  4165                           ;usb_device.c: 757: {
  4166                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4167  01D5  30FF               	movlw	255
  4168  01D6  0020               	movlb	0	; select bank0
  4169  01D7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4170  01D8  307F               	movlw	127
  4171  01D9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4172  01DA  3000               	movlw	0
  4173  01DB  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4174  01DC  3000               	movlw	0
  4175  01DD  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4176  01DE  3001               	movlw	1
  4177  01DF  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4178  01E0  3000               	movlw	0
  4179  01E1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4180  01E2  318A  224E  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4181                           
  4182                           ;usb_device.c: 759: {UEIR = 0;};
  4183  01E5  003D               	movlb	29	; select bank29
  4184  01E6  0193               	clrf	19	;volatile
  4185  01E7                     i1l3582:	
  4186                           
  4187                           ;usb_device.c: 767: }
  4188                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4189  01E7  3004               	movlw	4
  4190  01E8  0021               	movlb	1	; select bank1
  4191  01E9  0262               	subwf	_USBDeviceState^(0+128),w	;volatile
  4192  01EA  1803               	skipnc
  4193  01EB  29EF               	goto	i1l194
  4194                           
  4195                           ;usb_device.c: 775: {
  4196                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4197  01EC  0020               	movlb	0	; select bank0
  4198  01ED  1112               	bcf	18,2	;volatile
  4199                           
  4200                           ;usb_device.c: 777: return;
  4201  01EE  0008               	return
  4202  01EF                     i1l194:	
  4203                           
  4204                           ;usb_device.c: 778: }
  4205                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4206  01EF  003D               	movlb	29	; select bank29
  4207  01F0  1D92               	btfss	18,3	;volatile
  4208  01F1  2A48               	goto	i1l195
  4209                           
  4210                           ;usb_device.c: 784: {
  4211                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4212  01F2  0020               	movlb	0	; select bank0
  4213  01F3  01EF               	clrf	USBDeviceTasks@i
  4214  01F4  3004               	movlw	4
  4215  01F5  026F               	subwf	USBDeviceTasks@i,w
  4216  01F6  1803               	btfsc	3,0
  4217  01F7  2A48               	goto	i1l195
  4218  01F8                     i1l196:	
  4219                           
  4220                           ;usb_device.c: 786: {
  4221                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4222  01F8  003D               	movlb	29	; select bank29
  4223  01F9  1D90               	btfss	16,3	;volatile
  4224  01FA  2A48               	goto	i1l195
  4225                           
  4226                           ;usb_device.c: 788: {
  4227                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4228  01FB  080F               	movf	15,w	;volatile
  4229  01FC  0021               	movlb	1	; select bank1
  4230  01FD  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4231  01FE  0869               	movf	??_USBDeviceTasks^(0+128),w
  4232  01FF  00E5               	movwf	_USTATcopy^(0+128)	;volatile
  4233                           
  4234                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4235  0200  0C65               	rrf	_USTATcopy^(0+128),w	;volatile
  4236  0201  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4237  0202  0CE9               	rrf	??_USBDeviceTasks^(0+128),f
  4238  0203  0C69               	rrf	??_USBDeviceTasks^(0+128),w
  4239  0204  390F               	andlw	15
  4240  0205  00EA               	movwf	(??_USBDeviceTasks+1)^(0+128)
  4241  0206  086A               	movf	(??_USBDeviceTasks+1)^(0+128),w
  4242  0207  0023               	movlb	3	; select bank3
  4243  0208  00DD               	movwf	_endpoint_number^(0+384)	;volatile
  4244                           
  4245                           ;usb_device.c: 793: (UIR &= 0xF7);
  4246  0209  30F7               	movlw	247
  4247  020A  0021               	movlb	1	; select bank1
  4248  020B  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4249  020C  0869               	movf	??_USBDeviceTasks^(0+128),w
  4250  020D  003D               	movlb	29	; select bank29
  4251  020E  0590               	andwf	16,f	;volatile
  4252                           
  4253                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4254  020F  0021               	movlb	1	; select bank1
  4255  0210  1965               	btfsc	_USTATcopy^(0+128),2	;volatile
  4256  0211  2A16               	goto	i1l3602
  4257                           
  4258                           ;usb_device.c: 799: {
  4259                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4260  0212  0023               	movlb	3	; select bank3
  4261  0213  085D               	movf	_endpoint_number^(0+384),w	;volatile
  4262  0214  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4263  0215  2A19               	goto	L4
  4264  0216                     i1l3602:	
  4265                           ;usb_device.c: 801: }
  4266                           
  4267                           
  4268                           ;usb_device.c: 802: else
  4269                           ;usb_device.c: 803: {
  4270                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4271  0216  0023               	movlb	3	; select bank3
  4272  0217  085D               	movf	_endpoint_number^(0+384),w	;volatile
  4273  0218  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4274  0219                     L4:	
  4275  0219  0086               	movwf	6
  4276  021A  3001               	movlw	1	; select bank3/4
  4277  021B  0087               	movwf	7
  4278  021C  0801               	movf	1,w
  4279  021D  3901               	andlw	1
  4280  021E  0021               	movlb	1	; select bank1
  4281  021F  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4282  0220  3001               	movlw	1
  4283  0221  06E9               	xorwf	??_USBDeviceTasks^(0+128),f
  4284  0222  0801               	movf	1,w
  4285  0223  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4286  0224  39FE               	andlw	-2
  4287  0225  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4288  0226  0081               	movwf	1
  4289                           
  4290                           ;usb_device.c: 805: }
  4291                           ;usb_device.c: 810: if(endpoint_number == 0)
  4292  0227  0023               	movlb	3	; select bank3
  4293  0228  085D               	movf	_endpoint_number^(0+384),w	;volatile
  4294  0229  1D03               	btfss	3,2
  4295  022A  2A2F               	goto	i1l3608
  4296                           
  4297                           ;usb_device.c: 811: {
  4298                           ;usb_device.c: 812: USBCtrlEPService();
  4299  022B  318B  239B  3181   	fcall	_USBCtrlEPService
  4300                           
  4301                           ;usb_device.c: 813: }
  4302  022E  2A3E               	goto	i1l3610
  4303  022F                     i1l3608:	
  4304                           
  4305                           ;usb_device.c: 814: else
  4306                           ;usb_device.c: 815: {
  4307                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4308  022F  3072               	movlw	114
  4309  0230  0020               	movlb	0	; select bank0
  4310  0231  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4311  0232  3000               	movlw	0
  4312  0233  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4313  0234  30E5               	movlw	low _USTATcopy
  4314  0235  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4315  0236  3000               	movlw	high _USTATcopy
  4316  0237  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4317  0238  3000               	movlw	0
  4318  0239  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4319  023A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4320  023B  318A  224E  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4321  023E                     i1l3610:	
  4322                           ;usb_device.c: 819: else
  4323                           ;usb_device.c: 820: {
  4324                           ;usb_device.c: 821: break;
  4325                           
  4326                           ;usb_device.c: 817: }
  4327                           ;usb_device.c: 818: }
  4328                           
  4329  023E  3001               	movlw	1
  4330  023F  0021               	movlb	1	; select bank1
  4331  0240  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4332  0241  0869               	movf	??_USBDeviceTasks^(0+128),w
  4333  0242  0020               	movlb	0	; select bank0
  4334  0243  07EF               	addwf	USBDeviceTasks@i,f
  4335  0244  3004               	movlw	4
  4336  0245  026F               	subwf	USBDeviceTasks@i,w
  4337  0246  1C03               	skipc
  4338  0247  29F8               	goto	i1l196
  4339  0248                     i1l195:	
  4340                           
  4341                           ;usb_device.c: 822: }
  4342                           ;usb_device.c: 823: }
  4343                           ;usb_device.c: 824: }
  4344                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4345  0248  0020               	movlb	0	; select bank0
  4346  0249  1112               	bcf	18,2	;volatile
  4347  024A  0008               	return
  4348  024B                     __end_of_USBDeviceTasks:	
  4349                           
  4350                           	psect	text15
  4351  049B                     __ptext15:	
  4352 ;; *************** function i1_USBDeviceInit *****************
  4353 ;; Defined at:
  4354 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  4359 ;;		 -> UEP1(1), 
  4360 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4361 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;		None               void
  4364 ;; Registers used:
  4365 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;Total ram usage:        5 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_USBDeviceTasks
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function i1_USBDeviceInit
  4386  049B                     i1_USBDeviceInit:	
  4387                           
  4388                           ;usb_device.c: 279: uint8_t i;
  4389                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4390                           
  4391                           ;incstack = 0
  4392                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4393  049B  0021               	movlb	1	; select bank1
  4394  049C  1112               	bcf	18,2	;volatile
  4395                           
  4396                           ;usb_device.c: 285: ;
  4397                           ;usb_device.c: 288: {UEIR = 0;};
  4398  049D  003D               	movlb	29	; select bank29
  4399  049E  0193               	clrf	19	;volatile
  4400                           
  4401                           ;usb_device.c: 291: {UIR = 0;};
  4402  049F  0190               	clrf	16	;volatile
  4403                           
  4404                           ;usb_device.c: 294: UEP0 = 0;
  4405  04A0  0198               	clrf	24	;volatile
  4406                           
  4407                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  4408  04A1  300E               	movlw	14
  4409  04A2  00F2               	movwf	i1USBDeviceInit@p+1
  4410  04A3  3099               	movlw	153
  4411  04A4  00F1               	movwf	i1USBDeviceInit@p
  4412  04A5  01F3               	clrf	i1USBDeviceInit@i_821
  4413  04A6  3002               	movlw	2
  4414  04A7  0273               	subwf	i1USBDeviceInit@i_821,w
  4415  04A8  1803               	btfsc	3,0
  4416  04A9  2CBB               	goto	i1l3332
  4417  04AA                     i1l3324:	
  4418  04AA  0871               	movf	i1USBDeviceInit@p,w
  4419  04AB  0086               	movwf	6
  4420  04AC  0872               	movf	i1USBDeviceInit@p+1,w
  4421  04AD  0087               	movwf	7
  4422  04AE  0181               	clrf	1
  4423  04AF  3001               	movlw	1
  4424  04B0  07F1               	addwf	i1USBDeviceInit@p,f
  4425  04B1  3000               	movlw	0
  4426  04B2  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  4427  04B3  3001               	movlw	1
  4428  04B4  00F0               	movwf	??i1_USBDeviceInit
  4429  04B5  0870               	movf	??i1_USBDeviceInit,w
  4430  04B6  07F3               	addwf	i1USBDeviceInit@i_821,f
  4431  04B7  3002               	movlw	2
  4432  04B8  0273               	subwf	i1USBDeviceInit@i_821,w
  4433  04B9  1C03               	skipc
  4434  04BA  2CAA               	goto	i1l3324
  4435  04BB                     i1l3332:	
  4436                           
  4437                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4438  04BB  3016               	movlw	22
  4439  04BC  003D               	movlb	29	; select bank29
  4440  04BD  0091               	movwf	17	;volatile
  4441  04BE  309F               	movlw	159
  4442  04BF  0097               	movwf	23	;volatile
  4443  04C0  307B               	movlw	123
  4444  04C1  0092               	movwf	18	;volatile
  4445                           
  4446                           ;usb_device.c: 301: ;
  4447                           ;usb_device.c: 304: ;
  4448                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4449  04C2  01F4               	clrf	i1USBDeviceInit@i
  4450  04C3  300C               	movlw	12
  4451  04C4  0274               	subwf	i1USBDeviceInit@i,w
  4452  04C5  1803               	btfsc	3,0
  4453  04C6  2CE0               	goto	i1l173
  4454  04C7                     i1l3340:	
  4455                           
  4456                           ;usb_device.c: 308: {
  4457                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4458  04C7  0874               	movf	i1USBDeviceInit@i,w
  4459  04C8  00F0               	movwf	??i1_USBDeviceInit
  4460  04C9  3001               	movlw	1
  4461  04CA                     u285_25:	
  4462  04CA  35F0               	lslf	??i1_USBDeviceInit,f
  4463  04CB  3EFF               	addlw	-1
  4464  04CC  1D03               	skipz
  4465  04CD  2CCA               	goto	u285_25
  4466  04CE  3570               	lslf	??i1_USBDeviceInit,w
  4467  04CF  3E20               	addlw	32
  4468  04D0  0086               	movwf	6
  4469  04D1  0187               	clrf	7
  4470  04D2  3000               	movlw	0
  4471  04D3  3FC0               	movwi [0]fsr1
  4472  04D4  3000               	movlw	0
  4473  04D5  3FC1               	movwi [1]fsr1
  4474  04D6  3FC2               	movwi [2]fsr1
  4475  04D7  3FC3               	movwi [3]fsr1
  4476  04D8  3001               	movlw	1
  4477  04D9  00F0               	movwf	??i1_USBDeviceInit
  4478  04DA  0870               	movf	??i1_USBDeviceInit,w
  4479  04DB  07F4               	addwf	i1USBDeviceInit@i,f
  4480  04DC  300C               	movlw	12
  4481  04DD  0274               	subwf	i1USBDeviceInit@i,w
  4482  04DE  1C03               	skipc
  4483  04DF  2CC7               	goto	i1l3340
  4484  04E0                     i1l173:	
  4485                           
  4486                           ;usb_device.c: 310: }
  4487                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4488  04E0  003D               	movlb	29	; select bank29
  4489  04E1  170E               	bsf	14,6	;volatile
  4490                           
  4491                           ;usb_device.c: 316: UADDR = 0x00;
  4492  04E2  0196               	clrf	22	;volatile
  4493                           
  4494                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4495  04E3  120E               	bcf	14,4	;volatile
  4496                           
  4497                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4498  04E4  130E               	bcf	14,6	;volatile
  4499  04E5                     i1l3352:	
  4500                           ;usb_device.c: 325: do
  4501                           
  4502                           
  4503                           ;usb_device.c: 326: {
  4504                           ;usb_device.c: 327: (UIR &= 0xF7);
  4505  04E5  30F7               	movlw	247
  4506  04E6  00F0               	movwf	??i1_USBDeviceInit
  4507  04E7  0870               	movf	??i1_USBDeviceInit,w
  4508  04E8  0590               	andwf	16,f	;volatile
  4509                           
  4510                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4511  04E9  0023               	movlb	3	; select bank3
  4512  04EA  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  4513                           
  4514                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4515  04EB  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  4516                           
  4517                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4518  04EC  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  4519  04ED  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  4520                           
  4521                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4522  04EE  003D               	movlb	29	; select bank29
  4523  04EF  1990               	btfsc	16,3	;volatile
  4524  04F0  2CE5               	goto	i1l3352
  4525                           
  4526                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4527  04F1  3001               	movlw	1
  4528  04F2  00F0               	movwf	??i1_USBDeviceInit
  4529  04F3  0870               	movf	??i1_USBDeviceInit,w
  4530  04F4  0023               	movlb	3	; select bank3
  4531  04F5  00D4               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4532                           
  4533                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4534  04F6  3001               	movlw	1
  4535  04F7  00F0               	movwf	??i1_USBDeviceInit
  4536  04F8  0870               	movf	??i1_USBDeviceInit,w
  4537  04F9  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4538                           
  4539                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4540  04FA  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4541                           
  4542                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4543  04FB  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4544                           
  4545                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4546  04FC  01D0               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4547                           
  4548                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4549  04FD  01F4               	clrf	i1USBDeviceInit@i
  4550  04FE  3003               	movlw	3
  4551  04FF  0274               	subwf	i1USBDeviceInit@i,w
  4552  0500  1803               	btfsc	3,0
  4553  0501  2D26               	goto	i1l3380
  4554  0502                     i1l3374:	
  4555                           
  4556                           ;usb_device.c: 346: {
  4557                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4558  0502  3574               	lslf	i1USBDeviceInit@i,w
  4559  0503  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4560  0504  0086               	movwf	6
  4561  0505  3001               	movlw	1	; select bank3/4
  4562  0506  0087               	movwf	7
  4563  0507  3000               	movlw	0
  4564  0508  3FC0               	movwi [0]fsr1
  4565  0509  3FC1               	movwi [1]fsr1
  4566                           
  4567                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4568  050A  3574               	lslf	i1USBDeviceInit@i,w
  4569  050B  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4570  050C  0086               	movwf	6
  4571  050D  3001               	movlw	1	; select bank3/4
  4572  050E  0087               	movwf	7
  4573  050F  3000               	movlw	0
  4574  0510  3FC0               	movwi [0]fsr1
  4575  0511  3FC1               	movwi [1]fsr1
  4576                           
  4577                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4578  0512  0874               	movf	i1USBDeviceInit@i,w
  4579  0513  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4580  0514  0086               	movwf	6
  4581  0515  3001               	movlw	1	; select bank3/4
  4582  0516  0087               	movwf	7
  4583  0517  0181               	clrf	1
  4584                           
  4585                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4586  0518  0874               	movf	i1USBDeviceInit@i,w
  4587  0519  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4588  051A  0086               	movwf	6
  4589  051B  3001               	movlw	1	; select bank3/4
  4590  051C  0087               	movwf	7
  4591  051D  0181               	clrf	1
  4592  051E  3001               	movlw	1
  4593  051F  00F0               	movwf	??i1_USBDeviceInit
  4594  0520  0870               	movf	??i1_USBDeviceInit,w
  4595  0521  07F4               	addwf	i1USBDeviceInit@i,f
  4596  0522  3003               	movlw	3
  4597  0523  0274               	subwf	i1USBDeviceInit@i,w
  4598  0524  1C03               	skipc
  4599  0525  2D02               	goto	i1l3374
  4600  0526                     i1l3380:	
  4601                           
  4602                           ;usb_device.c: 351: }
  4603                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4604  0526  3028               	movlw	40
  4605  0527  0023               	movlb	3	; select bank3
  4606  0528  00A7               	movwf	_pBDTEntryIn^(0+384)
  4607  0529  3000               	movlw	0
  4608  052A  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4609                           
  4610                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4611  052B  3016               	movlw	22
  4612  052C  003D               	movlb	29	; select bank29
  4613  052D  0098               	movwf	24	;volatile
  4614                           
  4615                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4616  052E  3000               	movlw	0
  4617  052F  0020               	movlb	0	; select bank0
  4618  0530  00A3               	movwf	35	;volatile
  4619  0531  3050               	movlw	80
  4620  0532  00A2               	movwf	34	;volatile
  4621                           
  4622                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4623  0533  3008               	movlw	8
  4624  0534  00A1               	movwf	33	;volatile
  4625                           
  4626                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4627  0535  3004               	movlw	4
  4628  0536  00F0               	movwf	??i1_USBDeviceInit
  4629  0537  0870               	movf	??i1_USBDeviceInit,w
  4630  0538  00A0               	movwf	32	;volatile
  4631                           
  4632                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4633  0539  17A0               	bsf	32,7	;volatile
  4634                           
  4635                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4636  053A  0023               	movlb	3	; select bank3
  4637  053B  01E9               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  4638                           
  4639                           ;usb_device.c: 366: USB1msTickCount = 0;
  4640  053C  3000               	movlw	0
  4641  053D  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  4642  053E  3000               	movlw	0
  4643  053F  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  4644  0540  3000               	movlw	0
  4645  0541  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  4646  0542  3000               	movlw	0
  4647  0543  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  4648                           
  4649                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4650  0544  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4651                           
  4652                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4653  0545  0021               	movlb	1	; select bank1
  4654  0546  01E2               	clrf	_USBDeviceState^(0+128)	;volatile
  4655  0547  0008               	return
  4656  0548                     __end_ofi1_USBDeviceInit:	
  4657                           
  4658                           	psect	text16
  4659  0978                     __ptext16:	
  4660 ;; *************** function _USBWakeFromSuspend *****************
  4661 ;; Defined at:
  4662 ;;		line 2303 in file "../lib/usb/src/usb_device.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;		None               void
  4669 ;; Registers used:
  4670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4680 ;;Total ram usage:        1 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    4
  4683 ;; This function calls:
  4684 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4685 ;; This function is called by:
  4686 ;;		_USBDeviceTasks
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _USBWakeFromSuspend
  4692  0978                     _USBWakeFromSuspend:	
  4693                           
  4694                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  4695                           
  4696                           ;incstack = 0
  4697                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4698  0978  0023               	movlb	3	; select bank3
  4699  0979  01D0               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4700                           
  4701                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4702  097A  3074               	movlw	116
  4703  097B  0020               	movlb	0	; select bank0
  4704  097C  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4705  097D  3000               	movlw	0
  4706  097E  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4707  097F  3000               	movlw	0
  4708  0980  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4709  0981  3000               	movlw	0
  4710  0982  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4711  0983  3000               	movlw	0
  4712  0984  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4713  0985  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4714  0986  318A  224E  3189   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4715                           
  4716                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  4717  0989  003D               	movlb	29	; select bank29
  4718  098A  108E               	bcf	14,1	;volatile
  4719                           
  4720                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  4721  098B  1112               	bcf	18,2	;volatile
  4722  098C                     i1l3216:	
  4723                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  4724                           
  4725  098C  1D10               	btfss	16,2	;volatile
  4726  098D  2995               	goto	i1l3218
  4727                           
  4728                           ;usb_device.c: 2343: {
  4729                           ;usb_device.c: 2344: (UIR &= 0xFB);
  4730  098E  30FB               	movlw	251
  4731  098F  0020               	movlb	0	; select bank0
  4732  0990  00E6               	movwf	??_USBWakeFromSuspend
  4733  0991  0866               	movf	??_USBWakeFromSuspend,w
  4734  0992  003D               	movlb	29	; select bank29
  4735  0993  0590               	andwf	16,f	;volatile
  4736  0994  298C               	goto	i1l3216
  4737  0995                     i1l3218:	
  4738                           
  4739                           ;usb_device.c: 2345: }
  4740                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  4741  0995  0023               	movlb	3	; select bank3
  4742  0996  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4743  0997  0008               	return
  4744  0998                     __end_of_USBWakeFromSuspend:	
  4745                           
  4746                           	psect	text17
  4747  0939                     __ptext17:	
  4748 ;; *************** function _USBSuspend *****************
  4749 ;; Defined at:
  4750 ;;		line 2245 in file "../lib/usb/src/usb_device.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;		None               void
  4757 ;; Registers used:
  4758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;Total ram usage:        1 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    4
  4771 ;; This function calls:
  4772 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4773 ;; This function is called by:
  4774 ;;		_USBDeviceTasks
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _USBSuspend
  4780  0939                     _USBSuspend:	
  4781                           
  4782                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4786  0939  003D               	movlb	29	; select bank29
  4787  093A  1512               	bsf	18,2	;volatile
  4788                           
  4789                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4790  093B  30EF               	movlw	239
  4791  093C  0020               	movlb	0	; select bank0
  4792  093D  00E6               	movwf	??_USBSuspend
  4793  093E  0866               	movf	??_USBSuspend,w
  4794  093F  003D               	movlb	29	; select bank29
  4795  0940  0590               	andwf	16,f	;volatile
  4796                           
  4797                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4798  0941  148E               	bsf	14,1	;volatile
  4799                           
  4800                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4801  0942  3001               	movlw	1
  4802  0943  0020               	movlb	0	; select bank0
  4803  0944  00E6               	movwf	??_USBSuspend
  4804  0945  0866               	movf	??_USBSuspend,w
  4805  0946  0023               	movlb	3	; select bank3
  4806  0947  00D0               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  4807                           
  4808                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4809  0948  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4810                           
  4811                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4812  0949  3075               	movlw	117
  4813  094A  0020               	movlb	0	; select bank0
  4814  094B  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4815  094C  3000               	movlw	0
  4816  094D  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4817  094E  3000               	movlw	0
  4818  094F  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4819  0950  3000               	movlw	0
  4820  0951  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4821  0952  3000               	movlw	0
  4822  0953  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4823  0954  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4824  0955  318A  224E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4825  0957  0008               	return
  4826  0958                     __end_of_USBSuspend:	
  4827                           
  4828                           	psect	text18
  4829  09BB                     __ptext18:	
  4830 ;; *************** function _USBStallHandler *****************
  4831 ;; Defined at:
  4832 ;;		line 2202 in file "../lib/usb/src/usb_device.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;		None               void
  4839 ;; Registers used:
  4840 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;Total ram usage:        1 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_USBDeviceTasks
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           
  4860                           ;psect for function _USBStallHandler
  4861  09BB                     _USBStallHandler:	
  4862                           
  4863                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4864                           
  4865                           ;incstack = 0
  4866                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4867  09BB  003D               	movlb	29	; select bank29
  4868  09BC  1C18               	btfss	24,0	;volatile
  4869  09BD  29DD               	goto	i1l3250
  4870                           
  4871                           ;usb_device.c: 2215: {
  4872                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4873  09BE  0021               	movlb	1	; select bank1
  4874  09BF  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4875  09C0  0086               	movwf	6
  4876  09C1  0187               	clrf	7
  4877  09C2  3080               	movlw	128
  4878  09C3  0601               	xorwf	1,w
  4879  09C4  1D03               	btfss	3,2
  4880  09C5  29DB               	goto	i1l3248
  4881  09C6  0023               	movlb	3	; select bank3
  4882  09C7  0827               	movf	_pBDTEntryIn^(0+384),w
  4883  09C8  0086               	movwf	6
  4884  09C9  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  4885  09CA  0087               	movwf	7
  4886  09CB  3084               	movlw	132
  4887  09CC  0601               	xorwf	1,w
  4888  09CD  1D03               	btfss	3,2
  4889  09CE  29DB               	goto	i1l3248
  4890                           
  4891                           ;usb_device.c: 2218: {
  4892                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4893  09CF  300C               	movlw	12
  4894  09D0  00F0               	movwf	??_USBStallHandler
  4895  09D1  0021               	movlb	1	; select bank1
  4896  09D2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4897  09D3  0086               	movwf	6
  4898  09D4  0187               	clrf	7
  4899  09D5  0870               	movf	??_USBStallHandler,w
  4900  09D6  0081               	movwf	1
  4901                           
  4902                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4903  09D7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4904  09D8  0086               	movwf	6
  4905  09D9  0187               	clrf	7
  4906  09DA  1781               	bsf	1,7
  4907  09DB                     i1l3248:	
  4908                           
  4909                           ;usb_device.c: 2222: }
  4910                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4911  09DB  003D               	movlb	29	; select bank29
  4912  09DC  1018               	bcf	24,0	;volatile
  4913  09DD                     i1l3250:	
  4914                           
  4915                           ;usb_device.c: 2224: }
  4916                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4917  09DD  30DF               	movlw	223
  4918  09DE  00F0               	movwf	??_USBStallHandler
  4919  09DF  0870               	movf	??_USBStallHandler,w
  4920  09E0  0590               	andwf	16,f	;volatile
  4921  09E1  0008               	return
  4922  09E2                     __end_of_USBStallHandler:	
  4923                           
  4924                           	psect	text19
  4925  08E9                     __ptext19:	
  4926 ;; *************** function _USBIncrement1msInternalTimers *****************
  4927 ;; Defined at:
  4928 ;;		line 3025 in file "../lib/usb/src/usb_device.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;		None               void
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;Total ram usage:        1 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_USBDeviceTasks
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           
  4956                           ;psect for function _USBIncrement1msInternalTimers
  4957  08E9                     _USBIncrement1msInternalTimers:	
  4958                           
  4959                           ;usb_device.c: 3033: USB1msTickCount++;
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4963  08E9  3001               	movlw	1
  4964  08EA  0023               	movlb	3	; select bank3
  4965  08EB  07BC               	addwf	_USB1msTickCount^(0+384),f	;volatile
  4966  08EC  3000               	movlw	0
  4967  08ED  3DBD               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  4968  08EE  3000               	movlw	0
  4969  08EF  3DBE               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  4970  08F0  3000               	movlw	0
  4971  08F1  3DBF               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  4972                           
  4973                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  4974  08F2  0850               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  4975  08F3  1D03               	btfss	3,2
  4976  08F4  0008               	return
  4977                           
  4978                           ;usb_device.c: 3035: {
  4979                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  4980  08F5  3001               	movlw	1
  4981  08F6  00F0               	movwf	??_USBIncrement1msInternalTimers
  4982  08F7  0870               	movf	??_USBIncrement1msInternalTimers,w
  4983  08F8  07D7               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  4984                           
  4985                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  4986  08F9  0857               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  4987  08FA  1D03               	btfss	3,2
  4988  08FB  0008               	return
  4989                           
  4990                           ;usb_device.c: 3039: {
  4991                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  4992  08FC  30FF               	movlw	255
  4993  08FD  00F0               	movwf	??_USBIncrement1msInternalTimers
  4994  08FE  0870               	movf	??_USBIncrement1msInternalTimers,w
  4995  08FF  00D7               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4996  0900  0008               	return
  4997  0901                     __end_of_USBIncrement1msInternalTimers:	
  4998                           
  4999                           	psect	text20
  5000  0B9B                     __ptext20:	
  5001 ;; *************** function _USBCtrlEPService *****************
  5002 ;; Defined at:
  5003 ;;		line 2372 in file "../lib/usb/src/usb_device.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;		None               void
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;Total ram usage:        3 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    7
  5024 ;; This function calls:
  5025 ;;		_USBCtrlTrfInHandler
  5026 ;;		_USBCtrlTrfOutHandler
  5027 ;;		_USBCtrlTrfSetupHandler
  5028 ;; This function is called by:
  5029 ;;		_USBDeviceTasks
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _USBCtrlEPService
  5035  0B9B                     _USBCtrlEPService:	
  5036                           
  5037                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5038                           
  5039                           ;incstack = 0
  5040                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5041  0B9B  302D               	movlw	45
  5042  0B9C  0021               	movlb	1	; select bank1
  5043  0B9D  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5044  0B9E  0866               	movf	??_USBCtrlEPService^(0+128),w
  5045  0B9F  0023               	movlb	3	; select bank3
  5046  0BA0  00D6               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  5047                           
  5048                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5049  0BA1  0021               	movlb	1	; select bank1
  5050  0BA2  0865               	movf	_USTATcopy^(0+128),w	;volatile
  5051  0BA3  39FD               	andlw	253
  5052  0BA4  1D03               	btfss	3,2
  5053  0BA5  2BE4               	goto	i1l3270
  5054                           
  5055                           ;usb_device.c: 2383: {
  5056                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5057  0BA6  3665               	lsrf	_USTATcopy^(0+128),w	;volatile
  5058  0BA7  393F               	andlw	63
  5059  0BA8  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5060  0BA9  3001               	movlw	1
  5061  0BAA                     u273_25:	
  5062  0BAA  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  5063  0BAB  3EFF               	addlw	-1
  5064  0BAC  1D03               	skipz
  5065  0BAD  2BAA               	goto	u273_25
  5066  0BAE  3566               	lslf	??_USBCtrlEPService^(0+128),w
  5067  0BAF  3E20               	addlw	32
  5068  0BB0  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  5069  0BB1  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5070  0BB2  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5071                           
  5072                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5073  0BB3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5074  0BB4  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5075  0BB5  39FF               	andlw	255
  5076  0BB6  1D03               	skipz
  5077  0BB7  3000               	movlw	0
  5078  0BB8  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5079                           
  5080                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5081  0BB9  3004               	movlw	4
  5082  0BBA  0660               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  5083  0BBB  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5084  0BBC  3000               	movlw	0
  5085  0BBD  0661               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5086  0BBE  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5087                           
  5088                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5089  0BBF  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5090  0BC0  0086               	movwf	6
  5091  0BC1  0187               	clrf	7
  5092  0BC2  0C01               	rrf	1,w
  5093  0BC3  0C89               	rrf	9,f
  5094  0BC4  390F               	andlw	15
  5095  0BC5  3A0D               	xorlw	13
  5096  0BC6  1D03               	skipz
  5097  0BC7  2BE1               	goto	i1l3268
  5098                           
  5099                           ;usb_device.c: 2400: {
  5100                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  5101  0BC8  3050               	movlw	80
  5102  0BC9  0086               	movwf	6
  5103  0BCA  0187               	clrf	7
  5104  0BCB  0021               	movlb	1	; select bank1
  5105  0BCC  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5106  0BCD  3E02               	addlw	2
  5107  0BCE  0084               	movwf	4
  5108  0BCF  0185               	clrf	5
  5109  0BD0  3F00               	moviw [0]fsr0
  5110  0BD1  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5111  0BD2  3F01               	moviw [1]fsr0
  5112  0BD3  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5113  0BD4  0866               	movf	??_USBCtrlEPService^(0+128),w
  5114  0BD5  0084               	movwf	4
  5115  0BD6  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5116  0BD7  0085               	movwf	5
  5117  0BD8  3008               	movlw	8
  5118  0BD9  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  5119  0BDA                     u275_2m0:	
  5120  0BDA  0012               	moviw fsr0++
  5121  0BDB  001E               	movwi fsr1++
  5122  0BDC  0BE8               	decfsz	(??_USBCtrlEPService+2)^(0+128),f
  5123  0BDD  2BDA               	goto	u275_2m0
  5124                           
  5125                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5126  0BDE  318B  2348         	fcall	_USBCtrlTrfSetupHandler
  5127                           
  5128                           ;usb_device.c: 2409: }
  5129  0BE0  0008               	return
  5130  0BE1                     i1l3268:	
  5131                           
  5132                           ;usb_device.c: 2410: else
  5133                           ;usb_device.c: 2411: {
  5134                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  5135  0BE1  318A  2217         	fcall	_USBCtrlTrfOutHandler
  5136                           
  5137                           ;usb_device.c: 2414: }
  5138                           ;usb_device.c: 2415: }
  5139  0BE3  0008               	return
  5140  0BE4                     i1l3270:	
  5141                           
  5142                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5143  0BE4  30FD               	movlw	253
  5144  0BE5  0021               	movlb	1	; select bank1
  5145  0BE6  0565               	andwf	_USTATcopy^(0+128),w	;volatile
  5146  0BE7  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5147  0BE8  3004               	movlw	4
  5148  0BE9  0666               	xorwf	??_USBCtrlEPService^(0+128),w
  5149  0BEA  1D03               	btfss	3,2
  5150  0BEB  0008               	return
  5151                           
  5152                           ;usb_device.c: 2417: {
  5153                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5154  0BEC  318E  2624         	fcall	_USBCtrlTrfInHandler
  5155  0BEE  0008               	return
  5156  0BEF                     __end_of_USBCtrlEPService:	
  5157                           
  5158                           	psect	text21
  5159  0B48                     __ptext21:	
  5160 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5161 ;; Defined at:
  5162 ;;		line 2465 in file "../lib/usb/src/usb_device.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;		None               void
  5169 ;; Registers used:
  5170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;Total ram usage:        1 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    6
  5183 ;; This function calls:
  5184 ;;		_USBCheckStdRequest
  5185 ;;		_USBCtrlEPServiceComplete
  5186 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5187 ;; This function is called by:
  5188 ;;		_USBCtrlEPService
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function _USBCtrlTrfSetupHandler
  5194  0B48                     _USBCtrlTrfSetupHandler:	
  5195                           
  5196                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5200  0B48  0023               	movlb	3	; select bank3
  5201  0B49  01DF               	clrf	_shortPacketStatus^(0+384)	;volatile
  5202                           
  5203                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5204  0B4A  01D3               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  5205                           
  5206                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5207  0B4B  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5208                           
  5209                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5210  0B4C  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5211                           
  5212                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5213  0B4D  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5214                           
  5215                           ;usb_device.c: 2475: controlTransferState = 0;
  5216  0B4E  0021               	movlb	1	; select bank1
  5217  0B4F  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  5218                           
  5219                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5220  0B50  307F               	movlw	127
  5221  0B51  0020               	movlb	0	; select bank0
  5222  0B52  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5223  0B53  0023               	movlb	3	; select bank3
  5224  0B54  0827               	movf	_pBDTEntryIn^(0+384),w
  5225  0B55  0086               	movwf	6
  5226  0B56  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5227  0B57  0087               	movwf	7
  5228  0B58  0020               	movlb	0	; select bank0
  5229  0B59  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5230  0B5A  0581               	andwf	1,f
  5231                           
  5232                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5233  0B5B  3004               	movlw	4
  5234  0B5C  0023               	movlb	3	; select bank3
  5235  0B5D  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5236  0B5E  00A7               	movwf	_pBDTEntryIn^(0+384)
  5237  0B5F  3000               	movlw	0
  5238  0B60  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5239  0B61  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5240                           
  5241                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5242  0B62  307F               	movlw	127
  5243  0B63  0020               	movlb	0	; select bank0
  5244  0B64  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5245  0B65  0023               	movlb	3	; select bank3
  5246  0B66  0827               	movf	_pBDTEntryIn^(0+384),w
  5247  0B67  0086               	movwf	6
  5248  0B68  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5249  0B69  0087               	movwf	7
  5250  0B6A  0020               	movlb	0	; select bank0
  5251  0B6B  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5252  0B6C  0581               	andwf	1,f
  5253                           
  5254                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5255  0B6D  3004               	movlw	4
  5256  0B6E  0023               	movlb	3	; select bank3
  5257  0B6F  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5258  0B70  00A7               	movwf	_pBDTEntryIn^(0+384)
  5259  0B71  3000               	movlw	0
  5260  0B72  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5261  0B73  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5262                           
  5263                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5264  0B74  307F               	movlw	127
  5265  0B75  0020               	movlb	0	; select bank0
  5266  0B76  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5267  0B77  0021               	movlb	1	; select bank1
  5268  0B78  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5269  0B79  0086               	movwf	6
  5270  0B7A  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5271  0B7B  0087               	movwf	7
  5272  0B7C  0020               	movlb	0	; select bank0
  5273  0B7D  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5274  0B7E  0581               	andwf	1,f
  5275                           
  5276                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5277  0B7F  0023               	movlb	3	; select bank3
  5278  0B80  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  5279                           
  5280                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5281  0B81  01B6               	clrf	(_inPipes^(0+384)+3)	;volatile
  5282  0B82  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  5283                           
  5284                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5285  0B83  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5286                           
  5287                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5288  0B84  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5289  0B85  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5290                           
  5291                           ;usb_device.c: 2500: USBCheckStdRequest();
  5292  0B86  318D  255A  318B   	fcall	_USBCheckStdRequest
  5293                           
  5294                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5295  0B89  3000               	movlw	0
  5296  0B8A  0020               	movlb	0	; select bank0
  5297  0B8B  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5298  0B8C  3003               	movlw	3
  5299  0B8D  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5300  0B8E  3000               	movlw	0
  5301  0B8F  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5302  0B90  3000               	movlw	0
  5303  0B91  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5304  0B92  3000               	movlw	0
  5305  0B93  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5306  0B94  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5307  0B95  318A  224E  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5308                           
  5309                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5310  0B98  3185  25E9         	fcall	_USBCtrlEPServiceComplete
  5311  0B9A  0008               	return
  5312  0B9B                     __end_of_USBCtrlTrfSetupHandler:	
  5313                           
  5314                           	psect	text22
  5315  05E9                     __ptext22:	
  5316 ;; *************** function _USBCtrlEPServiceComplete *****************
  5317 ;; Defined at:
  5318 ;;		line 1616 in file "../lib/usb/src/usb_device.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;Total ram usage:        2 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    2
  5339 ;; This function calls:
  5340 ;;		_USBCtrlEPAllowDataStage
  5341 ;;		_USBCtrlEPAllowStatusStage
  5342 ;; This function is called by:
  5343 ;;		_USBCtrlTrfSetupHandler
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           
  5348                           ;psect for function _USBCtrlEPServiceComplete
  5349  05E9                     _USBCtrlEPServiceComplete:	
  5350                           
  5351                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5355  05E9  003D               	movlb	29	; select bank29
  5356  05EA  120E               	bcf	14,4	;volatile
  5357                           
  5358                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5359  05EB  0023               	movlb	3	; select bank3
  5360  05EC  1BB5               	btfsc	(_inPipes^(0+384)+2),7	;volatile
  5361  05ED  2E31               	goto	i1l258
  5362                           
  5363                           ;usb_device.c: 1629: {
  5364                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5365  05EE  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  5366  05EF  2DFF               	goto	i1l2986
  5367                           
  5368                           ;usb_device.c: 1631: {
  5369                           ;usb_device.c: 1632: controlTransferState = 2;
  5370  05F0  3002               	movlw	2
  5371  05F1  00F5               	movwf	??_USBCtrlEPServiceComplete
  5372  05F2  0875               	movf	??_USBCtrlEPServiceComplete,w
  5373  05F3  0021               	movlb	1	; select bank1
  5374  05F4  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5375                           
  5376                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5377  05F5  0023               	movlb	3	; select bank3
  5378  05F6  0852               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  5379  05F7  1D03               	btfss	3,2
  5380  05F8  2DFB               	goto	i1l2982
  5381                           
  5382                           ;usb_device.c: 1644: {
  5383                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5384  05F9  318C  249F         	fcall	_USBCtrlEPAllowDataStage
  5385  05FB                     i1l2982:	
  5386                           
  5387                           ;usb_device.c: 1646: }
  5388                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5389  05FB  0023               	movlb	3	; select bank3
  5390  05FC  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5391                           
  5392                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5393  05FD  01D4               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5394                           
  5395                           ;usb_device.c: 1652: }
  5396  05FE  0008               	return
  5397  05FF                     i1l2986:	
  5398                           
  5399                           ;usb_device.c: 1653: else
  5400                           ;usb_device.c: 1654: {
  5401                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5402  05FF  0021               	movlb	1	; select bank1
  5403  0600  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5404  0601  3E01               	addlw	1
  5405  0602  00F5               	movwf	??_USBCtrlEPServiceComplete
  5406  0603  3000               	movlw	0
  5407  0604  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5408  0605  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5409  0606  0875               	movf	??_USBCtrlEPServiceComplete,w
  5410  0607  0086               	movwf	6
  5411  0608  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5412  0609  0087               	movwf	7
  5413  060A  3008               	movlw	8
  5414  060B  0081               	movwf	1
  5415                           
  5416                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5417  060C  3050               	movlw	80
  5418  060D  00F5               	movwf	??_USBCtrlEPServiceComplete
  5419  060E  3000               	movlw	0
  5420  060F  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5421  0610  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5422  0611  0086               	movwf	6
  5423  0612  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5424  0613  0087               	movwf	7
  5425  0614  3142               	addfsr 1,2
  5426  0615  0875               	movf	??_USBCtrlEPServiceComplete,w
  5427  0616  3FC0               	movwi [0]fsr1
  5428  0617  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5429  0618  3FC1               	movwi [1]fsr1
  5430                           
  5431                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5432  0619  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5433  061A  0086               	movwf	6
  5434  061B  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5435  061C  0087               	movwf	7
  5436  061D  300C               	movlw	12
  5437  061E  0081               	movwf	1
  5438                           
  5439                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5440  061F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5441  0620  0086               	movwf	6
  5442  0621  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5443  0622  0087               	movwf	7
  5444  0623  1781               	bsf	1,7
  5445                           
  5446                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5447  0624  0023               	movlb	3	; select bank3
  5448  0625  0827               	movf	_pBDTEntryIn^(0+384),w
  5449  0626  0086               	movwf	6
  5450  0627  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5451  0628  0087               	movwf	7
  5452  0629  3004               	movlw	4
  5453  062A  0081               	movwf	1
  5454                           
  5455                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5456  062B  0827               	movf	_pBDTEntryIn^(0+384),w
  5457  062C  0086               	movwf	6
  5458  062D  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5459  062E  0087               	movwf	7
  5460  062F  1781               	bsf	1,7
  5461                           
  5462                           ;usb_device.c: 1665: }
  5463                           ;usb_device.c: 1666: }
  5464  0630  0008               	return
  5465  0631                     i1l258:	
  5466                           
  5467                           ;usb_device.c: 1667: else
  5468                           ;usb_device.c: 1668: {
  5469                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5470  0631  0020               	movlb	0	; select bank0
  5471  0632  1FD0               	btfss	80,7	;volatile
  5472  0633  2E49               	goto	i1l3012
  5473                           
  5474                           ;usb_device.c: 1670: {
  5475                           ;usb_device.c: 1671: controlTransferState = 1;
  5476  0634  3001               	movlw	1
  5477  0635  00F5               	movwf	??_USBCtrlEPServiceComplete
  5478  0636  0875               	movf	??_USBCtrlEPServiceComplete,w
  5479  0637  0021               	movlb	1	; select bank1
  5480  0638  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5481                           
  5482                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5483  0639  0023               	movlb	3	; select bank3
  5484  063A  0851               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  5485  063B  1D03               	btfss	3,2
  5486  063C  2E40               	goto	i1l3004
  5487                           
  5488                           ;usb_device.c: 1686: {
  5489                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5490  063D  318C  249F  3185   	fcall	_USBCtrlEPAllowDataStage
  5491  0640                     i1l3004:	
  5492                           
  5493                           ;usb_device.c: 1688: }
  5494                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5495  0640  0023               	movlb	3	; select bank3
  5496  0641  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5497                           
  5498                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5499  0642  01D4               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5500                           
  5501                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5502  0643  0853               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5503  0644  1D03               	btfss	3,2
  5504  0645  0008               	return
  5505                           
  5506                           ;usb_device.c: 1713: {
  5507                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5508  0646  3187  278D         	fcall	_USBCtrlEPAllowStatusStage
  5509                           
  5510                           ;usb_device.c: 1715: }
  5511                           ;usb_device.c: 1716: }
  5512  0648  0008               	return
  5513  0649                     i1l3012:	
  5514                           
  5515                           ;usb_device.c: 1717: else
  5516                           ;usb_device.c: 1718: {
  5517                           ;usb_device.c: 1729: controlTransferState = 2;
  5518  0649  3002               	movlw	2
  5519  064A  00F5               	movwf	??_USBCtrlEPServiceComplete
  5520  064B  0875               	movf	??_USBCtrlEPServiceComplete,w
  5521  064C  0021               	movlb	1	; select bank1
  5522  064D  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5523                           
  5524                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5525  064E  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5526  064F  3E01               	addlw	1
  5527  0650  00F5               	movwf	??_USBCtrlEPServiceComplete
  5528  0651  3000               	movlw	0
  5529  0652  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5530  0653  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5531  0654  0875               	movf	??_USBCtrlEPServiceComplete,w
  5532  0655  0086               	movwf	6
  5533  0656  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5534  0657  0087               	movwf	7
  5535  0658  3008               	movlw	8
  5536  0659  0081               	movwf	1
  5537                           
  5538                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5539  065A  3050               	movlw	80
  5540  065B  00F5               	movwf	??_USBCtrlEPServiceComplete
  5541  065C  3000               	movlw	0
  5542  065D  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5543  065E  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5544  065F  0086               	movwf	6
  5545  0660  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5546  0661  0087               	movwf	7
  5547  0662  3142               	addfsr 1,2
  5548  0663  0875               	movf	??_USBCtrlEPServiceComplete,w
  5549  0664  3FC0               	movwi [0]fsr1
  5550  0665  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5551  0666  3FC1               	movwi [1]fsr1
  5552                           
  5553                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5554  0667  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5555  0668  0086               	movwf	6
  5556  0669  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5557  066A  0087               	movwf	7
  5558  066B  3004               	movlw	4
  5559  066C  0081               	movwf	1
  5560                           
  5561                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5562  066D  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5563  066E  0086               	movwf	6
  5564  066F  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5565  0670  0087               	movwf	7
  5566  0671  1781               	bsf	1,7
  5567                           
  5568                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5569  0672  0023               	movlb	3	; select bank3
  5570  0673  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5571                           
  5572                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5573  0674  01D4               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5574                           
  5575                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5576  0675  0853               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5577  0676  1D03               	btfss	3,2
  5578  0677  0008               	return
  5579                           
  5580                           ;usb_device.c: 1741: {
  5581                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5582  0678  3187  278D         	fcall	_USBCtrlEPAllowStatusStage
  5583  067A  0008               	return
  5584  067B                     __end_of_USBCtrlEPServiceComplete:	
  5585                           
  5586                           	psect	text23
  5587  0C9F                     __ptext23:	
  5588 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5589 ;; Defined at:
  5590 ;;		line 1488 in file "../lib/usb/src/usb_device.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;		None               void
  5597 ;; Registers used:
  5598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;Total ram usage:        2 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    1
  5611 ;; This function calls:
  5612 ;;		_USBCtrlTrfTxService
  5613 ;; This function is called by:
  5614 ;;		_USBCtrlEPServiceComplete
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function _USBCtrlEPAllowDataStage
  5620  0C9F                     _USBCtrlEPAllowDataStage:	
  5621                           
  5622                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5626  0C9F  0023               	movlb	3	; select bank3
  5627  0CA0  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5628                           
  5629                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5630  0CA1  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5631                           
  5632                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5633  0CA2  3002               	movlw	2
  5634  0CA3  0021               	movlb	1	; select bank1
  5635  0CA4  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  5636  0CA5  1D03               	btfss	3,2
  5637  0CA6  2CCC               	goto	i1l2764
  5638                           
  5639                           ;usb_device.c: 1494: {
  5640                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5641  0CA7  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5642  0CA8  3E01               	addlw	1
  5643  0CA9  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5644  0CAA  3000               	movlw	0
  5645  0CAB  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5646  0CAC  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5647  0CAD  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5648  0CAE  0086               	movwf	6
  5649  0CAF  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5650  0CB0  0087               	movwf	7
  5651  0CB1  3008               	movlw	8
  5652  0CB2  0081               	movwf	1
  5653                           
  5654                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5655  0CB3  3058               	movlw	88
  5656  0CB4  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5657  0CB5  3000               	movlw	0
  5658  0CB6  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5659  0CB7  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5660  0CB8  0086               	movwf	6
  5661  0CB9  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5662  0CBA  0087               	movwf	7
  5663  0CBB  3142               	addfsr 1,2
  5664  0CBC  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5665  0CBD  3FC0               	movwi [0]fsr1
  5666  0CBE  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5667  0CBF  3FC1               	movwi [1]fsr1
  5668                           
  5669                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5670  0CC0  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5671  0CC1  0086               	movwf	6
  5672  0CC2  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5673  0CC3  0087               	movwf	7
  5674  0CC4  3048               	movlw	72
  5675  0CC5  0081               	movwf	1
  5676                           
  5677                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5678  0CC6  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5679  0CC7  0086               	movwf	6
  5680  0CC8  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5681  0CC9  0087               	movwf	7
  5682  0CCA  1781               	bsf	1,7
  5683                           
  5684                           ;usb_device.c: 1500: }
  5685  0CCB  0008               	return
  5686  0CCC                     i1l2764:	
  5687                           
  5688                           ;usb_device.c: 1501: else
  5689                           ;usb_device.c: 1502: {
  5690                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5691  0CCC  0023               	movlb	3	; select bank3
  5692  0CCD  0837               	movf	((_inPipes+1)^(0+384)+3),w	;volatile
  5693  0CCE  0020               	movlb	0	; select bank0
  5694  0CCF  0257               	subwf	87,w	;volatile
  5695  0CD0  1D03               	skipz
  5696  0CD1  2CD6               	goto	u209_25
  5697  0CD2  0023               	movlb	3	; select bank3
  5698  0CD3  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  5699  0CD4  0020               	movlb	0	; select bank0
  5700  0CD5  0256               	subwf	86,w	;volatile
  5701  0CD6                     u209_25:	
  5702  0CD6  1803               	skipnc
  5703  0CD7  2CDF               	goto	i1l2768
  5704                           
  5705                           ;usb_device.c: 1506: {
  5706                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5707  0CD8  0857               	movf	87,w	;volatile
  5708  0CD9  0023               	movlb	3	; select bank3
  5709  0CDA  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  5710  0CDB  0020               	movlb	0	; select bank0
  5711  0CDC  0856               	movf	86,w	;volatile
  5712  0CDD  0023               	movlb	3	; select bank3
  5713  0CDE  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5714  0CDF                     i1l2768:	
  5715                           
  5716                           ;usb_device.c: 1508: }
  5717                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5718  0CDF  318D  25BC         	fcall	_USBCtrlTrfTxService
  5719                           
  5720                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5721  0CE1  3058               	movlw	88
  5722  0CE2  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5723  0CE3  3000               	movlw	0
  5724  0CE4  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5725  0CE5  0023               	movlb	3	; select bank3
  5726  0CE6  0827               	movf	_pBDTEntryIn^(0+384),w
  5727  0CE7  0086               	movwf	6
  5728  0CE8  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5729  0CE9  0087               	movwf	7
  5730  0CEA  3142               	addfsr 1,2
  5731  0CEB  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5732  0CEC  3FC0               	movwi [0]fsr1
  5733  0CED  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5734  0CEE  3FC1               	movwi [1]fsr1
  5735                           
  5736                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5737  0CEF  0827               	movf	_pBDTEntryIn^(0+384),w
  5738  0CF0  0086               	movwf	6
  5739  0CF1  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5740  0CF2  0087               	movwf	7
  5741  0CF3  3048               	movlw	72
  5742  0CF4  0081               	movwf	1
  5743                           
  5744                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5745  0CF5  0827               	movf	_pBDTEntryIn^(0+384),w
  5746  0CF6  0086               	movwf	6
  5747  0CF7  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5748  0CF8  0087               	movwf	7
  5749  0CF9  1781               	bsf	1,7
  5750  0CFA  0008               	return
  5751  0CFB                     __end_of_USBCtrlEPAllowDataStage:	
  5752                           
  5753                           	psect	text24
  5754  0D5A                     __ptext24:	
  5755 ;; *************** function _USBCheckStdRequest *****************
  5756 ;; Defined at:
  5757 ;;		line 2686 in file "../lib/usb/src/usb_device.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;		None
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;		None
  5762 ;; Return value:  Size  Location     Type
  5763 ;;		None               void
  5764 ;; Registers used:
  5765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;Total ram usage:        1 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    5
  5778 ;; This function calls:
  5779 ;;		_USBStdFeatureReqHandler
  5780 ;;		_USBStdGetDscHandler
  5781 ;;		_USBStdGetStatusHandler
  5782 ;;		_USBStdSetCfgHandler
  5783 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5784 ;; This function is called by:
  5785 ;;		_USBCtrlTrfSetupHandler
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           
  5790                           ;psect for function _USBCheckStdRequest
  5791  0D5A                     _USBCheckStdRequest:	
  5792                           
  5793                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5797  0D5A  0020               	movlb	0	; select bank0
  5798  0D5B  0E50               	swapf	80,w	;volatile
  5799  0D5C  0C89               	rrf	9,f
  5800  0D5D  3903               	andlw	3
  5801  0D5E  3A00               	xorlw	0
  5802  0D5F  1D03               	btfss	3,2
  5803  0D60  0008               	return
  5804  0D61  2DB0               	goto	i1l3106
  5805  0D62                     i1l385:	
  5806                           ;usb_device.c: 2691: {
  5807                           ;usb_device.c: 2692: case 5:
  5808                           
  5809                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  5810                           
  5811                           
  5812                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  5813  0D62  0023               	movlb	3	; select bank3
  5814  0D63  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5815                           
  5816                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  5817  0D64  3008               	movlw	8
  5818  0D65  0020               	movlb	0	; select bank0
  5819  0D66  00ED               	movwf	??_USBCheckStdRequest
  5820  0D67  086D               	movf	??_USBCheckStdRequest,w
  5821  0D68  0021               	movlb	1	; select bank1
  5822  0D69  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  5823                           
  5824                           ;usb_device.c: 2696: break;
  5825  0D6A  0008               	return
  5826  0D6B                     i1l3076:	
  5827                           ;usb_device.c: 2697: case 6:
  5828                           
  5829                           
  5830                           ;usb_device.c: 2698: USBStdGetDscHandler();
  5831  0D6B  318E  26FE         	fcall	_USBStdGetDscHandler
  5832                           
  5833                           ;usb_device.c: 2699: break;
  5834  0D6D  0008               	return
  5835  0D6E                     i1l3078:	
  5836                           ;usb_device.c: 2700: case 9:
  5837                           
  5838                           
  5839                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  5840  0D6E  3186  267B         	fcall	_USBStdSetCfgHandler
  5841                           
  5842                           ;usb_device.c: 2702: break;
  5843  0D70  0008               	return
  5844  0D71                     i1l3080:	
  5845                           ;usb_device.c: 2703: case 8:
  5846                           
  5847                           
  5848                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5849  0D71  30E9               	movlw	low _USBActiveConfiguration
  5850  0D72  0023               	movlb	3	; select bank3
  5851  0D73  00B3               	movwf	_inPipes^(0+384)	;volatile
  5852  0D74  3001               	movlw	high _USBActiveConfiguration
  5853  0D75  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  5854                           
  5855                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5856  0D76  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  5857                           
  5858                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  5859  0D77  3001               	movlw	1
  5860  0D78  0020               	movlb	0	; select bank0
  5861  0D79  00ED               	movwf	??_USBCheckStdRequest
  5862  0D7A  086D               	movf	??_USBCheckStdRequest,w
  5863  0D7B  0023               	movlb	3	; select bank3
  5864  0D7C  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5865                           
  5866                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  5867  0D7D  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5868                           
  5869                           ;usb_device.c: 2708: break;
  5870  0D7E  0008               	return
  5871  0D7F                     i1l3088:	
  5872                           ;usb_device.c: 2709: case 0:
  5873                           
  5874                           
  5875                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  5876  0D7F  318B  23EF         	fcall	_USBStdGetStatusHandler
  5877                           
  5878                           ;usb_device.c: 2711: break;
  5879  0D81  0008               	return
  5880  0D82                     i1l3090:	
  5881                           ;usb_device.c: 2712: case 1:
  5882                           
  5883                           
  5884                           ;usb_device.c: 2713: case 3:
  5885                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  5886  0D82  3180  203E         	fcall	_USBStdFeatureReqHandler
  5887                           
  5888                           ;usb_device.c: 2715: break;
  5889  0D84  0008               	return
  5890  0D85                     i1l3092:	
  5891                           ;usb_device.c: 2716: case 10:
  5892                           
  5893                           
  5894                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5895  0D85  0020               	movlb	0	; select bank0
  5896  0D86  0854               	movf	84,w	;volatile
  5897  0D87  3EE7               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5898  0D88  0023               	movlb	3	; select bank3
  5899  0D89  00B3               	movwf	_inPipes^(0+384)	;volatile
  5900  0D8A  3001               	movlw	1
  5901  0D8B  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  5902                           
  5903                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5904  0D8C  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  5905                           
  5906                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  5907  0D8D  3001               	movlw	1
  5908  0D8E  0020               	movlb	0	; select bank0
  5909  0D8F  00ED               	movwf	??_USBCheckStdRequest
  5910  0D90  086D               	movf	??_USBCheckStdRequest,w
  5911  0D91  0023               	movlb	3	; select bank3
  5912  0D92  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5913                           
  5914                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  5915  0D93  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5916                           
  5917                           ;usb_device.c: 2721: break;
  5918  0D94  0008               	return
  5919  0D95                     i1l394:	
  5920                           ;usb_device.c: 2722: case 11:
  5921                           
  5922                           
  5923                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5924  0D95  0023               	movlb	3	; select bank3
  5925  0D96  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5926                           
  5927                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5928  0D97  0020               	movlb	0	; select bank0
  5929  0D98  0852               	movf	82,w	;volatile
  5930  0D99  00ED               	movwf	??_USBCheckStdRequest
  5931  0D9A  0854               	movf	84,w	;volatile
  5932  0D9B  3EE7               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5933  0D9C  0086               	movwf	6
  5934  0D9D  3001               	movlw	1	; select bank3/4
  5935  0D9E  0087               	movwf	7
  5936  0D9F  086D               	movf	??_USBCheckStdRequest,w
  5937  0DA0  0081               	movwf	1
  5938                           
  5939                           ;usb_device.c: 2725: break;
  5940  0DA1  0008               	return
  5941  0DA2                     i1l3102:	
  5942                           ;usb_device.c: 2726: case 7:
  5943                           
  5944                           
  5945                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5946  0DA2  3000               	movlw	0
  5947  0DA3  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5948  0DA4  3002               	movlw	2
  5949  0DA5  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5950  0DA6  3000               	movlw	0
  5951  0DA7  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5952  0DA8  3000               	movlw	0
  5953  0DA9  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5954  0DAA  3000               	movlw	0
  5955  0DAB  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5956  0DAC  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5957  0DAD  318A  224E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5958                           
  5959                           ;usb_device.c: 2732: }
  5960                           
  5961                           ;usb_device.c: 2731: break;
  5962                           
  5963                           ;usb_device.c: 2730: default:
  5964                           
  5965                           ;usb_device.c: 2729: case 12:
  5966                           
  5967                           ;usb_device.c: 2728: break;
  5968  0DAF  0008               	return
  5969  0DB0                     i1l3106:	
  5970  0DB0  0020               	movlb	0	; select bank0
  5971  0DB1  0851               	movf	81,w	;volatile
  5972                           
  5973                           ; Switch size 1, requested type "space"
  5974                           ; Number of cases is 11, Range of values is 0 to 12
  5975                           ; switch strategies available:
  5976                           ; Name         Instructions Cycles
  5977                           ; direct_byte           32     6 (fixed)
  5978                           ; simple_byte           34    18 (average)
  5979                           ; jumptable            260     6 (fixed)
  5980                           ;	Chosen strategy is direct_byte
  5981  0DB2  0084               	movwf	4
  5982  0DB3  300D               	movlw	13
  5983  0DB4  0204               	subwf	4,w
  5984  0DB5  1803               	skipnc
  5985  0DB6  0008               	return
  5986  0DB7  3188               	movlp	high i1S4386
  5987  0DB8  3504               	lslf	4,w
  5988  0DB9  3E00               	addlw	low i1S4386
  5989  0DBA  0082               	movwf	2
  5990  0DBB                     i1l383:	
  5991  0DBB  0008               	return
  5992  0DBC                     __end_of_USBCheckStdRequest:	
  5993                           
  5994                           	psect	swtext1
  5995  0800                     __pswtext1:	
  5996  0800                     i1S4386:	
  5997  0800  318D  2D7F         	ljmp	i1l3088
  5998  0802  318D  2D82         	ljmp	i1l3090
  5999  0804  318D  2DBB         	ljmp	i1l383
  6000  0806  318D  2D82         	ljmp	i1l3090
  6001  0808  318D  2DBB         	ljmp	i1l383
  6002  080A  318D  2D62         	ljmp	i1l385
  6003  080C  318D  2D6B         	ljmp	i1l3076
  6004  080E  318D  2DA2         	ljmp	i1l3102
  6005  0810  318D  2D71         	ljmp	i1l3080
  6006  0812  318D  2D6E         	ljmp	i1l3078
  6007  0814  318D  2D85         	ljmp	i1l3092
  6008  0816  318D  2D95         	ljmp	i1l394
  6009  0818  318D  2DBB         	ljmp	i1l383
  6010                           
  6011                           	psect	text25
  6012  067B                     __ptext25:	
  6013 ;; *************** function _USBStdSetCfgHandler *****************
  6014 ;; Defined at:
  6015 ;;		line 1968 in file "../lib/usb/src/usb_device.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  p               2    7[BANK0 ] PTR unsigned char 
  6020 ;;		 -> UEP1(1), 
  6021 ;;  i               1    9[BANK0 ] unsigned char 
  6022 ;;  i               1   10[BANK0 ] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;		None               void
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;Total ram usage:        5 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    4
  6039 ;; This function calls:
  6040 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6041 ;;		_memset
  6042 ;; This function is called by:
  6043 ;;		_USBCheckStdRequest
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function _USBStdSetCfgHandler
  6049  067B                     _USBStdSetCfgHandler:	
  6050                           
  6051                           ;usb_device.c: 1970: uint8_t i;
  6052                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6053                           
  6054                           ;incstack = 0
  6055                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6056  067B  0023               	movlb	3	; select bank3
  6057  067C  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6058                           
  6059                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  6060  067D  300E               	movlw	14
  6061  067E  0020               	movlb	0	; select bank0
  6062  067F  00E8               	movwf	USBStdSetCfgHandler@p+1
  6063  0680  3099               	movlw	153
  6064  0681  00E7               	movwf	USBStdSetCfgHandler@p
  6065  0682  01E9               	clrf	USBStdSetCfgHandler@i_1174
  6066  0683  3002               	movlw	2
  6067  0684  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  6068  0685  1803               	btfsc	3,0
  6069  0686  2E98               	goto	i1l2792
  6070  0687                     i1l2784:	
  6071  0687  0867               	movf	USBStdSetCfgHandler@p,w
  6072  0688  0086               	movwf	6
  6073  0689  0868               	movf	USBStdSetCfgHandler@p+1,w
  6074  068A  0087               	movwf	7
  6075  068B  0181               	clrf	1
  6076  068C  3001               	movlw	1
  6077  068D  07E7               	addwf	USBStdSetCfgHandler@p,f
  6078  068E  3000               	movlw	0
  6079  068F  3DE8               	addwfc	USBStdSetCfgHandler@p+1,f
  6080  0690  3001               	movlw	1
  6081  0691  00E6               	movwf	??_USBStdSetCfgHandler
  6082  0692  0866               	movf	??_USBStdSetCfgHandler,w
  6083  0693  07E9               	addwf	USBStdSetCfgHandler@i_1174,f
  6084  0694  3002               	movlw	2
  6085  0695  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  6086  0696  1C03               	skipc
  6087  0697  2E87               	goto	i1l2784
  6088  0698                     i1l2792:	
  6089                           
  6090                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6091  0698  3020               	movlw	32
  6092  0699  00F0               	movwf	memset@p1
  6093  069A  3000               	movlw	0
  6094  069B  00F1               	movwf	memset@p1+1
  6095  069C  3000               	movlw	0
  6096  069D  00F2               	movwf	memset@c
  6097  069E  00F3               	movwf	memset@c+1
  6098  069F  3030               	movlw	48
  6099  06A0  00F4               	movwf	memset@n
  6100  06A1  3000               	movlw	0
  6101  06A2  00F5               	movwf	memset@n+1
  6102  06A3  3188  20D1  3186   	fcall	_memset
  6103                           
  6104                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6105  06A6  003D               	movlb	29	; select bank29
  6106  06A7  170E               	bsf	14,6	;volatile
  6107                           
  6108                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6109  06A8  0020               	movlb	0	; select bank0
  6110  06A9  01EA               	clrf	USBStdSetCfgHandler@i
  6111  06AA  3003               	movlw	3
  6112  06AB  026A               	subwf	USBStdSetCfgHandler@i,w
  6113  06AC  1803               	btfsc	3,0
  6114  06AD  2EC2               	goto	i1l2808
  6115  06AE                     i1l2802:	
  6116                           
  6117                           ;usb_device.c: 1988: {
  6118                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6119  06AE  086A               	movf	USBStdSetCfgHandler@i,w
  6120  06AF  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6121  06B0  0086               	movwf	6
  6122  06B1  3001               	movlw	1	; select bank3/4
  6123  06B2  0087               	movwf	7
  6124  06B3  0181               	clrf	1
  6125                           
  6126                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6127  06B4  086A               	movf	USBStdSetCfgHandler@i,w
  6128  06B5  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6129  06B6  0086               	movwf	6
  6130  06B7  3001               	movlw	1	; select bank3/4
  6131  06B8  0087               	movwf	7
  6132  06B9  0181               	clrf	1
  6133  06BA  3001               	movlw	1
  6134  06BB  00E6               	movwf	??_USBStdSetCfgHandler
  6135  06BC  0866               	movf	??_USBStdSetCfgHandler,w
  6136  06BD  07EA               	addwf	USBStdSetCfgHandler@i,f
  6137  06BE  3003               	movlw	3
  6138  06BF  026A               	subwf	USBStdSetCfgHandler@i,w
  6139  06C0  1C03               	skipc
  6140  06C1  2EAE               	goto	i1l2802
  6141  06C2                     i1l2808:	
  6142                           
  6143                           ;usb_device.c: 1991: }
  6144                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6145  06C2  30E7               	movlw	low _USBAlternateInterface
  6146  06C3  00F0               	movwf	memset@p1
  6147  06C4  3001               	movlw	high _USBAlternateInterface
  6148  06C5  00F1               	movwf	memset@p1+1
  6149  06C6  3000               	movlw	0
  6150  06C7  00F2               	movwf	memset@c
  6151  06C8  00F3               	movwf	memset@c+1
  6152  06C9  3002               	movlw	2
  6153  06CA  00F4               	movwf	memset@n
  6154  06CB  3000               	movlw	0
  6155  06CC  00F5               	movwf	memset@n+1
  6156  06CD  3188  20D1  3186   	fcall	_memset
  6157                           
  6158                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6159  06D0  003D               	movlb	29	; select bank29
  6160  06D1  130E               	bcf	14,6	;volatile
  6161                           
  6162                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6163  06D2  3028               	movlw	40
  6164  06D3  0023               	movlb	3	; select bank3
  6165  06D4  00A7               	movwf	_pBDTEntryIn^(0+384)
  6166  06D5  3000               	movlw	0
  6167  06D6  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6168                           
  6169                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6170  06D7  3020               	movlw	32
  6171  06D8  0020               	movlb	0	; select bank0
  6172  06D9  00E6               	movwf	??_USBStdSetCfgHandler
  6173  06DA  0866               	movf	??_USBStdSetCfgHandler,w
  6174  06DB  0021               	movlb	1	; select bank1
  6175  06DC  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  6176                           
  6177                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6178  06DD  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6179  06DE  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6180  06DF  39FF               	andlw	255
  6181  06E0  1D03               	skipz
  6182  06E1  3000               	movlw	0
  6183  06E2  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  6184                           
  6185                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6186  06E3  0020               	movlb	0	; select bank0
  6187  06E4  0852               	movf	82,w	;volatile
  6188  06E5  00E6               	movwf	??_USBStdSetCfgHandler
  6189  06E6  0866               	movf	??_USBStdSetCfgHandler,w
  6190  06E7  0023               	movlb	3	; select bank3
  6191  06E8  00E9               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  6192                           
  6193                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6194  06E9  0869               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  6195  06EA  1D03               	btfss	3,2
  6196  06EB  2EF3               	goto	i1l2824
  6197                           
  6198                           ;usb_device.c: 2010: {
  6199                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6200  06EC  3010               	movlw	16
  6201  06ED  0020               	movlb	0	; select bank0
  6202  06EE  00E6               	movwf	??_USBStdSetCfgHandler
  6203  06EF  0866               	movf	??_USBStdSetCfgHandler,w
  6204  06F0  0021               	movlb	1	; select bank1
  6205  06F1  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  6206                           
  6207                           ;usb_device.c: 2013: }
  6208  06F2  0008               	return
  6209  06F3                     i1l2824:	
  6210                           
  6211                           ;usb_device.c: 2014: else
  6212                           ;usb_device.c: 2015: {
  6213                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6214  06F3  3000               	movlw	0
  6215  06F4  0020               	movlb	0	; select bank0
  6216  06F5  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6217  06F6  3001               	movlw	1
  6218  06F7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6219  06F8  30E9               	movlw	low _USBActiveConfiguration
  6220  06F9  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6221  06FA  3001               	movlw	high _USBActiveConfiguration
  6222  06FB  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6223  06FC  3001               	movlw	1
  6224  06FD  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6225  06FE  3000               	movlw	0
  6226  06FF  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6227  0700  318A  224E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6228                           
  6229                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6230  0702  3020               	movlw	32
  6231  0703  0020               	movlb	0	; select bank0
  6232  0704  00E6               	movwf	??_USBStdSetCfgHandler
  6233  0705  0866               	movf	??_USBStdSetCfgHandler,w
  6234  0706  0021               	movlb	1	; select bank1
  6235  0707  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  6236  0708  0008               	return
  6237  0709                     __end_of_USBStdSetCfgHandler:	
  6238                           
  6239                           	psect	text26
  6240  08D1                     __ptext26:	
  6241 ;; *************** function _memset *****************
  6242 ;; Defined at:
  6243 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  p1              2    0[COMMON] PTR void 
  6246 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6247 ;;  c               2    2[COMMON] int 
  6248 ;;  n               2    4[COMMON] unsigned int 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  p               2    6[COMMON] PTR unsigned char 
  6251 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  2    0[COMMON] PTR void 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6261 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;Total ram usage:        8 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_USBStdSetCfgHandler
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _memset
  6276  08D1                     _memset:	
  6277                           
  6278                           ;incstack = 0
  6279                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6280  08D1  0871               	movf	memset@p1+1,w
  6281  08D2  00F7               	movwf	memset@p+1
  6282  08D3  0870               	movf	memset@p1,w
  6283  08D4  00F6               	movwf	memset@p
  6284  08D5                     i1l2714:	
  6285  08D5  3001               	movlw	1
  6286  08D6  02F4               	subwf	memset@n,f
  6287  08D7  3000               	movlw	0
  6288  08D8  3BF5               	subwfb	memset@n+1,f
  6289  08D9  0A74               	incf	memset@n,w
  6290  08DA  1903               	btfsc	3,2
  6291  08DB  0A75               	incf	memset@n+1,w
  6292  08DC  1903               	btfsc	3,2
  6293  08DD  0008               	return
  6294  08DE  0876               	movf	memset@p,w
  6295  08DF  0086               	movwf	6
  6296  08E0  0877               	movf	memset@p+1,w
  6297  08E1  0087               	movwf	7
  6298  08E2  0872               	movf	memset@c,w
  6299  08E3  0081               	movwf	1
  6300  08E4  3001               	movlw	1
  6301  08E5  07F6               	addwf	memset@p,f
  6302  08E6  3000               	movlw	0
  6303  08E7  3DF7               	addwfc	memset@p+1,f
  6304  08E8  28D5               	goto	i1l2714
  6305  08E9                     __end_of_memset:	
  6306                           ;	Return value of _memset is never used
  6307                           
  6308                           
  6309                           	psect	text27
  6310  0BEF                     __ptext27:	
  6311 ;; *************** function _USBStdGetStatusHandler *****************
  6312 ;; Defined at:
  6313 ;;		line 2129 in file "../lib/usb/src/usb_device.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  p               2    1[COMMON] PTR struct __BDT
  6318 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;		None               void
  6321 ;; Registers used:
  6322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        3 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_USBCheckStdRequest
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           
  6342                           ;psect for function _USBStdGetStatusHandler
  6343  0BEF                     _USBStdGetStatusHandler:	
  6344                           
  6345                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6346                           
  6347                           ;incstack = 0
  6348                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6349  0BEF  0020               	movlb	0	; select bank0
  6350  0BF0  01D8               	clrf	88	;volatile
  6351                           
  6352                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6353  0BF1  01D9               	clrf	89	;volatile
  6354                           
  6355                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6356  0BF2  2C2B               	goto	i1l2880
  6357  0BF3                     i1l323:	
  6358                           ;usb_device.c: 2135: {
  6359                           ;usb_device.c: 2136: case (0x00):
  6360                           
  6361                           
  6362                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6363  0BF3  0023               	movlb	3	; select bank3
  6364  0BF4  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6365                           
  6366                           ;usb_device.c: 2145: }
  6367                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6368                           
  6369                           ;usb_device.c: 2143: {
  6370                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6371                           
  6372                           ;usb_device.c: 2142: if(0 == 1)
  6373  0BF5  0023               	movlb	3	; select bank3
  6374  0BF6  034F               	decf	_RemoteWakeup^(0+384),w	;volatile
  6375  0BF7  1D03               	btfss	3,2
  6376  0BF8  2C37               	goto	i1l326
  6377                           
  6378                           ;usb_device.c: 2148: {
  6379                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6380  0BF9  0020               	movlb	0	; select bank0
  6381  0BFA  14D8               	bsf	88,1	;volatile
  6382                           
  6383                           ;usb_device.c: 2150: }
  6384                           ;usb_device.c: 2151: break;
  6385  0BFB  2C37               	goto	i1l326
  6386  0BFC                     i1l327:	
  6387                           ;usb_device.c: 2152: case (0x01):
  6388                           
  6389                           
  6390                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6391  0BFC  0023               	movlb	3	; select bank3
  6392  0BFD  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6393                           
  6394                           ;usb_device.c: 2154: break;
  6395  0BFE  2C37               	goto	i1l326
  6396  0BFF                     i1l328:	
  6397                           ;usb_device.c: 2155: case (0x02):
  6398                           
  6399                           
  6400                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6401  0BFF  0023               	movlb	3	; select bank3
  6402  0C00  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6403                           
  6404                           ;usb_device.c: 2160: {
  6405                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6406                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6407  0C01  0020               	movlb	0	; select bank0
  6408  0C02  1BD4               	btfsc	84,7	;volatile
  6409  0C03  2C0F               	goto	i1l2870
  6410                           
  6411                           ;usb_device.c: 2164: {
  6412                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6413  0C04  0854               	movf	84,w	;volatile
  6414  0C05  390F               	andlw	15
  6415  0C06  0709               	addwf	9,w
  6416  0C07  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6417  0C08  0086               	movwf	6
  6418  0C09  3001               	movlw	1	; select bank3/4
  6419  0C0A  0087               	movwf	7
  6420  0C0B  3F40               	moviw [0]fsr1
  6421  0C0C  00F1               	movwf	USBStdGetStatusHandler@p
  6422  0C0D  3F41               	moviw [1]fsr1
  6423  0C0E  2C19               	goto	L5
  6424  0C0F                     i1l2870:	
  6425                           ;usb_device.c: 2166: }
  6426                           
  6427                           
  6428                           ;usb_device.c: 2167: else
  6429                           ;usb_device.c: 2168: {
  6430                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6431  0C0F  0854               	movf	84,w	;volatile
  6432  0C10  390F               	andlw	15
  6433  0C11  0709               	addwf	9,w
  6434  0C12  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6435  0C13  0086               	movwf	6
  6436  0C14  3001               	movlw	1	; select bank3/4
  6437  0C15  0087               	movwf	7
  6438  0C16  3F40               	moviw [0]fsr1
  6439  0C17  00F1               	movwf	USBStdGetStatusHandler@p
  6440  0C18  3F41               	moviw [1]fsr1
  6441  0C19                     L5:	
  6442  0C19  00F2               	movwf	USBStdGetStatusHandler@p+1
  6443                           
  6444                           ;usb_device.c: 2170: }
  6445                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6446  0C1A  0871               	movf	USBStdGetStatusHandler@p,w
  6447  0C1B  0086               	movwf	6
  6448  0C1C  0872               	movf	USBStdGetStatusHandler@p+1,w
  6449  0C1D  0087               	movwf	7
  6450  0C1E  1F81               	btfss	1,7
  6451  0C1F  2C37               	goto	i1l326
  6452  0C20  0871               	movf	USBStdGetStatusHandler@p,w
  6453  0C21  0086               	movwf	6
  6454  0C22  0872               	movf	USBStdGetStatusHandler@p+1,w
  6455  0C23  0087               	movwf	7
  6456  0C24  1D01               	btfss	1,2
  6457  0C25  2C37               	goto	i1l326
  6458                           
  6459                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6460  0C26  3001               	movlw	1
  6461  0C27  00F0               	movwf	??_USBStdGetStatusHandler
  6462  0C28  0870               	movf	??_USBStdGetStatusHandler,w
  6463  0C29  00D8               	movwf	88	;volatile
  6464                           
  6465                           ;usb_device.c: 2175: }
  6466                           ;usb_device.c: 2176: }
  6467                           
  6468                           ;usb_device.c: 2174: break;
  6469  0C2A  2C37               	goto	i1l326
  6470  0C2B                     i1l2880:	
  6471  0C2B  0850               	movf	80,w	;volatile
  6472  0C2C  391F               	andlw	31
  6473                           
  6474                           ; Switch size 1, requested type "space"
  6475                           ; Number of cases is 3, Range of values is 0 to 2
  6476                           ; switch strategies available:
  6477                           ; Name         Instructions Cycles
  6478                           ; simple_byte           10     6 (average)
  6479                           ; direct_byte           12     6 (fixed)
  6480                           ; jumptable            260     6 (fixed)
  6481                           ;	Chosen strategy is simple_byte
  6482  0C2D  3A00               	xorlw	0	; case 0
  6483  0C2E  1903               	skipnz
  6484  0C2F  2BF3               	goto	i1l323
  6485  0C30  3A01               	xorlw	1	; case 1
  6486  0C31  1903               	skipnz
  6487  0C32  2BFC               	goto	i1l327
  6488  0C33  3A03               	xorlw	3	; case 2
  6489  0C34  1903               	skipnz
  6490  0C35  2BFF               	goto	i1l328
  6491  0C36  2C37               	goto	i1l326
  6492  0C37                     i1l326:	
  6493                           
  6494                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6495  0C37  0023               	movlb	3	; select bank3
  6496  0C38  1FB5               	btfss	(_inPipes^(0+384)+2),7	;volatile
  6497  0C39  0008               	return
  6498                           
  6499                           ;usb_device.c: 2179: {
  6500                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6501  0C3A  3058               	movlw	88
  6502  0C3B  00B3               	movwf	_inPipes^(0+384)	;volatile
  6503  0C3C  3000               	movlw	0
  6504  0C3D  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6505                           
  6506                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6507  0C3E  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6508                           
  6509                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6510  0C3F  3002               	movlw	2
  6511  0C40  00F0               	movwf	??_USBStdGetStatusHandler
  6512  0C41  0870               	movf	??_USBStdGetStatusHandler,w
  6513  0C42  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6514  0C43  0008               	return
  6515  0C44                     __end_of_USBStdGetStatusHandler:	
  6516                           
  6517                           	psect	text28
  6518  0EFE                     __ptext28:	
  6519 ;; *************** function _USBStdGetDscHandler *****************
  6520 ;; Defined at:
  6521 ;;		line 2043 in file "../lib/usb/src/usb_device.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;		None               void
  6528 ;; Registers used:
  6529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;Total ram usage:        3 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_USBCheckStdRequest
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           
  6549                           ;psect for function _USBStdGetDscHandler
  6550  0EFE                     _USBStdGetDscHandler:	
  6551                           
  6552                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6553                           
  6554                           ;incstack = 0
  6555                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6556  0EFE  3080               	movlw	128
  6557  0EFF  0020               	movlb	0	; select bank0
  6558  0F00  0650               	xorwf	80,w	;volatile
  6559  0F01  1D03               	btfss	3,2
  6560  0F02  0008               	return
  6561                           
  6562                           ;usb_device.c: 2046: {
  6563                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6564  0F03  30C0               	movlw	192
  6565  0F04  00F0               	movwf	??_USBStdGetDscHandler
  6566  0F05  0870               	movf	??_USBStdGetDscHandler,w
  6567  0F06  0023               	movlb	3	; select bank3
  6568  0F07  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  6569                           
  6570                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6571  0F08  2F70               	goto	i1l2858
  6572  0F09                     i1l2832:	
  6573                           ;usb_device.c: 2050: {
  6574                           ;usb_device.c: 2051: case 0x01:
  6575                           
  6576                           
  6577                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6578  0F09  30CE               	movlw	low (_device_dsc| (0+32768))
  6579  0F0A  0023               	movlb	3	; select bank3
  6580  0F0B  00B3               	movwf	_inPipes^(0+384)	;volatile
  6581  0F0C  3083               	movlw	high (_device_dsc| (0+32768))
  6582  0F0D  00B4               	movwf	(_inPipes^(0+384)+1)	;volatile
  6583                           
  6584                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6585  0F0E  3000               	movlw	0
  6586  0F0F  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6587  0F10  3012               	movlw	18
  6588  0F11  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6589                           
  6590                           ;usb_device.c: 2058: break;
  6591  0F12  0008               	return
  6592  0F13                     i1l2836:	
  6593                           ;usb_device.c: 2059: case 0x02:
  6594                           
  6595                           
  6596                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6597  0F13  0020               	movlb	0	; select bank0
  6598  0F14  0852               	movf	82,w	;volatile
  6599  0F15  1D03               	btfss	3,2
  6600  0F16  2F46               	goto	i1l2844
  6601                           
  6602                           ;usb_device.c: 2064: {
  6603                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6604  0F17  0852               	movf	82,w	;volatile
  6605  0F18  00F0               	movwf	??_USBStdGetDscHandler
  6606  0F19  01F1               	clrf	??_USBStdGetDscHandler+1
  6607  0F1A  35F0               	lslf	??_USBStdGetDscHandler,f
  6608  0F1B  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6609  0F1C  3021               	movlw	low (_USB_CD_Ptr| (0+32768))
  6610  0F1D  0770               	addwf	??_USBStdGetDscHandler,w
  6611  0F1E  0084               	movwf	4
  6612  0F1F  3083               	movlw	high (_USB_CD_Ptr| (0+32768))
  6613  0F20  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6614  0F21  0085               	movwf	5
  6615  0F22  3F00               	moviw [0]fsr0
  6616  0F23  0023               	movlb	3	; select bank3
  6617  0F24  00B3               	movwf	_inPipes^(0+384)	;volatile
  6618  0F25  3F01               	moviw [1]fsr0
  6619  0F26  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6620                           
  6621                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6622  0F27  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6623  0F28  00F1               	movwf	??_USBStdGetDscHandler+1
  6624  0F29  0833               	movf	_inPipes^(0+384),w	;volatile
  6625  0F2A  00F0               	movwf	??_USBStdGetDscHandler
  6626  0F2B  3002               	movlw	2
  6627  0F2C  0770               	addwf	??_USBStdGetDscHandler,w
  6628  0F2D  0084               	movwf	4
  6629  0F2E  0871               	movf	??_USBStdGetDscHandler+1,w
  6630  0F2F  1803               	skipnc
  6631  0F30  0A71               	incf	??_USBStdGetDscHandler+1,w
  6632  0F31  0085               	movwf	5
  6633  0F32  0800               	movf	0,w	;code access
  6634  0F33  00F2               	movwf	??_USBStdGetDscHandler+2
  6635  0F34  0872               	movf	??_USBStdGetDscHandler+2,w
  6636  0F35  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6637                           
  6638                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6639  0F36  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6640  0F37  00F1               	movwf	??_USBStdGetDscHandler+1
  6641  0F38  0833               	movf	_inPipes^(0+384),w	;volatile
  6642  0F39  00F0               	movwf	??_USBStdGetDscHandler
  6643  0F3A  3003               	movlw	3
  6644  0F3B  0770               	addwf	??_USBStdGetDscHandler,w
  6645  0F3C  0084               	movwf	4
  6646  0F3D  0871               	movf	??_USBStdGetDscHandler+1,w
  6647  0F3E  1803               	skipnc
  6648  0F3F  0A71               	incf	??_USBStdGetDscHandler+1,w
  6649  0F40  0085               	movwf	5
  6650  0F41  0800               	movf	0,w	;code access
  6651  0F42  00F2               	movwf	??_USBStdGetDscHandler+2
  6652  0F43  0872               	movf	??_USBStdGetDscHandler+2,w
  6653  0F44  00B7               	movwf	(_inPipes^(0+384)+4)	;volatile
  6654                           
  6655                           ;usb_device.c: 2076: }
  6656  0F45  0008               	return
  6657  0F46                     i1l2844:	
  6658                           
  6659                           ;usb_device.c: 2077: else
  6660                           ;usb_device.c: 2078: {
  6661                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6662  0F46  0023               	movlb	3	; select bank3
  6663  0F47  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6664                           
  6665                           ;usb_device.c: 2080: }
  6666                           ;usb_device.c: 2081: break;
  6667  0F48  0008               	return
  6668  0F49                     i1l2846:	
  6669                           ;usb_device.c: 2082: case 0x03:
  6670                           
  6671                           
  6672                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6673  0F49  3003               	movlw	3
  6674  0F4A  0020               	movlb	0	; select bank0
  6675  0F4B  0252               	subwf	82,w	;volatile
  6676  0F4C  1803               	skipnc
  6677  0F4D  2F6A               	goto	i1l2852
  6678                           
  6679                           ;usb_device.c: 2087: {
  6680                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6681  0F4E  0852               	movf	82,w	;volatile
  6682  0F4F  00F0               	movwf	??_USBStdGetDscHandler
  6683  0F50  01F1               	clrf	??_USBStdGetDscHandler+1
  6684  0F51  35F0               	lslf	??_USBStdGetDscHandler,f
  6685  0F52  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6686  0F53  301B               	movlw	low (_USB_SD_Ptr| (0+32768))
  6687  0F54  0770               	addwf	??_USBStdGetDscHandler,w
  6688  0F55  0084               	movwf	4
  6689  0F56  3083               	movlw	high (_USB_SD_Ptr| (0+32768))
  6690  0F57  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6691  0F58  0085               	movwf	5
  6692  0F59  3F00               	moviw [0]fsr0
  6693  0F5A  0023               	movlb	3	; select bank3
  6694  0F5B  00B3               	movwf	_inPipes^(0+384)	;volatile
  6695  0F5C  3F01               	moviw [1]fsr0
  6696  0F5D  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6697                           
  6698                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6699  0F5E  0833               	movf	_inPipes^(0+384),w	;volatile
  6700  0F5F  0084               	movwf	4
  6701  0F60  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6702  0F61  0085               	movwf	5
  6703  0F62  0800               	movf	0,w	;code access
  6704  0F63  00F0               	movwf	??_USBStdGetDscHandler
  6705  0F64  01F1               	clrf	??_USBStdGetDscHandler+1
  6706  0F65  0870               	movf	??_USBStdGetDscHandler,w
  6707  0F66  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6708  0F67  0871               	movf	??_USBStdGetDscHandler+1,w
  6709  0F68  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6710                           
  6711                           ;usb_device.c: 2092: }
  6712  0F69  0008               	return
  6713  0F6A                     i1l2852:	
  6714                           
  6715                           ;usb_device.c: 2102: else
  6716                           ;usb_device.c: 2103: {
  6717                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6718  0F6A  0023               	movlb	3	; select bank3
  6719  0F6B  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6720                           
  6721                           ;usb_device.c: 2105: }
  6722                           ;usb_device.c: 2106: break;
  6723  0F6C  0008               	return
  6724  0F6D                     i1l2854:	
  6725                           ;usb_device.c: 2107: default:
  6726                           
  6727                           
  6728                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6729  0F6D  0023               	movlb	3	; select bank3
  6730  0F6E  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6731                           
  6732                           ;usb_device.c: 2110: }
  6733                           
  6734                           ;usb_device.c: 2109: break;
  6735  0F6F  0008               	return
  6736  0F70                     i1l2858:	
  6737  0F70  0020               	movlb	0	; select bank0
  6738  0F71  0853               	movf	83,w	;volatile
  6739                           
  6740                           ; Switch size 1, requested type "space"
  6741                           ; Number of cases is 3, Range of values is 1 to 3
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte           10     6 (average)
  6745                           ; direct_byte           15     9 (fixed)
  6746                           ; jumptable            263     9 (fixed)
  6747                           ;	Chosen strategy is simple_byte
  6748  0F72  3A01               	xorlw	1	; case 1
  6749  0F73  1903               	skipnz
  6750  0F74  2F09               	goto	i1l2832
  6751  0F75  3A03               	xorlw	3	; case 2
  6752  0F76  1903               	skipnz
  6753  0F77  2F13               	goto	i1l2836
  6754  0F78  3A01               	xorlw	1	; case 3
  6755  0F79  1903               	skipnz
  6756  0F7A  2F49               	goto	i1l2846
  6757  0F7B  2F6D               	goto	i1l2854
  6758  0F7C  0008               	return
  6759  0F7D                     __end_of_USBStdGetDscHandler:	
  6760                           
  6761                           	psect	text29
  6762  003E                     __ptext29:	
  6763 ;; *************** function _USBStdFeatureReqHandler *****************
  6764 ;; Defined at:
  6765 ;;		line 2754 in file "../lib/usb/src/usb_device.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;		None
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  p               2   11[BANK0 ] PTR struct __BDT
  6770 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6771 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  6772 ;;		 -> UEP0(1), 
  6773 ;;  current_ep_d    1   10[BANK0 ] struct .
  6774 ;; Return value:  Size  Location     Type
  6775 ;;		None               void
  6776 ;; Registers used:
  6777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;Total ram usage:        7 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    4
  6790 ;; This function calls:
  6791 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6792 ;; This function is called by:
  6793 ;;		_USBCheckStdRequest
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function _USBStdFeatureReqHandler
  6799  003E                     _USBStdFeatureReqHandler:	
  6800                           
  6801                           ;usb_device.c: 2756: BDT_ENTRY *p;
  6802                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  6803                           ;usb_device.c: 2761: unsigned char* pUEP;
  6804                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  6805                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  6806                           
  6807                           ;incstack = 0
  6808                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6809  003E  0020               	movlb	0	; select bank0
  6810  003F  0352               	decf	82,w	;volatile
  6811  0040  1D03               	btfss	3,2
  6812  0041  2856               	goto	i1l2900
  6813  0042  0850               	movf	80,w	;volatile
  6814  0043  391F               	andlw	31
  6815  0044  3A00               	xorlw	0
  6816  0045  1D03               	skipz
  6817  0046  2856               	goto	i1l2900
  6818                           
  6819                           ;usb_device.c: 2801: {
  6820                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  6821  0047  0023               	movlb	3	; select bank3
  6822  0048  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6823                           
  6824                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  6825  0049  3003               	movlw	3
  6826  004A  0020               	movlb	0	; select bank0
  6827  004B  0651               	xorwf	81,w	;volatile
  6828  004C  1D03               	btfss	3,2
  6829  004D  2854               	goto	i1l2898
  6830                           
  6831                           ;usb_device.c: 2804: RemoteWakeup = 1;
  6832  004E  3001               	movlw	1
  6833  004F  00E6               	movwf	??_USBStdFeatureReqHandler
  6834  0050  0866               	movf	??_USBStdFeatureReqHandler,w
  6835  0051  0023               	movlb	3	; select bank3
  6836  0052  00CF               	movwf	_RemoteWakeup^(0+384)	;volatile
  6837  0053  2856               	goto	i1l2900
  6838  0054                     i1l2898:	
  6839                           
  6840                           ;usb_device.c: 2805: else
  6841                           ;usb_device.c: 2806: RemoteWakeup = 0;
  6842  0054  0023               	movlb	3	; select bank3
  6843  0055  01CF               	clrf	_RemoteWakeup^(0+384)	;volatile
  6844  0056                     i1l2900:	
  6845                           
  6846                           ;usb_device.c: 2807: }
  6847                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  6848                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  6849                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6850                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  6851  0056  0020               	movlb	0	; select bank0
  6852  0057  0852               	movf	82,w	;volatile
  6853  0058  1D03               	btfss	3,2
  6854  0059  0008               	return
  6855  005A  0850               	movf	80,w	;volatile
  6856  005B  391F               	andlw	31
  6857  005C  3A02               	xorlw	2
  6858  005D  1D03               	skipz
  6859  005E  0008               	return
  6860  005F  0854               	movf	84,w	;volatile
  6861  0060  390F               	andlw	15
  6862  0061  3A00               	xorlw	0
  6863  0062  1903               	skipnz
  6864  0063  0008               	return
  6865  0064  0854               	movf	84,w	;volatile
  6866  0065  390F               	andlw	15
  6867  0066  00E6               	movwf	??_USBStdFeatureReqHandler
  6868  0067  3003               	movlw	3
  6869  0068  0266               	subwf	??_USBStdFeatureReqHandler,w
  6870  0069  1803               	skipnc
  6871  006A  0008               	return
  6872  006B  3020               	movlw	32
  6873  006C  0021               	movlb	1	; select bank1
  6874  006D  0662               	xorwf	_USBDeviceState^(0+128),w	;volatile
  6875  006E  1D03               	btfss	3,2
  6876  006F  0008               	return
  6877                           
  6878                           ;usb_device.c: 2814: {
  6879                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  6880  0070  0023               	movlb	3	; select bank3
  6881  0071  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6882                           
  6883                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  6884  0072  0020               	movlb	0	; select bank0
  6885  0073  1BD4               	btfsc	84,7	;volatile
  6886  0074  2884               	goto	i1l2914
  6887                           
  6888                           ;usb_device.c: 2821: {
  6889                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6890  0075  0854               	movf	84,w	;volatile
  6891  0076  390F               	andlw	15
  6892  0077  0709               	addwf	9,w
  6893  0078  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6894  0079  0086               	movwf	6
  6895  007A  3001               	movlw	1	; select bank3/4
  6896  007B  0087               	movwf	7
  6897  007C  3F40               	moviw [0]fsr1
  6898  007D  00EB               	movwf	USBStdFeatureReqHandler@p
  6899  007E  3F41               	moviw [1]fsr1
  6900  007F  00EC               	movwf	USBStdFeatureReqHandler@p+1
  6901                           
  6902                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6903  0080  0854               	movf	84,w	;volatile
  6904  0081  390F               	andlw	15
  6905  0082  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6906  0083  2892               	goto	L6
  6907  0084                     i1l2914:	
  6908                           ;usb_device.c: 2824: }
  6909                           
  6910                           
  6911                           ;usb_device.c: 2825: else
  6912                           ;usb_device.c: 2826: {
  6913                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6914  0084  0854               	movf	84,w	;volatile
  6915  0085  390F               	andlw	15
  6916  0086  0709               	addwf	9,w
  6917  0087  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6918  0088  0086               	movwf	6
  6919  0089  3001               	movlw	1	; select bank3/4
  6920  008A  0087               	movwf	7
  6921  008B  3F40               	moviw [0]fsr1
  6922  008C  00EB               	movwf	USBStdFeatureReqHandler@p
  6923  008D  3F41               	moviw [1]fsr1
  6924  008E  00EC               	movwf	USBStdFeatureReqHandler@p+1
  6925                           
  6926                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6927  008F  0854               	movf	84,w	;volatile
  6928  0090  390F               	andlw	15
  6929  0091  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6930  0092                     L6:	
  6931  0092  0086               	movwf	6
  6932  0093  3001               	movlw	1	; select bank3/4
  6933  0094  0087               	movwf	7
  6934  0095  0801               	movf	1,w
  6935  0096  00E6               	movwf	??_USBStdFeatureReqHandler
  6936  0097  0866               	movf	??_USBStdFeatureReqHandler,w
  6937  0098  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data
  6938                           
  6939                           ;usb_device.c: 2829: }
  6940                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  6941  0099  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6942  009A  28A5               	goto	i1l2920
  6943                           
  6944                           ;usb_device.c: 2836: {
  6945                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  6946  009B  30FB               	movlw	251
  6947  009C  00E6               	movwf	??_USBStdFeatureReqHandler
  6948  009D  30FF               	movlw	255
  6949  009E  00E7               	movwf	??_USBStdFeatureReqHandler+1
  6950  009F  086B               	movf	USBStdFeatureReqHandler@p,w
  6951  00A0  0566               	andwf	??_USBStdFeatureReqHandler,w
  6952  00A1  00EB               	movwf	USBStdFeatureReqHandler@p
  6953  00A2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6954  00A3  0567               	andwf	??_USBStdFeatureReqHandler+1,w
  6955  00A4  28AA               	goto	L7
  6956  00A5                     i1l2920:	
  6957                           ;usb_device.c: 2838: }
  6958                           
  6959                           
  6960                           ;usb_device.c: 2839: else
  6961                           ;usb_device.c: 2840: {
  6962                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  6963  00A5  3004               	movlw	4
  6964  00A6  046B               	iorwf	USBStdFeatureReqHandler@p,w
  6965  00A7  00EB               	movwf	USBStdFeatureReqHandler@p
  6966  00A8  3000               	movlw	0
  6967  00A9  046C               	iorwf	USBStdFeatureReqHandler@p+1,w
  6968  00AA                     L7:	
  6969  00AA  00EC               	movwf	USBStdFeatureReqHandler@p+1
  6970                           
  6971                           ;usb_device.c: 2842: }
  6972                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  6973  00AB  1BD4               	btfsc	84,7	;volatile
  6974  00AC  28B9               	goto	i1l2926
  6975                           
  6976                           ;usb_device.c: 2848: {
  6977                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6978  00AD  0854               	movf	84,w	;volatile
  6979  00AE  390F               	andlw	15
  6980  00AF  0709               	addwf	9,w
  6981  00B0  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6982  00B1  0086               	movwf	6
  6983  00B2  3001               	movlw	1	; select bank3/4
  6984  00B3  0087               	movwf	7
  6985  00B4  086B               	movf	USBStdFeatureReqHandler@p,w
  6986  00B5  3FC0               	movwi [0]fsr1
  6987  00B6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6988  00B7  3FC1               	movwi [1]fsr1
  6989                           
  6990                           ;usb_device.c: 2850: }
  6991  00B8  28C4               	goto	i1l2928
  6992  00B9                     i1l2926:	
  6993                           
  6994                           ;usb_device.c: 2851: else
  6995                           ;usb_device.c: 2852: {
  6996                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6997  00B9  0854               	movf	84,w	;volatile
  6998  00BA  390F               	andlw	15
  6999  00BB  0709               	addwf	9,w
  7000  00BC  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7001  00BD  0086               	movwf	6
  7002  00BE  3001               	movlw	1	; select bank3/4
  7003  00BF  0087               	movwf	7
  7004  00C0  086B               	movf	USBStdFeatureReqHandler@p,w
  7005  00C1  3FC0               	movwi [0]fsr1
  7006  00C2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7007  00C3  3FC1               	movwi [1]fsr1
  7008  00C4                     i1l2928:	
  7009                           
  7010                           ;usb_device.c: 2854: }
  7011                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7012  00C4  3003               	movlw	3
  7013  00C5  0651               	xorwf	81,w	;volatile
  7014  00C6  1D03               	btfss	3,2
  7015  00C7  28E6               	goto	i1l2942
  7016                           
  7017                           ;usb_device.c: 2858: {
  7018                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7019  00C8  086B               	movf	USBStdFeatureReqHandler@p,w
  7020  00C9  0086               	movwf	6
  7021  00CA  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7022  00CB  0087               	movwf	7
  7023  00CC  1F81               	btfss	1,7
  7024  00CD  28DB               	goto	i1l2938
  7025                           
  7026                           ;usb_device.c: 2860: {
  7027                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7028  00CE  1BD4               	btfsc	84,7	;volatile
  7029  00CF  28D4               	goto	i1l2936
  7030                           
  7031                           ;usb_device.c: 2864: {
  7032                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7033  00D0  0854               	movf	84,w	;volatile
  7034  00D1  390F               	andlw	15
  7035  00D2  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7036  00D3  28D7               	goto	L8
  7037  00D4                     i1l2936:	
  7038                           ;usb_device.c: 2866: }
  7039                           
  7040                           
  7041                           ;usb_device.c: 2867: else
  7042                           ;usb_device.c: 2868: {
  7043                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7044  00D4  0854               	movf	84,w	;volatile
  7045  00D5  390F               	andlw	15
  7046  00D6  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7047  00D7                     L8:	
  7048  00D7  0086               	movwf	6
  7049  00D8  3001               	movlw	1	; select bank3/4
  7050  00D9  0087               	movwf	7
  7051  00DA  1481               	bsf	1,1
  7052  00DB                     i1l2938:	
  7053                           
  7054                           ;usb_device.c: 2870: }
  7055                           ;usb_device.c: 2871: }
  7056                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7057  00DB  086B               	movf	USBStdFeatureReqHandler@p,w
  7058  00DC  0086               	movwf	6
  7059  00DD  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7060  00DE  0087               	movwf	7
  7061  00DF  1501               	bsf	1,2
  7062                           
  7063                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7064  00E0  086B               	movf	USBStdFeatureReqHandler@p,w
  7065  00E1  0086               	movwf	6
  7066  00E2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7067  00E3  0087               	movwf	7
  7068  00E4  1781               	bsf	1,7
  7069                           
  7070                           ;usb_device.c: 2876: }
  7071  00E5  0008               	return
  7072  00E6                     i1l2942:	
  7073                           
  7074                           ;usb_device.c: 2877: else
  7075                           ;usb_device.c: 2878: {
  7076                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7077  00E6  3004               	movlw	4
  7078  00E7  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7079  00E8  00EB               	movwf	USBStdFeatureReqHandler@p
  7080  00E9  3000               	movlw	0
  7081  00EA  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7082  00EB  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7083                           
  7084                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7085  00EC  086B               	movf	USBStdFeatureReqHandler@p,w
  7086  00ED  0086               	movwf	6
  7087  00EE  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7088  00EF  0087               	movwf	7
  7089  00F0  1F81               	btfss	1,7
  7090  00F1  290F               	goto	i1l2952
  7091                           
  7092                           ;usb_device.c: 2885: {
  7093                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7094  00F2  307F               	movlw	127
  7095  00F3  00E6               	movwf	??_USBStdFeatureReqHandler
  7096  00F4  086B               	movf	USBStdFeatureReqHandler@p,w
  7097  00F5  0086               	movwf	6
  7098  00F6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7099  00F7  0087               	movwf	7
  7100  00F8  0866               	movf	??_USBStdFeatureReqHandler,w
  7101  00F9  0581               	andwf	1,f
  7102                           
  7103                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7104  00FA  086B               	movf	USBStdFeatureReqHandler@p,w
  7105  00FB  0086               	movwf	6
  7106  00FC  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7107  00FD  0087               	movwf	7
  7108  00FE  1701               	bsf	1,6
  7109                           
  7110                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7111  00FF  3000               	movlw	0
  7112  0100  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7113  0101  3005               	movlw	5
  7114  0102  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7115  0103  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7116  0104  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7117  0105  086B               	movf	USBStdFeatureReqHandler@p,w
  7118  0106  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7119  0107  3002               	movlw	2
  7120  0108  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7121  0109  3000               	movlw	0
  7122  010A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7123  010B  318A  224E  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7124                           
  7125                           ;usb_device.c: 2891: }
  7126  010E  2915               	goto	i1l2954
  7127  010F                     i1l2952:	
  7128                           
  7129                           ;usb_device.c: 2892: else
  7130                           ;usb_device.c: 2893: {
  7131                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7132  010F  0020               	movlb	0	; select bank0
  7133  0110  086B               	movf	USBStdFeatureReqHandler@p,w
  7134  0111  0086               	movwf	6
  7135  0112  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7136  0113  0087               	movwf	7
  7137  0114  1701               	bsf	1,6
  7138  0115                     i1l2954:	
  7139                           
  7140                           ;usb_device.c: 2896: }
  7141                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7142  0115  3004               	movlw	4
  7143  0116  0020               	movlb	0	; select bank0
  7144  0117  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7145  0118  00EB               	movwf	USBStdFeatureReqHandler@p
  7146  0119  3000               	movlw	0
  7147  011A  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7148  011B  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7149                           
  7150                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7151  011C  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7152  011D  2924               	goto	i1l419
  7153  011E  086B               	movf	USBStdFeatureReqHandler@p,w
  7154  011F  0086               	movwf	6
  7155  0120  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7156  0121  0087               	movwf	7
  7157  0122  1F81               	btfss	1,7
  7158  0123  2949               	goto	i1l2966
  7159  0124                     i1l419:	
  7160                           
  7161                           ;usb_device.c: 2907: {
  7162                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7163  0124  1BD4               	btfsc	84,7	;volatile
  7164  0125  292A               	goto	i1l2962
  7165                           
  7166                           ;usb_device.c: 2909: {
  7167                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7168  0126  0854               	movf	84,w	;volatile
  7169  0127  390F               	andlw	15
  7170  0128  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7171  0129  292D               	goto	L9
  7172  012A                     i1l2962:	
  7173                           ;usb_device.c: 2911: }
  7174                           
  7175                           
  7176                           ;usb_device.c: 2912: else
  7177                           ;usb_device.c: 2913: {
  7178                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7179  012A  0854               	movf	84,w	;volatile
  7180  012B  390F               	andlw	15
  7181  012C  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7182  012D                     L9:	
  7183  012D  0086               	movwf	6
  7184  012E  3001               	movlw	1	; select bank3/4
  7185  012F  0087               	movwf	7
  7186  0130  1081               	bcf	1,1
  7187                           
  7188                           ;usb_device.c: 2915: }
  7189                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7190  0131  303B               	movlw	59
  7191  0132  00E6               	movwf	??_USBStdFeatureReqHandler
  7192  0133  086B               	movf	USBStdFeatureReqHandler@p,w
  7193  0134  0086               	movwf	6
  7194  0135  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7195  0136  0087               	movwf	7
  7196  0137  0866               	movf	??_USBStdFeatureReqHandler,w
  7197  0138  0581               	andwf	1,f
  7198                           
  7199                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7200  0139  3000               	movlw	0
  7201  013A  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7202  013B  3005               	movlw	5
  7203  013C  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7204  013D  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7205  013E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7206  013F  086B               	movf	USBStdFeatureReqHandler@p,w
  7207  0140  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7208  0141  3002               	movlw	2
  7209  0142  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7210  0143  3000               	movlw	0
  7211  0144  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7212  0145  318A  224E  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7213                           
  7214                           ;usb_device.c: 2921: }
  7215  0148  2952               	goto	i1l2968
  7216  0149                     i1l2966:	
  7217                           
  7218                           ;usb_device.c: 2922: else
  7219                           ;usb_device.c: 2923: {
  7220                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7221  0149  303B               	movlw	59
  7222  014A  0020               	movlb	0	; select bank0
  7223  014B  00E6               	movwf	??_USBStdFeatureReqHandler
  7224  014C  086B               	movf	USBStdFeatureReqHandler@p,w
  7225  014D  0086               	movwf	6
  7226  014E  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7227  014F  0087               	movwf	7
  7228  0150  0866               	movf	??_USBStdFeatureReqHandler,w
  7229  0151  0581               	andwf	1,f
  7230  0152                     i1l2968:	
  7231                           
  7232                           ;usb_device.c: 2926: }
  7233                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7234  0152  0020               	movlb	0	; select bank0
  7235  0153  0854               	movf	84,w	;volatile
  7236  0154  390F               	andlw	15
  7237  0155  3E98               	addlw	152
  7238  0156  00E6               	movwf	??_USBStdFeatureReqHandler
  7239  0157  01E7               	clrf	??_USBStdFeatureReqHandler+1
  7240  0158  300E               	movlw	14
  7241  0159  3DE7               	addwfc	??_USBStdFeatureReqHandler+1,f
  7242  015A  0866               	movf	??_USBStdFeatureReqHandler,w
  7243  015B  00E8               	movwf	USBStdFeatureReqHandler@pUEP
  7244  015C  0867               	movf	??_USBStdFeatureReqHandler+1,w
  7245  015D  00E9               	movwf	USBStdFeatureReqHandler@pUEP+1
  7246                           
  7247                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7248  015E  30FE               	movlw	254
  7249  015F  00E6               	movwf	??_USBStdFeatureReqHandler
  7250  0160  0868               	movf	USBStdFeatureReqHandler@pUEP,w
  7251  0161  0086               	movwf	6
  7252  0162  0869               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7253  0163  0087               	movwf	7
  7254  0164  0866               	movf	??_USBStdFeatureReqHandler,w
  7255  0165  0581               	andwf	1,f
  7256  0166  0008               	return
  7257  0167                     __end_of_USBStdFeatureReqHandler:	
  7258                           
  7259                           	psect	text30
  7260  0A4E                     __ptext30:	
  7261 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7262 ;; Defined at:
  7263 ;;		line 51 in file "../src/usb_events.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  event           2    0[BANK0 ] enum E2658
  7266 ;;  pdata           2    2[BANK0 ] PTR void 
  7267 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7268 ;;		 -> BDT(48), 
  7269 ;;  size            2    4[BANK0 ] unsigned int 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      unsigned char 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7281 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;Total ram usage:        6 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    3
  7288 ;; This function calls:
  7289 ;;		_USBCheckCDCRequest
  7290 ;;		i1_CDCInitEP
  7291 ;;		i1_SYSTEM_Initialize
  7292 ;; This function is called by:
  7293 ;;		_USBDeviceTasks
  7294 ;;		_USBStdSetCfgHandler
  7295 ;;		_USBSuspend
  7296 ;;		_USBWakeFromSuspend
  7297 ;;		_USBCtrlTrfSetupHandler
  7298 ;;		_USBCheckStdRequest
  7299 ;;		_USBStdFeatureReqHandler
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7305  0A4E                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7306                           
  7307                           ;usb_events.c: 53: switch( (int) event )
  7308                           
  7309                           ;incstack = 0
  7310                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7311  0A4E  2A5D               	goto	i1l2658
  7312  0A4F                     i1l2648:	
  7313                           ;usb_events.c: 64: case EVENT_SUSPEND:
  7314                           
  7315                           ;usb_events.c: 62: break;
  7316                           
  7317                           ;usb_events.c: 58: case EVENT_SOF:
  7318                           
  7319                           ;usb_events.c: 56: break;
  7320                           
  7321                           ;usb_events.c: 54: {
  7322                           ;usb_events.c: 55: case EVENT_TRANSFER:
  7323                           
  7324                           
  7325                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7326  0A4F  3001               	movlw	1
  7327  0A50  3188  20A5         	fcall	i1_SYSTEM_Initialize
  7328                           
  7329                           ;usb_events.c: 75: break;
  7330  0A52  0008               	return
  7331  0A53                     i1l2650:	
  7332                           ;usb_events.c: 77: case EVENT_RESUME:
  7333                           
  7334                           
  7335                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7336  0A53  3002               	movlw	2
  7337  0A54  3188  20A5         	fcall	i1_SYSTEM_Initialize
  7338                           
  7339                           ;usb_events.c: 86: break;
  7340  0A56  0008               	return
  7341  0A57                     i1l2652:	
  7342                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  7343                           
  7344                           
  7345                           ;usb_events.c: 91: CDCInitEP();
  7346  0A57  3189  21E2         	fcall	i1_CDCInitEP
  7347                           
  7348                           ;usb_events.c: 96: break;
  7349                           
  7350                           ;usb_events.c: 95: case EVENT_SET_DESCRIPTOR:
  7351                           
  7352                           ;usb_events.c: 93: break;
  7353  0A59  0008               	return
  7354  0A5A                     i1l2654:	
  7355                           ;usb_events.c: 98: case EVENT_EP0_REQUEST:
  7356                           
  7357                           
  7358                           ;usb_events.c: 101: USBCheckCDCRequest();
  7359  0A5A  318C  24FB         	fcall	_USBCheckCDCRequest
  7360                           
  7361                           ;usb_events.c: 112: }
  7362                           
  7363                           ;usb_events.c: 111: break;
  7364                           
  7365                           ;usb_events.c: 110: default:
  7366                           
  7367                           ;usb_events.c: 108: break;
  7368                           
  7369                           ;usb_events.c: 107: case EVENT_TRANSFER_TERMINATED:
  7370                           
  7371                           ;usb_events.c: 105: break;
  7372                           
  7373                           ;usb_events.c: 104: case EVENT_BUS_ERROR:
  7374                           
  7375                           ;usb_events.c: 102: break;
  7376  0A5C  0008               	return
  7377  0A5D                     i1l2658:	
  7378                           
  7379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7380                           ; Switch size 1, requested type "space"
  7381                           ; Number of cases is 2, Range of values is 0 to 127
  7382                           ; switch strategies available:
  7383                           ; Name         Instructions Cycles
  7384                           ; simple_byte            7     4 (average)
  7385                           ; direct_byte          262     6 (fixed)
  7386                           ; jumptable            260     6 (fixed)
  7387                           ;	Chosen strategy is simple_byte
  7388  0A5D  0020               	movlb	0	; select bank0
  7389  0A5E  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7390  0A5F  3A00               	xorlw	0	; case 0
  7391  0A60  1903               	skipnz
  7392  0A61  2A66               	goto	i1l4388
  7393  0A62  3A7F               	xorlw	127	; case 127
  7394  0A63  1903               	skipnz
  7395  0A64  2A80               	goto	i1l4390
  7396  0A65  2A85               	goto	i1l35
  7397  0A66                     i1l4388:	
  7398                           
  7399                           ; Switch size 1, requested type "space"
  7400                           ; Number of cases is 8, Range of values is 1 to 117
  7401                           ; switch strategies available:
  7402                           ; Name         Instructions Cycles
  7403                           ; simple_byte           25    13 (average)
  7404                           ; direct_byte          243     9 (fixed)
  7405                           ; jumptable            263     9 (fixed)
  7406                           ;	Chosen strategy is simple_byte
  7407  0A66  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7408  0A67  3A01               	xorlw	1	; case 1
  7409  0A68  1903               	skipnz
  7410  0A69  2A57               	goto	i1l2652
  7411  0A6A  3A03               	xorlw	3	; case 2
  7412  0A6B  1903               	skipnz
  7413  0A6C  2A85               	goto	i1l35
  7414  0A6D  3A01               	xorlw	1	; case 3
  7415  0A6E  1903               	skipnz
  7416  0A6F  2A5A               	goto	i1l2654
  7417  0A70  3A06               	xorlw	6	; case 5
  7418  0A71  1903               	skipnz
  7419  0A72  2A85               	goto	i1l35
  7420  0A73  3A77               	xorlw	119	; case 114
  7421  0A74  1903               	skipnz
  7422  0A75  2A85               	goto	i1l35
  7423  0A76  3A01               	xorlw	1	; case 115
  7424  0A77  1903               	skipnz
  7425  0A78  2A85               	goto	i1l35
  7426  0A79  3A07               	xorlw	7	; case 116
  7427  0A7A  1903               	skipnz
  7428  0A7B  2A53               	goto	i1l2650
  7429  0A7C  3A01               	xorlw	1	; case 117
  7430  0A7D  1903               	skipnz
  7431  0A7E  2A4F               	goto	i1l2648
  7432  0A7F  2A85               	goto	i1l35
  7433  0A80                     i1l4390:	
  7434                           
  7435                           ; Switch size 1, requested type "space"
  7436                           ; Number of cases is 1, Range of values is 255 to 255
  7437                           ; switch strategies available:
  7438                           ; Name         Instructions Cycles
  7439                           ; simple_byte            4     3 (average)
  7440                           ; direct_byte            7     5 (fixed)
  7441                           ; jumptable            263     9 (fixed)
  7442                           ;	Chosen strategy is simple_byte
  7443  0A80  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7444  0A81  3AFF               	xorlw	255	; case 255
  7445  0A82  1903               	skipnz
  7446  0A83  2A85               	goto	i1l35
  7447  0A84  2A85               	goto	i1l35
  7448  0A85                     i1l35:	
  7449                           ;usb_events.c: 113: return 1;
  7450                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7451                           
  7452  0A85  0008               	return
  7453  0A86                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7454                           
  7455                           	psect	text31
  7456  08A5                     __ptext31:	
  7457 ;; *************** function i1_SYSTEM_Initialize *****************
  7458 ;; Defined at:
  7459 ;;		line 82 in file "system.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  state           1    wreg     enum E2613
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  state           1    0[COMMON] enum E2613
  7464 ;; Return value:  Size  Location     Type
  7465 ;;		None               void
  7466 ;; Registers used:
  7467 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;Total ram usage:        1 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           
  7487                           ;psect for function i1_SYSTEM_Initialize
  7488  08A5                     i1_SYSTEM_Initialize:	
  7489                           
  7490                           ;incstack = 0
  7491                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  7492                           ;i1SYSTEM_Initialize@state stored from wreg
  7493  08A5  00F0               	movwf	i1SYSTEM_Initialize@state
  7494                           
  7495                           ;system.c: 84: switch(state)
  7496  08A6  28AE               	goto	i1l2644
  7497  08A7                     i1l2640:	
  7498                           ;system.c: 85: {
  7499                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  7500                           
  7501                           
  7502                           ;system.c: 90: OSCCON = 0xFC;
  7503  08A7  30FC               	movlw	252
  7504  08A8  0021               	movlb	1	; select bank1
  7505  08A9  0099               	movwf	25	;volatile
  7506                           
  7507                           ;system.c: 91: ACTCON = 0x90;
  7508  08AA  3090               	movlw	144
  7509  08AB  0027               	movlb	7	; select bank7
  7510  08AC  009B               	movwf	27	;volatile
  7511                           
  7512                           ;system.c: 102: }
  7513                           
  7514                           ;system.c: 101: break;
  7515                           
  7516                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  7517                           
  7518                           ;system.c: 98: break;
  7519                           
  7520                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  7521                           
  7522                           ;system.c: 95: break;
  7523  08AD  0008               	return
  7524  08AE                     i1l2644:	
  7525  08AE  0870               	movf	i1SYSTEM_Initialize@state,w
  7526                           
  7527                           ; Switch size 1, requested type "space"
  7528                           ; Number of cases is 3, Range of values is 0 to 2
  7529                           ; switch strategies available:
  7530                           ; Name         Instructions Cycles
  7531                           ; simple_byte           10     6 (average)
  7532                           ; direct_byte           12     6 (fixed)
  7533                           ; jumptable            260     6 (fixed)
  7534                           ;	Chosen strategy is simple_byte
  7535  08AF  3A00               	xorlw	0	; case 0
  7536  08B0  1903               	skipnz
  7537  08B1  28A7               	goto	i1l2640
  7538  08B2  3A01               	xorlw	1	; case 1
  7539  08B3  1903               	skipnz
  7540  08B4  28B9               	goto	i1l565
  7541  08B5  3A03               	xorlw	3	; case 2
  7542  08B6  1903               	skipnz
  7543  08B7  28B9               	goto	i1l565
  7544  08B8  28B9               	goto	i1l565
  7545  08B9                     i1l565:	
  7546  08B9  0008               	return
  7547  08BA                     __end_ofi1_SYSTEM_Initialize:	
  7548                           
  7549                           	psect	text32
  7550  09E2                     __ptext32:	
  7551 ;; *************** function i1_CDCInitEP *****************
  7552 ;; Defined at:
  7553 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;		None
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;		None               void
  7560 ;; Registers used:
  7561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;Total ram usage:        1 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; Hardware stack levels required when called:    2
  7574 ;; This function calls:
  7575 ;;		i1_USBEnableEndpoint
  7576 ;;		i1_USBTransferOnePacket
  7577 ;; This function is called by:
  7578 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function i1_CDCInitEP
  7584  09E2                     i1_CDCInitEP:	
  7585                           
  7586                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7590  09E2  3000               	movlw	0
  7591  09E3  0023               	movlb	3	; select bank3
  7592  09E4  00E3               	movwf	(_line_coding+3)^(0+384)
  7593  09E5  3000               	movlw	0
  7594  09E6  00E2               	movwf	(_line_coding+2)^(0+384)
  7595  09E7  304B               	movlw	75
  7596  09E8  00E1               	movwf	(_line_coding+1)^(0+384)
  7597  09E9  3000               	movlw	0
  7598  09EA  00E0               	movwf	_line_coding^(0+384)
  7599                           
  7600                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  7601  09EB  01E4               	clrf	(_line_coding^(0+384)+4)
  7602                           
  7603                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  7604  09EC  01E5               	clrf	(_line_coding^(0+384)+5)
  7605                           
  7606                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  7607  09ED  3008               	movlw	8
  7608  09EE  00FD               	movwf	??i1_CDCInitEP
  7609  09EF  087D               	movf	??i1_CDCInitEP,w
  7610  09F0  00E6               	movwf	(_line_coding^(0+384)+6)
  7611                           
  7612                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  7613  09F1  01D9               	clrf	_cdc_rx_len^(0+384)
  7614                           
  7615                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  7616  09F2  301A               	movlw	26
  7617  09F3  00FD               	movwf	??i1_CDCInitEP
  7618  09F4  087D               	movf	??i1_CDCInitEP,w
  7619  09F5  00F7               	movwf	i1USBEnableEndpoint@options
  7620  09F6  3001               	movlw	1
  7621  09F7  3189  2158  3189   	fcall	i1_USBEnableEndpoint
  7622                           
  7623                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7624  09FA  301E               	movlw	30
  7625  09FB  00FD               	movwf	??i1_CDCInitEP
  7626  09FC  087D               	movf	??i1_CDCInitEP,w
  7627  09FD  00F7               	movwf	i1USBEnableEndpoint@options
  7628  09FE  3002               	movlw	2
  7629  09FF  3189  2158  3189   	fcall	i1_USBEnableEndpoint
  7630                           
  7631                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7632  0A02  01F0               	clrf	i1USBTransferOnePacket@dir
  7633  0A03  3020               	movlw	32
  7634  0A04  00F1               	movwf	i1USBTransferOnePacket@data
  7635  0A05  3001               	movlw	1
  7636  0A06  00F2               	movwf	i1USBTransferOnePacket@data+1
  7637  0A07  3040               	movlw	64
  7638  0A08  00FD               	movwf	??i1_CDCInitEP
  7639  0A09  087D               	movf	??i1_CDCInitEP,w
  7640  0A0A  00F3               	movwf	i1USBTransferOnePacket@len
  7641  0A0B  3002               	movlw	2
  7642  0A0C  318F  277D         	fcall	i1_USBTransferOnePacket
  7643  0A0E  0871               	movf	?i1_USBTransferOnePacket+1,w
  7644  0A0F  0023               	movlb	3	; select bank3
  7645  0A10  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  7646  0A11  0870               	movf	?i1_USBTransferOnePacket,w
  7647  0A12  00C8               	movwf	_CDCDataOutHandle^(0+384)
  7648                           
  7649                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  7650  0A13  01C6               	clrf	_CDCDataInHandle^(0+384)
  7651  0A14  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  7652                           
  7653                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  7654  0A15  01DA               	clrf	_cdc_trf_state^(0+384)
  7655  0A16  0008               	return
  7656  0A17                     __end_ofi1_CDCInitEP:	
  7657                           
  7658                           	psect	text33
  7659  0F7D                     __ptext33:	
  7660 ;; *************** function i1_USBTransferOnePacket *****************
  7661 ;; Defined at:
  7662 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  ep              1    wreg     unsigned char 
  7665 ;;  dir             1    0[COMMON] unsigned char 
  7666 ;;  data            2    1[COMMON] PTR unsigned char 
  7667 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7668 ;;  len             1    3[COMMON] unsigned char 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  ep              1    8[COMMON] unsigned char 
  7671 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  7672 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  2    0[COMMON] PTR void 
  7675 ;; Registers used:
  7676 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;Total ram usage:       11 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		i1_CDCInitEP
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function i1_USBTransferOnePacket
  7697  0F7D                     i1_USBTransferOnePacket:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  7701                           ;i1USBTransferOnePacket@ep stored from wreg
  7702  0F7D  00F8               	movwf	i1USBTransferOnePacket@ep
  7703                           
  7704                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7705                           ;usb_device.c: 1000: if(dir != 0)
  7706  0F7E  0870               	movf	i1USBTransferOnePacket@dir,w
  7707  0F7F  1903               	btfsc	3,2
  7708  0F80  2F8A               	goto	i1l2550
  7709                           
  7710                           ;usb_device.c: 1001: {
  7711                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7712  0F81  3578               	lslf	i1USBTransferOnePacket@ep,w
  7713  0F82  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7714  0F83  0086               	movwf	6
  7715  0F84  3001               	movlw	1	; select bank3/4
  7716  0F85  0087               	movwf	7
  7717  0F86  3F40               	moviw [0]fsr1
  7718  0F87  00F9               	movwf	i1USBTransferOnePacket@handle
  7719  0F88  3F41               	moviw [1]fsr1
  7720  0F89  2F92               	goto	L10
  7721  0F8A                     i1l2550:	
  7722                           ;usb_device.c: 1004: }
  7723                           
  7724                           
  7725                           ;usb_device.c: 1005: else
  7726                           ;usb_device.c: 1006: {
  7727                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7728  0F8A  3578               	lslf	i1USBTransferOnePacket@ep,w
  7729  0F8B  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7730  0F8C  0086               	movwf	6
  7731  0F8D  3001               	movlw	1	; select bank3/4
  7732  0F8E  0087               	movwf	7
  7733  0F8F  3F40               	moviw [0]fsr1
  7734  0F90  00F9               	movwf	i1USBTransferOnePacket@handle
  7735  0F91  3F41               	moviw [1]fsr1
  7736  0F92                     L10:	
  7737  0F92  00FA               	movwf	i1USBTransferOnePacket@handle+1
  7738                           
  7739                           ;usb_device.c: 1009: }
  7740                           ;usb_device.c: 1013: if(handle == 0)
  7741  0F93  0879               	movf	i1USBTransferOnePacket@handle,w
  7742  0F94  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  7743  0F95  1D03               	btfss	3,2
  7744  0F96  2F9A               	goto	i1l2558
  7745                           
  7746                           ;usb_device.c: 1014: {
  7747                           ;usb_device.c: 1015: return 0;
  7748  0F97  01F0               	clrf	?i1_USBTransferOnePacket
  7749  0F98  01F1               	clrf	?i1_USBTransferOnePacket+1
  7750  0F99  0008               	return
  7751  0F9A                     i1l2558:	
  7752                           
  7753                           ;usb_device.c: 1016: }
  7754                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  7755  0F9A  30FF               	movlw	255
  7756  0F9B  0571               	andwf	i1USBTransferOnePacket@data,w
  7757  0F9C  00F4               	movwf	??i1_USBTransferOnePacket
  7758  0F9D  307F               	movlw	127
  7759  0F9E  0572               	andwf	i1USBTransferOnePacket@data+1,w
  7760  0F9F  00F5               	movwf	??i1_USBTransferOnePacket+1
  7761  0FA0  0879               	movf	i1USBTransferOnePacket@handle,w
  7762  0FA1  0086               	movwf	6
  7763  0FA2  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7764  0FA3  0087               	movwf	7
  7765  0FA4  3142               	addfsr 1,2
  7766  0FA5  0874               	movf	??i1_USBTransferOnePacket,w
  7767  0FA6  3FC0               	movwi [0]fsr1
  7768  0FA7  0875               	movf	??i1_USBTransferOnePacket+1,w
  7769  0FA8  3FC1               	movwi [1]fsr1
  7770                           
  7771                           ;usb_device.c: 1030: handle->CNT = len;
  7772  0FA9  0879               	movf	i1USBTransferOnePacket@handle,w
  7773  0FAA  3E01               	addlw	1
  7774  0FAB  00F4               	movwf	??i1_USBTransferOnePacket
  7775  0FAC  3000               	movlw	0
  7776  0FAD  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  7777  0FAE  00F5               	movwf	??i1_USBTransferOnePacket+1
  7778  0FAF  0874               	movf	??i1_USBTransferOnePacket,w
  7779  0FB0  0086               	movwf	6
  7780  0FB1  0875               	movf	??i1_USBTransferOnePacket+1,w
  7781  0FB2  0087               	movwf	7
  7782  0FB3  0873               	movf	i1USBTransferOnePacket@len,w
  7783  0FB4  0081               	movwf	1
  7784                           
  7785                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  7786  0FB5  3040               	movlw	64
  7787  0FB6  00F4               	movwf	??i1_USBTransferOnePacket
  7788  0FB7  0879               	movf	i1USBTransferOnePacket@handle,w
  7789  0FB8  0086               	movwf	6
  7790  0FB9  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7791  0FBA  0087               	movwf	7
  7792  0FBB  0874               	movf	??i1_USBTransferOnePacket,w
  7793  0FBC  0581               	andwf	1,f
  7794                           
  7795                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  7796  0FBD  0879               	movf	i1USBTransferOnePacket@handle,w
  7797  0FBE  0086               	movwf	6
  7798  0FBF  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7799  0FC0  0087               	movwf	7
  7800  0FC1  1581               	bsf	1,3
  7801                           
  7802                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  7803  0FC2  0879               	movf	i1USBTransferOnePacket@handle,w
  7804  0FC3  0086               	movwf	6
  7805  0FC4  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7806  0FC5  0087               	movwf	7
  7807  0FC6  1781               	bsf	1,7
  7808                           
  7809                           ;usb_device.c: 1036: if(dir != 0)
  7810  0FC7  0870               	movf	i1USBTransferOnePacket@dir,w
  7811  0FC8  1903               	btfsc	3,2
  7812  0FC9  2FE3               	goto	i1l2568
  7813                           
  7814                           ;usb_device.c: 1037: {
  7815                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  7816  0FCA  3578               	lslf	i1USBTransferOnePacket@ep,w
  7817  0FCB  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7818  0FCC  0086               	movwf	6
  7819  0FCD  3001               	movlw	1	; select bank3/4
  7820  0FCE  0087               	movwf	7
  7821  0FCF  3F40               	moviw [0]fsr1
  7822  0FD0  00F4               	movwf	??i1_USBTransferOnePacket
  7823  0FD1  3F41               	moviw [1]fsr1
  7824  0FD2  00F5               	movwf	??i1_USBTransferOnePacket+1
  7825  0FD3  3004               	movlw	4
  7826  0FD4  0674               	xorwf	??i1_USBTransferOnePacket,w
  7827  0FD5  00F6               	movwf	??i1_USBTransferOnePacket+2
  7828  0FD6  3000               	movlw	0
  7829  0FD7  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  7830  0FD8  00F7               	movwf	??i1_USBTransferOnePacket+3
  7831  0FD9  3578               	lslf	i1USBTransferOnePacket@ep,w
  7832  0FDA  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7833  0FDB  0086               	movwf	6
  7834  0FDC  3001               	movlw	1	; select bank3/4
  7835  0FDD  0087               	movwf	7
  7836  0FDE  0876               	movf	??i1_USBTransferOnePacket+2,w
  7837  0FDF  3FC0               	movwi [0]fsr1
  7838  0FE0  0877               	movf	??i1_USBTransferOnePacket+3,w
  7839  0FE1  3FC1               	movwi [1]fsr1
  7840                           
  7841                           ;usb_device.c: 1040: }
  7842  0FE2  2FFB               	goto	i1l2570
  7843  0FE3                     i1l2568:	
  7844                           
  7845                           ;usb_device.c: 1041: else
  7846                           ;usb_device.c: 1042: {
  7847                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  7848  0FE3  3578               	lslf	i1USBTransferOnePacket@ep,w
  7849  0FE4  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7850  0FE5  0086               	movwf	6
  7851  0FE6  3001               	movlw	1	; select bank3/4
  7852  0FE7  0087               	movwf	7
  7853  0FE8  3F40               	moviw [0]fsr1
  7854  0FE9  00F4               	movwf	??i1_USBTransferOnePacket
  7855  0FEA  3F41               	moviw [1]fsr1
  7856  0FEB  00F5               	movwf	??i1_USBTransferOnePacket+1
  7857  0FEC  3004               	movlw	4
  7858  0FED  0674               	xorwf	??i1_USBTransferOnePacket,w
  7859  0FEE  00F6               	movwf	??i1_USBTransferOnePacket+2
  7860  0FEF  3000               	movlw	0
  7861  0FF0  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  7862  0FF1  00F7               	movwf	??i1_USBTransferOnePacket+3
  7863  0FF2  3578               	lslf	i1USBTransferOnePacket@ep,w
  7864  0FF3  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7865  0FF4  0086               	movwf	6
  7866  0FF5  3001               	movlw	1	; select bank3/4
  7867  0FF6  0087               	movwf	7
  7868  0FF7  0876               	movf	??i1_USBTransferOnePacket+2,w
  7869  0FF8  3FC0               	movwi [0]fsr1
  7870  0FF9  0877               	movf	??i1_USBTransferOnePacket+3,w
  7871  0FFA  3FC1               	movwi [1]fsr1
  7872  0FFB                     i1l2570:	
  7873                           
  7874                           ;usb_device.c: 1045: }
  7875                           ;usb_device.c: 1046: return (void*)handle;
  7876  0FFB  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7877  0FFC  00F1               	movwf	?i1_USBTransferOnePacket+1
  7878  0FFD  0879               	movf	i1USBTransferOnePacket@handle,w
  7879  0FFE  00F0               	movwf	?i1_USBTransferOnePacket
  7880  0FFF  0008               	return
  7881  1000                     __end_ofi1_USBTransferOnePacket:	
  7882                           
  7883                           	psect	text34
  7884  0958                     __ptext34:	
  7885 ;; *************** function i1_USBEnableEndpoint *****************
  7886 ;; Defined at:
  7887 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;  ep              1    wreg     unsigned char 
  7890 ;;  options         1    7[COMMON] unsigned char 
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;  ep              1   12[COMMON] unsigned char 
  7893 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
  7894 ;;		 -> UEP0(1), 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;		None               void
  7897 ;; Registers used:
  7898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;Total ram usage:        6 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    1
  7911 ;; This function calls:
  7912 ;;		i1_USBConfigureEndpoint
  7913 ;; This function is called by:
  7914 ;;		i1_CDCInitEP
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           
  7919                           ;psect for function i1_USBEnableEndpoint
  7920  0958                     i1_USBEnableEndpoint:	
  7921                           
  7922                           ;incstack = 0
  7923                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7924                           ;i1USBEnableEndpoint@ep stored from wreg
  7925  0958  00FC               	movwf	i1USBEnableEndpoint@ep
  7926                           
  7927                           ;usb_device.c: 880: unsigned char* p;
  7928                           ;usb_device.c: 884: if(options & 0x04)
  7929  0959  1D77               	btfss	i1USBEnableEndpoint@options,2
  7930  095A  2960               	goto	i1l2538
  7931                           
  7932                           ;usb_device.c: 885: {
  7933                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  7934  095B  01F0               	clrf	i1USBConfigureEndpoint@direction
  7935  095C  087C               	movf	i1USBEnableEndpoint@ep,w
  7936  095D  318A  22C3  3189   	fcall	i1_USBConfigureEndpoint
  7937  0960                     i1l2538:	
  7938                           
  7939                           ;usb_device.c: 887: }
  7940                           ;usb_device.c: 888: if(options & 0x02)
  7941  0960  1CF7               	btfss	i1USBEnableEndpoint@options,1
  7942  0961  2967               	goto	i1l2542
  7943                           
  7944                           ;usb_device.c: 889: {
  7945                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  7946  0962  01F0               	clrf	i1USBConfigureEndpoint@direction
  7947  0963  0AF0               	incf	i1USBConfigureEndpoint@direction,f
  7948  0964  087C               	movf	i1USBEnableEndpoint@ep,w
  7949  0965  318A  22C3         	fcall	i1_USBConfigureEndpoint
  7950  0967                     i1l2542:	
  7951                           
  7952                           ;usb_device.c: 891: }
  7953                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  7954  0967  087C               	movf	i1USBEnableEndpoint@ep,w
  7955  0968  3E98               	addlw	152
  7956  0969  00F8               	movwf	??i1_USBEnableEndpoint
  7957  096A  01F9               	clrf	??i1_USBEnableEndpoint+1
  7958  096B  300E               	movlw	14
  7959  096C  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
  7960  096D  0878               	movf	??i1_USBEnableEndpoint,w
  7961  096E  00FA               	movwf	i1USBEnableEndpoint@p
  7962  096F  0879               	movf	??i1_USBEnableEndpoint+1,w
  7963  0970  00FB               	movwf	i1USBEnableEndpoint@p+1
  7964                           
  7965                           ;usb_device.c: 901: *p = options;
  7966  0971  087A               	movf	i1USBEnableEndpoint@p,w
  7967  0972  0086               	movwf	6
  7968  0973  087B               	movf	i1USBEnableEndpoint@p+1,w
  7969  0974  0087               	movwf	7
  7970  0975  0877               	movf	i1USBEnableEndpoint@options,w
  7971  0976  0081               	movwf	1
  7972  0977  0008               	return
  7973  0978                     __end_ofi1_USBEnableEndpoint:	
  7974                           
  7975                           	psect	text35
  7976  0AC3                     __ptext35:	
  7977 ;; *************** function i1_USBConfigureEndpoint *****************
  7978 ;; Defined at:
  7979 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  EPNum           1    wreg     unsigned char 
  7982 ;;  direction       1    0[COMMON] unsigned char 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  EPNum           1    5[COMMON] unsigned char 
  7985 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
  7986 ;;		 -> BDT(48), 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;		None               void
  7989 ;; Registers used:
  7990 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7996 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;Total ram usage:        7 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		i1_USBEnableEndpoint
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function i1_USBConfigureEndpoint
  8011  0AC3                     i1_USBConfigureEndpoint:	
  8012                           
  8013                           ;incstack = 0
  8014                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8015                           ;i1USBConfigureEndpoint@EPNum stored from wreg
  8016  0AC3  00F5               	movwf	i1USBConfigureEndpoint@EPNum
  8017                           
  8018                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8019                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8020  0AC4  3020               	movlw	32
  8021  0AC5  00F1               	movwf	??i1_USBConfigureEndpoint
  8022  0AC6  0871               	movf	??i1_USBConfigureEndpoint,w
  8023  0AC7  00F6               	movwf	i1USBConfigureEndpoint@handle
  8024                           
  8025                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8026  0AC8  0870               	movf	i1USBConfigureEndpoint@direction,w
  8027  0AC9  00F1               	movwf	??i1_USBConfigureEndpoint
  8028  0ACA  3001               	movlw	1
  8029  0ACB                     u184_25:	
  8030  0ACB  35F1               	lslf	??i1_USBConfigureEndpoint,f
  8031  0ACC  0B89               	decfsz	9,f
  8032  0ACD  2ACB               	goto	u184_25
  8033  0ACE  0875               	movf	i1USBConfigureEndpoint@EPNum,w
  8034  0ACF  00F2               	movwf	??i1_USBConfigureEndpoint+1
  8035  0AD0  3001               	movlw	1
  8036  0AD1                     u185_25:	
  8037  0AD1  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
  8038  0AD2  3EFF               	addlw	-1
  8039  0AD3  1D03               	skipz
  8040  0AD4  2AD1               	goto	u185_25
  8041  0AD5  3572               	lslf	??i1_USBConfigureEndpoint+1,w
  8042  0AD6  0771               	addwf	??i1_USBConfigureEndpoint,w
  8043  0AD7  00F3               	movwf	??i1_USBConfigureEndpoint+2
  8044  0AD8  3001               	movlw	1
  8045  0AD9                     u186_25:	
  8046  0AD9  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
  8047  0ADA  3EFF               	addlw	-1
  8048  0ADB  1D03               	skipz
  8049  0ADC  2AD9               	goto	u186_25
  8050  0ADD  3573               	lslf	??i1_USBConfigureEndpoint+2,w
  8051  0ADE  00F4               	movwf	??i1_USBConfigureEndpoint+3
  8052  0ADF  0874               	movf	??i1_USBConfigureEndpoint+3,w
  8053  0AE0  07F6               	addwf	i1USBConfigureEndpoint@handle,f
  8054                           
  8055                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8056  0AE1  0876               	movf	i1USBConfigureEndpoint@handle,w
  8057  0AE2  0086               	movwf	6
  8058  0AE3  0187               	clrf	7
  8059  0AE4  1381               	bcf	1,7
  8060                           
  8061                           ;usb_device.c: 1557: if(direction == 0)
  8062  0AE5  0870               	movf	i1USBConfigureEndpoint@direction,w
  8063  0AE6  1D03               	btfss	3,2
  8064  0AE7  2AF2               	goto	i1l2528
  8065                           
  8066                           ;usb_device.c: 1558: {
  8067                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8068  0AE8  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8069  0AE9  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8070  0AEA  0086               	movwf	6
  8071  0AEB  3001               	movlw	1	; select bank3/4
  8072  0AEC  0087               	movwf	7
  8073  0AED  0876               	movf	i1USBConfigureEndpoint@handle,w
  8074  0AEE  3FC0               	movwi [0]fsr1
  8075  0AEF  3000               	movlw	0
  8076  0AF0  3FC1               	movwi [1]fsr1
  8077                           
  8078                           ;usb_device.c: 1560: }
  8079  0AF1  2AFB               	goto	i1l2530
  8080  0AF2                     i1l2528:	
  8081                           
  8082                           ;usb_device.c: 1561: else
  8083                           ;usb_device.c: 1562: {
  8084                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8085  0AF2  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8086  0AF3  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8087  0AF4  0086               	movwf	6
  8088  0AF5  3001               	movlw	1	; select bank3/4
  8089  0AF6  0087               	movwf	7
  8090  0AF7  0876               	movf	i1USBConfigureEndpoint@handle,w
  8091  0AF8  3FC0               	movwi [0]fsr1
  8092  0AF9  3000               	movlw	0
  8093  0AFA  3FC1               	movwi [1]fsr1
  8094  0AFB                     i1l2530:	
  8095                           
  8096                           ;usb_device.c: 1564: }
  8097                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8098  0AFB  0876               	movf	i1USBConfigureEndpoint@handle,w
  8099  0AFC  0086               	movwf	6
  8100  0AFD  0187               	clrf	7
  8101  0AFE  1301               	bcf	1,6
  8102                           
  8103                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8104  0AFF  0876               	movf	i1USBConfigureEndpoint@handle,w
  8105  0B00  3E04               	addlw	4
  8106  0B01  0086               	movwf	6
  8107  0B02  0187               	clrf	7
  8108  0B03  1701               	bsf	1,6
  8109  0B04  0008               	return
  8110  0B05                     __end_ofi1_USBConfigureEndpoint:	
  8111                           
  8112                           	psect	text36
  8113  0CFB                     __ptext36:	
  8114 ;; *************** function _USBCheckCDCRequest *****************
  8115 ;; Defined at:
  8116 ;;		line 147 in file "../lib/usb/src/usb_device_cdc.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;		None               void
  8123 ;; Registers used:
  8124 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;Total ram usage:        1 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; This function calls:
  8137 ;;		Nothing
  8138 ;; This function is called by:
  8139 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           
  8144                           ;psect for function _USBCheckCDCRequest
  8145  0CFB                     _USBCheckCDCRequest:	
  8146                           
  8147                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8148                           
  8149                           ;incstack = 0
  8150                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  8151  0CFB  0020               	movlb	0	; select bank0
  8152  0CFC  0850               	movf	80,w	;volatile
  8153  0CFD  391F               	andlw	31
  8154  0CFE  3A01               	xorlw	1
  8155  0CFF  1D03               	btfss	3,2
  8156  0D00  0008               	return
  8157                           
  8158                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8159  0D01  0E50               	swapf	80,w	;volatile
  8160  0D02  0C89               	rrf	9,f
  8161  0D03  3903               	andlw	3
  8162  0D04  3A01               	xorlw	1
  8163  0D05  1D03               	btfss	3,2
  8164  0D06  0008               	return
  8165                           
  8166                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8167                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8168  0D07  0854               	movf	84,w	;volatile
  8169  0D08  1903               	btfsc	3,2
  8170  0D09  2D47               	goto	i1l2618
  8171  0D0A  0354               	decf	84,w	;volatile
  8172  0D0B  1D03               	btfss	3,2
  8173  0D0C  0008               	return
  8174  0D0D  2D47               	goto	i1l2618
  8175  0D0E                     i1l2588:	
  8176                           ;usb_device_cdc.c: 167: {
  8177                           ;usb_device_cdc.c: 169: case 0x00:
  8178                           
  8179                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
  8180                           
  8181                           
  8182                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8183  0D0E  302A               	movlw	low _dummy_encapsulated_cmd_response
  8184  0D0F  0023               	movlb	3	; select bank3
  8185  0D10  00B3               	movwf	_inPipes^(0+384)	;volatile
  8186  0D11  3002               	movlw	high _dummy_encapsulated_cmd_response
  8187  0D12  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8188                           
  8189                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8190  0D13  3000               	movlw	0
  8191  0D14  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8192  0D15  3008               	movlw	8
  8193  0D16  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8194                           
  8195                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8196  0D17  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  8197                           
  8198                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8199  0D18  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8200                           
  8201                           ;usb_device_cdc.c: 175: break;
  8202  0D19  0008               	return
  8203  0D1A                     i1l2596:	
  8204                           ;usb_device_cdc.c: 176: case 0x01:
  8205                           
  8206                           
  8207                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8208  0D1A  302A               	movlw	low _dummy_encapsulated_cmd_response
  8209  0D1B  0023               	movlb	3	; select bank3
  8210  0D1C  00B3               	movwf	_inPipes^(0+384)	;volatile
  8211  0D1D  3002               	movlw	high _dummy_encapsulated_cmd_response
  8212  0D1E  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8213                           
  8214                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8215  0D1F  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8216                           
  8217                           ;usb_device_cdc.c: 180: break;
  8218  0D20  0008               	return
  8219  0D21                     i1l2600:	
  8220                           ;usb_device_cdc.c: 184: case 0x20:
  8221                           
  8222                           
  8223                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8224  0D21  0020               	movlb	0	; select bank0
  8225  0D22  0857               	movf	87,w	;volatile
  8226  0D23  0023               	movlb	3	; select bank3
  8227  0D24  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  8228  0D25  0020               	movlb	0	; select bank0
  8229  0D26  0856               	movf	86,w	;volatile
  8230  0D27  0023               	movlb	3	; select bank3
  8231  0D28  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  8232                           
  8233                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8234  0D29  30E0               	movlw	(low (_line_coding| (0+256)))& (0+255)
  8235  0D2A  00F0               	movwf	??_USBCheckCDCRequest
  8236  0D2B  0870               	movf	??_USBCheckCDCRequest,w
  8237  0D2C  00A0               	movwf	_outPipes^(0+384)	;volatile
  8238                           
  8239                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8240  0D2D  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  8241  0D2E  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  8242                           
  8243                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8244  0D2F  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  8245                           
  8246                           ;usb_device_cdc.c: 189: break;
  8247  0D30  0008               	return
  8248  0D31                     i1l2606:	
  8249                           ;usb_device_cdc.c: 191: case 0x21:
  8250                           
  8251                           
  8252                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8253  0D31  30E0               	movlw	low _line_coding
  8254  0D32  0023               	movlb	3	; select bank3
  8255  0D33  00B3               	movwf	_inPipes^(0+384)	;volatile
  8256  0D34  3001               	movlw	high _line_coding
  8257  0D35  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8258  0D36  3000               	movlw	0
  8259  0D37  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8260  0D38  3007               	movlw	7
  8261  0D39  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8262  0D3A  30C1               	movlw	193
  8263  0D3B  00F0               	movwf	??_USBCheckCDCRequest
  8264  0D3C  0870               	movf	??_USBCheckCDCRequest,w
  8265  0D3D  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  8266                           
  8267                           ;usb_device_cdc.c: 196: break;
  8268  0D3E  0008               	return
  8269  0D3F                     i1l2612:	
  8270                           ;usb_device_cdc.c: 198: case 0x22:
  8271                           
  8272                           
  8273                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8274  0D3F  0020               	movlb	0	; select bank0
  8275  0D40  0852               	movf	82,w	;volatile
  8276  0D41  00F0               	movwf	??_USBCheckCDCRequest
  8277  0D42  0870               	movf	??_USBCheckCDCRequest,w
  8278  0D43  0023               	movlb	3	; select bank3
  8279  0D44  00DC               	movwf	_control_signal_bitmap^(0+384)
  8280                           
  8281                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8282  0D45  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8283                           
  8284                           ;usb_device_cdc.c: 258: }
  8285                           
  8286                           ;usb_device_cdc.c: 257: break;
  8287                           
  8288                           ;usb_device_cdc.c: 256: default:
  8289                           
  8290                           ;usb_device_cdc.c: 232: break;
  8291  0D46  0008               	return
  8292  0D47                     i1l2618:	
  8293  0D47  0020               	movlb	0	; select bank0
  8294  0D48  0851               	movf	81,w	;volatile
  8295                           
  8296                           ; Switch size 1, requested type "space"
  8297                           ; Number of cases is 5, Range of values is 0 to 34
  8298                           ; switch strategies available:
  8299                           ; Name         Instructions Cycles
  8300                           ; simple_byte           16     9 (average)
  8301                           ; direct_byte           76     6 (fixed)
  8302                           ; jumptable            260     6 (fixed)
  8303                           ;	Chosen strategy is simple_byte
  8304  0D49  3A00               	xorlw	0	; case 0
  8305  0D4A  1903               	skipnz
  8306  0D4B  2D0E               	goto	i1l2588
  8307  0D4C  3A01               	xorlw	1	; case 1
  8308  0D4D  1903               	skipnz
  8309  0D4E  2D1A               	goto	i1l2596
  8310  0D4F  3A21               	xorlw	33	; case 32
  8311  0D50  1903               	skipnz
  8312  0D51  2D21               	goto	i1l2600
  8313  0D52  3A01               	xorlw	1	; case 33
  8314  0D53  1903               	skipnz
  8315  0D54  2D31               	goto	i1l2606
  8316  0D55  3A03               	xorlw	3	; case 34
  8317  0D56  1903               	skipnz
  8318  0D57  2D3F               	goto	i1l2612
  8319  0D58  2D59               	goto	i1l479
  8320  0D59                     i1l479:	
  8321  0D59  0008               	return
  8322  0D5A                     __end_of_USBCheckCDCRequest:	
  8323                           
  8324                           	psect	text37
  8325  0A17                     __ptext37:	
  8326 ;; *************** function _USBCtrlTrfOutHandler *****************
  8327 ;; Defined at:
  8328 ;;		line 2538 in file "../lib/usb/src/usb_device.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;		None               void
  8335 ;; Registers used:
  8336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;Total ram usage:        2 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    2
  8349 ;; This function calls:
  8350 ;;		_USBCtrlTrfRxService
  8351 ;; This function is called by:
  8352 ;;		_USBCtrlEPService
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           
  8357                           ;psect for function _USBCtrlTrfOutHandler
  8358  0A17                     _USBCtrlTrfOutHandler:	
  8359                           
  8360                           ;usb_device.c: 2540: if(controlTransferState == 2)
  8361                           
  8362                           ;incstack = 0
  8363                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8364  0A17  3002               	movlw	2
  8365  0A18  0021               	movlb	1	; select bank1
  8366  0A19  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  8367  0A1A  1D03               	btfss	3,2
  8368  0A1B  2A1F               	goto	i1l3158
  8369                           
  8370                           ;usb_device.c: 2541: {
  8371                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  8372  0A1C  3185  2548         	fcall	_USBCtrlTrfRxService
  8373                           
  8374                           ;usb_device.c: 2543: }
  8375  0A1E  0008               	return
  8376  0A1F                     i1l3158:	
  8377                           
  8378                           ;usb_device.c: 2544: else
  8379                           ;usb_device.c: 2545: {
  8380                           ;usb_device.c: 2548: controlTransferState = 0;
  8381  0A1F  0021               	movlb	1	; select bank1
  8382  0A20  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  8383                           
  8384                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  8385  0A21  0023               	movlb	3	; select bank3
  8386  0A22  084E               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  8387  0A23  1D03               	btfss	3,2
  8388  0A24  2A4B               	goto	i1l3170
  8389                           
  8390                           ;usb_device.c: 2556: {
  8391                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  8392  0A25  0021               	movlb	1	; select bank1
  8393  0A26  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8394  0A27  3E01               	addlw	1
  8395  0A28  00F6               	movwf	??_USBCtrlTrfOutHandler
  8396  0A29  3000               	movlw	0
  8397  0A2A  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8398  0A2B  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8399  0A2C  0876               	movf	??_USBCtrlTrfOutHandler,w
  8400  0A2D  0086               	movwf	6
  8401  0A2E  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8402  0A2F  0087               	movwf	7
  8403  0A30  3008               	movlw	8
  8404  0A31  0081               	movwf	1
  8405                           
  8406                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8407  0A32  3050               	movlw	80
  8408  0A33  00F6               	movwf	??_USBCtrlTrfOutHandler
  8409  0A34  3000               	movlw	0
  8410  0A35  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8411  0A36  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8412  0A37  0086               	movwf	6
  8413  0A38  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8414  0A39  0087               	movwf	7
  8415  0A3A  3142               	addfsr 1,2
  8416  0A3B  0876               	movf	??_USBCtrlTrfOutHandler,w
  8417  0A3C  3FC0               	movwi [0]fsr1
  8418  0A3D  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8419  0A3E  3FC1               	movwi [1]fsr1
  8420                           
  8421                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8422  0A3F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8423  0A40  0086               	movwf	6
  8424  0A41  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8425  0A42  0087               	movwf	7
  8426  0A43  300C               	movlw	12
  8427  0A44  0081               	movwf	1
  8428                           
  8429                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8430  0A45  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8431  0A46  0086               	movwf	6
  8432  0A47  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8433  0A48  0087               	movwf	7
  8434  0A49  1781               	bsf	1,7
  8435                           
  8436                           ;usb_device.c: 2561: }
  8437  0A4A  0008               	return
  8438  0A4B                     i1l3170:	
  8439                           
  8440                           ;usb_device.c: 2562: else
  8441                           ;usb_device.c: 2563: {
  8442                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  8443  0A4B  0023               	movlb	3	; select bank3
  8444  0A4C  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8445  0A4D  0008               	return
  8446  0A4E                     __end_of_USBCtrlTrfOutHandler:	
  8447                           
  8448                           	psect	text38
  8449  0548                     __ptext38:	
  8450 ;; *************** function _USBCtrlTrfRxService *****************
  8451 ;; Defined at:
  8452 ;;		line 1852 in file "../lib/usb/src/usb_device.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  byteToRead      1    5[COMMON] unsigned char 
  8457 ;;  i               1    4[COMMON] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;		None               void
  8460 ;; Registers used:
  8461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8471 ;;Total ram usage:        4 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    1
  8474 ;; This function calls:
  8475 ;;		_USBCtrlEPAllowStatusStage
  8476 ;; This function is called by:
  8477 ;;		_USBCtrlTrfOutHandler
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           
  8482                           ;psect for function _USBCtrlTrfRxService
  8483  0548                     _USBCtrlTrfRxService:	
  8484                           
  8485                           ;usb_device.c: 1854: uint8_t byteToRead;
  8486                           ;usb_device.c: 1855: uint8_t i;
  8487                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8488                           
  8489                           ;incstack = 0
  8490                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8491  0548  0021               	movlb	1	; select bank1
  8492  0549  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8493  054A  0086               	movwf	6
  8494  054B  0187               	clrf	7
  8495  054C  3F41               	moviw [1]fsr1
  8496  054D  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8497                           
  8498                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8499  054E  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8500  054F  00F2               	movwf	??_USBCtrlTrfRxService
  8501  0550  01F3               	clrf	??_USBCtrlTrfRxService+1
  8502  0551  0873               	movf	??_USBCtrlTrfRxService+1,w
  8503  0552  0023               	movlb	3	; select bank3
  8504  0553  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8505  0554  1D03               	skipz
  8506  0555  2D58               	goto	u248_25
  8507  0556  0872               	movf	??_USBCtrlTrfRxService,w
  8508  0557  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  8509  0558                     u248_25:	
  8510  0558  1803               	skipnc
  8511  0559  2D5E               	goto	i1l286
  8512                           
  8513                           ;usb_device.c: 1866: {
  8514                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8515  055A  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8516  055B  00F2               	movwf	??_USBCtrlTrfRxService
  8517  055C  0872               	movf	??_USBCtrlTrfRxService,w
  8518  055D  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8519  055E                     i1l286:	
  8520                           
  8521                           ;usb_device.c: 1868: }
  8522                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8523  055E  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8524  055F  00F2               	movwf	??_USBCtrlTrfRxService
  8525  0560  01F3               	clrf	??_USBCtrlTrfRxService+1
  8526  0561  0872               	movf	??_USBCtrlTrfRxService,w
  8527  0562  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  8528  0563  0873               	movf	??_USBCtrlTrfRxService+1,w
  8529  0564  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  8530                           
  8531                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8532  0565  01F4               	clrf	USBCtrlTrfRxService@i
  8533  0566                     i1l3042:	
  8534  0566  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8535  0567  0274               	subwf	USBCtrlTrfRxService@i,w
  8536  0568  1803               	btfsc	3,0
  8537  0569  2D7F               	goto	i1l3044
  8538                           
  8539                           ;usb_device.c: 1875: {
  8540                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8541  056A  0874               	movf	USBCtrlTrfRxService@i,w
  8542  056B  3E58               	addlw	88
  8543  056C  0086               	movwf	6
  8544  056D  0187               	clrf	7
  8545  056E  0801               	movf	1,w
  8546  056F  00F2               	movwf	??_USBCtrlTrfRxService
  8547  0570  0820               	movf	_outPipes^(0+384),w	;volatile
  8548  0571  0086               	movwf	6
  8549  0572  3001               	movlw	1	; select bank2/3
  8550  0573  0087               	movwf	7
  8551  0574  0872               	movf	??_USBCtrlTrfRxService,w
  8552  0575  0081               	movwf	1
  8553  0576  3001               	movlw	1
  8554  0577  00F2               	movwf	??_USBCtrlTrfRxService
  8555  0578  0872               	movf	??_USBCtrlTrfRxService,w
  8556  0579  07A0               	addwf	_outPipes^(0+384),f	;volatile
  8557  057A  3001               	movlw	1
  8558  057B  00F2               	movwf	??_USBCtrlTrfRxService
  8559  057C  0872               	movf	??_USBCtrlTrfRxService,w
  8560  057D  07F4               	addwf	USBCtrlTrfRxService@i,f
  8561  057E  2D66               	goto	i1l3042
  8562  057F                     i1l3044:	
  8563                           
  8564                           ;usb_device.c: 1877: }
  8565                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8566  057F  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8567  0580  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8568  0581  1903               	btfsc	3,2
  8569  0582  2DBA               	goto	i1l3056
  8570                           
  8571                           ;usb_device.c: 1882: {
  8572                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  8573  0583  0021               	movlb	1	; select bank1
  8574  0584  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8575  0585  3E01               	addlw	1
  8576  0586  00F2               	movwf	??_USBCtrlTrfRxService
  8577  0587  3000               	movlw	0
  8578  0588  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8579  0589  00F3               	movwf	??_USBCtrlTrfRxService+1
  8580  058A  0872               	movf	??_USBCtrlTrfRxService,w
  8581  058B  0086               	movwf	6
  8582  058C  0873               	movf	??_USBCtrlTrfRxService+1,w
  8583  058D  0087               	movwf	7
  8584  058E  3008               	movlw	8
  8585  058F  0081               	movwf	1
  8586                           
  8587                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8588  0590  3058               	movlw	88
  8589  0591  00F2               	movwf	??_USBCtrlTrfRxService
  8590  0592  3000               	movlw	0
  8591  0593  00F3               	movwf	??_USBCtrlTrfRxService+1
  8592  0594  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8593  0595  0086               	movwf	6
  8594  0596  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8595  0597  0087               	movwf	7
  8596  0598  3142               	addfsr 1,2
  8597  0599  0872               	movf	??_USBCtrlTrfRxService,w
  8598  059A  3FC0               	movwi [0]fsr1
  8599  059B  0873               	movf	??_USBCtrlTrfRxService+1,w
  8600  059C  3FC1               	movwi [1]fsr1
  8601                           
  8602                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8603  059D  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8604  059E  0086               	movwf	6
  8605  059F  0187               	clrf	7
  8606  05A0  1B01               	btfsc	1,6
  8607  05A1  2DAE               	goto	i1l3054
  8608                           
  8609                           ;usb_device.c: 1886: {
  8610                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8611  05A2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8612  05A3  0086               	movwf	6
  8613  05A4  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8614  05A5  0087               	movwf	7
  8615  05A6  3048               	movlw	72
  8616  05A7  0081               	movwf	1
  8617                           
  8618                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8619  05A8  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8620  05A9  0086               	movwf	6
  8621  05AA  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8622  05AB  0087               	movwf	7
  8623  05AC  1781               	bsf	1,7
  8624                           
  8625                           ;usb_device.c: 1889: }
  8626  05AD  0008               	return
  8627  05AE                     i1l3054:	
  8628                           
  8629                           ;usb_device.c: 1890: else
  8630                           ;usb_device.c: 1891: {
  8631                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8632  05AE  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8633  05AF  0086               	movwf	6
  8634  05B0  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8635  05B1  0087               	movwf	7
  8636  05B2  3008               	movlw	8
  8637  05B3  0081               	movwf	1
  8638                           
  8639                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8640  05B4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8641  05B5  0086               	movwf	6
  8642  05B6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8643  05B7  0087               	movwf	7
  8644  05B8  1781               	bsf	1,7
  8645                           
  8646                           ;usb_device.c: 1894: }
  8647                           ;usb_device.c: 1895: }
  8648  05B9  0008               	return
  8649  05BA                     i1l3056:	
  8650                           
  8651                           ;usb_device.c: 1896: else
  8652                           ;usb_device.c: 1897: {
  8653                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8654  05BA  0021               	movlb	1	; select bank1
  8655  05BB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8656  05BC  3E01               	addlw	1
  8657  05BD  00F2               	movwf	??_USBCtrlTrfRxService
  8658  05BE  3000               	movlw	0
  8659  05BF  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8660  05C0  00F3               	movwf	??_USBCtrlTrfRxService+1
  8661  05C1  0872               	movf	??_USBCtrlTrfRxService,w
  8662  05C2  0086               	movwf	6
  8663  05C3  0873               	movf	??_USBCtrlTrfRxService+1,w
  8664  05C4  0087               	movwf	7
  8665  05C5  3008               	movlw	8
  8666  05C6  0081               	movwf	1
  8667                           
  8668                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8669  05C7  3050               	movlw	80
  8670  05C8  00F2               	movwf	??_USBCtrlTrfRxService
  8671  05C9  3000               	movlw	0
  8672  05CA  00F3               	movwf	??_USBCtrlTrfRxService+1
  8673  05CB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8674  05CC  0086               	movwf	6
  8675  05CD  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8676  05CE  0087               	movwf	7
  8677  05CF  3142               	addfsr 1,2
  8678  05D0  0872               	movf	??_USBCtrlTrfRxService,w
  8679  05D1  3FC0               	movwi [0]fsr1
  8680  05D2  0873               	movf	??_USBCtrlTrfRxService+1,w
  8681  05D3  3FC1               	movwi [1]fsr1
  8682                           
  8683                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8684  05D4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8685  05D5  0086               	movwf	6
  8686  05D6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8687  05D7  0087               	movwf	7
  8688  05D8  3004               	movlw	4
  8689  05D9  0081               	movwf	1
  8690                           
  8691                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8692  05DA  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8693  05DB  0086               	movwf	6
  8694  05DC  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8695  05DD  0087               	movwf	7
  8696  05DE  1781               	bsf	1,7
  8697                           
  8698                           ;usb_device.c: 1915: {
  8699                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8700  05DF  0023               	movlb	3	; select bank3
  8701  05E0  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8702  05E1  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8703                           
  8704                           ;usb_device.c: 1926: }
  8705                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8706  05E2  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8707                           
  8708                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8709  05E3  0853               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  8710  05E4  1D03               	btfss	3,2
  8711  05E5  0008               	return
  8712                           
  8713                           ;usb_device.c: 1942: {
  8714                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8715  05E6  3187  278D         	fcall	_USBCtrlEPAllowStatusStage
  8716  05E8  0008               	return
  8717  05E9                     __end_of_USBCtrlTrfRxService:	
  8718                           
  8719                           	psect	text39
  8720  078D                     __ptext39:	
  8721 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8722 ;; Defined at:
  8723 ;;		line 1416 in file "../lib/usb/src/usb_device.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;		None
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;		None               void
  8730 ;; Registers used:
  8731 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;Total ram usage:        2 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; This function calls:
  8744 ;;		Nothing
  8745 ;; This function is called by:
  8746 ;;		_USBDeviceTasks
  8747 ;;		_USBCtrlEPServiceComplete
  8748 ;;		_USBCtrlTrfRxService
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           
  8753                           ;psect for function _USBCtrlEPAllowStatusStage
  8754  078D                     _USBCtrlEPAllowStatusStage:	
  8755                           
  8756                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8760  078D  0023               	movlb	3	; select bank3
  8761  078E  0854               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  8762  078F  1D03               	btfss	3,2
  8763  0790  0008               	return
  8764                           
  8765                           ;usb_device.c: 1424: {
  8766                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8767  0791  3001               	movlw	1
  8768  0792  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8769  0793  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8770  0794  00D4               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8771                           
  8772                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8773  0795  0855               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  8774  0796  1D03               	btfss	3,2
  8775  0797  0008               	return
  8776                           
  8777                           ;usb_device.c: 1427: {
  8778                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8779  0798  3001               	movlw	1
  8780  0799  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8781  079A  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8782  079B  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8783                           
  8784                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8785  079C  3002               	movlw	2
  8786  079D  0021               	movlb	1	; select bank1
  8787  079E  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  8788  079F  1D03               	btfss	3,2
  8789  07A0  2FB4               	goto	i1l2732
  8790                           
  8791                           ;usb_device.c: 1433: {
  8792                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8793  07A1  0023               	movlb	3	; select bank3
  8794  07A2  0827               	movf	_pBDTEntryIn^(0+384),w
  8795  07A3  0086               	movwf	6
  8796  07A4  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8797  07A5  0087               	movwf	7
  8798  07A6  3141               	addfsr 1,1
  8799  07A7  0181               	clrf	1
  8800                           
  8801                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8802  07A8  0827               	movf	_pBDTEntryIn^(0+384),w
  8803  07A9  0086               	movwf	6
  8804  07AA  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8805  07AB  0087               	movwf	7
  8806  07AC  3048               	movlw	72
  8807  07AD  0081               	movwf	1
  8808                           
  8809                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8810  07AE  0827               	movf	_pBDTEntryIn^(0+384),w
  8811  07AF  0086               	movwf	6
  8812  07B0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8813  07B1  0087               	movwf	7
  8814  07B2  1781               	bsf	1,7
  8815                           
  8816                           ;usb_device.c: 1437: }
  8817  07B3  0008               	return
  8818  07B4                     i1l2732:	
  8819                           
  8820                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  8821  07B4  0021               	movlb	1	; select bank1
  8822  07B5  0363               	decf	_controlTransferState^(0+128),w	;volatile
  8823  07B6  1D03               	btfss	3,2
  8824  07B7  0008               	return
  8825                           
  8826                           ;usb_device.c: 1439: {
  8827                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  8828  07B8  0023               	movlb	3	; select bank3
  8829  07B9  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8830                           
  8831                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  8832  07BA  3008               	movlw	8
  8833  07BB  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8834  07BC  0021               	movlb	1	; select bank1
  8835  07BD  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  8836  07BE  0086               	movwf	6
  8837  07BF  0187               	clrf	7
  8838  07C0  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8839  07C1  0081               	movwf	1
  8840                           
  8841                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8842  07C2  3050               	movlw	80
  8843  07C3  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8844  07C4  3000               	movlw	0
  8845  07C5  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8846  07C6  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8847  07C7  3E02               	addlw	2
  8848  07C8  0086               	movwf	6
  8849  07C9  0187               	clrf	7
  8850  07CA  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8851  07CB  3FC0               	movwi [0]fsr1
  8852  07CC  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8853  07CD  3FC1               	movwi [1]fsr1
  8854                           
  8855                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8856  07CE  3004               	movlw	4
  8857  07CF  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8858  07D0  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8859  07D1  0086               	movwf	6
  8860  07D2  0187               	clrf	7
  8861  07D3  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8862  07D4  0081               	movwf	1
  8863                           
  8864                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8865  07D5  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8866  07D6  0086               	movwf	6
  8867  07D7  0187               	clrf	7
  8868  07D8  1781               	bsf	1,7
  8869                           
  8870                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  8871  07D9  3001               	movlw	1
  8872  07DA  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8873  07DB  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8874  07DC  0023               	movlb	3	; select bank3
  8875  07DD  00CE               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8876                           
  8877                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  8878  07DE  0021               	movlb	1	; select bank1
  8879  07DF  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8880  07E0  3E01               	addlw	1
  8881  07E1  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8882  07E2  3000               	movlw	0
  8883  07E3  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8884  07E4  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8885  07E5  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8886  07E6  0086               	movwf	6
  8887  07E7  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8888  07E8  0087               	movwf	7
  8889  07E9  3008               	movlw	8
  8890  07EA  0081               	movwf	1
  8891                           
  8892                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8893  07EB  3050               	movlw	80
  8894  07EC  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8895  07ED  3000               	movlw	0
  8896  07EE  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8897  07EF  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8898  07F0  0086               	movwf	6
  8899  07F1  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8900  07F2  0087               	movwf	7
  8901  07F3  3142               	addfsr 1,2
  8902  07F4  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8903  07F5  3FC0               	movwi [0]fsr1
  8904  07F6  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8905  07F7  3FC1               	movwi [1]fsr1
  8906                           
  8907                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8908  07F8  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8909  07F9  0086               	movwf	6
  8910  07FA  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8911  07FB  0087               	movwf	7
  8912  07FC  3080               	movlw	128
  8913  07FD  0081               	movwf	1
  8914  07FE  0008               	return
  8915  07FF                     __end_of_USBCtrlEPAllowStatusStage:	
  8916                           
  8917                           	psect	text40
  8918  0E24                     __ptext40:	
  8919 ;; *************** function _USBCtrlTrfInHandler *****************
  8920 ;; Defined at:
  8921 ;;		line 2592 in file "../lib/usb/src/usb_device.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;		None
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;  lastDTS         1    5[COMMON] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;		None               void
  8928 ;; Registers used:
  8929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;Total ram usage:        3 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    1
  8942 ;; This function calls:
  8943 ;;		_USBCtrlTrfTxService
  8944 ;; This function is called by:
  8945 ;;		_USBCtrlEPService
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           
  8950                           ;psect for function _USBCtrlTrfInHandler
  8951  0E24                     _USBCtrlTrfInHandler:	
  8952                           
  8953                           ;usb_device.c: 2594: uint8_t lastDTS;
  8954                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8955                           
  8956                           ;incstack = 0
  8957                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8958  0E24  0023               	movlb	3	; select bank3
  8959  0E25  0827               	movf	_pBDTEntryIn^(0+384),w
  8960  0E26  0086               	movwf	6
  8961  0E27  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8962  0E28  0087               	movwf	7
  8963  0E29  3000               	movlw	0
  8964  0E2A  1B01               	btfsc	1,6
  8965  0E2B  3001               	movlw	1
  8966  0E2C  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  8967                           
  8968                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  8969  0E2D  3004               	movlw	4
  8970  0E2E  0627               	xorwf	_pBDTEntryIn^(0+384),w
  8971  0E2F  00A7               	movwf	_pBDTEntryIn^(0+384)
  8972  0E30  3000               	movlw	0
  8973  0E31  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  8974  0E32  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  8975                           
  8976                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  8977  0E33  3008               	movlw	8
  8978  0E34  0021               	movlb	1	; select bank1
  8979  0E35  0662               	xorwf	_USBDeviceState^(0+128),w	;volatile
  8980  0E36  1D03               	btfss	3,2
  8981  0E37  2E47               	goto	i1l3186
  8982                           
  8983                           ;usb_device.c: 2605: {
  8984                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  8985  0E38  0020               	movlb	0	; select bank0
  8986  0E39  0852               	movf	82,w	;volatile
  8987  0E3A  397F               	andlw	127
  8988  0E3B  003D               	movlb	29	; select bank29
  8989  0E3C  0096               	movwf	22	;volatile
  8990                           
  8991                           ;usb_device.c: 2607: if(UADDR != 0u)
  8992  0E3D  0816               	movf	22,w	;volatile
  8993  0E3E  1903               	btfsc	3,2
  8994  0E3F  2E42               	goto	i1l3184
  8995                           
  8996                           ;usb_device.c: 2608: {
  8997                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  8998  0E40  3010               	movlw	16
  8999  0E41  2E43               	goto	L11
  9000  0E42                     i1l3184:	
  9001                           ;usb_device.c: 2610: }
  9002                           
  9003                           
  9004                           ;usb_device.c: 2611: else
  9005                           ;usb_device.c: 2612: {
  9006                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9007  0E42  3004               	movlw	4
  9008  0E43                     L11:	
  9009  0E43  00F3               	movwf	??_USBCtrlTrfInHandler
  9010  0E44  0873               	movf	??_USBCtrlTrfInHandler,w
  9011  0E45  0021               	movlb	1	; select bank1
  9012  0E46  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  9013  0E47                     i1l3186:	
  9014                           
  9015                           ;usb_device.c: 2614: }
  9016                           ;usb_device.c: 2615: }
  9017                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9018  0E47  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9019  0E48  1D03               	btfss	3,2
  9020  0E49  2E87               	goto	i1l371
  9021                           
  9022                           ;usb_device.c: 2619: {
  9023                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9024  0E4A  3058               	movlw	88
  9025  0E4B  00F3               	movwf	??_USBCtrlTrfInHandler
  9026  0E4C  3000               	movlw	0
  9027  0E4D  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9028  0E4E  0023               	movlb	3	; select bank3
  9029  0E4F  0827               	movf	_pBDTEntryIn^(0+384),w
  9030  0E50  0086               	movwf	6
  9031  0E51  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9032  0E52  0087               	movwf	7
  9033  0E53  3142               	addfsr 1,2
  9034  0E54  0873               	movf	??_USBCtrlTrfInHandler,w
  9035  0E55  3FC0               	movwi [0]fsr1
  9036  0E56  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9037  0E57  3FC1               	movwi [1]fsr1
  9038                           
  9039                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9040  0E58  318D  25BC  318E   	fcall	_USBCtrlTrfTxService
  9041                           
  9042                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9043  0E5B  3002               	movlw	2
  9044  0E5C  0023               	movlb	3	; select bank3
  9045  0E5D  065F               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  9046  0E5E  1D03               	btfss	3,2
  9047  0E5F  2E6C               	goto	i1l3196
  9048                           
  9049                           ;usb_device.c: 2628: {
  9050                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9051  0E60  0827               	movf	_pBDTEntryIn^(0+384),w
  9052  0E61  0086               	movwf	6
  9053  0E62  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9054  0E63  0087               	movwf	7
  9055  0E64  3004               	movlw	4
  9056  0E65  0081               	movwf	1
  9057                           
  9058                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9059  0E66  0827               	movf	_pBDTEntryIn^(0+384),w
  9060  0E67  0086               	movwf	6
  9061  0E68  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9062  0E69  0087               	movwf	7
  9063  0E6A  1781               	bsf	1,7
  9064                           
  9065                           ;usb_device.c: 2633: }
  9066  0E6B  0008               	return
  9067  0E6C                     i1l3196:	
  9068                           
  9069                           ;usb_device.c: 2634: else
  9070                           ;usb_device.c: 2635: {
  9071                           ;usb_device.c: 2636: if(lastDTS == 0)
  9072  0E6C  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9073  0E6D  1D03               	btfss	3,2
  9074  0E6E  2E7B               	goto	i1l3200
  9075                           
  9076                           ;usb_device.c: 2637: {
  9077                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9078  0E6F  0827               	movf	_pBDTEntryIn^(0+384),w
  9079  0E70  0086               	movwf	6
  9080  0E71  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9081  0E72  0087               	movwf	7
  9082  0E73  3048               	movlw	72
  9083  0E74  0081               	movwf	1
  9084                           
  9085                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9086  0E75  0827               	movf	_pBDTEntryIn^(0+384),w
  9087  0E76  0086               	movwf	6
  9088  0E77  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9089  0E78  0087               	movwf	7
  9090  0E79  1781               	bsf	1,7
  9091                           
  9092                           ;usb_device.c: 2640: }
  9093  0E7A  0008               	return
  9094  0E7B                     i1l3200:	
  9095                           
  9096                           ;usb_device.c: 2641: else
  9097                           ;usb_device.c: 2642: {
  9098                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9099  0E7B  0827               	movf	_pBDTEntryIn^(0+384),w
  9100  0E7C  0086               	movwf	6
  9101  0E7D  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9102  0E7E  0087               	movwf	7
  9103  0E7F  3008               	movlw	8
  9104  0E80  0081               	movwf	1
  9105                           
  9106                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9107  0E81  0827               	movf	_pBDTEntryIn^(0+384),w
  9108  0E82  0086               	movwf	6
  9109  0E83  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9110  0E84  0087               	movwf	7
  9111  0E85  1781               	bsf	1,7
  9112                           
  9113                           ;usb_device.c: 2645: }
  9114                           ;usb_device.c: 2646: }
  9115                           ;usb_device.c: 2647: }
  9116  0E86  0008               	return
  9117  0E87                     i1l371:	
  9118                           
  9119                           ;usb_device.c: 2648: else
  9120                           ;usb_device.c: 2649: {
  9121                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  9122  0E87  0023               	movlb	3	; select bank3
  9123  0E88  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  9124  0E89  2E8D               	goto	i1l3204
  9125                           
  9126                           ;usb_device.c: 2656: {
  9127                           ;usb_device.c: 2657: outPipes[0].pFunc();
  9128  0E8A  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9129  0E8B  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9130                           
  9131                           ;usb_device.c: 2658: }
  9132                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  9133  0E8C  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9134  0E8D                     i1l3204:	
  9135                           
  9136                           ;usb_device.c: 2660: }
  9137                           ;usb_device.c: 2662: controlTransferState = 0;
  9138  0E8D  0021               	movlb	1	; select bank1
  9139  0E8E  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  9140  0E8F  0008               	return
  9141  0E90                     __end_of_USBCtrlTrfInHandler:	
  9142                           
  9143                           	psect	text41
  9144  0DBC                     __ptext41:	
  9145 ;; *************** function _USBCtrlTrfTxService *****************
  9146 ;; Defined at:
  9147 ;;		line 1771 in file "../lib/usb/src/usb_device.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;		None
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  byteToSend      1    2[COMMON] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;		None               void
  9154 ;; Registers used:
  9155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;Total ram usage:        3 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_USBCtrlEPAllowDataStage
  9171 ;;		_USBCtrlTrfInHandler
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           
  9176                           ;psect for function _USBCtrlTrfTxService
  9177  0DBC                     _USBCtrlTrfTxService:	
  9178                           
  9179                           ;usb_device.c: 1773: uint8_t byteToSend;
  9180                           ;usb_device.c: 1777: byteToSend = 8;
  9181                           
  9182                           ;incstack = 0
  9183                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9184  0DBC  3008               	movlw	8
  9185  0DBD  00F0               	movwf	??_USBCtrlTrfTxService
  9186  0DBE  0870               	movf	??_USBCtrlTrfTxService,w
  9187  0DBF  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9188                           
  9189                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  9190  0DC0  3000               	movlw	0
  9191  0DC1  0023               	movlb	3	; select bank3
  9192  0DC2  0237               	subwf	((_inPipes+1)^(0+384)+3),w	;volatile
  9193  0DC3  3008               	movlw	8
  9194  0DC4  1903               	skipnz
  9195  0DC5  0236               	subwf	(_inPipes^(0+384)+3),w	;volatile
  9196  0DC6  1803               	skipnc
  9197  0DC7  2DD8               	goto	i1l271
  9198                           
  9199                           ;usb_device.c: 1779: {
  9200                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  9201  0DC8  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  9202  0DC9  00F0               	movwf	??_USBCtrlTrfTxService
  9203  0DCA  0870               	movf	??_USBCtrlTrfTxService,w
  9204  0DCB  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9205                           
  9206                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  9207  0DCC  085F               	movf	_shortPacketStatus^(0+384),w	;volatile
  9208  0DCD  1D03               	btfss	3,2
  9209  0DCE  2DD1               	goto	i1l2676
  9210                           
  9211                           ;usb_device.c: 1788: {
  9212                           ;usb_device.c: 1789: shortPacketStatus = 1;
  9213  0DCF  3001               	movlw	1
  9214  0DD0  2DD5               	goto	L12
  9215  0DD1                     i1l2676:	
  9216                           ;usb_device.c: 1790: }
  9217                           
  9218                           
  9219                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  9220  0DD1  035F               	decf	_shortPacketStatus^(0+384),w	;volatile
  9221  0DD2  1D03               	btfss	3,2
  9222  0DD3  2DD8               	goto	i1l271
  9223                           
  9224                           ;usb_device.c: 1792: {
  9225                           ;usb_device.c: 1793: shortPacketStatus = 2;
  9226  0DD4  3002               	movlw	2
  9227  0DD5                     L12:	
  9228  0DD5  00F0               	movwf	??_USBCtrlTrfTxService
  9229  0DD6  0870               	movf	??_USBCtrlTrfTxService,w
  9230  0DD7  00DF               	movwf	_shortPacketStatus^(0+384)	;volatile
  9231  0DD8                     i1l271:	
  9232                           
  9233                           ;usb_device.c: 1794: }
  9234                           ;usb_device.c: 1795: }
  9235                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  9236  0DD8  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9237  0DD9  00F0               	movwf	??_USBCtrlTrfTxService
  9238  0DDA  01F1               	clrf	??_USBCtrlTrfTxService+1
  9239  0DDB  0870               	movf	??_USBCtrlTrfTxService,w
  9240  0DDC  02B6               	subwf	(_inPipes^(0+384)+3),f	;volatile
  9241  0DDD  0871               	movf	??_USBCtrlTrfTxService+1,w
  9242  0DDE  3BB7               	subwfb	((_inPipes+1)^(0+384)+3),f	;volatile
  9243                           
  9244                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  9245  0DDF  0827               	movf	_pBDTEntryIn^(0+384),w
  9246  0DE0  3E01               	addlw	1
  9247  0DE1  00F0               	movwf	??_USBCtrlTrfTxService
  9248  0DE2  3000               	movlw	0
  9249  0DE3  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  9250  0DE4  00F1               	movwf	??_USBCtrlTrfTxService+1
  9251  0DE5  0870               	movf	??_USBCtrlTrfTxService,w
  9252  0DE6  0086               	movwf	6
  9253  0DE7  0871               	movf	??_USBCtrlTrfTxService+1,w
  9254  0DE8  0087               	movwf	7
  9255  0DE9  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9256  0DEA  0081               	movwf	1
  9257                           
  9258                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  9259  0DEB  3058               	movlw	88
  9260  0DEC  00F0               	movwf	??_USBCtrlTrfTxService
  9261  0DED  0870               	movf	??_USBCtrlTrfTxService,w
  9262  0DEE  00DE               	movwf	_pDst^(0+384)
  9263                           
  9264                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9265  0DEF  1C35               	btfss	(_inPipes^(0+384)+2),0	;volatile
  9266  0DF0  2E07               	goto	i1l2696
  9267  0DF1  2E20               	goto	i1l2706
  9268  0DF2                     i1l2688:	
  9269                           ;usb_device.c: 1810: {
  9270                           ;usb_device.c: 1811: while(byteToSend)
  9271                           
  9272                           
  9273                           ;usb_device.c: 1812: {
  9274                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  9275  0DF2  0833               	movf	_inPipes^(0+384),w	;volatile
  9276  0DF3  0084               	movwf	4
  9277  0DF4  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9278  0DF5  0085               	movwf	5
  9279  0DF6  0800               	movf	0,w	;code access
  9280  0DF7  00F0               	movwf	??_USBCtrlTrfTxService
  9281  0DF8  085E               	movf	_pDst^(0+384),w
  9282  0DF9  0086               	movwf	6
  9283  0DFA  0187               	clrf	7
  9284  0DFB  0870               	movf	??_USBCtrlTrfTxService,w
  9285  0DFC  0081               	movwf	1
  9286  0DFD  3001               	movlw	1
  9287  0DFE  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9288  0DFF  3000               	movlw	0
  9289  0E00  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9290  0E01  3001               	movlw	1
  9291  0E02  00F0               	movwf	??_USBCtrlTrfTxService
  9292  0E03  0870               	movf	??_USBCtrlTrfTxService,w
  9293  0E04  07DE               	addwf	_pDst^(0+384),f
  9294                           
  9295                           ;usb_device.c: 1814: byteToSend--;
  9296  0E05  3001               	movlw	1
  9297  0E06  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9298  0E07                     i1l2696:	
  9299  0E07  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9300  0E08  1903               	btfsc	3,2
  9301  0E09  0008               	return
  9302  0E0A  2DF2               	goto	i1l2688
  9303  0E0B                     i1l2698:	
  9304                           ;usb_device.c: 1817: else
  9305                           ;usb_device.c: 1818: {
  9306                           ;usb_device.c: 1819: while(byteToSend)
  9307                           
  9308                           ;usb_device.c: 1815: }
  9309                           ;usb_device.c: 1816: }
  9310                           
  9311                           
  9312                           ;usb_device.c: 1820: {
  9313                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  9314  0E0B  0833               	movf	_inPipes^(0+384),w	;volatile
  9315  0E0C  0084               	movwf	4
  9316  0E0D  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9317  0E0E  0085               	movwf	5
  9318  0E0F  0800               	movf	0,w	;code access
  9319  0E10  00F0               	movwf	??_USBCtrlTrfTxService
  9320  0E11  085E               	movf	_pDst^(0+384),w
  9321  0E12  0086               	movwf	6
  9322  0E13  0187               	clrf	7
  9323  0E14  0870               	movf	??_USBCtrlTrfTxService,w
  9324  0E15  0081               	movwf	1
  9325  0E16  3001               	movlw	1
  9326  0E17  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9327  0E18  3000               	movlw	0
  9328  0E19  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9329  0E1A  3001               	movlw	1
  9330  0E1B  00F0               	movwf	??_USBCtrlTrfTxService
  9331  0E1C  0870               	movf	??_USBCtrlTrfTxService,w
  9332  0E1D  07DE               	addwf	_pDst^(0+384),f
  9333                           
  9334                           ;usb_device.c: 1822: byteToSend--;
  9335  0E1E  3001               	movlw	1
  9336  0E1F  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9337  0E20                     i1l2706:	
  9338  0E20  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9339  0E21  1903               	btfsc	3,2
  9340  0E22  0008               	return
  9341  0E23  2E0B               	goto	i1l2698
  9342  0E24                     __end_of_USBCtrlTrfTxService:	
  9343  007E                     btemp	set	126	;btemp
  9344  007E                     int$flags	set	126
  9345  007E                     wtemp	set	126
  9346  007E                     wtemp0	set	126
  9347  0080                     wtemp1	set	128
  9348  0082                     wtemp2	set	130
  9349  0084                     wtemp3	set	132
  9350  0086                     wtemp4	set	134
  9351  0088                     wtemp5	set	136
  9352  007F                     wtemp6	set	127
  9353  007E                     ttemp	set	126
  9354  007E                     ttemp0	set	126
  9355  0081                     ttemp1	set	129
  9356  0084                     ttemp2	set	132
  9357  0087                     ttemp3	set	135
  9358  007F                     ttemp4	set	127
  9359  007E                     ltemp	set	126
  9360  007E                     ltemp0	set	126
  9361  0082                     ltemp1	set	130
  9362  0086                     ltemp2	set	134
  9363  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         226
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      6      12
    BANK2            16     15      15
    BANK3            80      5      79
    BANK4            80      0      18
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), CtrlTrfData(BANK0[8]), RAM(DATA[4096]), 
		 -> SetupPkt(BANK0[8]), NULL(NULL[0]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S249$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S239$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S239$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S215$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S215$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S215$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S215$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    8597
                                              0 BANK3      5     5      0
                          _CDCInitEP
                       _CDCTxService
                           _SPI_Init
                          _SPI_Write
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (1) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _getsUSBUSART                                         4     3      1    2332
                                             11 BANK2      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            3     3      0      34
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             11 BANK2      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _CDCInitEP                                            1     1      0    3045
                                             13 BANK2      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    2093
                                              0 BANK2     11     7      4
 ---------------------------------------------------------------------------------
 (2) _USBEnableEndpoint                                    6     5      1     952
                                              7 BANK2      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBConfigureEndpoint                                 7     6      1     524
                                              0 BANK2      7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   27385
                                              5 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   27385
                                             15 BANK0      1     1      0
                                              3 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   16120
                                              0 BANK1      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   15891
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12150
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4335
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     526
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4120
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3649
                                              0 BANK0      6     0      6
                 _USBCheckCDCRequest
                        i1_CDCInitEP
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_CDCInitEP                                          1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) i1_USBEnableEndpoint                                  6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) i1_USBConfigureEndpoint                               7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _SPI_Init
   _SPI_Write
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
   _getsUSBUSART
     _USBTransferOnePacket
   _putUSBUSART

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_SYSTEM_Initialize
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_SYSTEM_Initialize
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      6       C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      F       F       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      5      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      12      13       22.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri May 19 18:12:11 2017

                              _USB_SD_Ptr 031B                                         pc 0002  
                             __CFG_CP$OFF 0000                               _SSPSTATbits 0214  
                           _USBDeviceInit 03E4                        __size_of_CDCInitEP 003D  
                             __CFG_LVP$ON 0000      USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062                                       l233 092D  
                                     l173 042B               __end_of_USBStdGetDscHandler 0F7D  
                                     l622 08A0                                       l643 0EEE  
                                     l565 08D0                                       _BDT 0020  
                                     _RC2 0072                                       _RC5 0075  
                                     _UIE 0E92                                       _UIR 0E90  
                              _USBSuspend 0939                      USBStdSetCfgHandler@i 006A  
                    USBStdSetCfgHandler@p 0067               __end_ofi1_SYSTEM_Initialize 08BA  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                          _USBDeviceTasks 0167                            _USBDeviceState 00E2  
                   ??_USBCtrlTrfRxService 0072                            ??_getsUSBUSART 016C  
                USBEnableEndpoint@options 0167                                      l4000 0727  
                                    l4010 0770                                      l4012 0788  
                                    l4022 08C4                                      l4102 0453  
                                    l4210 028F                                      l4018 08BD  
                                    l4204 0286                                      l4108 0477  
                                    l4060 0405                                      l4052 03F4  
              USBConfigureEndpoint@handle 0166                                      l4222 02AE  
                                    l4230 02CB                                      l4302 0EB0  
                                    l4232 02D0                                      l4240 02ED  
                                    l4144 0932                                      l4080 0430  
                                    l4152 0C52                                      l4320 0EC9  
                                    l4250 0302                                      l4242 02F1  
                                    l4162 0C69                                      l4252 0318  
                                    l4068 0412                                      l4164 0C88  
                                    l4156 0C67                                      l4180 0919  
                                    l4324 0EFA                                      l4190 025B  
                                    l4166 0C9D                                      l4248 02FC  
                                    l4198 0266                                      l3970 0B35  
                                    l3972 0B3E                                      l3980 09A1  
                                    l3984 09A9                                      l3992 0717  
                                    u3625 0B0E                                      u3635 0B14  
                                    u3645 0B1C                                      u3745 0415  
                                    i1l35 0A85                     ??_USBCtrlTrfTxService 0070  
                                    _UCFG 0E91                                      _UEP0 0E98  
                                    _UEP1 0E99                                      _UEIE 0E97  
                                    _UEIR 0E93                                      _UCON 0E8E  
                            ?i1_CDCInitEP 0070                              __CFG_WRT$OFF 0000  
                         _CDCDataInHandle 01C6    USBStdFeatureReqHandler@current_ep_data 006A  
                                    _pDst 01DE                                      _main 0E90  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                               _BaudRateGen 01B8  
                                    fsr1l 0006                           _USBDeviceAttach 091C  
                                    btemp 007E                                      ltemp 007E  
                                    start 0012                                      ttemp 007E  
                                    wtemp 007E                             __CFG_IESO$OFF 0000  
              __end_of_USBCheckStdRequest 0DBC                    ??_USBCtrlTrfOutHandler 0076  
                           __CFG_MCLRE$ON 0000                 ??_USBStdFeatureReqHandler 0066  
                ??_USBStdGetStatusHandler 0070                            ?_USBDeviceInit 0070  
                             _writeBuffer 0320                                     ?_main 0070  
              i1USBEnableEndpoint@options 0077                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0092                                     _ANSC2 0C72  
                  __end_of_USBDeviceTasks 024B                 ?_USBCtrlEPServiceComplete 0070  
                                   i1l323 0BF3                                     i1l173 04E0  
                                   i1l326 0C37                                     i1l190 01C4  
                                   i1l271 0DD8                                     i1l327 0BFC  
                                   i1l328 0BFF                                     i1l184 0189  
                                   i1l258 0631                                     i1l194 01EF  
                                   i1l371 0E87                                     i1l419 0124  
                                   i1l195 0248                                     i1l196 01F8  
                                   i1l286 055E                                     i1l383 0DBB  
                                   i1l385 0D62                                     i1l394 0D95  
                                   i1l565 08B9                                     i1l479 0D59  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0072                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 0CFB                                     _sd000 03E0  
                                   _sd001 0366                                     _sd002 039A  
          ?_USBIncrement1msInternalTimers 0070                                     main@a 01EC  
                                   main@i 01EE                          __end_of_SPI_Init 0892  
                          __CFG_BOREN$OFF 0000                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                         __end_of_CDCInitEP 0AC3  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                        __size_of_SPI_Write 0013  
                         putUSBUSART@data 0162              __size_of_USBStdSetCfgHandler 008E  
                         __initialization 0014                              __end_of_main 0EFE  
                   _control_signal_bitmap 01DC                            __CFG_LPBOR$OFF 0000  
               __size_of_USBCtrlEPService 0054                                    ??_main 01EA  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                        SPI_Write@TempVar 0161                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 049B                              _cdc_mem_type 01D8  
                 __end_of_USBDeviceAttach 0939                          _CDCDataOutHandle 01C8  
                                  i1S4386 0800                                    _ACTCON 039B  
                         getsUSBUSART@len 016B                    SYSTEM_Initialize@state 0160  
                   __size_of_CDCTxService 00D0                                    i1l3004 0640  
                                  i1l3012 0649                                    i1l3102 0DA2  
                                  i1l3200 0E7B                                    i1l3042 0566  
                                  i1l3106 0DB0                                    i1l3204 0E8D  
                                  i1l3044 057F                                    i1l3054 05AE  
                                  i1l3056 05BA                                    i1l2600 0D21  
                                  i1l3080 0D71                                    i1l3216 098C  
                                  i1l3170 0A4B                                    i1l2530 0AFB  
                                  i1l3090 0D82                                    i1l3250 09DD  
                                  i1l3218 0995                                    i1l2612 0D3F  
                                  i1l3092 0D85                                    i1l3076 0D6B  
                                  i1l3340 04C7                                    i1l3332 04BB  
                                  i1l3324 04AA                                    i1l3158 0A1F  
                                  i1l2606 0D31                                    i1l2542 0967  
                                  i1l2550 0F8A                                    i1l3078 0D6E  
                                  i1l3270 0BE4                                    i1l3184 0E42  
                                  i1l2528 0AF2                                    i1l2640 08A7  
                                  i1l3088 0D7F                                    i1l3248 09DB  
                                  i1l3352 04E5                                    i1l2706 0E20  
                                  i1l3186 0E47                                    i1l2618 0D47  
                                  i1l2538 0960                                    i1l2570 0FFB  
                                  i1l2650 0A53                                    i1l2714 08D5  
                                  i1l2802 06AE                                    i1l3610 023E  
                                  i1l3602 0216                                    i1l3196 0E6C  
                                  i1l2732 07B4                                    i1l2644 08AE  
                                  i1l2652 0A57                                    i1l2900 0056  
                                  i1l3268 0BE1                                    i1l3380 0526  
                                  i1l3532 0183                                    i1l3524 0176  
                                  i1l2558 0F9A                                    i1l2654 0A5A  
                                  i1l3374 0502                                    i1l2568 0FE3  
                                  i1l2648 0A4F                                    i1l2920 00A5  
                                  i1l2832 0F09                                    i1l2824 06F3  
                                  i1l2808 06C2                                    i1l3608 022F  
                                  i1l3552 01A0                                    i1l2658 0A5D  
                                  i1l2914 0084                                    i1l3546 019A  
                                  i1l2676 0DD1                                    i1l2596 0D1A  
                                  i1l2588 0D0E                                    i1l2852 0F6A  
                                  i1l2844 0F46                                    i1l2836 0F13  
                                  i1l2764 0CCC                                    i1l4390 0A80  
                                  i1l2942 00E6                                    i1l2926 00B9  
                                  i1l2854 0F6D                                    i1l2846 0F49  
                                  i1l2870 0C0F                                    i1l3582 01E7  
                                  i1l3574 01D1                                    i1l3558 01B5  
                                  i1l2688 0DF2                                    i1l2696 0E07  
                                  i1l2952 010F                                    i1l2936 00D4  
                                  i1l2928 00C4                                    i1l2880 0C2B  
                                  i1l2792 0698                                    i1l2784 0687  
                                  i1l2768 0CDF                                    i1l3568 01CA  
                                  i1l2698 0E0B                                    i1l2962 012A  
                                  i1l2954 0115                                    i1l2938 00DB  
                                  i1l2858 0F70                                    i1l4388 0A66  
                                  i1l2966 0149                                    i1l2982 05FB  
                                  i1l2968 0152                                    i1l2898 0054  
                                  i1l2986 05FF                                    u209_25 0CD6  
                                  u248_25 0558                                    u184_25 0ACB  
                                  u185_25 0AD1                                    u273_25 0BAA  
                                  u186_25 0AD9                                    u285_25 04CA  
                                  _OSCCON 0099                             CDCTxService@i 016C  
                                  _TRISC2 0472                                    _TRISB4 046C  
                                  _TRISB6 046E                                    _TRISC5 0475  
                                  _TRISC6 0476                                    _TRISC7 0477  
                                  _SSPBUF 0211              i1USBTransferOnePacket@handle 0079  
                          __CFG_PWRTE$OFF 0000                         _shortPacketStatus 01DF  
                         USBDeviceTasks@i 006F               USBStdFeatureReqHandler@pUEP 0068  
                USBTransferOnePacket@data 0161                USBCtrlTrfInHandler@lastDTS 0075  
                         ??_USBDeviceInit 0160                              ?_putUSBUSART 0160  
                          __CFG_STVREN$ON 0000                      __end_of_getsUSBUSART 0C9F  
                       _USBEnableEndpoint 0998           __size_of_USBStdGetStatusHandler 0055  
                                  _memset 08D1                      i1USBEnableEndpoint@p 007A  
                      ?_USBEnableEndpoint 0167             __size_of_USBTransferOnePacket 0084  
                       __end_of_SPI_Write 08A5                              _CDCTxService 024B  
                     ??_USBEnableEndpoint 0168              i1USBConfigureEndpoint@handle 0076  
                             _CtrlTrfData 0058                      _controlTransferState 00E3  
                       _SYSTEM_Initialize 08BA                   __end_of__initialization 003A  
              i1USBTransferOnePacket@data 0071                      __size_ofi1_CDCInitEP 0035  
                      ?_SYSTEM_Initialize 0070                  __size_of_USBStallHandler 0027  
                     __size_of_USBSuspend 001F                      i1USBDeviceInit@i_821 0073  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 09BB  
                           __end_of_sd000 03E4                             __end_of_sd001 039A  
                           __end_of_sd002 03CE                       ??_SYSTEM_Initialize 0160  
        __size_of_USBCtrlEPAllowDataStage 005C             __size_of_USBConfigureEndpoint 0043  
                 __end_ofi1_USBDeviceInit 0548               __end_of_USBCtrlTrfInHandler 0E90  
                               ?_SPI_Init 0070                                _cdc_notice 0220  
                              _cdc_rx_len 01D9                                _cdc_tx_len 01DB  
                ??_USBCtrlTrfSetupHandler 006E                   _USBTicksSinceSuspendEnd 01D7  
                        ?_USBDeviceAttach 0070                 __end_of_SYSTEM_Initialize 08D1  
                  _USBStdGetStatusHandler 0BEF                                __pbssBANK1 00E0  
                              __pbssBANK3 01A0                                __pbssBANK4 0220  
                              __pbssBANK5 02A0                                __pbssBANK6 0320  
             __size_of_USBWakeFromSuspend 0020                               _pBDTEntryIn 01A7  
        __end_of_USBCtrlEPServiceComplete 067B               __size_of_USBCheckCDCRequest 005F  
                              __pmaintext 0E90                      USBCtrlTrfRxService@i 0074  
                         __CFG_PLLMULT$3x 0000                                __pintentry 0004  
            __size_ofi1_USBEnableEndpoint 0020                                   ?_memset 0070  
                              _device_dsc 03CE                                ??_SPI_Init 0160  
                        _USBCtrlEPService 0B9B                                _ep_data_in 01C0  
             __end_of_USBCtrlTrfRxService 05E9                        _USBCheckStdRequest 0D5A  
                       _configDescriptor1 0323               __end_of_USBCtrlTrfTxService 0E24  
                     _USBStdSetCfgHandler 067B                                   u275_2m0 0BDA  
                                 _SSP1BUF 0211                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90              __size_ofi1_SYSTEM_Initialize 0015  
                           _cdc_trf_state 01DA                  ??i1_USBTransferOnePacket 0074  
                                 _pCDCDst 01CA                                   _pCDCSrc 01CC  
                   __size_of_getsUSBUSART 005B           ??_USBIncrement1msInternalTimers 0070  
                    ?_USBStdSetCfgHandler 0070                                 _CDCInitEP 0A86  
                           SPI_Write@data 0162                __size_of_USBEnableEndpoint 0023  
                              _readBuffer 02A0                      ??_USBCheckStdRequest 006D  
           __size_of_USBCtrlTrfOutHandler 0037                          ??_USBDeviceTasks 00E9  
                       ??_USBStallHandler 0070                          ?i1_USBDeviceInit 0070  
                    __size_of_putUSBUSART 001B                        getsUSBUSART@buffer 016E  
                         __size_of_memset 0018                 __end_of_configDescriptor1 0366  
                                 __ptext1 0901                                   __ptext2 0C44  
                                 __ptext3 03E4                                   __ptext4 091C  
                                 __ptext5 08BA                                   __ptext6 0892  
                                 __ptext7 087F                                   __ptext8 024B  
                                 __ptext9 0A86                                   _inPipes 01B3  
             _USBDeferOUTDataStagePackets 01D2                              ??_USBSuspend 0066  
                   i1USBEnableEndpoint@ep 007C                        __end_of_USB_CD_Ptr 0323  
              __size_of_SYSTEM_Initialize 0017           __size_of_USBCtrlTrfSetupHandler 0053  
                                 clrloop0 087A                  ??i1_USBConfigureEndpoint 0071  
                    end_of_initialization 003A                              _getsUSBUSART 0C44  
                      __end_of_USB_SD_Ptr 0321                       _pBDTEntryEP0OutNext 00E0  
                                 memset@c 0072                                   memset@n 0074  
                                 memset@p 0076                           _USB1msTickCount 01BC  
         _dummy_encapsulated_cmd_response 022A                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 0066                          __CFG_CLKOUTEN$ON 0000  
                              ?_CDCInitEP 0070                        __end_of_USBSuspend 0958  
                 _USBCtrlEPAllowDataStage 0C9F                              __pstringtext 031B  
                _USBCtrlEPServiceComplete 05E9                _USBStatusStageEnabledFlag1 01D4  
              _USBStatusStageEnabledFlag2 01D5                        USBEnableEndpoint@p 016A  
                        __CFG_FOSC$INTOSC 0000                        _BothEP0OutUOWNsSet 01CE  
               USBStdSetCfgHandler@i_1174 0069                                 _SPI_Write 0892  
               USBConfigureEndpoint@EPNum 0165                ?_USBCtrlEPAllowStatusStage 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0064                                 _USTATcopy 00E5  
                i1USBTransferOnePacket@ep 0078              __end_of_USBTransferOnePacket 078D  
         __size_ofi1_USBTransferOnePacket 0083                         putUSBUSART@length 0160  
                      __CFG_PLLEN$ENABLED 0000                        USBDeviceInit@i_821 0163  
                  _USBCtrlTrfSetupHandler 0B48                     __end_of_USBDeviceInit 049B  
   __end_of_USBIncrement1msInternalTimers 0901    __size_of_USBIncrement1msInternalTimers 0018  
           _USBIncrement1msInternalTimers 08E9                            __end_of_memset 08E9  
                       _USBBusIsSuspended 01D0                         __size_of_SPI_Init 0013  
                     start_initialization 0014                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0075                                ?_SPI_Write 0070  
                             _cdc_data_rx 0120                               _cdc_data_tx 00A0  
            __end_of_USBConfigureEndpoint 0B48           __end_of_USBStdFeatureReqHandler 0167  
                     i1_USBEnableEndpoint 0958           __size_ofi1_USBConfigureEndpoint 0042  
                           ??i1_CDCInitEP 007D         __end_of_USBCtrlEPAllowStatusStage 07FF  
                __end_of_USBCtrlEPService 0BEF                 ??_USBCtrlEPAllowDataStage 0073  
                             ??_CDCInitEP 016D                            USBDeviceInit@i 0164  
                          USBDeviceInit@p 0161                    _pBDTEntryEP0OutCurrent 00E4  
                 USBTransferOnePacket@dir 0160                   USBTransferOnePacket@len 0163  
             i1USBConfigureEndpoint@EPNum 0075                       _USBStdGetDscHandler 0EFE  
                    ?i1_USBEnableEndpoint 0077                                  ??_memset 0076  
                     i1_SYSTEM_Initialize 08A5                    i1_USBTransferOnePacket 0F7D  
                  _USBActiveConfiguration 01E9            __end_of_USBStdGetStatusHandler 0C44  
               i1USBTransferOnePacket@dir 0070                 i1USBTransferOnePacket@len 0073  
                               ___latbits 0002                             __pcstackBANK0 0060  
                           __pcstackBANK1 00E6                             __pcstackBANK2 0160  
                           __pcstackBANK3 01EA              __size_of_USBCtrlTrfInHandler 006C  
                    ?_USBStdGetDscHandler 0070                      ?i1_SYSTEM_Initialize 0070  
              __end_of_USBWakeFromSuspend 0998                           _USBStallHandler 09BB  
                            _pBDTEntryOut 01AD                __end_of_USBCheckCDCRequest 0D5A  
                __size_of_USBDeviceAttach 001D                       __end_ofi1_CDCInitEP 0A17  
                   ??i1_USBEnableEndpoint 0078                    i1_USBConfigureEndpoint 0AC3  
                               __pswtext1 0800                      _USBTransferOnePacket 0709  
                        main@numBytesRead 01ED              __end_of_USBCtrlTrfOutHandler 0A4E  
                   ??_USBStdGetDscHandler 0070                               ??_SPI_Write 0160  
                             _ep_data_out 01C3              __size_of_USBCtrlTrfRxService 00A1  
           USBConfigureEndpoint@direction 0160                     ??i1_SYSTEM_Initialize 0070  
            __size_of_USBCtrlTrfTxService 0068                ??_USBCtrlEPServiceComplete 0075  
                               clear_ram0 0879                                  _PIE1bits 0091  
                                _PIE2bits 0092                                  _PIR1bits 0011  
                                _PIR2bits 0012                             ??_putUSBUSART 0161  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 01D1  
             __size_of_USBCheckStdRequest 0062                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 0B05                                  _SPI_Init 087F  
        __size_of_USBStdFeatureReqHandler 0129                     ?_USBTransferOnePacket 0160  
                       _SYS_InterruptHigh 0004                             ?_CDCTxService 0070  
                            _RemoteWakeup 01CF                        ?_SYS_InterruptHigh 0070  
                __size_ofi1_USBDeviceInit 00AD                   __end_of_USBStallHandler 09E2  
             ??_USBCtrlEPAllowStatusStage 0070               __end_of_USBStdSetCfgHandler 0709  
                             i1_CDCInitEP 09E2                       ??_SYS_InterruptHigh 00EB  
                      __end_of_device_dsc 03E0                   ?_USBCtrlTrfSetupHandler 0070  
                 USBStdGetStatusHandler@p 0071                    USBTransferOnePacket@ep 0168  
                                _SetupPkt 0050                     ?_USBConfigureEndpoint 0160  
                       ??_USBDeviceAttach 0160                 __end_of_SYS_InterruptHigh 0012  
                     __end_of_putUSBUSART 091C                               _line_coding 01E0  
                          ??_CDCTxService 016B                   __size_of_USBDeviceTasks 00E4  
                                __ptext10 0709                                  __ptext11 0998  
                                __ptext20 0B9B                                  __ptext12 0B05  
                                __ptext21 0B48                                  __ptext30 0A4E  
                                __ptext22 05E9                                  __ptext14 0167  
                                __ptext31 08A5                                  __ptext23 0C9F  
                                __ptext15 049B                                  __ptext40 0E24  
                                __ptext32 09E2                                  __ptext24 0D5A  
                                __ptext16 0978                                  __ptext41 0DBC  
                                __ptext33 0F7D                                  __ptext25 067B  
                                __ptext17 0939                                  __ptext34 0958  
                                __ptext26 08D1                                  __ptext18 09BB  
                                __ptext35 0AC3                                  __ptext27 0BEF  
                                __ptext19 08E9                                  __ptext36 0CFB  
                                __ptext28 0EFE                                  __ptext37 0A17  
                                __ptext29 003E                                  __ptext38 0548  
                                __ptext39 078D            __end_of_USBCtrlTrfSetupHandler 0B9B  
                           __size_of_main 006E                         ?_USBCtrlEPService 0070  
         i1USBConfigureEndpoint@direction 0070                        ??_USBCtrlEPService 00E6  
                     _USBCtrlTrfInHandler 0E24                                  _outPipes 01A0  
                    _USBCtrlTrfOutHandler 0A17                                  int$flags 007E  
                 ?i1_USBTransferOnePacket 0070                 _USBCtrlEPAllowStatusStage 078D  
                  ??_USBTransferOnePacket 0164                 _USBDeferStatusStagePacket 01D3  
                CDCTxService@byte_to_send 016D                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                i1SYSTEM_Initialize@state 0070                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 0072                                  memset@p1 0070  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 006B  
                                intlevel1 0000                    __size_of_USBDeviceInit 00B7  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0A86  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0038  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         _USER_USB_CALLBACK_EVENT_HANDLER 0A4E                         ??i1_USBDeviceInit 0070  
                 ?i1_USBConfigureEndpoint 0070            __end_ofi1_USBTransferOnePacket 1000  
                  ??_USBConfigureEndpoint 0161                     ?_USBCtrlTrfOutHandler 0070  
                             _putUSBUSART 0901                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0548                        _USBWakeFromSuspend 0978  
                 _USBStdFeatureReqHandler 003E                        _USBCheckCDCRequest 0CFB  
                     _USBCtrlTrfTxService 0DBC                __size_of_SYS_InterruptHigh 000E  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0073  
                   _USBAlternateInterface 01E7                       ?_USBCheckCDCRequest 0070  
                             _SSPCON1bits 0215                       USBEnableEndpoint@ep 016C  
                         _endpoint_number 01DD                      ?_USBCtrlTrfRxService 0070  
                           ?_getsUSBUSART 016B                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 01D6  
          __end_ofi1_USBConfigureEndpoint 0B05                      ??_USBWakeFromSuspend 0066  
             __end_ofi1_USBEnableEndpoint 0978                USBTransferOnePacket@handle 0169  
                    __end_of_CDCTxService 031B                      ??_USBCheckCDCRequest 0070  
                              _USB_CD_Ptr 0321  
