

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed May 31 11:24:03 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	swtext1,local,class=CONST,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x20,48,_BDT
    69                           	dabs	1,0x58,8,_CtrlTrfData
    70                           	dabs	1,0x50,8,_SetupPkt
    71                           	dabs	1,0xA0,64,_cdc_data_tx
    72                           	dabs	1,0x120,64,_cdc_data_rx
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 1.42
    76                           ; Generated 13/04/2017 GMT
    77                           ; 
    78                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F1459 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011D                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0197                     	;# 
   177  0199                     	;# 
   178  019A                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019E                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  039A                     	;# 
   209  039B                     	;# 
   210  0611                     	;# 
   211  0612                     	;# 
   212  0613                     	;# 
   213  0613                     	;# 
   214  0614                     	;# 
   215  0615                     	;# 
   216  0616                     	;# 
   217  0616                     	;# 
   218  0691                     	;# 
   219  0692                     	;# 
   220  0693                     	;# 
   221  0694                     	;# 
   222  0695                     	;# 
   223  0E8E                     	;# 
   224  0E8F                     	;# 
   225  0E90                     	;# 
   226  0E91                     	;# 
   227  0E92                     	;# 
   228  0E93                     	;# 
   229  0E94                     	;# 
   230  0E94                     	;# 
   231  0E95                     	;# 
   232  0E96                     	;# 
   233  0E97                     	;# 
   234  0E98                     	;# 
   235  0E99                     	;# 
   236  0E9A                     	;# 
   237  0E9B                     	;# 
   238  0E9C                     	;# 
   239  0E9D                     	;# 
   240  0E9E                     	;# 
   241  0E9F                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  0111                     	;# 
   300  0112                     	;# 
   301  0113                     	;# 
   302  0114                     	;# 
   303  0115                     	;# 
   304  0116                     	;# 
   305  0117                     	;# 
   306  0118                     	;# 
   307  0119                     	;# 
   308  011D                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  018E                     	;# 
   312  0191                     	;# 
   313  0191                     	;# 
   314  0192                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0194                     	;# 
   318  0195                     	;# 
   319  0196                     	;# 
   320  0197                     	;# 
   321  0199                     	;# 
   322  019A                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019D                     	;# 
   327  019E                     	;# 
   328  019F                     	;# 
   329  020C                     	;# 
   330  020D                     	;# 
   331  0211                     	;# 
   332  0211                     	;# 
   333  0212                     	;# 
   334  0212                     	;# 
   335  0213                     	;# 
   336  0213                     	;# 
   337  0214                     	;# 
   338  0214                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0216                     	;# 
   343  0216                     	;# 
   344  0217                     	;# 
   345  0217                     	;# 
   346  0391                     	;# 
   347  0392                     	;# 
   348  0393                     	;# 
   349  0394                     	;# 
   350  0395                     	;# 
   351  0396                     	;# 
   352  039A                     	;# 
   353  039B                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0613                     	;# 
   358  0614                     	;# 
   359  0615                     	;# 
   360  0616                     	;# 
   361  0616                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  0695                     	;# 
   367  0E8E                     	;# 
   368  0E8F                     	;# 
   369  0E90                     	;# 
   370  0E91                     	;# 
   371  0E92                     	;# 
   372  0E93                     	;# 
   373  0E94                     	;# 
   374  0E94                     	;# 
   375  0E95                     	;# 
   376  0E96                     	;# 
   377  0E97                     	;# 
   378  0E98                     	;# 
   379  0E99                     	;# 
   380  0E9A                     	;# 
   381  0E9B                     	;# 
   382  0E9C                     	;# 
   383  0E9D                     	;# 
   384  0E9E                     	;# 
   385  0E9F                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011D                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0197                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  020D                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0391                     	;# 
   491  0392                     	;# 
   492  0393                     	;# 
   493  0394                     	;# 
   494  0395                     	;# 
   495  0396                     	;# 
   496  039A                     	;# 
   497  039B                     	;# 
   498  0611                     	;# 
   499  0612                     	;# 
   500  0613                     	;# 
   501  0613                     	;# 
   502  0614                     	;# 
   503  0615                     	;# 
   504  0616                     	;# 
   505  0616                     	;# 
   506  0691                     	;# 
   507  0692                     	;# 
   508  0693                     	;# 
   509  0694                     	;# 
   510  0695                     	;# 
   511  0E8E                     	;# 
   512  0E8F                     	;# 
   513  0E90                     	;# 
   514  0E91                     	;# 
   515  0E92                     	;# 
   516  0E93                     	;# 
   517  0E94                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E98                     	;# 
   523  0E99                     	;# 
   524  0E9A                     	;# 
   525  0E9B                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0E9F                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  0091                     	;# 
   571  0092                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  009F                     	;# 
   584  010C                     	;# 
   585  010D                     	;# 
   586  010E                     	;# 
   587  0111                     	;# 
   588  0112                     	;# 
   589  0113                     	;# 
   590  0114                     	;# 
   591  0115                     	;# 
   592  0116                     	;# 
   593  0117                     	;# 
   594  0118                     	;# 
   595  0119                     	;# 
   596  011D                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599  018E                     	;# 
   600  0191                     	;# 
   601  0191                     	;# 
   602  0192                     	;# 
   603  0193                     	;# 
   604  0193                     	;# 
   605  0194                     	;# 
   606  0195                     	;# 
   607  0196                     	;# 
   608  0197                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019C                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019F                     	;# 
   617  020C                     	;# 
   618  020D                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0216                     	;# 
   631  0216                     	;# 
   632  0217                     	;# 
   633  0217                     	;# 
   634  0391                     	;# 
   635  0392                     	;# 
   636  0393                     	;# 
   637  0394                     	;# 
   638  0395                     	;# 
   639  0396                     	;# 
   640  039A                     	;# 
   641  039B                     	;# 
   642  0611                     	;# 
   643  0612                     	;# 
   644  0613                     	;# 
   645  0613                     	;# 
   646  0614                     	;# 
   647  0615                     	;# 
   648  0616                     	;# 
   649  0616                     	;# 
   650  0691                     	;# 
   651  0692                     	;# 
   652  0693                     	;# 
   653  0694                     	;# 
   654  0695                     	;# 
   655  0E8E                     	;# 
   656  0E8F                     	;# 
   657  0E90                     	;# 
   658  0E91                     	;# 
   659  0E92                     	;# 
   660  0E93                     	;# 
   661  0E94                     	;# 
   662  0E94                     	;# 
   663  0E95                     	;# 
   664  0E96                     	;# 
   665  0E97                     	;# 
   666  0E98                     	;# 
   667  0E99                     	;# 
   668  0E9A                     	;# 
   669  0E9B                     	;# 
   670  0E9C                     	;# 
   671  0E9D                     	;# 
   672  0E9E                     	;# 
   673  0E9F                     	;# 
   674  0FE4                     	;# 
   675  0FE5                     	;# 
   676  0FE6                     	;# 
   677  0FE7                     	;# 
   678  0FE8                     	;# 
   679  0FE9                     	;# 
   680  0FEA                     	;# 
   681  0FEB                     	;# 
   682  0FED                     	;# 
   683  0FEE                     	;# 
   684  0FEF                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0008                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  0011                     	;# 
   701  0012                     	;# 
   702  0015                     	;# 
   703  0016                     	;# 
   704  0016                     	;# 
   705  0017                     	;# 
   706  0018                     	;# 
   707  0019                     	;# 
   708  001A                     	;# 
   709  001B                     	;# 
   710  001C                     	;# 
   711  008C                     	;# 
   712  008D                     	;# 
   713  008E                     	;# 
   714  0091                     	;# 
   715  0092                     	;# 
   716  0095                     	;# 
   717  0096                     	;# 
   718  0097                     	;# 
   719  0098                     	;# 
   720  0099                     	;# 
   721  009A                     	;# 
   722  009B                     	;# 
   723  009B                     	;# 
   724  009C                     	;# 
   725  009D                     	;# 
   726  009E                     	;# 
   727  009F                     	;# 
   728  010C                     	;# 
   729  010D                     	;# 
   730  010E                     	;# 
   731  0111                     	;# 
   732  0112                     	;# 
   733  0113                     	;# 
   734  0114                     	;# 
   735  0115                     	;# 
   736  0116                     	;# 
   737  0117                     	;# 
   738  0118                     	;# 
   739  0119                     	;# 
   740  011D                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  018E                     	;# 
   744  0191                     	;# 
   745  0191                     	;# 
   746  0192                     	;# 
   747  0193                     	;# 
   748  0193                     	;# 
   749  0194                     	;# 
   750  0195                     	;# 
   751  0196                     	;# 
   752  0197                     	;# 
   753  0199                     	;# 
   754  019A                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  019D                     	;# 
   759  019E                     	;# 
   760  019F                     	;# 
   761  020C                     	;# 
   762  020D                     	;# 
   763  0211                     	;# 
   764  0211                     	;# 
   765  0212                     	;# 
   766  0212                     	;# 
   767  0213                     	;# 
   768  0213                     	;# 
   769  0214                     	;# 
   770  0214                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0216                     	;# 
   775  0216                     	;# 
   776  0217                     	;# 
   777  0217                     	;# 
   778  0391                     	;# 
   779  0392                     	;# 
   780  0393                     	;# 
   781  0394                     	;# 
   782  0395                     	;# 
   783  0396                     	;# 
   784  039A                     	;# 
   785  039B                     	;# 
   786  0611                     	;# 
   787  0612                     	;# 
   788  0613                     	;# 
   789  0613                     	;# 
   790  0614                     	;# 
   791  0615                     	;# 
   792  0616                     	;# 
   793  0616                     	;# 
   794  0691                     	;# 
   795  0692                     	;# 
   796  0693                     	;# 
   797  0694                     	;# 
   798  0695                     	;# 
   799  0E8E                     	;# 
   800  0E8F                     	;# 
   801  0E90                     	;# 
   802  0E91                     	;# 
   803  0E92                     	;# 
   804  0E93                     	;# 
   805  0E94                     	;# 
   806  0E94                     	;# 
   807  0E95                     	;# 
   808  0E96                     	;# 
   809  0E97                     	;# 
   810  0E98                     	;# 
   811  0E99                     	;# 
   812  0E9A                     	;# 
   813  0E9B                     	;# 
   814  0E9C                     	;# 
   815  0E9D                     	;# 
   816  0E9E                     	;# 
   817  0E9F                     	;# 
   818  0FE4                     	;# 
   819  0FE5                     	;# 
   820  0FE6                     	;# 
   821  0FE7                     	;# 
   822  0FE8                     	;# 
   823  0FE9                     	;# 
   824  0FEA                     	;# 
   825  0FEB                     	;# 
   826  0FED                     	;# 
   827  0FEE                     	;# 
   828  0FEF                     	;# 
   829  0000                     	;# 
   830  0001                     	;# 
   831  0002                     	;# 
   832  0003                     	;# 
   833  0004                     	;# 
   834  0005                     	;# 
   835  0006                     	;# 
   836  0007                     	;# 
   837  0008                     	;# 
   838  0009                     	;# 
   839  000A                     	;# 
   840  000B                     	;# 
   841  000C                     	;# 
   842  000D                     	;# 
   843  000E                     	;# 
   844  0011                     	;# 
   845  0012                     	;# 
   846  0015                     	;# 
   847  0016                     	;# 
   848  0016                     	;# 
   849  0017                     	;# 
   850  0018                     	;# 
   851  0019                     	;# 
   852  001A                     	;# 
   853  001B                     	;# 
   854  001C                     	;# 
   855  008C                     	;# 
   856  008D                     	;# 
   857  008E                     	;# 
   858  0091                     	;# 
   859  0092                     	;# 
   860  0095                     	;# 
   861  0096                     	;# 
   862  0097                     	;# 
   863  0098                     	;# 
   864  0099                     	;# 
   865  009A                     	;# 
   866  009B                     	;# 
   867  009B                     	;# 
   868  009C                     	;# 
   869  009D                     	;# 
   870  009E                     	;# 
   871  009F                     	;# 
   872  010C                     	;# 
   873  010D                     	;# 
   874  010E                     	;# 
   875  0111                     	;# 
   876  0112                     	;# 
   877  0113                     	;# 
   878  0114                     	;# 
   879  0115                     	;# 
   880  0116                     	;# 
   881  0117                     	;# 
   882  0118                     	;# 
   883  0119                     	;# 
   884  011D                     	;# 
   885  018C                     	;# 
   886  018D                     	;# 
   887  018E                     	;# 
   888  0191                     	;# 
   889  0191                     	;# 
   890  0192                     	;# 
   891  0193                     	;# 
   892  0193                     	;# 
   893  0194                     	;# 
   894  0195                     	;# 
   895  0196                     	;# 
   896  0197                     	;# 
   897  0199                     	;# 
   898  019A                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019D                     	;# 
   903  019E                     	;# 
   904  019F                     	;# 
   905  020C                     	;# 
   906  020D                     	;# 
   907  0211                     	;# 
   908  0211                     	;# 
   909  0212                     	;# 
   910  0212                     	;# 
   911  0213                     	;# 
   912  0213                     	;# 
   913  0214                     	;# 
   914  0214                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0216                     	;# 
   919  0216                     	;# 
   920  0217                     	;# 
   921  0217                     	;# 
   922  0391                     	;# 
   923  0392                     	;# 
   924  0393                     	;# 
   925  0394                     	;# 
   926  0395                     	;# 
   927  0396                     	;# 
   928  039A                     	;# 
   929  039B                     	;# 
   930  0611                     	;# 
   931  0612                     	;# 
   932  0613                     	;# 
   933  0613                     	;# 
   934  0614                     	;# 
   935  0615                     	;# 
   936  0616                     	;# 
   937  0616                     	;# 
   938  0691                     	;# 
   939  0692                     	;# 
   940  0693                     	;# 
   941  0694                     	;# 
   942  0695                     	;# 
   943  0E8E                     	;# 
   944  0E8F                     	;# 
   945  0E90                     	;# 
   946  0E91                     	;# 
   947  0E92                     	;# 
   948  0E93                     	;# 
   949  0E94                     	;# 
   950  0E94                     	;# 
   951  0E95                     	;# 
   952  0E96                     	;# 
   953  0E97                     	;# 
   954  0E98                     	;# 
   955  0E99                     	;# 
   956  0E9A                     	;# 
   957  0E9B                     	;# 
   958  0E9C                     	;# 
   959  0E9D                     	;# 
   960  0E9E                     	;# 
   961  0E9F                     	;# 
   962  0FE4                     	;# 
   963  0FE5                     	;# 
   964  0FE6                     	;# 
   965  0FE7                     	;# 
   966  0FE8                     	;# 
   967  0FE9                     	;# 
   968  0FEA                     	;# 
   969  0FEB                     	;# 
   970  0FED                     	;# 
   971  0FEE                     	;# 
   972  0FEF                     	;# 
   973                           
   974                           	psect	stringtext1
   975  10BD                     __pstringtext1:	
   976  10BD                     _USB_SD_Ptr:	
   977  10BD  34C3               	retlw	low (_sd000| (0+32768))
   978  10BE  3490               	retlw	high (_sd000| (0+32768))
   979  10BF  3477               	retlw	low (_sd001| (0+32768))
   980  10C0  3490               	retlw	high (_sd001| (0+32768))
   981  10C1  3443               	retlw	low (_sd002| (0+32768))
   982  10C2  3490               	retlw	high (_sd002| (0+32768))
   983  10C3                     __end_of_USB_SD_Ptr:	
   984                           
   985                           	psect	stringtext2
   986  10C7                     __pstringtext2:	
   987  10C7                     _USB_CD_Ptr:	
   988  10C7  3400               	retlw	low (_configDescriptor1| (0+32768))
   989  10C8  3490               	retlw	high (_configDescriptor1| (0+32768))
   990  10C9                     __end_of_USB_CD_Ptr:	
   991                           
   992                           	psect	stringtext3
   993  1000                     __pstringtext3:	
   994  1000                     _configDescriptor1:	
   995  1000  3409               	retlw	9
   996  1001  3402               	retlw	2
   997  1002  3443               	retlw	67
   998  1003  3400               	retlw	0
   999  1004  3402               	retlw	2
  1000  1005  3401               	retlw	1
  1001  1006  3400               	retlw	0
  1002  1007  34C0               	retlw	192
  1003  1008  3432               	retlw	50
  1004  1009  3409               	retlw	9
  1005  100A  3404               	retlw	4
  1006  100B  3400               	retlw	0
  1007  100C  3400               	retlw	0
  1008  100D  3401               	retlw	1
  1009  100E  3402               	retlw	2
  1010  100F  3402               	retlw	2
  1011  1010  3401               	retlw	1
  1012  1011  3400               	retlw	0
  1013  1012  3405               	retlw	5
  1014  1013  3424               	retlw	36
  1015  1014  3400               	retlw	0
  1016  1015  3410               	retlw	16
  1017  1016  3401               	retlw	1
  1018  1017  3404               	retlw	4
  1019  1018  3424               	retlw	36
  1020  1019  3402               	retlw	2
  1021  101A  3402               	retlw	2
  1022  101B  3405               	retlw	5
  1023  101C  3424               	retlw	36
  1024  101D  3406               	retlw	6
  1025  101E  3400               	retlw	0
  1026  101F  3401               	retlw	1
  1027  1020  3405               	retlw	5
  1028  1021  3424               	retlw	36
  1029  1022  3401               	retlw	1
  1030  1023  3400               	retlw	0
  1031  1024  3401               	retlw	1
  1032  1025  3407               	retlw	7
  1033  1026  3405               	retlw	5
  1034  1027  3481               	retlw	129
  1035  1028  3403               	retlw	3
  1036  1029  3408               	retlw	8
  1037  102A  3400               	retlw	0
  1038  102B  3402               	retlw	2
  1039  102C  3409               	retlw	9
  1040  102D  3404               	retlw	4
  1041  102E  3401               	retlw	1
  1042  102F  3400               	retlw	0
  1043  1030  3402               	retlw	2
  1044  1031  340A               	retlw	10
  1045  1032  3400               	retlw	0
  1046  1033  3400               	retlw	0
  1047  1034  3400               	retlw	0
  1048  1035  3407               	retlw	7
  1049  1036  3405               	retlw	5
  1050  1037  3402               	retlw	2
  1051  1038  3402               	retlw	2
  1052  1039  3440               	retlw	64
  1053  103A  3400               	retlw	0
  1054  103B  3400               	retlw	0
  1055  103C  3407               	retlw	7
  1056  103D  3405               	retlw	5
  1057  103E  3482               	retlw	130
  1058  103F  3402               	retlw	2
  1059  1040  3440               	retlw	64
  1060  1041  3400               	retlw	0
  1061  1042  3400               	retlw	0
  1062  1043                     __end_of_configDescriptor1:	
  1063                           
  1064                           	psect	stringtext4
  1065  1043                     __pstringtext4:	
  1066  1043                     _sd002:	
  1067  1043  3434               	retlw	52
  1068  1044  3403               	retlw	3
  1069  1045  3443               	retlw	67
  1070  1046  3400               	retlw	0
  1071  1047  3444               	retlw	68
  1072  1048  3400               	retlw	0
  1073  1049  3443               	retlw	67
  1074  104A  3400               	retlw	0
  1075  104B  3420               	retlw	32
  1076  104C  3400               	retlw	0
  1077  104D  3452               	retlw	82
  1078  104E  3400               	retlw	0
  1079  104F  3453               	retlw	83
  1080  1050  3400               	retlw	0
  1081  1051  342D               	retlw	45
  1082  1052  3400               	retlw	0
  1083  1053  3432               	retlw	50
  1084  1054  3400               	retlw	0
  1085  1055  3433               	retlw	51
  1086  1056  3400               	retlw	0
  1087  1057  3432               	retlw	50
  1088  1058  3400               	retlw	0
  1089  1059  3420               	retlw	32
  1090  105A  3400               	retlw	0
  1091  105B  3445               	retlw	69
  1092  105C  3400               	retlw	0
  1093  105D  346D               	retlw	109
  1094  105E  3400               	retlw	0
  1095  105F  3475               	retlw	117
  1096  1060  3400               	retlw	0
  1097  1061  346C               	retlw	108
  1098  1062  3400               	retlw	0
  1099  1063  3461               	retlw	97
  1100  1064  3400               	retlw	0
  1101  1065  3474               	retlw	116
  1102  1066  3400               	retlw	0
  1103  1067  3469               	retlw	105
  1104  1068  3400               	retlw	0
  1105  1069  346F               	retlw	111
  1106  106A  3400               	retlw	0
  1107  106B  346E               	retlw	110
  1108  106C  3400               	retlw	0
  1109  106D  3420               	retlw	32
  1110  106E  3400               	retlw	0
  1111  106F  3444               	retlw	68
  1112  1070  3400               	retlw	0
  1113  1071  3465               	retlw	101
  1114  1072  3400               	retlw	0
  1115  1073  346D               	retlw	109
  1116  1074  3400               	retlw	0
  1117  1075  346F               	retlw	111
  1118  1076  3400               	retlw	0
  1119  1077                     __end_of_sd002:	
  1120                           
  1121                           	psect	stringtext5
  1122  1077                     __pstringtext5:	
  1123  1077                     _sd001:	
  1124  1077  3434               	retlw	52
  1125  1078  3403               	retlw	3
  1126  1079  344D               	retlw	77
  1127  107A  3400               	retlw	0
  1128  107B  3469               	retlw	105
  1129  107C  3400               	retlw	0
  1130  107D  3463               	retlw	99
  1131  107E  3400               	retlw	0
  1132  107F  3472               	retlw	114
  1133  1080  3400               	retlw	0
  1134  1081  346F               	retlw	111
  1135  1082  3400               	retlw	0
  1136  1083  3463               	retlw	99
  1137  1084  3400               	retlw	0
  1138  1085  3468               	retlw	104
  1139  1086  3400               	retlw	0
  1140  1087  3469               	retlw	105
  1141  1088  3400               	retlw	0
  1142  1089  3470               	retlw	112
  1143  108A  3400               	retlw	0
  1144  108B  3420               	retlw	32
  1145  108C  3400               	retlw	0
  1146  108D  3454               	retlw	84
  1147  108E  3400               	retlw	0
  1148  108F  3465               	retlw	101
  1149  1090  3400               	retlw	0
  1150  1091  3463               	retlw	99
  1151  1092  3400               	retlw	0
  1152  1093  3468               	retlw	104
  1153  1094  3400               	retlw	0
  1154  1095  346E               	retlw	110
  1155  1096  3400               	retlw	0
  1156  1097  346F               	retlw	111
  1157  1098  3400               	retlw	0
  1158  1099  346C               	retlw	108
  1159  109A  3400               	retlw	0
  1160  109B  346F               	retlw	111
  1161  109C  3400               	retlw	0
  1162  109D  3467               	retlw	103
  1163  109E  3400               	retlw	0
  1164  109F  3479               	retlw	121
  1165  10A0  3400               	retlw	0
  1166  10A1  3420               	retlw	32
  1167  10A2  3400               	retlw	0
  1168  10A3  3449               	retlw	73
  1169  10A4  3400               	retlw	0
  1170  10A5  346E               	retlw	110
  1171  10A6  3400               	retlw	0
  1172  10A7  3463               	retlw	99
  1173  10A8  3400               	retlw	0
  1174  10A9  342E               	retlw	46
  1175  10AA  3400               	retlw	0
  1176  10AB                     __end_of_sd001:	
  1177                           
  1178                           	psect	stringtext6
  1179  10AB                     __pstringtext6:	
  1180  10AB                     _device_dsc:	
  1181  10AB  3412               	retlw	18
  1182  10AC  3401               	retlw	1
  1183  10AD  3400               	retlw	0
  1184  10AE  3402               	retlw	2
  1185  10AF  3402               	retlw	2
  1186  10B0  3400               	retlw	0
  1187  10B1  3400               	retlw	0
  1188  10B2  3408               	retlw	8
  1189  10B3  34D8               	retlw	216
  1190  10B4  3404               	retlw	4
  1191  10B5  340A               	retlw	10
  1192  10B6  3400               	retlw	0
  1193  10B7  3400               	retlw	0
  1194  10B8  3401               	retlw	1
  1195  10B9  3401               	retlw	1
  1196  10BA  3402               	retlw	2
  1197  10BB  3400               	retlw	0
  1198  10BC  3401               	retlw	1
  1199  10BD                     __end_of_device_dsc:	
  1200                           
  1201                           	psect	stringtext7
  1202  10C3                     __pstringtext7:	
  1203  10C3                     _sd000:	
  1204  10C3  3404               	retlw	4
  1205  10C4  3403               	retlw	3
  1206  10C5  3409               	retlw	9
  1207  10C6  3404               	retlw	4
  1208  10C7                     __end_of_sd000:	
  1209  0011                     _PIR1bits	set	17
  1210  000B                     _INTCONbits	set	11
  1211  0012                     _PIR2bits	set	18
  1212  006F                     _RB7	set	111
  1213  0072                     _RC2	set	114
  1214  009D                     _ADCON0bits	set	157
  1215  0095                     _OPTION_REGbits	set	149
  1216  009C                     _ADRESH	set	156
  1217  009B                     _ADRESL	set	155
  1218  009F                     _ADCON2	set	159
  1219  009E                     _ADCON1	set	158
  1220  0091                     _PIE1bits	set	145
  1221  0099                     _OSCCON	set	153
  1222  0092                     _PIE2bits	set	146
  1223  046F                     _TRISB7	set	1135
  1224  0472                     _TRISC2	set	1138
  1225  0473                     _TRISC3	set	1139
  1226  0476                     _TRISC6	set	1142
  1227  0477                     _TRISC7	set	1143
  1228  046C                     _TRISB4	set	1132
  1229  046E                     _TRISB6	set	1134
  1230  0C73                     _ANSC3	set	3187
  1231  0C72                     _ANSC2	set	3186
  1232  0211                     _SSPBUF	set	529
  1233  0211                     _SSP1BUF	set	529
  1234  0214                     _SSPSTATbits	set	532
  1235  0215                     _SSPCON1bits	set	533
  1236  039B                     _ACTCON	set	923
  1237  0E98                     _UEP0bits	set	3736
  1238  0E8E                     _UCON	set	3726
  1239  0E8F                     _USTAT	set	3727
  1240  0E92                     _UIEbits	set	3730
  1241  0E90                     _UIRbits	set	3728
  1242  0E96                     _UADDR	set	3734
  1243  0E8E                     _UCONbits	set	3726
  1244  0E92                     _UIE	set	3730
  1245  0E97                     _UEIE	set	3735
  1246  0E91                     _UCFG	set	3729
  1247  0E90                     _UIR	set	3728
  1248  0E93                     _UEIR	set	3731
  1249  0E99                     _UEP1	set	3737
  1250  0E98                     _UEP0	set	3736
  1251                           
  1252                           ; #config settings
  1253  0000                     
  1254                           	psect	cinit
  1255  0014                     start_initialization:	
  1256  0014                     __initialization:	
  1257                           
  1258                           ; Clear objects allocated to BANK1
  1259  0014  0021               	movlb	1	; select bank1
  1260  0015  01E0               	clrf	__pbssBANK1& (0+127)
  1261  0016  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  1262  0017  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  1263  0018  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  1264  0019  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  1265  001A  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  1266                           
  1267                           ; Clear objects allocated to BANK2
  1268  001B  0022               	movlb	2	; select bank2
  1269  001C  01ED               	clrf	__pbssBANK2& (0+127)
  1270  001D  01EE               	clrf	(__pbssBANK2+1)& (0+127)
  1271  001E  01EF               	clrf	(__pbssBANK2+2)& (0+127)
  1272                           
  1273                           ; Clear objects allocated to BANK3
  1274  001F  30A0               	movlw	low __pbssBANK3
  1275  0020  0084               	movwf	4
  1276  0021  3001               	movlw	high __pbssBANK3
  1277  0022  0085               	movwf	5
  1278  0023  3047               	movlw	71
  1279  0024  3187  27F4  3180   	fcall	clear_ram0
  1280                           
  1281                           ; Clear objects allocated to BANK4
  1282  0027  3020               	movlw	low __pbssBANK4
  1283  0028  0084               	movwf	4
  1284  0029  3002               	movlw	high __pbssBANK4
  1285  002A  0085               	movwf	5
  1286  002B  3012               	movlw	18
  1287  002C  3187  27F4  3180   	fcall	clear_ram0
  1288                           
  1289                           ; Clear objects allocated to BANK5
  1290  002F  30A0               	movlw	low __pbssBANK5
  1291  0030  0084               	movwf	4
  1292  0031  3002               	movlw	high __pbssBANK5
  1293  0032  0085               	movwf	5
  1294  0033  3040               	movlw	64
  1295  0034  3187  27F4  3180   	fcall	clear_ram0
  1296                           
  1297                           ; Clear objects allocated to BANK6
  1298  0037  3020               	movlw	low __pbssBANK6
  1299  0038  0084               	movwf	4
  1300  0039  3003               	movlw	high __pbssBANK6
  1301  003A  0085               	movwf	5
  1302  003B  3040               	movlw	64
  1303  003C  3187  27F4         	fcall	clear_ram0
  1304  003E                     end_of_initialization:	
  1305                           ;End of C runtime variable initialization code
  1306                           
  1307  003E                     __end_of__initialization:	
  1308  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1309  003F  0020               	movlb	0
  1310  0040  3184  2C80         	ljmp	_main	;jump to C main() function
  1311                           
  1312                           	psect	bssBANK1
  1313  00E0                     __pbssBANK1:	
  1314  00E0                     _pBDTEntryEP0OutNext:	
  1315  00E0                     	ds	2
  1316  00E2                     _cdc_trf_state:	
  1317  00E2                     	ds	1
  1318  00E3                     _controlTransferState:	
  1319  00E3                     	ds	1
  1320  00E4                     _pBDTEntryEP0OutCurrent:	
  1321  00E4                     	ds	1
  1322  00E5                     _USTATcopy:	
  1323  00E5                     	ds	1
  1324                           
  1325                           	psect	bssBANK2
  1326  016D                     __pbssBANK2:	
  1327  016D                     _shortPacketStatus:	
  1328  016D                     	ds	1
  1329  016E                     _USBDeviceState:	
  1330  016E                     	ds	1
  1331  016F                     _USBActiveConfiguration:	
  1332  016F                     	ds	1
  1333                           
  1334                           	psect	bssBANK3
  1335  01A0                     __pbssBANK3:	
  1336  01A0                     _outPipes:	
  1337  01A0                     	ds	7
  1338  01A7                     _pBDTEntryIn:	
  1339  01A7                     	ds	6
  1340  01AD                     _pBDTEntryOut:	
  1341  01AD                     	ds	6
  1342  01B3                     _inPipes:	
  1343  01B3                     	ds	5
  1344  01B8                     _BaudRateGen:	
  1345  01B8                     	ds	4
  1346  01BC                     _USB1msTickCount:	
  1347  01BC                     	ds	4
  1348  01C0                     _ep_data_out:	
  1349  01C0                     	ds	3
  1350  01C3                     _ep_data_in:	
  1351  01C3                     	ds	3
  1352  01C6                     _CDCDataInHandle:	
  1353  01C6                     	ds	2
  1354  01C8                     _CDCDataOutHandle:	
  1355  01C8                     	ds	2
  1356  01CA                     _pCDCDst:	
  1357  01CA                     	ds	2
  1358  01CC                     _pCDCSrc:	
  1359  01CC                     	ds	2
  1360  01CE                     _control_signal_bitmap:	
  1361  01CE                     	ds	1
  1362  01CF                     _cdc_mem_type:	
  1363  01CF                     	ds	1
  1364  01D0                     _cdc_tx_len:	
  1365  01D0                     	ds	1
  1366  01D1                     _cdc_rx_len:	
  1367  01D1                     	ds	1
  1368  01D2                     _USBTicksSinceSuspendEnd:	
  1369  01D2                     	ds	1
  1370  01D3                     _USBDeferOUTDataStagePackets:	
  1371  01D3                     	ds	1
  1372  01D4                     _USBDeferINDataStagePackets:	
  1373  01D4                     	ds	1
  1374  01D5                     _USBStatusStageEnabledFlag2:	
  1375  01D5                     	ds	1
  1376  01D6                     _USBStatusStageEnabledFlag1:	
  1377  01D6                     	ds	1
  1378  01D7                     _USBDeferStatusStagePacket:	
  1379  01D7                     	ds	1
  1380  01D8                     _USBStatusStageTimeoutCounter:	
  1381  01D8                     	ds	1
  1382  01D9                     _BothEP0OutUOWNsSet:	
  1383  01D9                     	ds	1
  1384  01DA                     _endpoint_number:	
  1385  01DA                     	ds	1
  1386  01DB                     _USBBusIsSuspended:	
  1387  01DB                     	ds	1
  1388  01DC                     _RemoteWakeup:	
  1389  01DC                     	ds	1
  1390  01DD                     _pDst:	
  1391  01DD                     	ds	1
  1392  01DE                     _line_coding:	
  1393  01DE                     	ds	7
  1394  01E5                     _USBAlternateInterface:	
  1395  01E5                     	ds	2
  1396                           
  1397                           	psect	bssBANK4
  1398  0220                     __pbssBANK4:	
  1399  0220                     _cdc_notice:	
  1400  0220                     	ds	10
  1401  022A                     _dummy_encapsulated_cmd_response:	
  1402  022A                     	ds	8
  1403                           
  1404                           	psect	bssBANK5
  1405  02A0                     __pbssBANK5:	
  1406  02A0                     _writeBuffer:	
  1407  02A0                     	ds	64
  1408                           
  1409                           	psect	bssBANK6
  1410  0320                     __pbssBANK6:	
  1411  0320                     _readBuffer:	
  1412  0320                     	ds	64
  1413                           
  1414                           	psect	clrtext
  1415  07F4                     clear_ram0:	
  1416                           ;	Called with FSR0 containing the base address, and
  1417                           ;	WREG with the size to clear
  1418                           
  1419  07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1420  07F5                     clrloop0:	
  1421  07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1422  07F6  3101               	addfsr 0,1
  1423  07F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1424  07F8  2FF5               	goto	clrloop0	;have we reached the end yet?
  1425  07F9  3400               	retlw	0	;all done for this memory range, return
  1426                           
  1427                           	psect	cstackBANK4
  1428  0232                     __pcstackBANK4:	
  1429  0232                     main@result:	
  1430                           
  1431                           ; 2 bytes @ 0x0
  1432  0232                     	ds	2
  1433  0234                     main@v1:	
  1434                           
  1435                           ; 2 bytes @ 0x2
  1436  0234                     	ds	2
  1437  0236                     main@numBytesRead:	
  1438                           
  1439                           ; 1 bytes @ 0x4
  1440  0236                     	ds	1
  1441  0237                     main@v2:	
  1442                           
  1443                           ; 2 bytes @ 0x5
  1444  0237                     	ds	2
  1445                           
  1446                           	psect	cstackBANK3
  1447  01E7                     __pcstackBANK3:	
  1448  01E7                     ??_CDCInitEP:	
  1449  01E7                     ??_getsUSBUSART:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  01E7                     CDCTxService@i:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455                           
  1456                           ; 1 bytes @ 0x0
  1457  01E7                     	ds	1
  1458  01E8                     CDCTxService@byte_to_send:	
  1459                           
  1460                           ; 1 bytes @ 0x1
  1461  01E8                     	ds	1
  1462  01E9                     ??_main:	
  1463                           
  1464                           ; 1 bytes @ 0x2
  1465  01E9                     	ds	2
  1466                           
  1467                           	psect	cstackBANK2
  1468  0160                     __pcstackBANK2:	
  1469  0160                     ??_SYSTEM_Initialize:	
  1470  0160                     ?_USBConfigureEndpoint:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0160                     ??_USBDeviceInit:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0160                     ??_USBDeviceAttach:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0160                     ?_putUSBUSART:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0160                     ??_SPI_Init:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0160                     ??_SPI_Write:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0160                     ?_USBTransferOnePacket:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0160                     USBTransferOnePacket@dir:	
  1492                           ; 2 bytes @ 0x0
  1493                           
  1494  0160                     USBConfigureEndpoint@direction:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0160                     putUSBUSART@length:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0160                     SYSTEM_Initialize@state:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503                           
  1504                           ; 1 bytes @ 0x0
  1505  0160                     	ds	1
  1506  0161                     ??_USBConfigureEndpoint:	
  1507  0161                     ??_putUSBUSART:	
  1508                           ; 1 bytes @ 0x1
  1509                           
  1510  0161                     SPI_Write@TempVar:	
  1511                           ; 1 bytes @ 0x1
  1512                           
  1513  0161                     USBDeviceInit@p:	
  1514                           ; 1 bytes @ 0x1
  1515                           
  1516  0161                     USBTransferOnePacket@data:	
  1517                           ; 2 bytes @ 0x1
  1518                           
  1519                           
  1520                           ; 2 bytes @ 0x1
  1521  0161                     	ds	1
  1522  0162                     putUSBUSART@data:	
  1523  0162                     SPI_Write@data:	
  1524                           ; 1 bytes @ 0x2
  1525                           
  1526                           
  1527                           ; 1 bytes @ 0x2
  1528  0162                     	ds	1
  1529  0163                     USBDeviceInit@i_821:	
  1530  0163                     USBTransferOnePacket@len:	
  1531                           ; 1 bytes @ 0x3
  1532                           
  1533                           
  1534                           ; 1 bytes @ 0x3
  1535  0163                     	ds	1
  1536  0164                     ??_USBTransferOnePacket:	
  1537  0164                     USBDeviceInit@i:	
  1538                           ; 1 bytes @ 0x4
  1539                           
  1540                           
  1541                           ; 1 bytes @ 0x4
  1542  0164                     	ds	1
  1543  0165                     USBConfigureEndpoint@EPNum:	
  1544                           
  1545                           ; 1 bytes @ 0x5
  1546  0165                     	ds	1
  1547  0166                     USBConfigureEndpoint@handle:	
  1548                           
  1549                           ; 1 bytes @ 0x6
  1550  0166                     	ds	1
  1551  0167                     ?_USBEnableEndpoint:	
  1552  0167                     USBEnableEndpoint@options:	
  1553                           ; 1 bytes @ 0x7
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0x7
  1557  0167                     	ds	1
  1558  0168                     ??_USBEnableEndpoint:	
  1559  0168                     USBTransferOnePacket@ep:	
  1560                           ; 1 bytes @ 0x8
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x8
  1564  0168                     	ds	1
  1565  0169                     USBTransferOnePacket@handle:	
  1566                           
  1567                           ; 2 bytes @ 0x9
  1568  0169                     	ds	1
  1569  016A                     USBEnableEndpoint@p:	
  1570                           
  1571                           ; 2 bytes @ 0xA
  1572  016A                     	ds	1
  1573  016B                     ?_getsUSBUSART:	
  1574  016B                     ??_CDCTxService:	
  1575                           ; 1 bytes @ 0xB
  1576                           
  1577  016B                     getsUSBUSART@len:	
  1578                           ; 1 bytes @ 0xB
  1579                           
  1580                           
  1581                           ; 1 bytes @ 0xB
  1582  016B                     	ds	1
  1583  016C                     USBEnableEndpoint@ep:	
  1584  016C                     getsUSBUSART@buffer:	
  1585                           ; 1 bytes @ 0xC
  1586                           
  1587                           
  1588                           ; 1 bytes @ 0xC
  1589  016C                     	ds	1
  1590                           
  1591                           	psect	cstackBANK1
  1592  00E6                     __pcstackBANK1:	
  1593  00E6                     ??_USBCtrlEPService:	
  1594                           
  1595                           ; 1 bytes @ 0x0
  1596  00E6                     	ds	3
  1597  00E9                     ??_USBDeviceTasks:	
  1598                           
  1599                           ; 1 bytes @ 0x3
  1600  00E9                     	ds	2
  1601  00EB                     ??_SYS_InterruptHigh:	
  1602                           
  1603                           ; 1 bytes @ 0x5
  1604  00EB                     	ds	1
  1605                           
  1606                           	psect	cstackCOMMON
  1607  0070                     __pcstackCOMMON:	
  1608  0070                     ?_SYSTEM_Initialize:	
  1609  0070                     ?_CDCInitEP:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     ?_USBCheckCDCRequest:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ??_USBCheckCDCRequest:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0070                     ?_USBWakeFromSuspend:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ?_USBSuspend:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     ?_USBIncrement1msInternalTimers:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ??_USBIncrement1msInternalTimers:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ?_USBCtrlEPAllowStatusStage:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0070                     ??_USBCtrlEPAllowStatusStage:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ?_USBStallHandler:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     ??_USBStallHandler:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     ?_USBCtrlEPService:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     ?_USBCtrlTrfTxService:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0070                     ??_USBCtrlTrfTxService:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0070                     ?_USBCtrlTrfSetupHandler:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0070                     ?_USBCtrlTrfOutHandler:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0070                     ?_USBCtrlTrfInHandler:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0070                     ?_USBCheckStdRequest:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0070                     ?_USBStdFeatureReqHandler:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0070                     ?_USBDeviceInit:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0070                     ?_USBDeviceTasks:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0070                     ?_USBDeviceAttach:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0070                     ?_USBCtrlEPAllowDataStage:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0070                     ?_USBCtrlEPServiceComplete:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0070                     ?_USBCtrlTrfRxService:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0070                     ?_USBStdSetCfgHandler:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0070                     ?_USBStdGetDscHandler:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0070                     ??_USBStdGetDscHandler:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0070                     ?_USBStdGetStatusHandler:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0070                     ??_USBStdGetStatusHandler:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ?_CDCTxService:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ?_SYS_InterruptHigh:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ?_SPI_Init:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ?_SPI_Write:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ?_main:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ?i1_USBDeviceInit:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0070                     ??i1_USBDeviceInit:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ?i1_USBConfigureEndpoint:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ?i1_CDCInitEP:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0070                     ?i1_SYSTEM_Initialize:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ??i1_SYSTEM_Initialize:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0070                     ?_memset:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0070                     ?i1_USBTransferOnePacket:	
  1736                           ; 2 bytes @ 0x0
  1737                           
  1738  0070                     i1USBTransferOnePacket@dir:	
  1739                           ; 2 bytes @ 0x0
  1740                           
  1741  0070                     i1USBConfigureEndpoint@direction:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0070                     i1SYSTEM_Initialize@state:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0070                     memset@p1:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750                           
  1751                           ; 2 bytes @ 0x0
  1752  0070                     	ds	1
  1753  0071                     ??i1_USBConfigureEndpoint:	
  1754  0071                     USBStdGetStatusHandler@p:	
  1755                           ; 1 bytes @ 0x1
  1756                           
  1757  0071                     i1USBDeviceInit@p:	
  1758                           ; 2 bytes @ 0x1
  1759                           
  1760  0071                     i1USBTransferOnePacket@data:	
  1761                           ; 2 bytes @ 0x1
  1762                           
  1763                           
  1764                           ; 2 bytes @ 0x1
  1765  0071                     	ds	1
  1766  0072                     ??_USBCtrlTrfRxService:	
  1767  0072                     USBCtrlTrfTxService@byteToSend:	
  1768                           ; 1 bytes @ 0x2
  1769                           
  1770  0072                     memset@c:	
  1771                           ; 1 bytes @ 0x2
  1772                           
  1773                           
  1774                           ; 2 bytes @ 0x2
  1775  0072                     	ds	1
  1776  0073                     ??_USBCtrlTrfInHandler:	
  1777  0073                     ??_USBCtrlEPAllowDataStage:	
  1778                           ; 1 bytes @ 0x3
  1779                           
  1780  0073                     i1USBDeviceInit@i_821:	
  1781                           ; 1 bytes @ 0x3
  1782                           
  1783  0073                     i1USBTransferOnePacket@len:	
  1784                           ; 1 bytes @ 0x3
  1785                           
  1786                           
  1787                           ; 1 bytes @ 0x3
  1788  0073                     	ds	1
  1789  0074                     ??i1_USBTransferOnePacket:	
  1790  0074                     USBCtrlTrfRxService@i:	
  1791                           ; 1 bytes @ 0x4
  1792                           
  1793  0074                     i1USBDeviceInit@i:	
  1794                           ; 1 bytes @ 0x4
  1795                           
  1796  0074                     memset@n:	
  1797                           ; 1 bytes @ 0x4
  1798                           
  1799                           
  1800                           ; 2 bytes @ 0x4
  1801  0074                     	ds	1
  1802  0075                     ??_USBCtrlEPServiceComplete:	
  1803  0075                     USBCtrlTrfRxService@byteToRead:	
  1804                           ; 1 bytes @ 0x5
  1805                           
  1806  0075                     USBCtrlTrfInHandler@lastDTS:	
  1807                           ; 1 bytes @ 0x5
  1808                           
  1809  0075                     i1USBConfigureEndpoint@EPNum:	
  1810                           ; 1 bytes @ 0x5
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x5
  1814  0075                     	ds	1
  1815  0076                     ??_memset:	
  1816  0076                     ??_USBCtrlTrfOutHandler:	
  1817                           ; 1 bytes @ 0x6
  1818                           
  1819  0076                     i1USBConfigureEndpoint@handle:	
  1820                           ; 1 bytes @ 0x6
  1821                           
  1822  0076                     memset@p:	
  1823                           ; 1 bytes @ 0x6
  1824                           
  1825                           
  1826                           ; 2 bytes @ 0x6
  1827  0076                     	ds	1
  1828  0077                     ?i1_USBEnableEndpoint:	
  1829  0077                     i1USBEnableEndpoint@options:	
  1830                           ; 1 bytes @ 0x7
  1831                           
  1832                           
  1833                           ; 1 bytes @ 0x7
  1834  0077                     	ds	1
  1835  0078                     ??i1_USBEnableEndpoint:	
  1836  0078                     i1USBTransferOnePacket@ep:	
  1837                           ; 1 bytes @ 0x8
  1838                           
  1839                           
  1840                           ; 1 bytes @ 0x8
  1841  0078                     	ds	1
  1842  0079                     i1USBTransferOnePacket@handle:	
  1843                           
  1844                           ; 2 bytes @ 0x9
  1845  0079                     	ds	1
  1846  007A                     i1USBEnableEndpoint@p:	
  1847                           
  1848                           ; 2 bytes @ 0xA
  1849  007A                     	ds	2
  1850  007C                     i1USBEnableEndpoint@ep:	
  1851                           
  1852                           ; 1 bytes @ 0xC
  1853  007C                     	ds	1
  1854  007D                     ??i1_CDCInitEP:	
  1855                           
  1856                           ; 1 bytes @ 0xD
  1857  007D                     	ds	1
  1858  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1859                           
  1860                           	psect	cstackBANK0
  1861  0060                     __pcstackBANK0:	
  1862                           ; 1 bytes @ 0xE
  1863                           
  1864  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1865  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868                           
  1869                           ; 2 bytes @ 0x0
  1870  0060                     	ds	2
  1871  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1872                           
  1873                           ; 2 bytes @ 0x2
  1874  0062                     	ds	2
  1875  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1876                           
  1877                           ; 2 bytes @ 0x4
  1878  0064                     	ds	2
  1879  0066                     ??_USBWakeFromSuspend:	
  1880  0066                     ??_USBSuspend:	
  1881                           ; 1 bytes @ 0x6
  1882                           
  1883  0066                     ??_USBStdFeatureReqHandler:	
  1884                           ; 1 bytes @ 0x6
  1885                           
  1886  0066                     ??_USBStdSetCfgHandler:	
  1887                           ; 1 bytes @ 0x6
  1888                           
  1889                           
  1890                           ; 1 bytes @ 0x6
  1891  0066                     	ds	1
  1892  0067                     USBStdSetCfgHandler@p:	
  1893                           
  1894                           ; 2 bytes @ 0x7
  1895  0067                     	ds	1
  1896  0068                     USBStdFeatureReqHandler@pUEP:	
  1897                           
  1898                           ; 2 bytes @ 0x8
  1899  0068                     	ds	1
  1900  0069                     USBStdSetCfgHandler@i_1572:	
  1901                           
  1902                           ; 1 bytes @ 0x9
  1903  0069                     	ds	1
  1904  006A                     USBStdSetCfgHandler@i:	
  1905  006A                     USBStdFeatureReqHandler@current_ep_data:	
  1906                           ; 1 bytes @ 0xA
  1907                           
  1908                           
  1909                           ; 1 bytes @ 0xA
  1910  006A                     	ds	1
  1911  006B                     USBStdFeatureReqHandler@p:	
  1912                           
  1913                           ; 2 bytes @ 0xB
  1914  006B                     	ds	2
  1915  006D                     ??_USBCheckStdRequest:	
  1916                           
  1917                           ; 1 bytes @ 0xD
  1918  006D                     	ds	1
  1919  006E                     ??_USBCtrlTrfSetupHandler:	
  1920                           
  1921                           ; 1 bytes @ 0xE
  1922  006E                     	ds	1
  1923  006F                     USBDeviceTasks@i:	
  1924                           
  1925                           ; 1 bytes @ 0xF
  1926  006F                     	ds	1
  1927                           
  1928                           	psect	maintext
  1929  0480                     __pmaintext:	
  1930 ;;
  1931 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1932 ;;
  1933 ;; *************** function _main *****************
  1934 ;; Defined at:
  1935 ;;		line 15 in file "../src/main.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  v2              2    5[BANK4 ] unsigned int 
  1940 ;;  v1              2    2[BANK4 ] unsigned int 
  1941 ;;  result          2    0[BANK4 ] unsigned int 
  1942 ;;  numBytesRead    1    4[BANK4 ] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : B1F/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;      Locals:         0       0       0       0       0       7       0       0       0       0       0       0       
      +0       0
  1954 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  1955 ;;      Totals:         0       0       0       0       2       7       0       0       0       0       0       0       
      +0       0
  1956 ;;Total ram usage:        9 bytes
  1957 ;; Hardware stack levels required when called:   13
  1958 ;; This function calls:
  1959 ;;		_CDCInitEP
  1960 ;;		_CDCTxService
  1961 ;;		_SPI_Init
  1962 ;;		_SPI_Write
  1963 ;;		_SYSTEM_Initialize
  1964 ;;		_USBDeviceAttach
  1965 ;;		_USBDeviceInit
  1966 ;;		_getsUSBUSART
  1967 ;;		_putUSBUSART
  1968 ;; This function is called by:
  1969 ;;		Startup code after reset
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _main
  1975  0480                     _main:	
  1976                           
  1977                           ;main.c: 17: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1981  0480  3000               	movlw	0
  1982  0481  3189  212E  3184   	fcall	_SYSTEM_Initialize
  1983                           
  1984                           ;main.c: 18: USBDeviceInit();
  1985  0484  3183  231A  3184   	fcall	_USBDeviceInit
  1986                           
  1987                           ;main.c: 19: USBDeviceAttach();
  1988  0487  3189  218F  3184   	fcall	_USBDeviceAttach
  1989                           
  1990                           ;main.c: 20: CDCInitEP();
  1991  048A  318A  22F9  3184   	fcall	_CDCInitEP
  1992                           
  1993                           ;main.c: 21: {line_coding.dwDTERate=1200;};
  1994  048D  3000               	movlw	0
  1995  048E  0023               	movlb	3	; select bank3
  1996  048F  00E1               	movwf	(_line_coding+3)^(0+384)
  1997  0490  3000               	movlw	0
  1998  0491  00E0               	movwf	(_line_coding+2)^(0+384)
  1999  0492  3004               	movlw	4
  2000  0493  00DF               	movwf	(_line_coding+1)^(0+384)
  2001  0494  30B0               	movlw	176
  2002  0495  00DE               	movwf	_line_coding^(0+384)
  2003                           
  2004                           ;main.c: 22: SPI_Init();
  2005  0496  3188  20F3  3184   	fcall	_SPI_Init
  2006                           
  2007                           ;main.c: 24: ADCON1 = 0xE0;
  2008  0499  30E0               	movlw	224
  2009  049A  0021               	movlb	1	; select bank1
  2010  049B  009E               	movwf	30	;volatile
  2011                           
  2012                           ;main.c: 25: ADCON2 = 0x00;
  2013  049C  019F               	clrf	31	;volatile
  2014                           
  2015                           ;main.c: 26: ADRESL = 0x00;
  2016  049D  019B               	clrf	27	;volatile
  2017                           
  2018                           ;main.c: 27: ADRESH = 0x00;
  2019  049E  019C               	clrf	28	;volatile
  2020                           
  2021                           ;main.c: 28: OPTION_REGbits.nWPUEN = 0;;
  2022  049F  1395               	bcf	21,7	;volatile
  2023                           
  2024                           ;main.c: 29: ANSC2=1;
  2025  04A0  0023               	movlb	3	; select bank3
  2026  04A1  150E               	bsf	14,2	;volatile
  2027                           
  2028                           ;main.c: 30: ANSC3=1;
  2029  04A2  158E               	bsf	14,3	;volatile
  2030                           
  2031                           ;main.c: 31: TRISC3=1;
  2032  04A3  0021               	movlb	1	; select bank1
  2033  04A4  158E               	bsf	14,3	;volatile
  2034                           
  2035                           ;main.c: 32: TRISC2=1;
  2036  04A5  150E               	bsf	14,2	;volatile
  2037                           
  2038                           ;main.c: 33: TRISB7=0;
  2039  04A6  138D               	bcf	13,7	;volatile
  2040                           
  2041                           ;main.c: 34: RB7=1;
  2042  04A7  0020               	movlb	0	; select bank0
  2043  04A8  178D               	bsf	13,7	;volatile
  2044  04A9                     l4399:	
  2045                           ;main.c: 36: while(1){
  2046                           
  2047                           
  2048                           ;main.c: 37: if( (cdc_trf_state == 0) == 1){
  2049  04A9  0021               	movlb	1	; select bank1
  2050  04AA  0862               	movf	_cdc_trf_state^(0+128),w
  2051  04AB  1D03               	btfss	3,2
  2052  04AC  2D28               	goto	l4443
  2053                           
  2054                           ;main.c: 38: uint8_t numBytesRead;
  2055                           ;main.c: 40: RB7=1;
  2056  04AD  0020               	movlb	0	; select bank0
  2057  04AE  178D               	bsf	13,7	;volatile
  2058                           
  2059                           ;main.c: 42: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  2060  04AF  3040               	movlw	64
  2061  04B0  0023               	movlb	3	; select bank3
  2062  04B1  00E9               	movwf	??_main^(0+384)
  2063  04B2  0869               	movf	??_main^(0+384),w
  2064  04B3  0022               	movlb	2	; select bank2
  2065  04B4  00EB               	movwf	getsUSBUSART@len^(0+256)
  2066  04B5  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  2067  04B6  318C  24BD  3184   	fcall	_getsUSBUSART
  2068  04B9  0023               	movlb	3	; select bank3
  2069  04BA  00EA               	movwf	(??_main+1)^(0+384)
  2070  04BB  086A               	movf	(??_main+1)^(0+384),w
  2071  04BC  0024               	movlb	4	; select bank4
  2072  04BD  00B6               	movwf	main@numBytesRead^(0+512)
  2073                           
  2074                           ;main.c: 44: if(numBytesRead > 0 && readBuffer[0] == 'M'){
  2075  04BE  0836               	movf	main@numBytesRead^(0+512),w
  2076  04BF  1903               	btfsc	3,2
  2077  04C0  2D28               	goto	l4443
  2078  04C1  304D               	movlw	77
  2079  04C2  0026               	movlb	6	; select bank6
  2080  04C3  0620               	xorwf	_readBuffer^(0+768),w
  2081  04C4  1D03               	btfss	3,2
  2082  04C5  2D28               	goto	l4443
  2083                           
  2084                           ;main.c: 45: unsigned int v1, v2, result;
  2085                           ;main.c: 47: RB7=0;
  2086  04C6  0020               	movlb	0	; select bank0
  2087  04C7  138D               	bcf	13,7	;volatile
  2088                           
  2089                           ;main.c: 49: ADCON0bits.CHS = 0b00110;
  2090  04C8  0021               	movlb	1	; select bank1
  2091  04C9  081D               	movf	29,w	;volatile
  2092  04CA  3983               	andlw	-125
  2093  04CB  3818               	iorlw	24
  2094  04CC  009D               	movwf	29	;volatile
  2095                           
  2096                           ;main.c: 50: ADCON0bits.ADON = 1;
  2097  04CD  141D               	bsf	29,0	;volatile
  2098                           
  2099                           ;main.c: 51: _delay((unsigned long)((8)*(16000000/4000000.0)));
  2100  04CE  300A               	movlw	10
  2101  04CF                     u4067:	
  2102  04CF  0B89               	decfsz	9,f
  2103  04D0  2CCF               	goto	u4067
  2104  04D1  3200               	nop2
  2105                           
  2106                           ;main.c: 52: ADCON0bits.GO_nDONE = 1;
  2107  04D2  0021               	movlb	1	; select bank1
  2108  04D3  149D               	bsf	29,1	;volatile
  2109  04D4                     l663:	
  2110                           ;main.c: 53: while(ADCON0bits.GO_nDONE == 1);
  2111                           
  2112  04D4  189D               	btfsc	29,1	;volatile
  2113  04D5  2CD4               	goto	l663
  2114                           
  2115                           ;main.c: 54: v1 = ((ADRESH << 8) + ADRESL);
  2116  04D6  081C               	movf	28,w	;volatile
  2117  04D7  0024               	movlb	4	; select bank4
  2118  04D8  00B5               	movwf	(main@v1+1)^(0+512)
  2119  04D9  0021               	movlb	1	; select bank1
  2120  04DA  081B               	movf	27,w	;volatile
  2121  04DB  0024               	movlb	4	; select bank4
  2122  04DC  00B4               	movwf	main@v1^(0+512)
  2123                           
  2124                           ;main.c: 56: ADCON0bits.CHS = 0b00111;
  2125  04DD  0021               	movlb	1	; select bank1
  2126  04DE  081D               	movf	29,w	;volatile
  2127  04DF  3983               	andlw	-125
  2128  04E0  381C               	iorlw	28
  2129  04E1  009D               	movwf	29	;volatile
  2130                           
  2131                           ;main.c: 57: ADCON0bits.ADON = 1;
  2132  04E2  141D               	bsf	29,0	;volatile
  2133                           
  2134                           ;main.c: 58: _delay((unsigned long)((8)*(16000000/4000000.0)));
  2135  04E3  300A               	movlw	10
  2136  04E4                     u4077:	
  2137  04E4  0B89               	decfsz	9,f
  2138  04E5  2CE4               	goto	u4077
  2139  04E6  3200               	nop2
  2140                           
  2141                           ;main.c: 59: ADCON0bits.GO_nDONE = 1;
  2142  04E7  0021               	movlb	1	; select bank1
  2143  04E8  149D               	bsf	29,1	;volatile
  2144  04E9                     l666:	
  2145                           ;main.c: 60: while(ADCON0bits.GO_nDONE == 1);
  2146                           
  2147  04E9  189D               	btfsc	29,1	;volatile
  2148  04EA  2CE9               	goto	l666
  2149                           
  2150                           ;main.c: 61: v2 = ((ADRESH << 8) + ADRESL);
  2151  04EB  081C               	movf	28,w	;volatile
  2152  04EC  0024               	movlb	4	; select bank4
  2153  04ED  00B8               	movwf	(main@v2+1)^(0+512)
  2154  04EE  0021               	movlb	1	; select bank1
  2155  04EF  081B               	movf	27,w	;volatile
  2156  04F0  0024               	movlb	4	; select bank4
  2157  04F1  00B7               	movwf	main@v2^(0+512)
  2158                           
  2159                           ;main.c: 63: result=v2-v1;
  2160  04F2  0934               	comf	main@v1^(0+512),w
  2161  04F3  0023               	movlb	3	; select bank3
  2162  04F4  00E9               	movwf	??_main^(0+384)
  2163  04F5  0024               	movlb	4	; select bank4
  2164  04F6  0935               	comf	(main@v1+1)^(0+512),w
  2165  04F7  0023               	movlb	3	; select bank3
  2166  04F8  00EA               	movwf	(??_main^(0+384)+1)
  2167  04F9  0AE9               	incf	??_main^(0+384),f
  2168  04FA  1903               	skipnz
  2169  04FB  0AEA               	incf	(??_main^(0+384)+1),f
  2170  04FC  0024               	movlb	4	; select bank4
  2171  04FD  0837               	movf	main@v2^(0+512),w
  2172  04FE  0023               	movlb	3	; select bank3
  2173  04FF  0769               	addwf	??_main^(0+384),w
  2174  0500  0024               	movlb	4	; select bank4
  2175  0501  00B2               	movwf	main@result^(0+512)
  2176  0502  0838               	movf	(main@v2+1)^(0+512),w
  2177  0503  0023               	movlb	3	; select bank3
  2178  0504  3D6A               	addwfc	(??_main+1)^(0+384),w
  2179  0505  0024               	movlb	4	; select bank4
  2180  0506  00B3               	movwf	(main@result+1)^(0+512)
  2181                           
  2182                           ;main.c: 65: writeBuffer[0]=(uint8_t)v2;
  2183  0507  0837               	movf	main@v2^(0+512),w
  2184  0508  0023               	movlb	3	; select bank3
  2185  0509  00E9               	movwf	??_main^(0+384)
  2186  050A  0869               	movf	??_main^(0+384),w
  2187  050B  0025               	movlb	5	; select bank5
  2188  050C  00A0               	movwf	_writeBuffer^(0+640)
  2189                           
  2190                           ;main.c: 66: writeBuffer[1]=(uint8_t)(v2>>8);
  2191  050D  0024               	movlb	4	; select bank4
  2192  050E  0838               	movf	(main@v2+1)^(0+512),w
  2193  050F  0023               	movlb	3	; select bank3
  2194  0510  00E9               	movwf	??_main^(0+384)
  2195  0511  0869               	movf	??_main^(0+384),w
  2196  0512  0025               	movlb	5	; select bank5
  2197  0513  00A1               	movwf	(_writeBuffer^(0+640)+1)
  2198                           
  2199                           ;main.c: 67: putUSBUSART(writeBuffer, 2);
  2200  0514  3002               	movlw	2
  2201  0515  0023               	movlb	3	; select bank3
  2202  0516  00E9               	movwf	??_main^(0+384)
  2203  0517  0869               	movf	??_main^(0+384),w
  2204  0518  0022               	movlb	2	; select bank2
  2205  0519  00E0               	movwf	putUSBUSART@length^(0+256)
  2206  051A  30A0               	movlw	(low (_writeBuffer| (0+512)))& (0+255)
  2207  051B  3189  2175  3184   	fcall	_putUSBUSART
  2208                           
  2209                           ;main.c: 69: SPI_Write(writeBuffer[1]);
  2210  051E  0025               	movlb	5	; select bank5
  2211  051F  0821               	movf	(_writeBuffer^(0+640)+1),w
  2212  0520  3189  2106  3184   	fcall	_SPI_Write
  2213                           
  2214                           ;main.c: 70: SPI_Write(writeBuffer[0]);
  2215  0523  0025               	movlb	5	; select bank5
  2216  0524  0820               	movf	_writeBuffer^(0+640),w
  2217  0525  3189  2106  3184   	fcall	_SPI_Write
  2218  0528                     l4443:	
  2219                           
  2220                           ;main.c: 71: }
  2221                           ;main.c: 72: }
  2222                           ;main.c: 73: CDCTxService();
  2223  0528  3182  2252  3184   	fcall	_CDCTxService
  2224  052B  2CA9               	goto	l4399
  2225  052C                     __end_of_main:	
  2226                           
  2227                           	psect	text1
  2228  0975                     __ptext1:	
  2229 ;; *************** function _putUSBUSART *****************
  2230 ;; Defined at:
  2231 ;;		line 556 in file "../lib/usb/src/usb_device_cdc.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  data            1    wreg     PTR unsigned char 
  2234 ;;		 -> writeBuffer(64), 
  2235 ;;  length          1    0[BANK2 ] unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  data            1    2[BANK2 ] PTR unsigned char 
  2238 ;;		 -> writeBuffer(64), 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2248 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2250 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;Total ram usage:        3 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:   10
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _putUSBUSART
  2264  0975                     _putUSBUSART:	
  2265                           
  2266                           ;incstack = 0
  2267                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  2268                           ;putUSBUSART@data stored from wreg
  2269  0975  0022               	movlb	2	; select bank2
  2270  0976  00E2               	movwf	putUSBUSART@data^(0+256)
  2271                           
  2272                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2273  0977  0021               	movlb	1	; select bank1
  2274  0978  1112               	bcf	18,2	;volatile
  2275                           
  2276                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2277  0979  0862               	movf	_cdc_trf_state^(0+128),w
  2278  097A  1D03               	btfss	3,2
  2279  097B  298D               	goto	l4263
  2280                           
  2281                           ;usb_device_cdc.c: 583: {
  2282                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2283  097C  0022               	movlb	2	; select bank2
  2284  097D  0862               	movf	putUSBUSART@data^(0+256),w
  2285  097E  00E1               	movwf	??_putUSBUSART^(0+256)
  2286  097F  0861               	movf	??_putUSBUSART^(0+256),w
  2287  0980  0023               	movlb	3	; select bank3
  2288  0981  00CC               	movwf	_pCDCSrc^(0+384)
  2289  0982  0022               	movlb	2	; select bank2
  2290  0983  0860               	movf	putUSBUSART@length^(0+256),w
  2291  0984  00E1               	movwf	??_putUSBUSART^(0+256)
  2292  0985  0861               	movf	??_putUSBUSART^(0+256),w
  2293  0986  0023               	movlb	3	; select bank3
  2294  0987  00D0               	movwf	_cdc_tx_len^(0+384)
  2295  0988  01CF               	clrf	_cdc_mem_type^(0+384)
  2296  0989  0ACF               	incf	_cdc_mem_type^(0+384),f
  2297  098A  0021               	movlb	1	; select bank1
  2298  098B  01E2               	clrf	_cdc_trf_state^(0+128)
  2299  098C  0AE2               	incf	_cdc_trf_state^(0+128),f
  2300  098D                     l4263:	
  2301                           
  2302                           ;usb_device_cdc.c: 585: }
  2303                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2304  098D  1512               	bsf	18,2	;volatile
  2305  098E  0008               	return
  2306  098F                     __end_of_putUSBUSART:	
  2307                           
  2308                           	psect	text2
  2309  0CBD                     __ptext2:	
  2310 ;; *************** function _getsUSBUSART *****************
  2311 ;; Defined at:
  2312 ;;		line 485 in file "../lib/usb/src/usb_device_cdc.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  buffer          1    wreg     PTR unsigned char 
  2315 ;;		 -> readBuffer(64), 
  2316 ;;  len             1   11[BANK2 ] unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  buffer          1   12[BANK2 ] PTR unsigned char 
  2319 ;;		 -> readBuffer(64), 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      unsigned char 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2329 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2332 ;;      Totals:         0       0       0       2       2       0       0       0       0       0       0       0       
      +0       0
  2333 ;;Total ram usage:        4 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:   11
  2336 ;; This function calls:
  2337 ;;		_USBTransferOnePacket
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function _getsUSBUSART
  2345  0CBD                     _getsUSBUSART:	
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2349                           ;getsUSBUSART@buffer stored from wreg
  2350  0CBD  0022               	movlb	2	; select bank2
  2351  0CBE  00EC               	movwf	getsUSBUSART@buffer^(0+256)
  2352                           
  2353                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2354  0CBF  0023               	movlb	3	; select bank3
  2355  0CC0  01D1               	clrf	_cdc_rx_len^(0+384)
  2356                           
  2357                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2358  0CC1  0848               	movf	_CDCDataOutHandle^(0+384),w
  2359  0CC2  0449               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  2360  0CC3  1903               	btfsc	3,2
  2361  0CC4  2CCB               	goto	l4235
  2362  0CC5  0848               	movf	_CDCDataOutHandle^(0+384),w
  2363  0CC6  0086               	movwf	6
  2364  0CC7  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2365  0CC8  0087               	movwf	7
  2366  0CC9  1B81               	btfsc	1,7
  2367  0CCA  2D16               	goto	l4249
  2368  0CCB                     l4235:	
  2369                           
  2370                           ;usb_device_cdc.c: 490: {
  2371                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2372  0CCB  0848               	movf	_CDCDataOutHandle^(0+384),w
  2373  0CCC  0086               	movwf	6
  2374  0CCD  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2375  0CCE  0087               	movwf	7
  2376  0CCF  3141               	addfsr 1,1
  2377  0CD0  0022               	movlb	2	; select bank2
  2378  0CD1  086B               	movf	getsUSBUSART@len^(0+256),w
  2379  0CD2  0201               	subwf	1,w
  2380  0CD3  1803               	skipnc
  2381  0CD4  2CE0               	goto	l4239
  2382                           
  2383                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2384  0CD5  0023               	movlb	3	; select bank3
  2385  0CD6  0848               	movf	_CDCDataOutHandle^(0+384),w
  2386  0CD7  0086               	movwf	6
  2387  0CD8  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2388  0CD9  0087               	movwf	7
  2389  0CDA  3141               	addfsr 1,1
  2390  0CDB  0801               	movf	1,w
  2391  0CDC  00E7               	movwf	??_getsUSBUSART^(0+384)
  2392  0CDD  0867               	movf	??_getsUSBUSART^(0+384),w
  2393  0CDE  0022               	movlb	2	; select bank2
  2394  0CDF  00EB               	movwf	getsUSBUSART@len^(0+256)
  2395  0CE0                     l4239:	
  2396                           
  2397                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2398  0CE0  0023               	movlb	3	; select bank3
  2399  0CE1  01D1               	clrf	_cdc_rx_len^(0+384)
  2400  0CE2                     l4245:	
  2401  0CE2  0022               	movlb	2	; select bank2
  2402  0CE3  086B               	movf	getsUSBUSART@len^(0+256),w
  2403  0CE4  0023               	movlb	3	; select bank3
  2404  0CE5  0251               	subwf	_cdc_rx_len^(0+384),w
  2405  0CE6  1803               	btfsc	3,0
  2406  0CE7  2CFF               	goto	l4247
  2407                           
  2408                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2409  0CE8  0851               	movf	_cdc_rx_len^(0+384),w
  2410  0CE9  3E20               	addlw	32
  2411  0CEA  0086               	movwf	6
  2412  0CEB  3001               	movlw	1	; select bank2/3
  2413  0CEC  0087               	movwf	7
  2414  0CED  0801               	movf	1,w
  2415  0CEE  00E7               	movwf	??_getsUSBUSART^(0+384)
  2416  0CEF  0851               	movf	_cdc_rx_len^(0+384),w
  2417  0CF0  0022               	movlb	2	; select bank2
  2418  0CF1  076C               	addwf	getsUSBUSART@buffer^(0+256),w
  2419  0CF2  0023               	movlb	3	; select bank3
  2420  0CF3  00E8               	movwf	(??_getsUSBUSART+1)^(0+384)
  2421  0CF4  0868               	movf	(??_getsUSBUSART+1)^(0+384),w
  2422  0CF5  0086               	movwf	6
  2423  0CF6  3003               	movlw	3	; select bank6/7
  2424  0CF7  0087               	movwf	7
  2425  0CF8  0867               	movf	??_getsUSBUSART^(0+384),w
  2426  0CF9  0081               	movwf	1
  2427  0CFA  3001               	movlw	1
  2428  0CFB  00E7               	movwf	??_getsUSBUSART^(0+384)
  2429  0CFC  0867               	movf	??_getsUSBUSART^(0+384),w
  2430  0CFD  07D1               	addwf	_cdc_rx_len^(0+384),f
  2431  0CFE  2CE2               	goto	l4245
  2432  0CFF                     l4247:	
  2433                           
  2434                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2435  0CFF  0022               	movlb	2	; select bank2
  2436  0D00  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  2437  0D01  3020               	movlw	32
  2438  0D02  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  2439  0D03  3001               	movlw	1
  2440  0D04  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  2441  0D05  3040               	movlw	64
  2442  0D06  0023               	movlb	3	; select bank3
  2443  0D07  00E7               	movwf	??_getsUSBUSART^(0+384)
  2444  0D08  0867               	movf	??_getsUSBUSART^(0+384),w
  2445  0D09  0022               	movlb	2	; select bank2
  2446  0D0A  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  2447  0D0B  3002               	movlw	2
  2448  0D0C  3186  26ED         	fcall	_USBTransferOnePacket
  2449  0D0E  0022               	movlb	2	; select bank2
  2450  0D0F  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  2451  0D10  0023               	movlb	3	; select bank3
  2452  0D11  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  2453  0D12  0022               	movlb	2	; select bank2
  2454  0D13  0860               	movf	?_USBTransferOnePacket^(0+256),w
  2455  0D14  0023               	movlb	3	; select bank3
  2456  0D15  00C8               	movwf	_CDCDataOutHandle^(0+384)
  2457  0D16                     l4249:	
  2458                           
  2459                           ;usb_device_cdc.c: 510: }
  2460                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2461  0D16  0851               	movf	_cdc_rx_len^(0+384),w
  2462  0D17  0008               	return
  2463  0D18                     __end_of_getsUSBUSART:	
  2464                           
  2465                           	psect	text3
  2466  031A                     __ptext3:	
  2467 ;; *************** function _USBDeviceInit *****************
  2468 ;; Defined at:
  2469 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  p               2    1[BANK2 ] PTR unsigned char 
  2474 ;;		 -> UEP1(1), 
  2475 ;;  i               1    3[BANK2 ] unsigned char 
  2476 ;;  i               1    4[BANK2 ] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;Total ram usage:        5 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:   10
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           
  2501                           ;psect for function _USBDeviceInit
  2502  031A                     _USBDeviceInit:	
  2503                           
  2504                           ;usb_device.c: 279: uint8_t i;
  2505                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2509  031A  0021               	movlb	1	; select bank1
  2510  031B  1112               	bcf	18,2	;volatile
  2511                           
  2512                           ;usb_device.c: 285: ;
  2513                           ;usb_device.c: 288: {UEIR = 0;};
  2514  031C  003D               	movlb	29	; select bank29
  2515  031D  0193               	clrf	19	;volatile
  2516                           
  2517                           ;usb_device.c: 291: {UIR = 0;};
  2518  031E  0190               	clrf	16	;volatile
  2519                           
  2520                           ;usb_device.c: 294: UEP0 = 0;
  2521  031F  0198               	clrf	24	;volatile
  2522                           
  2523                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  2524  0320  300E               	movlw	14
  2525  0321  0022               	movlb	2	; select bank2
  2526  0322  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  2527  0323  3099               	movlw	153
  2528  0324  00E1               	movwf	USBDeviceInit@p^(0+256)
  2529  0325  01E3               	clrf	USBDeviceInit@i_821^(0+256)
  2530  0326  3002               	movlw	2
  2531  0327  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  2532  0328  1803               	btfsc	3,0
  2533  0329  2B3B               	goto	l4143
  2534  032A                     l4135:	
  2535  032A  0861               	movf	USBDeviceInit@p^(0+256),w
  2536  032B  0086               	movwf	6
  2537  032C  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  2538  032D  0087               	movwf	7
  2539  032E  0181               	clrf	1
  2540  032F  3001               	movlw	1
  2541  0330  07E1               	addwf	USBDeviceInit@p^(0+256),f
  2542  0331  3000               	movlw	0
  2543  0332  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  2544  0333  3001               	movlw	1
  2545  0334  00E0               	movwf	??_USBDeviceInit^(0+256)
  2546  0335  0860               	movf	??_USBDeviceInit^(0+256),w
  2547  0336  07E3               	addwf	USBDeviceInit@i_821^(0+256),f
  2548  0337  3002               	movlw	2
  2549  0338  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  2550  0339  1C03               	skipc
  2551  033A  2B2A               	goto	l4135
  2552  033B                     l4143:	
  2553                           
  2554                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2555  033B  3016               	movlw	22
  2556  033C  003D               	movlb	29	; select bank29
  2557  033D  0091               	movwf	17	;volatile
  2558  033E  309F               	movlw	159
  2559  033F  0097               	movwf	23	;volatile
  2560  0340  307B               	movlw	123
  2561  0341  0092               	movwf	18	;volatile
  2562                           
  2563                           ;usb_device.c: 301: ;
  2564                           ;usb_device.c: 304: ;
  2565                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  2566  0342  0022               	movlb	2	; select bank2
  2567  0343  01E4               	clrf	USBDeviceInit@i^(0+256)
  2568  0344  300C               	movlw	12
  2569  0345  0264               	subwf	USBDeviceInit@i^(0+256),w
  2570  0346  1803               	btfsc	3,0
  2571  0347  2B61               	goto	l173
  2572  0348                     l4151:	
  2573                           
  2574                           ;usb_device.c: 308: {
  2575                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  2576  0348  0864               	movf	USBDeviceInit@i^(0+256),w
  2577  0349  00E0               	movwf	??_USBDeviceInit^(0+256)
  2578  034A  3001               	movlw	1
  2579  034B                     u3745:	
  2580  034B  35E0               	lslf	??_USBDeviceInit^(0+256),f
  2581  034C  3EFF               	addlw	-1
  2582  034D  1D03               	skipz
  2583  034E  2B4B               	goto	u3745
  2584  034F  3560               	lslf	??_USBDeviceInit^(0+256),w
  2585  0350  3E20               	addlw	32
  2586  0351  0086               	movwf	6
  2587  0352  0187               	clrf	7
  2588  0353  3000               	movlw	0
  2589  0354  3FC0               	movwi [0]fsr1
  2590  0355  3000               	movlw	0
  2591  0356  3FC1               	movwi [1]fsr1
  2592  0357  3FC2               	movwi [2]fsr1
  2593  0358  3FC3               	movwi [3]fsr1
  2594  0359  3001               	movlw	1
  2595  035A  00E0               	movwf	??_USBDeviceInit^(0+256)
  2596  035B  0860               	movf	??_USBDeviceInit^(0+256),w
  2597  035C  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2598  035D  300C               	movlw	12
  2599  035E  0264               	subwf	USBDeviceInit@i^(0+256),w
  2600  035F  1C03               	skipc
  2601  0360  2B48               	goto	l4151
  2602  0361                     l173:	
  2603                           
  2604                           ;usb_device.c: 310: }
  2605                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  2606  0361  003D               	movlb	29	; select bank29
  2607  0362  170E               	bsf	14,6	;volatile
  2608                           
  2609                           ;usb_device.c: 316: UADDR = 0x00;
  2610  0363  0196               	clrf	22	;volatile
  2611                           
  2612                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  2613  0364  120E               	bcf	14,4	;volatile
  2614                           
  2615                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  2616  0365  130E               	bcf	14,6	;volatile
  2617  0366                     l4163:	
  2618                           ;usb_device.c: 325: do
  2619                           
  2620                           
  2621                           ;usb_device.c: 326: {
  2622                           ;usb_device.c: 327: (UIR &= 0xF7);
  2623  0366  30F7               	movlw	247
  2624  0367  0022               	movlb	2	; select bank2
  2625  0368  00E0               	movwf	??_USBDeviceInit^(0+256)
  2626  0369  0860               	movf	??_USBDeviceInit^(0+256),w
  2627  036A  003D               	movlb	29	; select bank29
  2628  036B  0590               	andwf	16,f	;volatile
  2629                           
  2630                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  2631  036C  0023               	movlb	3	; select bank3
  2632  036D  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  2633                           
  2634                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  2635  036E  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  2636                           
  2637                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  2638  036F  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  2639  0370  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  2640                           
  2641                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  2642  0371  003D               	movlb	29	; select bank29
  2643  0372  1990               	btfsc	16,3	;volatile
  2644  0373  2B66               	goto	l4163
  2645                           
  2646                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  2647  0374  3001               	movlw	1
  2648  0375  0022               	movlb	2	; select bank2
  2649  0376  00E0               	movwf	??_USBDeviceInit^(0+256)
  2650  0377  0860               	movf	??_USBDeviceInit^(0+256),w
  2651  0378  0023               	movlb	3	; select bank3
  2652  0379  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  2653                           
  2654                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  2655  037A  3001               	movlw	1
  2656  037B  0022               	movlb	2	; select bank2
  2657  037C  00E0               	movwf	??_USBDeviceInit^(0+256)
  2658  037D  0860               	movf	??_USBDeviceInit^(0+256),w
  2659  037E  0023               	movlb	3	; select bank3
  2660  037F  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  2661                           
  2662                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  2663  0380  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  2664                           
  2665                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  2666  0381  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  2667                           
  2668                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  2669  0382  01DB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  2670                           
  2671                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  2672  0383  0022               	movlb	2	; select bank2
  2673  0384  01E4               	clrf	USBDeviceInit@i^(0+256)
  2674  0385  3003               	movlw	3
  2675  0386  0264               	subwf	USBDeviceInit@i^(0+256),w
  2676  0387  1803               	btfsc	3,0
  2677  0388  2BAD               	goto	l4191
  2678  0389                     l4185:	
  2679                           
  2680                           ;usb_device.c: 346: {
  2681                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  2682  0389  3564               	lslf	USBDeviceInit@i^(0+256),w
  2683  038A  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  2684  038B  0086               	movwf	6
  2685  038C  3001               	movlw	1	; select bank3/4
  2686  038D  0087               	movwf	7
  2687  038E  3000               	movlw	0
  2688  038F  3FC0               	movwi [0]fsr1
  2689  0390  3FC1               	movwi [1]fsr1
  2690                           
  2691                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  2692  0391  3564               	lslf	USBDeviceInit@i^(0+256),w
  2693  0392  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2694  0393  0086               	movwf	6
  2695  0394  3001               	movlw	1	; select bank3/4
  2696  0395  0087               	movwf	7
  2697  0396  3000               	movlw	0
  2698  0397  3FC0               	movwi [0]fsr1
  2699  0398  3FC1               	movwi [1]fsr1
  2700                           
  2701                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  2702  0399  0864               	movf	USBDeviceInit@i^(0+256),w
  2703  039A  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2704  039B  0086               	movwf	6
  2705  039C  3001               	movlw	1	; select bank3/4
  2706  039D  0087               	movwf	7
  2707  039E  0181               	clrf	1
  2708                           
  2709                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  2710  039F  0864               	movf	USBDeviceInit@i^(0+256),w
  2711  03A0  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2712  03A1  0086               	movwf	6
  2713  03A2  3001               	movlw	1	; select bank3/4
  2714  03A3  0087               	movwf	7
  2715  03A4  0181               	clrf	1
  2716  03A5  3001               	movlw	1
  2717  03A6  00E0               	movwf	??_USBDeviceInit^(0+256)
  2718  03A7  0860               	movf	??_USBDeviceInit^(0+256),w
  2719  03A8  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2720  03A9  3003               	movlw	3
  2721  03AA  0264               	subwf	USBDeviceInit@i^(0+256),w
  2722  03AB  1C03               	skipc
  2723  03AC  2B89               	goto	l4185
  2724  03AD                     l4191:	
  2725                           
  2726                           ;usb_device.c: 351: }
  2727                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2728  03AD  3028               	movlw	40
  2729  03AE  0023               	movlb	3	; select bank3
  2730  03AF  00A7               	movwf	_pBDTEntryIn^(0+384)
  2731  03B0  3000               	movlw	0
  2732  03B1  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  2733                           
  2734                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  2735  03B2  3016               	movlw	22
  2736  03B3  003D               	movlb	29	; select bank29
  2737  03B4  0098               	movwf	24	;volatile
  2738                           
  2739                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2740  03B5  3000               	movlw	0
  2741  03B6  0020               	movlb	0	; select bank0
  2742  03B7  00A3               	movwf	35	;volatile
  2743  03B8  3050               	movlw	80
  2744  03B9  00A2               	movwf	34	;volatile
  2745                           
  2746                           ;usb_device.c: 359: BDT[0].CNT = 8;
  2747  03BA  3008               	movlw	8
  2748  03BB  00A1               	movwf	33	;volatile
  2749                           
  2750                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  2751  03BC  3004               	movlw	4
  2752  03BD  0022               	movlb	2	; select bank2
  2753  03BE  00E0               	movwf	??_USBDeviceInit^(0+256)
  2754  03BF  0860               	movf	??_USBDeviceInit^(0+256),w
  2755  03C0  0020               	movlb	0	; select bank0
  2756  03C1  00A0               	movwf	32	;volatile
  2757                           
  2758                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  2759  03C2  17A0               	bsf	32,7	;volatile
  2760                           
  2761                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  2762  03C3  0022               	movlb	2	; select bank2
  2763  03C4  01EF               	clrf	_USBActiveConfiguration^(0+256)	;volatile
  2764                           
  2765                           ;usb_device.c: 366: USB1msTickCount = 0;
  2766  03C5  3000               	movlw	0
  2767  03C6  0023               	movlb	3	; select bank3
  2768  03C7  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  2769  03C8  3000               	movlw	0
  2770  03C9  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  2771  03CA  3000               	movlw	0
  2772  03CB  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  2773  03CC  3000               	movlw	0
  2774  03CD  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  2775                           
  2776                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  2777  03CE  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  2778                           
  2779                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  2780  03CF  0022               	movlb	2	; select bank2
  2781  03D0  01EE               	clrf	_USBDeviceState^(0+256)	;volatile
  2782  03D1  0008               	return
  2783  03D2                     __end_of_USBDeviceInit:	
  2784                           
  2785                           	psect	text4
  2786  098F                     __ptext4:	
  2787 ;; *************** function _USBDeviceAttach *****************
  2788 ;; Defined at:
  2789 ;;		line 1352 in file "../lib/usb/src/usb_device.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;Total ram usage:        1 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:   10
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           
  2818                           ;psect for function _USBDeviceAttach
  2819  098F                     _USBDeviceAttach:	
  2820                           
  2821                           ;usb_device.c: 1356: {
  2822                           ;usb_device.c: 1357: if(1 == 1)
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2826  098F  0022               	movlb	2	; select bank2
  2827  0990  086E               	movf	_USBDeviceState^(0+256),w	;volatile
  2828  0991  1D03               	btfss	3,2
  2829  0992  0008               	return
  2830                           
  2831                           ;usb_device.c: 1358: {
  2832                           ;usb_device.c: 1360: UCON = 0;
  2833  0993  003D               	movlb	29	; select bank29
  2834  0994  018E               	clrf	14	;volatile
  2835                           
  2836                           ;usb_device.c: 1363: UIE = 0;
  2837  0995  0192               	clrf	18	;volatile
  2838                           
  2839                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2840  0996  3016               	movlw	22
  2841  0997  0091               	movwf	17	;volatile
  2842  0998  309F               	movlw	159
  2843  0999  0097               	movwf	23	;volatile
  2844  099A  307B               	movlw	123
  2845  099B  0092               	movwf	18	;volatile
  2846                           
  2847                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2848  099C  0021               	movlb	1	; select bank1
  2849  099D  1512               	bsf	18,2	;volatile
  2850  099E  170B               	bsf	11,6	;volatile
  2851  099F  178B               	bsf	11,7	;volatile
  2852  09A0                     l233:	
  2853                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2854                           
  2855  09A0  003D               	movlb	29	; select bank29
  2856  09A1  198E               	btfsc	14,3	;volatile
  2857  09A2  29A5               	goto	l4227
  2858  09A3  158E               	bsf	14,3	;volatile
  2859  09A4  29A0               	goto	l233
  2860  09A5                     l4227:	
  2861                           
  2862                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  2863  09A5  3001               	movlw	1
  2864  09A6  0022               	movlb	2	; select bank2
  2865  09A7  00E0               	movwf	??_USBDeviceAttach^(0+256)
  2866  09A8  0860               	movf	??_USBDeviceAttach^(0+256),w
  2867  09A9  00EE               	movwf	_USBDeviceState^(0+256)	;volatile
  2868  09AA  0008               	return
  2869  09AB                     __end_of_USBDeviceAttach:	
  2870                           
  2871                           	psect	text5
  2872  092E                     __ptext5:	
  2873 ;; *************** function _SYSTEM_Initialize *****************
  2874 ;; Defined at:
  2875 ;;		line 82 in file "system.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  state           1    wreg     enum E2617
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  state           1    0[BANK2 ] enum E2617
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2890 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2892 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2893 ;;Total ram usage:        1 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:   10
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _SYSTEM_Initialize
  2905  092E                     _SYSTEM_Initialize:	
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  2909                           ;SYSTEM_Initialize@state stored from wreg
  2910  092E  0022               	movlb	2	; select bank2
  2911  092F  00E0               	movwf	SYSTEM_Initialize@state^(0+256)
  2912                           
  2913                           ;system.c: 84: switch(state)
  2914  0930  2938               	goto	l4105
  2915  0931                     l4101:	
  2916                           ;system.c: 85: {
  2917                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  2918                           
  2919                           
  2920                           ;system.c: 90: OSCCON = 0xFC;
  2921  0931  30FC               	movlw	252
  2922  0932  0021               	movlb	1	; select bank1
  2923  0933  0099               	movwf	25	;volatile
  2924                           
  2925                           ;system.c: 91: ACTCON = 0x90;
  2926  0934  3090               	movlw	144
  2927  0935  0027               	movlb	7	; select bank7
  2928  0936  009B               	movwf	27	;volatile
  2929                           
  2930                           ;system.c: 102: }
  2931                           
  2932                           ;system.c: 101: break;
  2933                           
  2934                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  2935                           
  2936                           ;system.c: 98: break;
  2937                           
  2938                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  2939                           
  2940                           ;system.c: 95: break;
  2941  0937  0008               	return
  2942  0938                     l4105:	
  2943  0938  0022               	movlb	2	; select bank2
  2944  0939  0860               	movf	SYSTEM_Initialize@state^(0+256),w
  2945                           
  2946                           ; Switch size 1, requested type "space"
  2947                           ; Number of cases is 3, Range of values is 0 to 2
  2948                           ; switch strategies available:
  2949                           ; Name         Instructions Cycles
  2950                           ; simple_byte           10     6 (average)
  2951                           ; direct_byte           12     6 (fixed)
  2952                           ; jumptable            260     6 (fixed)
  2953                           ;	Chosen strategy is simple_byte
  2954  093A  3A00               	xorlw	0	; case 0
  2955  093B  1903               	skipnz
  2956  093C  2931               	goto	l4101
  2957  093D  3A01               	xorlw	1	; case 1
  2958  093E  1903               	skipnz
  2959  093F  2944               	goto	l565
  2960  0940  3A03               	xorlw	3	; case 2
  2961  0941  1903               	skipnz
  2962  0942  2944               	goto	l565
  2963  0943  2944               	goto	l565
  2964  0944                     l565:	
  2965  0944  0008               	return
  2966  0945                     __end_of_SYSTEM_Initialize:	
  2967                           
  2968                           	psect	text6
  2969  0906                     __ptext6:	
  2970 ;; *************** function _SPI_Write *****************
  2971 ;; Defined at:
  2972 ;;		line 18 in file "../src/spi.h"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  data            1    wreg     unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  data            1    2[BANK2 ] unsigned char 
  2977 ;;  TempVar         1    1[BANK2 ] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;Total ram usage:        3 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:   10
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _SPI_Write
  3003  0906                     _SPI_Write:	
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _SPI_Write: [wreg]
  3007                           ;SPI_Write@data stored from wreg
  3008  0906  0022               	movlb	2	; select bank2
  3009  0907  00E2               	movwf	SPI_Write@data^(0+256)
  3010                           
  3011                           ;spi.h: 19: unsigned char TempVar;
  3012                           ;spi.h: 20: TempVar = SSP1BUF;
  3013  0908  0024               	movlb	4	; select bank4
  3014  0909  0811               	movf	17,w	;volatile
  3015  090A  0022               	movlb	2	; select bank2
  3016  090B  00E0               	movwf	??_SPI_Write^(0+256)
  3017  090C  0860               	movf	??_SPI_Write^(0+256),w
  3018  090D  00E1               	movwf	SPI_Write@TempVar^(0+256)
  3019                           
  3020                           ;spi.h: 21: PIR1bits.SSP1IF = 0;
  3021  090E  0020               	movlb	0	; select bank0
  3022  090F  1191               	bcf	17,3	;volatile
  3023                           
  3024                           ;spi.h: 22: SSP1BUF = data;
  3025  0910  0022               	movlb	2	; select bank2
  3026  0911  0862               	movf	SPI_Write@data^(0+256),w
  3027  0912  0024               	movlb	4	; select bank4
  3028  0913  0091               	movwf	17	;volatile
  3029  0914                     l642:	
  3030                           ;spi.h: 23: while(!PIR1bits.SSP1IF);
  3031                           
  3032  0914  0020               	movlb	0	; select bank0
  3033  0915  1D91               	btfss	17,3	;volatile
  3034  0916  2914               	goto	l642
  3035                           
  3036                           ;spi.h: 24: RC2 = 1;
  3037  0917  150E               	bsf	14,2	;volatile
  3038  0918  0008               	return
  3039  0919                     __end_of_SPI_Write:	
  3040                           
  3041                           	psect	text7
  3042  08F3                     __ptext7:	
  3043 ;; *************** function _SPI_Init *****************
  3044 ;; Defined at:
  3045 ;;		line 1 in file "../src/spi.h"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:   10
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           
  3074                           ;psect for function _SPI_Init
  3075  08F3                     _SPI_Init:	
  3076                           
  3077                           ;spi.h: 2: TRISB6 = 0;
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  3081  08F3  0021               	movlb	1	; select bank1
  3082  08F4  130D               	bcf	13,6	;volatile
  3083                           
  3084                           ;spi.h: 3: TRISB4 = 1;
  3085  08F5  160D               	bsf	13,4	;volatile
  3086                           
  3087                           ;spi.h: 4: TRISC7 = 0;
  3088  08F6  138E               	bcf	14,7	;volatile
  3089                           
  3090                           ;spi.h: 5: TRISC6 = 0;
  3091  08F7  130E               	bcf	14,6	;volatile
  3092                           
  3093                           ;spi.h: 7: PIR1bits.SSP1IF = 0;
  3094  08F8  0020               	movlb	0	; select bank0
  3095  08F9  1191               	bcf	17,3	;volatile
  3096                           
  3097                           ;spi.h: 8: PIE1bits.SSP1IE = 0;
  3098  08FA  0021               	movlb	1	; select bank1
  3099  08FB  1191               	bcf	17,3	;volatile
  3100                           
  3101                           ;spi.h: 11: SSPCON1bits.SSPEN = 1;
  3102  08FC  0024               	movlb	4	; select bank4
  3103  08FD  1695               	bsf	21,5	;volatile
  3104                           
  3105                           ;spi.h: 12: SSPCON1bits.CKP = 1;
  3106  08FE  1615               	bsf	21,4	;volatile
  3107                           
  3108                           ;spi.h: 13: SSPSTATbits.CKE = 1;
  3109  08FF  1714               	bsf	20,6	;volatile
  3110                           
  3111                           ;spi.h: 14: SSPCON1bits.SSPM = 0x01;
  3112  0900  0815               	movf	21,w	;volatile
  3113  0901  39F0               	andlw	-16
  3114  0902  3801               	iorlw	1
  3115  0903  0095               	movwf	21	;volatile
  3116                           
  3117                           ;spi.h: 15: SSPSTATbits.SMP = 0;
  3118  0904  1394               	bcf	20,7	;volatile
  3119  0905  0008               	return
  3120  0906                     __end_of_SPI_Init:	
  3121                           
  3122                           	psect	text8
  3123  0252                     __ptext8:	
  3124 ;; *************** function _CDCTxService *****************
  3125 ;; Defined at:
  3126 ;;		line 836 in file "../lib/usb/src/usb_device_cdc.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  byte_to_send    1    1[BANK3 ] unsigned char 
  3131 ;;  i               1    0[BANK3 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       
      +0       0
  3145 ;;Total ram usage:        3 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:   11
  3148 ;; This function calls:
  3149 ;;		_USBTransferOnePacket
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _CDCTxService
  3157  0252                     _CDCTxService:	
  3158                           
  3159                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3160                           ;usb_device_cdc.c: 839: uint8_t i;
  3161                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3162                           
  3163                           ;incstack = 0
  3164                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3165  0252  0021               	movlb	1	; select bank1
  3166  0253  1112               	bcf	18,2	;volatile
  3167                           
  3168                           ;usb_device_cdc.c: 843: {};
  3169                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3170  0254  0023               	movlb	3	; select bank3
  3171  0255  0846               	movf	_CDCDataInHandle^(0+384),w
  3172  0256  0447               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  3173  0257  1903               	btfsc	3,2
  3174  0258  2A62               	goto	l4273
  3175  0259  0846               	movf	_CDCDataInHandle^(0+384),w
  3176  025A  0086               	movwf	6
  3177  025B  0847               	movf	(_CDCDataInHandle+1)^(0+384),w
  3178  025C  0087               	movwf	7
  3179  025D  1F81               	btfss	1,7
  3180  025E  2A62               	goto	l4273
  3181                           
  3182                           ;usb_device_cdc.c: 846: {
  3183                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3184  025F  0021               	movlb	1	; select bank1
  3185  0260  1512               	bsf	18,2	;volatile
  3186                           
  3187                           ;usb_device_cdc.c: 848: return;
  3188  0261  0008               	return
  3189  0262                     l4273:	
  3190                           
  3191                           ;usb_device_cdc.c: 849: }
  3192                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3193  0262  3003               	movlw	3
  3194  0263  0021               	movlb	1	; select bank1
  3195  0264  0662               	xorwf	_cdc_trf_state^(0+128),w
  3196  0265  1903               	btfsc	3,2
  3197                           
  3198                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3199  0266  01E2               	clrf	_cdc_trf_state^(0+128)
  3200                           
  3201                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3202  0267  0862               	movf	_cdc_trf_state^(0+128),w
  3203  0268  1D03               	btfss	3,2
  3204  0269  2A6C               	goto	l4281
  3205                           
  3206                           ;usb_device_cdc.c: 863: {
  3207                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3208  026A  1512               	bsf	18,2	;volatile
  3209                           
  3210                           ;usb_device_cdc.c: 865: return;
  3211  026B  0008               	return
  3212  026C                     l4281:	
  3213                           
  3214                           ;usb_device_cdc.c: 866: }
  3215                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3216  026C  3002               	movlw	2
  3217  026D  0662               	xorwf	_cdc_trf_state^(0+128),w
  3218  026E  1D03               	btfss	3,2
  3219  026F  2A8B               	goto	l4287
  3220                           
  3221                           ;usb_device_cdc.c: 872: {
  3222                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3223  0270  0022               	movlb	2	; select bank2
  3224  0271  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3225  0272  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3226  0273  3000               	movlw	0
  3227  0274  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3228  0275  3000               	movlw	0
  3229  0276  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3230  0277  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  3231  0278  3002               	movlw	2
  3232  0279  3186  26ED  3182   	fcall	_USBTransferOnePacket
  3233  027C  0022               	movlb	2	; select bank2
  3234  027D  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3235  027E  0023               	movlb	3	; select bank3
  3236  027F  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3237  0280  0022               	movlb	2	; select bank2
  3238  0281  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3239  0282  0023               	movlb	3	; select bank3
  3240  0283  00C6               	movwf	_CDCDataInHandle^(0+384)
  3241                           
  3242                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3243  0284  3003               	movlw	3
  3244  0285  0022               	movlb	2	; select bank2
  3245  0286  00EB               	movwf	??_CDCTxService^(0+256)
  3246  0287  086B               	movf	??_CDCTxService^(0+256),w
  3247  0288  0021               	movlb	1	; select bank1
  3248  0289  00E2               	movwf	_cdc_trf_state^(0+128)
  3249                           
  3250                           ;usb_device_cdc.c: 876: }
  3251  028A  2B17               	goto	l4335
  3252  028B                     l4287:	
  3253                           
  3254                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3255  028B  0362               	decf	_cdc_trf_state^(0+128),w
  3256  028C  1D03               	btfss	3,2
  3257  028D  2B17               	goto	l4335
  3258                           
  3259                           ;usb_device_cdc.c: 878: {
  3260                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3261  028E  3041               	movlw	65
  3262  028F  0023               	movlb	3	; select bank3
  3263  0290  0250               	subwf	_cdc_tx_len^(0+384),w
  3264  0291  1C03               	skipc
  3265  0292  2A95               	goto	l4293
  3266                           
  3267                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3268  0293  3040               	movlw	64
  3269  0294  2A96               	goto	L1
  3270  0295                     l4293:	
  3271                           
  3272                           ;usb_device_cdc.c: 884: else
  3273                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3274  0295  0850               	movf	_cdc_tx_len^(0+384),w
  3275  0296                     L1:	
  3276  0296  0022               	movlb	2	; select bank2
  3277  0297  00EB               	movwf	??_CDCTxService^(0+256)
  3278  0298  086B               	movf	??_CDCTxService^(0+256),w
  3279  0299  0023               	movlb	3	; select bank3
  3280  029A  00E8               	movwf	CDCTxService@byte_to_send^(0+384)
  3281                           
  3282                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3283  029B  0368               	decf	CDCTxService@byte_to_send^(0+384),w
  3284  029C  3AFF               	xorlw	255
  3285  029D  0750               	addwf	_cdc_tx_len^(0+384),w
  3286  029E  0022               	movlb	2	; select bank2
  3287  029F  00EB               	movwf	??_CDCTxService^(0+256)
  3288  02A0  086B               	movf	??_CDCTxService^(0+256),w
  3289  02A1  0023               	movlb	3	; select bank3
  3290  02A2  00D0               	movwf	_cdc_tx_len^(0+384)
  3291                           
  3292                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3293  02A3  30A0               	movlw	160
  3294  02A4  0022               	movlb	2	; select bank2
  3295  02A5  00EB               	movwf	??_CDCTxService^(0+256)
  3296  02A6  086B               	movf	??_CDCTxService^(0+256),w
  3297  02A7  0023               	movlb	3	; select bank3
  3298  02A8  00CA               	movwf	_pCDCDst^(0+384)
  3299                           
  3300                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3301  02A9  0868               	movf	CDCTxService@byte_to_send^(0+384),w
  3302  02AA  0022               	movlb	2	; select bank2
  3303  02AB  00EB               	movwf	??_CDCTxService^(0+256)
  3304  02AC  086B               	movf	??_CDCTxService^(0+256),w
  3305  02AD  0023               	movlb	3	; select bank3
  3306  02AE  00E7               	movwf	CDCTxService@i^(0+384)
  3307                           
  3308                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3309  02AF  084F               	movf	_cdc_mem_type^(0+384),w
  3310  02B0  1903               	btfsc	3,2
  3311  02B1  2ACE               	goto	l4313
  3312  02B2  2AED               	goto	l4323
  3313  02B3                     l4305:	
  3314                           ;usb_device_cdc.c: 896: {
  3315                           ;usb_device_cdc.c: 897: while(i)
  3316                           
  3317                           
  3318                           ;usb_device_cdc.c: 898: {
  3319                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3320  02B3  084C               	movf	_pCDCSrc^(0+384),w
  3321  02B4  0086               	movwf	6
  3322  02B5  3002               	movlw	2	; select bank4/5
  3323  02B6  0087               	movwf	7
  3324  02B7  0801               	movf	1,w
  3325  02B8  0022               	movlb	2	; select bank2
  3326  02B9  00EB               	movwf	??_CDCTxService^(0+256)
  3327  02BA  0023               	movlb	3	; select bank3
  3328  02BB  084A               	movf	_pCDCDst^(0+384),w
  3329  02BC  0086               	movwf	6
  3330  02BD  0187               	clrf	7
  3331  02BE  0022               	movlb	2	; select bank2
  3332  02BF  086B               	movf	??_CDCTxService^(0+256),w
  3333  02C0  0081               	movwf	1
  3334                           
  3335                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3336  02C1  3001               	movlw	1
  3337  02C2  00EB               	movwf	??_CDCTxService^(0+256)
  3338  02C3  086B               	movf	??_CDCTxService^(0+256),w
  3339  02C4  0023               	movlb	3	; select bank3
  3340  02C5  07CA               	addwf	_pCDCDst^(0+384),f
  3341                           
  3342                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3343  02C6  3001               	movlw	1
  3344  02C7  0022               	movlb	2	; select bank2
  3345  02C8  00EB               	movwf	??_CDCTxService^(0+256)
  3346  02C9  086B               	movf	??_CDCTxService^(0+256),w
  3347  02CA  0023               	movlb	3	; select bank3
  3348  02CB  07CC               	addwf	_pCDCSrc^(0+384),f
  3349                           
  3350                           ;usb_device_cdc.c: 902: i--;
  3351  02CC  3001               	movlw	1
  3352  02CD  02E7               	subwf	CDCTxService@i^(0+384),f
  3353  02CE                     l4313:	
  3354  02CE  0867               	movf	CDCTxService@i^(0+384),w
  3355  02CF  1903               	btfsc	3,2
  3356  02D0  2AF0               	goto	l4325
  3357  02D1  2AB3               	goto	l4305
  3358  02D2                     l4315:	
  3359                           ;usb_device_cdc.c: 905: else
  3360                           ;usb_device_cdc.c: 906: {
  3361                           ;usb_device_cdc.c: 907: while(i)
  3362                           
  3363                           ;usb_device_cdc.c: 903: }
  3364                           ;usb_device_cdc.c: 904: }
  3365                           
  3366                           
  3367                           ;usb_device_cdc.c: 908: {
  3368                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3369  02D2  084C               	movf	_pCDCSrc^(0+384),w
  3370  02D3  0086               	movwf	6
  3371  02D4  3002               	movlw	2	; select bank4/5
  3372  02D5  0087               	movwf	7
  3373  02D6  0801               	movf	1,w
  3374  02D7  0022               	movlb	2	; select bank2
  3375  02D8  00EB               	movwf	??_CDCTxService^(0+256)
  3376  02D9  0023               	movlb	3	; select bank3
  3377  02DA  084A               	movf	_pCDCDst^(0+384),w
  3378  02DB  0086               	movwf	6
  3379  02DC  0187               	clrf	7
  3380  02DD  0022               	movlb	2	; select bank2
  3381  02DE  086B               	movf	??_CDCTxService^(0+256),w
  3382  02DF  0081               	movwf	1
  3383                           
  3384                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3385  02E0  3001               	movlw	1
  3386  02E1  00EB               	movwf	??_CDCTxService^(0+256)
  3387  02E2  086B               	movf	??_CDCTxService^(0+256),w
  3388  02E3  0023               	movlb	3	; select bank3
  3389  02E4  07CA               	addwf	_pCDCDst^(0+384),f
  3390                           
  3391                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3392  02E5  3001               	movlw	1
  3393  02E6  0022               	movlb	2	; select bank2
  3394  02E7  00EB               	movwf	??_CDCTxService^(0+256)
  3395  02E8  086B               	movf	??_CDCTxService^(0+256),w
  3396  02E9  0023               	movlb	3	; select bank3
  3397  02EA  07CC               	addwf	_pCDCSrc^(0+384),f
  3398                           
  3399                           ;usb_device_cdc.c: 912: i--;
  3400  02EB  3001               	movlw	1
  3401  02EC  02E7               	subwf	CDCTxService@i^(0+384),f
  3402  02ED                     l4323:	
  3403  02ED  0867               	movf	CDCTxService@i^(0+384),w
  3404  02EE  1D03               	btfss	3,2
  3405  02EF  2AD2               	goto	l4315
  3406  02F0                     l4325:	
  3407                           
  3408                           ;usb_device_cdc.c: 913: }
  3409                           ;usb_device_cdc.c: 914: }
  3410                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3411  02F0  0850               	movf	_cdc_tx_len^(0+384),w
  3412  02F1  1D03               	btfss	3,2
  3413  02F2  2AFF               	goto	l4333
  3414                           
  3415                           ;usb_device_cdc.c: 921: {
  3416                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  3417  02F3  3040               	movlw	64
  3418  02F4  0668               	xorwf	CDCTxService@byte_to_send^(0+384),w
  3419  02F5  1D03               	btfss	3,2
  3420  02F6  2AF9               	goto	l4331
  3421                           
  3422                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3423  02F7  3002               	movlw	2
  3424  02F8  2AFA               	goto	L2
  3425  02F9                     l4331:	
  3426                           
  3427                           ;usb_device_cdc.c: 924: else
  3428                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3429  02F9  3003               	movlw	3
  3430  02FA                     L2:	
  3431  02FA  0022               	movlb	2	; select bank2
  3432  02FB  00EB               	movwf	??_CDCTxService^(0+256)
  3433  02FC  086B               	movf	??_CDCTxService^(0+256),w
  3434  02FD  0021               	movlb	1	; select bank1
  3435  02FE  00E2               	movwf	_cdc_trf_state^(0+128)
  3436  02FF                     l4333:	
  3437                           
  3438                           ;usb_device_cdc.c: 926: }
  3439                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3440  02FF  0022               	movlb	2	; select bank2
  3441  0300  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3442  0301  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3443  0302  30A0               	movlw	160
  3444  0303  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3445  0304  3000               	movlw	0
  3446  0305  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3447  0306  0023               	movlb	3	; select bank3
  3448  0307  0868               	movf	CDCTxService@byte_to_send^(0+384),w
  3449  0308  0022               	movlb	2	; select bank2
  3450  0309  00EB               	movwf	??_CDCTxService^(0+256)
  3451  030A  086B               	movf	??_CDCTxService^(0+256),w
  3452  030B  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3453  030C  3002               	movlw	2
  3454  030D  3186  26ED         	fcall	_USBTransferOnePacket
  3455  030F  0022               	movlb	2	; select bank2
  3456  0310  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3457  0311  0023               	movlb	3	; select bank3
  3458  0312  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3459  0313  0022               	movlb	2	; select bank2
  3460  0314  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3461  0315  0023               	movlb	3	; select bank3
  3462  0316  00C6               	movwf	_CDCDataInHandle^(0+384)
  3463  0317                     l4335:	
  3464                           
  3465                           ;usb_device_cdc.c: 929: }
  3466                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3467  0317  0021               	movlb	1	; select bank1
  3468  0318  1512               	bsf	18,2	;volatile
  3469  0319  0008               	return
  3470  031A                     __end_of_CDCTxService:	
  3471                           
  3472                           	psect	text9
  3473  0AF9                     __ptext9:	
  3474 ;; *************** function _CDCInitEP *****************
  3475 ;; Defined at:
  3476 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3494 ;;Total ram usage:        1 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:   12
  3497 ;; This function calls:
  3498 ;;		_USBEnableEndpoint
  3499 ;;		_USBTransferOnePacket
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _CDCInitEP
  3507  0AF9                     _CDCInitEP:	
  3508                           
  3509                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3513  0AF9  3000               	movlw	0
  3514  0AFA  0023               	movlb	3	; select bank3
  3515  0AFB  00E1               	movwf	(_line_coding+3)^(0+384)
  3516  0AFC  3000               	movlw	0
  3517  0AFD  00E0               	movwf	(_line_coding+2)^(0+384)
  3518  0AFE  304B               	movlw	75
  3519  0AFF  00DF               	movwf	(_line_coding+1)^(0+384)
  3520  0B00  3000               	movlw	0
  3521  0B01  00DE               	movwf	_line_coding^(0+384)
  3522                           
  3523                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  3524  0B02  01E2               	clrf	(_line_coding^(0+384)+4)
  3525                           
  3526                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  3527  0B03  01E3               	clrf	(_line_coding^(0+384)+5)
  3528                           
  3529                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  3530  0B04  3008               	movlw	8
  3531  0B05  00E7               	movwf	??_CDCInitEP^(0+384)
  3532  0B06  0867               	movf	??_CDCInitEP^(0+384),w
  3533  0B07  00E4               	movwf	(_line_coding^(0+384)+6)
  3534                           
  3535                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  3536  0B08  01D1               	clrf	_cdc_rx_len^(0+384)
  3537                           
  3538                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  3539  0B09  301A               	movlw	26
  3540  0B0A  00E7               	movwf	??_CDCInitEP^(0+384)
  3541  0B0B  0867               	movf	??_CDCInitEP^(0+384),w
  3542  0B0C  0022               	movlb	2	; select bank2
  3543  0B0D  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3544  0B0E  3001               	movlw	1
  3545  0B0F  318A  220A  318A   	fcall	_USBEnableEndpoint
  3546                           
  3547                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  3548  0B12  301E               	movlw	30
  3549  0B13  0023               	movlb	3	; select bank3
  3550  0B14  00E7               	movwf	??_CDCInitEP^(0+384)
  3551  0B15  0867               	movf	??_CDCInitEP^(0+384),w
  3552  0B16  0022               	movlb	2	; select bank2
  3553  0B17  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3554  0B18  3002               	movlw	2
  3555  0B19  318A  220A  318A   	fcall	_USBEnableEndpoint
  3556                           
  3557                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3558  0B1C  0022               	movlb	2	; select bank2
  3559  0B1D  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3560  0B1E  3020               	movlw	32
  3561  0B1F  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3562  0B20  3001               	movlw	1
  3563  0B21  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3564  0B22  3040               	movlw	64
  3565  0B23  0023               	movlb	3	; select bank3
  3566  0B24  00E7               	movwf	??_CDCInitEP^(0+384)
  3567  0B25  0867               	movf	??_CDCInitEP^(0+384),w
  3568  0B26  0022               	movlb	2	; select bank2
  3569  0B27  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3570  0B28  3002               	movlw	2
  3571  0B29  3186  26ED         	fcall	_USBTransferOnePacket
  3572  0B2B  0022               	movlb	2	; select bank2
  3573  0B2C  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3574  0B2D  0023               	movlb	3	; select bank3
  3575  0B2E  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  3576  0B2F  0022               	movlb	2	; select bank2
  3577  0B30  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3578  0B31  0023               	movlb	3	; select bank3
  3579  0B32  00C8               	movwf	_CDCDataOutHandle^(0+384)
  3580                           
  3581                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  3582  0B33  01C6               	clrf	_CDCDataInHandle^(0+384)
  3583  0B34  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  3584                           
  3585                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  3586  0B35  0021               	movlb	1	; select bank1
  3587  0B36  01E2               	clrf	_cdc_trf_state^(0+128)
  3588  0B37  0008               	return
  3589  0B38                     __end_of_CDCInitEP:	
  3590                           
  3591                           	psect	text10
  3592  06ED                     __ptext10:	
  3593 ;; *************** function _USBTransferOnePacket *****************
  3594 ;; Defined at:
  3595 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  ep              1    wreg     unsigned char 
  3598 ;;  dir             1    0[BANK2 ] unsigned char 
  3599 ;;  data            2    1[BANK2 ] PTR unsigned char 
  3600 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  3601 ;;  len             1    3[BANK2 ] unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  ep              1    8[BANK2 ] unsigned char 
  3604 ;;  handle          2    9[BANK2 ] PTR volatile struct __BD
  3605 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2    0[BANK2 ] PTR void 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3615 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3616 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3617 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3618 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  3619 ;;Total ram usage:       11 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:   10
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_CDCInitEP
  3626 ;;		_getsUSBUSART
  3627 ;;		_CDCTxService
  3628 ;;		_USBCDCEventHandler
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function _USBTransferOnePacket
  3634  06ED                     _USBTransferOnePacket:	
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  3638                           ;USBTransferOnePacket@ep stored from wreg
  3639  06ED  0022               	movlb	2	; select bank2
  3640  06EE  00E8               	movwf	USBTransferOnePacket@ep^(0+256)
  3641                           
  3642                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  3643                           ;usb_device.c: 1000: if(dir != 0)
  3644  06EF  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3645  06F0  1903               	btfsc	3,2
  3646  06F1  2EFB               	goto	l4075
  3647                           
  3648                           ;usb_device.c: 1001: {
  3649                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  3650  06F2  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3651  06F3  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3652  06F4  0086               	movwf	6
  3653  06F5  3001               	movlw	1	; select bank3/4
  3654  06F6  0087               	movwf	7
  3655  06F7  3F40               	moviw [0]fsr1
  3656  06F8  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3657  06F9  3F41               	moviw [1]fsr1
  3658  06FA  2F03               	goto	L3
  3659  06FB                     l4075:	
  3660                           ;usb_device.c: 1004: }
  3661                           
  3662                           
  3663                           ;usb_device.c: 1005: else
  3664                           ;usb_device.c: 1006: {
  3665                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  3666  06FB  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3667  06FC  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3668  06FD  0086               	movwf	6
  3669  06FE  3001               	movlw	1	; select bank3/4
  3670  06FF  0087               	movwf	7
  3671  0700  3F40               	moviw [0]fsr1
  3672  0701  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3673  0702  3F41               	moviw [1]fsr1
  3674  0703                     L3:	
  3675  0703  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  3676                           
  3677                           ;usb_device.c: 1009: }
  3678                           ;usb_device.c: 1013: if(handle == 0)
  3679  0704  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3680  0705  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+256),w
  3681  0706  1D03               	btfss	3,2
  3682  0707  2F0B               	goto	l4083
  3683                           
  3684                           ;usb_device.c: 1014: {
  3685                           ;usb_device.c: 1015: return 0;
  3686  0708  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  3687  0709  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  3688  070A  0008               	return
  3689  070B                     l4083:	
  3690                           
  3691                           ;usb_device.c: 1016: }
  3692                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  3693  070B  30FF               	movlw	255
  3694  070C  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  3695  070D  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3696  070E  307F               	movlw	127
  3697  070F  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  3698  0710  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3699  0711  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3700  0712  0086               	movwf	6
  3701  0713  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3702  0714  0087               	movwf	7
  3703  0715  3142               	addfsr 1,2
  3704  0716  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3705  0717  3FC0               	movwi [0]fsr1
  3706  0718  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  3707  0719  3FC1               	movwi [1]fsr1
  3708                           
  3709                           ;usb_device.c: 1030: handle->CNT = len;
  3710  071A  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3711  071B  3E01               	addlw	1
  3712  071C  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3713  071D  3000               	movlw	0
  3714  071E  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  3715  071F  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3716  0720  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3717  0721  0086               	movwf	6
  3718  0722  0865               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  3719  0723  0087               	movwf	7
  3720  0724  0863               	movf	USBTransferOnePacket@len^(0+256),w
  3721  0725  0081               	movwf	1
  3722                           
  3723                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  3724  0726  3040               	movlw	64
  3725  0727  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3726  0728  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3727  0729  0086               	movwf	6
  3728  072A  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3729  072B  0087               	movwf	7
  3730  072C  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3731  072D  0581               	andwf	1,f
  3732                           
  3733                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  3734  072E  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3735  072F  0086               	movwf	6
  3736  0730  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3737  0731  0087               	movwf	7
  3738  0732  1581               	bsf	1,3
  3739                           
  3740                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  3741  0733  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3742  0734  0086               	movwf	6
  3743  0735  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3744  0736  0087               	movwf	7
  3745  0737  1781               	bsf	1,7
  3746                           
  3747                           ;usb_device.c: 1036: if(dir != 0)
  3748  0738  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3749  0739  1903               	btfsc	3,2
  3750  073A  2F54               	goto	l4093
  3751                           
  3752                           ;usb_device.c: 1037: {
  3753                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  3754  073B  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3755  073C  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3756  073D  0086               	movwf	6
  3757  073E  3001               	movlw	1	; select bank3/4
  3758  073F  0087               	movwf	7
  3759  0740  3F40               	moviw [0]fsr1
  3760  0741  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3761  0742  3F41               	moviw [1]fsr1
  3762  0743  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3763  0744  3004               	movlw	4
  3764  0745  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3765  0746  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3766  0747  3000               	movlw	0
  3767  0748  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3768  0749  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3769  074A  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3770  074B  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3771  074C  0086               	movwf	6
  3772  074D  3001               	movlw	1	; select bank3/4
  3773  074E  0087               	movwf	7
  3774  074F  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3775  0750  3FC0               	movwi [0]fsr1
  3776  0751  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3777  0752  3FC1               	movwi [1]fsr1
  3778                           
  3779                           ;usb_device.c: 1040: }
  3780  0753  2F6C               	goto	l4095
  3781  0754                     l4093:	
  3782                           
  3783                           ;usb_device.c: 1041: else
  3784                           ;usb_device.c: 1042: {
  3785                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  3786  0754  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3787  0755  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3788  0756  0086               	movwf	6
  3789  0757  3001               	movlw	1	; select bank3/4
  3790  0758  0087               	movwf	7
  3791  0759  3F40               	moviw [0]fsr1
  3792  075A  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3793  075B  3F41               	moviw [1]fsr1
  3794  075C  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3795  075D  3004               	movlw	4
  3796  075E  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3797  075F  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3798  0760  3000               	movlw	0
  3799  0761  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3800  0762  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3801  0763  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3802  0764  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3803  0765  0086               	movwf	6
  3804  0766  3001               	movlw	1	; select bank3/4
  3805  0767  0087               	movwf	7
  3806  0768  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3807  0769  3FC0               	movwi [0]fsr1
  3808  076A  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3809  076B  3FC1               	movwi [1]fsr1
  3810  076C                     l4095:	
  3811                           
  3812                           ;usb_device.c: 1045: }
  3813                           ;usb_device.c: 1046: return (void*)handle;
  3814  076C  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3815  076D  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  3816  076E  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3817  076F  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  3818  0770  0008               	return
  3819  0771                     __end_of_USBTransferOnePacket:	
  3820                           
  3821                           	psect	text11
  3822  0A0A                     __ptext11:	
  3823 ;; *************** function _USBEnableEndpoint *****************
  3824 ;; Defined at:
  3825 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  ep              1    wreg     unsigned char 
  3828 ;;  options         1    7[BANK2 ] unsigned char 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  ep              1   12[BANK2 ] unsigned char 
  3831 ;;  p               2   10[BANK2 ] PTR unsigned char 
  3832 ;;		 -> UEP0(1), 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3842 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;Total ram usage:        6 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:   11
  3849 ;; This function calls:
  3850 ;;		_USBConfigureEndpoint
  3851 ;; This function is called by:
  3852 ;;		_CDCInitEP
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function _USBEnableEndpoint
  3858  0A0A                     _USBEnableEndpoint:	
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3862                           ;USBEnableEndpoint@ep stored from wreg
  3863  0A0A  0022               	movlb	2	; select bank2
  3864  0A0B  00EC               	movwf	USBEnableEndpoint@ep^(0+256)
  3865                           
  3866                           ;usb_device.c: 880: unsigned char* p;
  3867                           ;usb_device.c: 884: if(options & 0x04)
  3868  0A0C  1D67               	btfss	USBEnableEndpoint@options^(0+256),2
  3869  0A0D  2A13               	goto	l4063
  3870                           
  3871                           ;usb_device.c: 885: {
  3872                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  3873  0A0E  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3874  0A0F  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3875  0A10  318B  237A  318A   	fcall	_USBConfigureEndpoint
  3876  0A13                     l4063:	
  3877                           
  3878                           ;usb_device.c: 887: }
  3879                           ;usb_device.c: 888: if(options & 0x02)
  3880  0A13  0022               	movlb	2	; select bank2
  3881  0A14  1CE7               	btfss	USBEnableEndpoint@options^(0+256),1
  3882  0A15  2A1B               	goto	l4067
  3883                           
  3884                           ;usb_device.c: 889: {
  3885                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  3886  0A16  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3887  0A17  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  3888  0A18  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3889  0A19  318B  237A         	fcall	_USBConfigureEndpoint
  3890  0A1B                     l4067:	
  3891                           
  3892                           ;usb_device.c: 891: }
  3893                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  3894  0A1B  0022               	movlb	2	; select bank2
  3895  0A1C  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3896  0A1D  3E98               	addlw	152
  3897  0A1E  00E8               	movwf	??_USBEnableEndpoint^(0+256)
  3898  0A1F  01E9               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  3899  0A20  300E               	movlw	14
  3900  0A21  3DE9               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  3901  0A22  0868               	movf	??_USBEnableEndpoint^(0+256),w
  3902  0A23  00EA               	movwf	USBEnableEndpoint@p^(0+256)
  3903  0A24  0869               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  3904  0A25  00EB               	movwf	(USBEnableEndpoint@p+1)^(0+256)
  3905                           
  3906                           ;usb_device.c: 901: *p = options;
  3907  0A26  086A               	movf	USBEnableEndpoint@p^(0+256),w
  3908  0A27  0086               	movwf	6
  3909  0A28  086B               	movf	(USBEnableEndpoint@p+1)^(0+256),w
  3910  0A29  0087               	movwf	7
  3911  0A2A  0867               	movf	USBEnableEndpoint@options^(0+256),w
  3912  0A2B  0081               	movwf	1
  3913  0A2C  0008               	return
  3914  0A2D                     __end_of_USBEnableEndpoint:	
  3915                           
  3916                           	psect	text12
  3917  0B7A                     __ptext12:	
  3918 ;; *************** function _USBConfigureEndpoint *****************
  3919 ;; Defined at:
  3920 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  EPNum           1    wreg     unsigned char 
  3923 ;;  direction       1    0[BANK2 ] unsigned char 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  EPNum           1    5[BANK2 ] unsigned char 
  3926 ;;  handle          1    6[BANK2 ] PTR volatile struct __BD
  3927 ;;		 -> BDT(48), 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3937 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;Total ram usage:        7 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:   10
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_USBEnableEndpoint
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _USBConfigureEndpoint
  3953  0B7A                     _USBConfigureEndpoint:	
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  3957                           ;USBConfigureEndpoint@EPNum stored from wreg
  3958  0B7A  0022               	movlb	2	; select bank2
  3959  0B7B  00E5               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  3960                           
  3961                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  3962                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  3963  0B7C  3020               	movlw	32
  3964  0B7D  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3965  0B7E  0861               	movf	??_USBConfigureEndpoint^(0+256),w
  3966  0B7F  00E6               	movwf	USBConfigureEndpoint@handle^(0+256)
  3967                           
  3968                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  3969  0B80  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  3970  0B81  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3971  0B82  3001               	movlw	1
  3972  0B83                     u3625:	
  3973  0B83  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  3974  0B84  0B89               	decfsz	9,f
  3975  0B85  2B83               	goto	u3625
  3976  0B86  0865               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  3977  0B87  00E2               	movwf	(??_USBConfigureEndpoint+1)^(0+256)
  3978  0B88  3001               	movlw	1
  3979  0B89                     u3635:	
  3980  0B89  35E2               	lslf	(??_USBConfigureEndpoint+1)^(0+256),f
  3981  0B8A  3EFF               	addlw	-1
  3982  0B8B  1D03               	skipz
  3983  0B8C  2B89               	goto	u3635
  3984  0B8D  3562               	lslf	(??_USBConfigureEndpoint+1)^(0+256),w
  3985  0B8E  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  3986  0B8F  00E3               	movwf	(??_USBConfigureEndpoint+2)^(0+256)
  3987  0B90  3001               	movlw	1
  3988  0B91                     u3645:	
  3989  0B91  35E3               	lslf	(??_USBConfigureEndpoint+2)^(0+256),f
  3990  0B92  3EFF               	addlw	-1
  3991  0B93  1D03               	skipz
  3992  0B94  2B91               	goto	u3645
  3993  0B95  3563               	lslf	(??_USBConfigureEndpoint+2)^(0+256),w
  3994  0B96  00E4               	movwf	(??_USBConfigureEndpoint+3)^(0+256)
  3995  0B97  0864               	movf	(??_USBConfigureEndpoint+3)^(0+256),w
  3996  0B98  07E6               	addwf	USBConfigureEndpoint@handle^(0+256),f
  3997                           
  3998                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  3999  0B99  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4000  0B9A  0086               	movwf	6
  4001  0B9B  0187               	clrf	7
  4002  0B9C  1381               	bcf	1,7
  4003                           
  4004                           ;usb_device.c: 1557: if(direction == 0)
  4005  0B9D  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  4006  0B9E  1D03               	btfss	3,2
  4007  0B9F  2BAA               	goto	l4053
  4008                           
  4009                           ;usb_device.c: 1558: {
  4010                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  4011  0BA0  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4012  0BA1  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4013  0BA2  0086               	movwf	6
  4014  0BA3  3001               	movlw	1	; select bank3/4
  4015  0BA4  0087               	movwf	7
  4016  0BA5  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4017  0BA6  3FC0               	movwi [0]fsr1
  4018  0BA7  3000               	movlw	0
  4019  0BA8  3FC1               	movwi [1]fsr1
  4020                           
  4021                           ;usb_device.c: 1560: }
  4022  0BA9  2BB3               	goto	l4055
  4023  0BAA                     l4053:	
  4024                           
  4025                           ;usb_device.c: 1561: else
  4026                           ;usb_device.c: 1562: {
  4027                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  4028  0BAA  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4029  0BAB  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4030  0BAC  0086               	movwf	6
  4031  0BAD  3001               	movlw	1	; select bank3/4
  4032  0BAE  0087               	movwf	7
  4033  0BAF  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4034  0BB0  3FC0               	movwi [0]fsr1
  4035  0BB1  3000               	movlw	0
  4036  0BB2  3FC1               	movwi [1]fsr1
  4037  0BB3                     l4055:	
  4038                           
  4039                           ;usb_device.c: 1564: }
  4040                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  4041  0BB3  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4042  0BB4  0086               	movwf	6
  4043  0BB5  0187               	clrf	7
  4044  0BB6  1301               	bcf	1,6
  4045                           
  4046                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  4047  0BB7  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4048  0BB8  3E04               	addlw	4
  4049  0BB9  0086               	movwf	6
  4050  0BBA  0187               	clrf	7
  4051  0BBB  1701               	bsf	1,6
  4052  0BBC  0008               	return
  4053  0BBD                     __end_of_USBConfigureEndpoint:	
  4054                           
  4055                           	psect	intentry
  4056  0004                     __pintentry:	
  4057 ;; *************** function _SYS_InterruptHigh *****************
  4058 ;; Defined at:
  4059 ;;		line 107 in file "system.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;Total ram usage:        1 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    9
  4080 ;; This function calls:
  4081 ;;		_USBDeviceTasks
  4082 ;; This function is called by:
  4083 ;;		Interrupt level 1
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087  0004                     _SYS_InterruptHigh:	
  4088                           
  4089                           ;incstack = 0
  4090  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4091                           
  4092                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4093  0005  3180               	pagesel	$
  4094  0006  0020               	movlb	0	; select bank0
  4095  0007  087F               	movf	127,w
  4096  0008  0021               	movlb	1	; select bank1
  4097  0009  00EB               	movwf	??_SYS_InterruptHigh^(0+128)
  4098                           
  4099                           ;system.c: 110: USBDeviceTasks();
  4100  000A  3181  216B         	fcall	_USBDeviceTasks
  4101  000C  0021               	movlb	1	; select bank1
  4102  000D  086B               	movf	??_SYS_InterruptHigh^(0+128),w
  4103  000E  0020               	movlb	0	; select bank0
  4104  000F  00FF               	movwf	127
  4105  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4106  0011  0009               	retfie
  4107  0012                     __end_of_SYS_InterruptHigh:	
  4108                           
  4109                           	psect	text14
  4110  016B                     __ptext14:	
  4111 ;; *************** function _USBDeviceTasks *****************
  4112 ;; Defined at:
  4113 ;;		line 477 in file "../lib/usb/src/usb_device.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  i               1   15[BANK0 ] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;Total ram usage:        3 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    8
  4134 ;; This function calls:
  4135 ;;		_USBCtrlEPAllowStatusStage
  4136 ;;		_USBCtrlEPService
  4137 ;;		_USBIncrement1msInternalTimers
  4138 ;;		_USBStallHandler
  4139 ;;		_USBSuspend
  4140 ;;		_USBWakeFromSuspend
  4141 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4142 ;;		i1_USBDeviceInit
  4143 ;; This function is called by:
  4144 ;;		_SYS_InterruptHigh
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _USBDeviceTasks
  4150  016B                     _USBDeviceTasks:	
  4151                           
  4152                           ;usb_device.c: 479: uint8_t i;
  4153                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4157  016B  0022               	movlb	2	; select bank2
  4158  016C  036E               	decf	_USBDeviceState^(0+256),w	;volatile
  4159  016D  1D03               	btfss	3,2
  4160  016E  297B               	goto	i1l3571
  4161                           
  4162                           ;usb_device.c: 591: {
  4163                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4164  016F  003D               	movlb	29	; select bank29
  4165  0170  1A8E               	btfsc	14,5	;volatile
  4166  0171  297B               	goto	i1l3571
  4167                           
  4168                           ;usb_device.c: 602: {
  4169                           ;usb_device.c: 608: {UIR = 0;};
  4170  0172  0190               	clrf	16	;volatile
  4171                           
  4172                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4173  0173  1412               	bsf	18,0	;volatile
  4174                           
  4175                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4176  0174  1612               	bsf	18,4	;volatile
  4177                           
  4178                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4179  0175  3002               	movlw	2
  4180  0176  0021               	movlb	1	; select bank1
  4181  0177  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4182  0178  0869               	movf	??_USBDeviceTasks^(0+128),w
  4183  0179  0022               	movlb	2	; select bank2
  4184  017A  00EE               	movwf	_USBDeviceState^(0+256)	;volatile
  4185  017B                     i1l3571:	
  4186                           
  4187                           ;usb_device.c: 617: }
  4188                           ;usb_device.c: 618: }
  4189                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4190  017B  003D               	movlb	29	; select bank29
  4191  017C  1910               	btfsc	16,2	;volatile
  4192  017D  1D12               	btfss	18,2	;volatile
  4193  017E  2988               	goto	i1l3579
  4194                           
  4195                           ;usb_device.c: 635: {
  4196                           ;usb_device.c: 636: (UIR &= 0xFB);
  4197  017F  30FB               	movlw	251
  4198  0180  0021               	movlb	1	; select bank1
  4199  0181  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4200  0182  0869               	movf	??_USBDeviceTasks^(0+128),w
  4201  0183  003D               	movlb	29	; select bank29
  4202  0184  0590               	andwf	16,f	;volatile
  4203                           
  4204                           ;usb_device.c: 640: USBWakeFromSuspend();
  4205  0185  3189  21EA  3181   	fcall	_USBWakeFromSuspend
  4206  0188                     i1l3579:	
  4207                           
  4208                           ;usb_device.c: 642: }
  4209                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4210  0188  003D               	movlb	29	; select bank29
  4211  0189  1C8E               	btfss	14,1	;volatile
  4212  018A  298E               	goto	i1l184
  4213                           
  4214                           ;usb_device.c: 648: {
  4215                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4216  018B  0020               	movlb	0	; select bank0
  4217  018C  1112               	bcf	18,2	;volatile
  4218                           
  4219                           ;usb_device.c: 650: return;
  4220  018D  0008               	return
  4221  018E                     i1l184:	
  4222                           
  4223                           ;usb_device.c: 651: }
  4224                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4225  018E  1810               	btfsc	16,0	;volatile
  4226  018F  1C12               	btfss	18,0	;volatile
  4227  0190  29A1               	goto	i1l3593
  4228                           
  4229                           ;usb_device.c: 664: {
  4230                           ;usb_device.c: 665: USBDeviceInit();
  4231  0191  3183  23D2  3181   	fcall	i1_USBDeviceInit
  4232                           
  4233                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4234  0194  0021               	movlb	1	; select bank1
  4235  0195  1512               	bsf	18,2	;volatile
  4236                           
  4237                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4238  0196  3004               	movlw	4
  4239  0197  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4240  0198  0869               	movf	??_USBDeviceTasks^(0+128),w
  4241  0199  0022               	movlb	2	; select bank2
  4242  019A  00EE               	movwf	_USBDeviceState^(0+256)	;volatile
  4243                           
  4244                           ;usb_device.c: 681: (UIR &= 0xFE);
  4245  019B  30FE               	movlw	254
  4246  019C  0021               	movlb	1	; select bank1
  4247  019D  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4248  019E  0869               	movf	??_USBDeviceTasks^(0+128),w
  4249  019F  003D               	movlb	29	; select bank29
  4250  01A0  0590               	andwf	16,f	;volatile
  4251  01A1                     i1l3593:	
  4252                           
  4253                           ;usb_device.c: 682: }
  4254                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4255  01A1  1A10               	btfsc	16,4	;volatile
  4256  01A2  1E12               	btfss	18,4	;volatile
  4257  01A3  29A7               	goto	i1l3599
  4258                           
  4259                           ;usb_device.c: 688: {
  4260                           ;usb_device.c: 694: USBSuspend();
  4261  01A4  3189  21AB  3181   	fcall	_USBSuspend
  4262  01A7                     i1l3599:	
  4263                           
  4264                           ;usb_device.c: 696: }
  4265                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4266  01A7  003D               	movlb	29	; select bank29
  4267  01A8  1F10               	btfss	16,6	;volatile
  4268  01A9  29D1               	goto	i1l3615
  4269                           
  4270                           ;usb_device.c: 709: {
  4271                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4272  01AA  1F12               	btfss	18,6	;volatile
  4273  01AB  29BC               	goto	i1l3605
  4274                           
  4275                           ;usb_device.c: 712: {
  4276                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4277  01AC  3073               	movlw	115
  4278  01AD  0020               	movlb	0	; select bank0
  4279  01AE  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4280  01AF  3000               	movlw	0
  4281  01B0  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4282  01B1  3000               	movlw	0
  4283  01B2  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4284  01B3  3000               	movlw	0
  4285  01B4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4286  01B5  3001               	movlw	1
  4287  01B6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4288  01B7  3000               	movlw	0
  4289  01B8  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4290  01B9  318A  22C1  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4291  01BC                     i1l3605:	
  4292                           
  4293                           ;usb_device.c: 714: }
  4294                           ;usb_device.c: 715: (UIR &= 0xBF);
  4295  01BC  30BF               	movlw	191
  4296  01BD  0021               	movlb	1	; select bank1
  4297  01BE  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4298  01BF  0869               	movf	??_USBDeviceTasks^(0+128),w
  4299  01C0  003D               	movlb	29	; select bank29
  4300  01C1  0590               	andwf	16,f	;volatile
  4301                           
  4302                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4303  01C2  3189  215D  3181   	fcall	_USBIncrement1msInternalTimers
  4304                           
  4305                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4306  01C5  0023               	movlb	3	; select bank3
  4307  01C6  0858               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4308  01C7  1903               	btfsc	3,2
  4309  01C8  29CB               	goto	i1l190
  4310                           
  4311                           ;usb_device.c: 736: {
  4312                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4313  01C9  3001               	movlw	1
  4314  01CA  02D8               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4315  01CB                     i1l190:	
  4316                           
  4317                           ;usb_device.c: 738: }
  4318                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4319  01CB  0858               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4320  01CC  1D03               	btfss	3,2
  4321  01CD  29D1               	goto	i1l3615
  4322                           
  4323                           ;usb_device.c: 745: {
  4324                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4325  01CE  318F  270F  3181   	fcall	_USBCtrlEPAllowStatusStage
  4326  01D1                     i1l3615:	
  4327                           
  4328                           ;usb_device.c: 747: }
  4329                           ;usb_device.c: 749: }
  4330                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4331  01D1  003D               	movlb	29	; select bank29
  4332  01D2  1A90               	btfsc	16,5	;volatile
  4333  01D3  1E92               	btfss	18,5	;volatile
  4334  01D4  29D8               	goto	i1l3621
  4335                           
  4336                           ;usb_device.c: 752: {
  4337                           ;usb_device.c: 753: USBStallHandler();
  4338  01D5  318A  222D  3181   	fcall	_USBStallHandler
  4339  01D8                     i1l3621:	
  4340                           
  4341                           ;usb_device.c: 754: }
  4342                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4343  01D8  003D               	movlb	29	; select bank29
  4344  01D9  1890               	btfsc	16,1	;volatile
  4345  01DA  1C92               	btfss	18,1	;volatile
  4346  01DB  29EE               	goto	i1l3629
  4347                           
  4348                           ;usb_device.c: 757: {
  4349                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4350  01DC  30FF               	movlw	255
  4351  01DD  0020               	movlb	0	; select bank0
  4352  01DE  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4353  01DF  307F               	movlw	127
  4354  01E0  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4355  01E1  3000               	movlw	0
  4356  01E2  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4357  01E3  3000               	movlw	0
  4358  01E4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4359  01E5  3001               	movlw	1
  4360  01E6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4361  01E7  3000               	movlw	0
  4362  01E8  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4363  01E9  318A  22C1  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4364                           
  4365                           ;usb_device.c: 759: {UEIR = 0;};
  4366  01EC  003D               	movlb	29	; select bank29
  4367  01ED  0193               	clrf	19	;volatile
  4368  01EE                     i1l3629:	
  4369                           
  4370                           ;usb_device.c: 767: }
  4371                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4372  01EE  3004               	movlw	4
  4373  01EF  0022               	movlb	2	; select bank2
  4374  01F0  026E               	subwf	_USBDeviceState^(0+256),w	;volatile
  4375  01F1  1803               	skipnc
  4376  01F2  29F6               	goto	i1l194
  4377                           
  4378                           ;usb_device.c: 775: {
  4379                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4380  01F3  0020               	movlb	0	; select bank0
  4381  01F4  1112               	bcf	18,2	;volatile
  4382                           
  4383                           ;usb_device.c: 777: return;
  4384  01F5  0008               	return
  4385  01F6                     i1l194:	
  4386                           
  4387                           ;usb_device.c: 778: }
  4388                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4389  01F6  003D               	movlb	29	; select bank29
  4390  01F7  1D92               	btfss	18,3	;volatile
  4391  01F8  2A4F               	goto	i1l195
  4392                           
  4393                           ;usb_device.c: 784: {
  4394                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4395  01F9  0020               	movlb	0	; select bank0
  4396  01FA  01EF               	clrf	USBDeviceTasks@i
  4397  01FB  3004               	movlw	4
  4398  01FC  026F               	subwf	USBDeviceTasks@i,w
  4399  01FD  1803               	btfsc	3,0
  4400  01FE  2A4F               	goto	i1l195
  4401  01FF                     i1l196:	
  4402                           
  4403                           ;usb_device.c: 786: {
  4404                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4405  01FF  003D               	movlb	29	; select bank29
  4406  0200  1D90               	btfss	16,3	;volatile
  4407  0201  2A4F               	goto	i1l195
  4408                           
  4409                           ;usb_device.c: 788: {
  4410                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4411  0202  080F               	movf	15,w	;volatile
  4412  0203  0021               	movlb	1	; select bank1
  4413  0204  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4414  0205  0869               	movf	??_USBDeviceTasks^(0+128),w
  4415  0206  00E5               	movwf	_USTATcopy^(0+128)	;volatile
  4416                           
  4417                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4418  0207  0C65               	rrf	_USTATcopy^(0+128),w	;volatile
  4419  0208  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4420  0209  0CE9               	rrf	??_USBDeviceTasks^(0+128),f
  4421  020A  0C69               	rrf	??_USBDeviceTasks^(0+128),w
  4422  020B  390F               	andlw	15
  4423  020C  00EA               	movwf	(??_USBDeviceTasks+1)^(0+128)
  4424  020D  086A               	movf	(??_USBDeviceTasks+1)^(0+128),w
  4425  020E  0023               	movlb	3	; select bank3
  4426  020F  00DA               	movwf	_endpoint_number^(0+384)	;volatile
  4427                           
  4428                           ;usb_device.c: 793: (UIR &= 0xF7);
  4429  0210  30F7               	movlw	247
  4430  0211  0021               	movlb	1	; select bank1
  4431  0212  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4432  0213  0869               	movf	??_USBDeviceTasks^(0+128),w
  4433  0214  003D               	movlb	29	; select bank29
  4434  0215  0590               	andwf	16,f	;volatile
  4435                           
  4436                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4437  0216  0021               	movlb	1	; select bank1
  4438  0217  1965               	btfsc	_USTATcopy^(0+128),2	;volatile
  4439  0218  2A1D               	goto	i1l3649
  4440                           
  4441                           ;usb_device.c: 799: {
  4442                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4443  0219  0023               	movlb	3	; select bank3
  4444  021A  085A               	movf	_endpoint_number^(0+384),w	;volatile
  4445  021B  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4446  021C  2A20               	goto	L4
  4447  021D                     i1l3649:	
  4448                           ;usb_device.c: 801: }
  4449                           
  4450                           
  4451                           ;usb_device.c: 802: else
  4452                           ;usb_device.c: 803: {
  4453                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4454  021D  0023               	movlb	3	; select bank3
  4455  021E  085A               	movf	_endpoint_number^(0+384),w	;volatile
  4456  021F  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4457  0220                     L4:	
  4458  0220  0086               	movwf	6
  4459  0221  3001               	movlw	1	; select bank3/4
  4460  0222  0087               	movwf	7
  4461  0223  0801               	movf	1,w
  4462  0224  3901               	andlw	1
  4463  0225  0021               	movlb	1	; select bank1
  4464  0226  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4465  0227  3001               	movlw	1
  4466  0228  06E9               	xorwf	??_USBDeviceTasks^(0+128),f
  4467  0229  0801               	movf	1,w
  4468  022A  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4469  022B  39FE               	andlw	-2
  4470  022C  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4471  022D  0081               	movwf	1
  4472                           
  4473                           ;usb_device.c: 805: }
  4474                           ;usb_device.c: 810: if(endpoint_number == 0)
  4475  022E  0023               	movlb	3	; select bank3
  4476  022F  085A               	movf	_endpoint_number^(0+384),w	;volatile
  4477  0230  1D03               	btfss	3,2
  4478  0231  2A36               	goto	i1l3655
  4479                           
  4480                           ;usb_device.c: 811: {
  4481                           ;usb_device.c: 812: USBCtrlEPService();
  4482  0232  318C  2466  3181   	fcall	_USBCtrlEPService
  4483                           
  4484                           ;usb_device.c: 813: }
  4485  0235  2A45               	goto	i1l3657
  4486  0236                     i1l3655:	
  4487                           
  4488                           ;usb_device.c: 814: else
  4489                           ;usb_device.c: 815: {
  4490                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4491  0236  3072               	movlw	114
  4492  0237  0020               	movlb	0	; select bank0
  4493  0238  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4494  0239  3000               	movlw	0
  4495  023A  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4496  023B  30E5               	movlw	low _USTATcopy
  4497  023C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4498  023D  3000               	movlw	high _USTATcopy
  4499  023E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4500  023F  3000               	movlw	0
  4501  0240  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4502  0241  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4503  0242  318A  22C1  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4504  0245                     i1l3657:	
  4505                           ;usb_device.c: 819: else
  4506                           ;usb_device.c: 820: {
  4507                           ;usb_device.c: 821: break;
  4508                           
  4509                           ;usb_device.c: 817: }
  4510                           ;usb_device.c: 818: }
  4511                           
  4512  0245  3001               	movlw	1
  4513  0246  0021               	movlb	1	; select bank1
  4514  0247  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4515  0248  0869               	movf	??_USBDeviceTasks^(0+128),w
  4516  0249  0020               	movlb	0	; select bank0
  4517  024A  07EF               	addwf	USBDeviceTasks@i,f
  4518  024B  3004               	movlw	4
  4519  024C  026F               	subwf	USBDeviceTasks@i,w
  4520  024D  1C03               	skipc
  4521  024E  29FF               	goto	i1l196
  4522  024F                     i1l195:	
  4523                           
  4524                           ;usb_device.c: 822: }
  4525                           ;usb_device.c: 823: }
  4526                           ;usb_device.c: 824: }
  4527                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4528  024F  0020               	movlb	0	; select bank0
  4529  0250  1112               	bcf	18,2	;volatile
  4530  0251  0008               	return
  4531  0252                     __end_of_USBDeviceTasks:	
  4532                           
  4533                           	psect	text15
  4534  03D2                     __ptext15:	
  4535 ;; *************** function i1_USBDeviceInit *****************
  4536 ;; Defined at:
  4537 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  4542 ;;		 -> UEP1(1), 
  4543 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4544 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;Total ram usage:        5 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_USBDeviceTasks
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function i1_USBDeviceInit
  4569  03D2                     i1_USBDeviceInit:	
  4570                           
  4571                           ;usb_device.c: 279: uint8_t i;
  4572                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4576  03D2  0021               	movlb	1	; select bank1
  4577  03D3  1112               	bcf	18,2	;volatile
  4578                           
  4579                           ;usb_device.c: 285: ;
  4580                           ;usb_device.c: 288: {UEIR = 0;};
  4581  03D4  003D               	movlb	29	; select bank29
  4582  03D5  0193               	clrf	19	;volatile
  4583                           
  4584                           ;usb_device.c: 291: {UIR = 0;};
  4585  03D6  0190               	clrf	16	;volatile
  4586                           
  4587                           ;usb_device.c: 294: UEP0 = 0;
  4588  03D7  0198               	clrf	24	;volatile
  4589                           
  4590                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  4591  03D8  300E               	movlw	14
  4592  03D9  00F2               	movwf	i1USBDeviceInit@p+1
  4593  03DA  3099               	movlw	153
  4594  03DB  00F1               	movwf	i1USBDeviceInit@p
  4595  03DC  01F3               	clrf	i1USBDeviceInit@i_821
  4596  03DD  3002               	movlw	2
  4597  03DE  0273               	subwf	i1USBDeviceInit@i_821,w
  4598  03DF  1803               	btfsc	3,0
  4599  03E0  2BF2               	goto	i1l3379
  4600  03E1                     i1l3371:	
  4601  03E1  0871               	movf	i1USBDeviceInit@p,w
  4602  03E2  0086               	movwf	6
  4603  03E3  0872               	movf	i1USBDeviceInit@p+1,w
  4604  03E4  0087               	movwf	7
  4605  03E5  0181               	clrf	1
  4606  03E6  3001               	movlw	1
  4607  03E7  07F1               	addwf	i1USBDeviceInit@p,f
  4608  03E8  3000               	movlw	0
  4609  03E9  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  4610  03EA  3001               	movlw	1
  4611  03EB  00F0               	movwf	??i1_USBDeviceInit
  4612  03EC  0870               	movf	??i1_USBDeviceInit,w
  4613  03ED  07F3               	addwf	i1USBDeviceInit@i_821,f
  4614  03EE  3002               	movlw	2
  4615  03EF  0273               	subwf	i1USBDeviceInit@i_821,w
  4616  03F0  1C03               	skipc
  4617  03F1  2BE1               	goto	i1l3371
  4618  03F2                     i1l3379:	
  4619                           
  4620                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4621  03F2  3016               	movlw	22
  4622  03F3  003D               	movlb	29	; select bank29
  4623  03F4  0091               	movwf	17	;volatile
  4624  03F5  309F               	movlw	159
  4625  03F6  0097               	movwf	23	;volatile
  4626  03F7  307B               	movlw	123
  4627  03F8  0092               	movwf	18	;volatile
  4628                           
  4629                           ;usb_device.c: 301: ;
  4630                           ;usb_device.c: 304: ;
  4631                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4632  03F9  01F4               	clrf	i1USBDeviceInit@i
  4633  03FA  300C               	movlw	12
  4634  03FB  0274               	subwf	i1USBDeviceInit@i,w
  4635  03FC  1803               	btfsc	3,0
  4636  03FD  2C17               	goto	i1l173
  4637  03FE                     i1l3387:	
  4638                           
  4639                           ;usb_device.c: 308: {
  4640                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4641  03FE  0874               	movf	i1USBDeviceInit@i,w
  4642  03FF  00F0               	movwf	??i1_USBDeviceInit
  4643  0400  3001               	movlw	1
  4644  0401                     u283_25:	
  4645  0401  35F0               	lslf	??i1_USBDeviceInit,f
  4646  0402  3EFF               	addlw	-1
  4647  0403  1D03               	skipz
  4648  0404  2C01               	goto	u283_25
  4649  0405  3570               	lslf	??i1_USBDeviceInit,w
  4650  0406  3E20               	addlw	32
  4651  0407  0086               	movwf	6
  4652  0408  0187               	clrf	7
  4653  0409  3000               	movlw	0
  4654  040A  3FC0               	movwi [0]fsr1
  4655  040B  3000               	movlw	0
  4656  040C  3FC1               	movwi [1]fsr1
  4657  040D  3FC2               	movwi [2]fsr1
  4658  040E  3FC3               	movwi [3]fsr1
  4659  040F  3001               	movlw	1
  4660  0410  00F0               	movwf	??i1_USBDeviceInit
  4661  0411  0870               	movf	??i1_USBDeviceInit,w
  4662  0412  07F4               	addwf	i1USBDeviceInit@i,f
  4663  0413  300C               	movlw	12
  4664  0414  0274               	subwf	i1USBDeviceInit@i,w
  4665  0415  1C03               	skipc
  4666  0416  2BFE               	goto	i1l3387
  4667  0417                     i1l173:	
  4668                           
  4669                           ;usb_device.c: 310: }
  4670                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4671  0417  003D               	movlb	29	; select bank29
  4672  0418  170E               	bsf	14,6	;volatile
  4673                           
  4674                           ;usb_device.c: 316: UADDR = 0x00;
  4675  0419  0196               	clrf	22	;volatile
  4676                           
  4677                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4678  041A  120E               	bcf	14,4	;volatile
  4679                           
  4680                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4681  041B  130E               	bcf	14,6	;volatile
  4682  041C                     i1l3399:	
  4683                           ;usb_device.c: 325: do
  4684                           
  4685                           
  4686                           ;usb_device.c: 326: {
  4687                           ;usb_device.c: 327: (UIR &= 0xF7);
  4688  041C  30F7               	movlw	247
  4689  041D  00F0               	movwf	??i1_USBDeviceInit
  4690  041E  0870               	movf	??i1_USBDeviceInit,w
  4691  041F  0590               	andwf	16,f	;volatile
  4692                           
  4693                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4694  0420  0023               	movlb	3	; select bank3
  4695  0421  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  4696                           
  4697                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4698  0422  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  4699                           
  4700                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4701  0423  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  4702  0424  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  4703                           
  4704                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4705  0425  003D               	movlb	29	; select bank29
  4706  0426  1990               	btfsc	16,3	;volatile
  4707  0427  2C1C               	goto	i1l3399
  4708                           
  4709                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4710  0428  3001               	movlw	1
  4711  0429  00F0               	movwf	??i1_USBDeviceInit
  4712  042A  0870               	movf	??i1_USBDeviceInit,w
  4713  042B  0023               	movlb	3	; select bank3
  4714  042C  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4715                           
  4716                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4717  042D  3001               	movlw	1
  4718  042E  00F0               	movwf	??i1_USBDeviceInit
  4719  042F  0870               	movf	??i1_USBDeviceInit,w
  4720  0430  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4721                           
  4722                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4723  0431  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4724                           
  4725                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4726  0432  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4727                           
  4728                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4729  0433  01DB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4730                           
  4731                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4732  0434  01F4               	clrf	i1USBDeviceInit@i
  4733  0435  3003               	movlw	3
  4734  0436  0274               	subwf	i1USBDeviceInit@i,w
  4735  0437  1803               	btfsc	3,0
  4736  0438  2C5D               	goto	i1l3427
  4737  0439                     i1l3421:	
  4738                           
  4739                           ;usb_device.c: 346: {
  4740                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4741  0439  3574               	lslf	i1USBDeviceInit@i,w
  4742  043A  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4743  043B  0086               	movwf	6
  4744  043C  3001               	movlw	1	; select bank3/4
  4745  043D  0087               	movwf	7
  4746  043E  3000               	movlw	0
  4747  043F  3FC0               	movwi [0]fsr1
  4748  0440  3FC1               	movwi [1]fsr1
  4749                           
  4750                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4751  0441  3574               	lslf	i1USBDeviceInit@i,w
  4752  0442  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4753  0443  0086               	movwf	6
  4754  0444  3001               	movlw	1	; select bank3/4
  4755  0445  0087               	movwf	7
  4756  0446  3000               	movlw	0
  4757  0447  3FC0               	movwi [0]fsr1
  4758  0448  3FC1               	movwi [1]fsr1
  4759                           
  4760                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4761  0449  0874               	movf	i1USBDeviceInit@i,w
  4762  044A  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4763  044B  0086               	movwf	6
  4764  044C  3001               	movlw	1	; select bank3/4
  4765  044D  0087               	movwf	7
  4766  044E  0181               	clrf	1
  4767                           
  4768                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4769  044F  0874               	movf	i1USBDeviceInit@i,w
  4770  0450  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4771  0451  0086               	movwf	6
  4772  0452  3001               	movlw	1	; select bank3/4
  4773  0453  0087               	movwf	7
  4774  0454  0181               	clrf	1
  4775  0455  3001               	movlw	1
  4776  0456  00F0               	movwf	??i1_USBDeviceInit
  4777  0457  0870               	movf	??i1_USBDeviceInit,w
  4778  0458  07F4               	addwf	i1USBDeviceInit@i,f
  4779  0459  3003               	movlw	3
  4780  045A  0274               	subwf	i1USBDeviceInit@i,w
  4781  045B  1C03               	skipc
  4782  045C  2C39               	goto	i1l3421
  4783  045D                     i1l3427:	
  4784                           
  4785                           ;usb_device.c: 351: }
  4786                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4787  045D  3028               	movlw	40
  4788  045E  0023               	movlb	3	; select bank3
  4789  045F  00A7               	movwf	_pBDTEntryIn^(0+384)
  4790  0460  3000               	movlw	0
  4791  0461  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4792                           
  4793                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4794  0462  3016               	movlw	22
  4795  0463  003D               	movlb	29	; select bank29
  4796  0464  0098               	movwf	24	;volatile
  4797                           
  4798                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4799  0465  3000               	movlw	0
  4800  0466  0020               	movlb	0	; select bank0
  4801  0467  00A3               	movwf	35	;volatile
  4802  0468  3050               	movlw	80
  4803  0469  00A2               	movwf	34	;volatile
  4804                           
  4805                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4806  046A  3008               	movlw	8
  4807  046B  00A1               	movwf	33	;volatile
  4808                           
  4809                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4810  046C  3004               	movlw	4
  4811  046D  00F0               	movwf	??i1_USBDeviceInit
  4812  046E  0870               	movf	??i1_USBDeviceInit,w
  4813  046F  00A0               	movwf	32	;volatile
  4814                           
  4815                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4816  0470  17A0               	bsf	32,7	;volatile
  4817                           
  4818                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4819  0471  0022               	movlb	2	; select bank2
  4820  0472  01EF               	clrf	_USBActiveConfiguration^(0+256)	;volatile
  4821                           
  4822                           ;usb_device.c: 366: USB1msTickCount = 0;
  4823  0473  3000               	movlw	0
  4824  0474  0023               	movlb	3	; select bank3
  4825  0475  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  4826  0476  3000               	movlw	0
  4827  0477  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  4828  0478  3000               	movlw	0
  4829  0479  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  4830  047A  3000               	movlw	0
  4831  047B  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  4832                           
  4833                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4834  047C  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4835                           
  4836                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4837  047D  0022               	movlb	2	; select bank2
  4838  047E  01EE               	clrf	_USBDeviceState^(0+256)	;volatile
  4839  047F  0008               	return
  4840  0480                     __end_ofi1_USBDeviceInit:	
  4841                           
  4842                           	psect	text16
  4843  09EA                     __ptext16:	
  4844 ;; *************** function _USBWakeFromSuspend *****************
  4845 ;; Defined at:
  4846 ;;		line 2303 in file "../lib/usb/src/usb_device.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;		None
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      void 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;Total ram usage:        1 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    4
  4867 ;; This function calls:
  4868 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4869 ;; This function is called by:
  4870 ;;		_USBDeviceTasks
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function _USBWakeFromSuspend
  4876  09EA                     _USBWakeFromSuspend:	
  4877                           
  4878                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  4879                           
  4880                           ;incstack = 0
  4881                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4882  09EA  0023               	movlb	3	; select bank3
  4883  09EB  01DB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4884                           
  4885                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4886  09EC  3074               	movlw	116
  4887  09ED  0020               	movlb	0	; select bank0
  4888  09EE  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4889  09EF  3000               	movlw	0
  4890  09F0  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4891  09F1  3000               	movlw	0
  4892  09F2  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4893  09F3  3000               	movlw	0
  4894  09F4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4895  09F5  3000               	movlw	0
  4896  09F6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4897  09F7  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4898  09F8  318A  22C1  3189   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4899                           
  4900                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  4901  09FB  003D               	movlb	29	; select bank29
  4902  09FC  108E               	bcf	14,1	;volatile
  4903                           
  4904                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  4905  09FD  1112               	bcf	18,2	;volatile
  4906  09FE                     i1l3263:	
  4907                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  4908                           
  4909  09FE  1D10               	btfss	16,2	;volatile
  4910  09FF  2A07               	goto	i1l3265
  4911                           
  4912                           ;usb_device.c: 2343: {
  4913                           ;usb_device.c: 2344: (UIR &= 0xFB);
  4914  0A00  30FB               	movlw	251
  4915  0A01  0020               	movlb	0	; select bank0
  4916  0A02  00E6               	movwf	??_USBWakeFromSuspend
  4917  0A03  0866               	movf	??_USBWakeFromSuspend,w
  4918  0A04  003D               	movlb	29	; select bank29
  4919  0A05  0590               	andwf	16,f	;volatile
  4920  0A06  29FE               	goto	i1l3263
  4921  0A07                     i1l3265:	
  4922                           
  4923                           ;usb_device.c: 2345: }
  4924                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  4925  0A07  0023               	movlb	3	; select bank3
  4926  0A08  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4927  0A09  0008               	return
  4928  0A0A                     __end_of_USBWakeFromSuspend:	
  4929                           
  4930                           	psect	text17
  4931  09AB                     __ptext17:	
  4932 ;; *************** function _USBSuspend *****************
  4933 ;; Defined at:
  4934 ;;		line 2245 in file "../lib/usb/src/usb_device.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;Total ram usage:        1 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    4
  4955 ;; This function calls:
  4956 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4957 ;; This function is called by:
  4958 ;;		_USBDeviceTasks
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           
  4963                           ;psect for function _USBSuspend
  4964  09AB                     _USBSuspend:	
  4965                           
  4966                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4970  09AB  003D               	movlb	29	; select bank29
  4971  09AC  1512               	bsf	18,2	;volatile
  4972                           
  4973                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4974  09AD  30EF               	movlw	239
  4975  09AE  0020               	movlb	0	; select bank0
  4976  09AF  00E6               	movwf	??_USBSuspend
  4977  09B0  0866               	movf	??_USBSuspend,w
  4978  09B1  003D               	movlb	29	; select bank29
  4979  09B2  0590               	andwf	16,f	;volatile
  4980                           
  4981                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4982  09B3  148E               	bsf	14,1	;volatile
  4983                           
  4984                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4985  09B4  3001               	movlw	1
  4986  09B5  0020               	movlb	0	; select bank0
  4987  09B6  00E6               	movwf	??_USBSuspend
  4988  09B7  0866               	movf	??_USBSuspend,w
  4989  09B8  0023               	movlb	3	; select bank3
  4990  09B9  00DB               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  4991                           
  4992                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4993  09BA  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4994                           
  4995                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4996  09BB  3075               	movlw	117
  4997  09BC  0020               	movlb	0	; select bank0
  4998  09BD  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4999  09BE  3000               	movlw	0
  5000  09BF  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5001  09C0  3000               	movlw	0
  5002  09C1  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5003  09C2  3000               	movlw	0
  5004  09C3  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5005  09C4  3000               	movlw	0
  5006  09C5  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5007  09C6  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5008  09C7  318A  22C1         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5009  09C9  0008               	return
  5010  09CA                     __end_of_USBSuspend:	
  5011                           
  5012                           	psect	text18
  5013  0A2D                     __ptext18:	
  5014 ;; *************** function _USBStallHandler *****************
  5015 ;; Defined at:
  5016 ;;		line 2202 in file "../lib/usb/src/usb_device.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;		None
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;Total ram usage:        1 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_USBDeviceTasks
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           
  5044                           ;psect for function _USBStallHandler
  5045  0A2D                     _USBStallHandler:	
  5046                           
  5047                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5048                           
  5049                           ;incstack = 0
  5050                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5051  0A2D  003D               	movlb	29	; select bank29
  5052  0A2E  1C18               	btfss	24,0	;volatile
  5053  0A2F  2A4F               	goto	i1l3297
  5054                           
  5055                           ;usb_device.c: 2215: {
  5056                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5057  0A30  0021               	movlb	1	; select bank1
  5058  0A31  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5059  0A32  0086               	movwf	6
  5060  0A33  0187               	clrf	7
  5061  0A34  3080               	movlw	128
  5062  0A35  0601               	xorwf	1,w
  5063  0A36  1D03               	btfss	3,2
  5064  0A37  2A4D               	goto	i1l3295
  5065  0A38  0023               	movlb	3	; select bank3
  5066  0A39  0827               	movf	_pBDTEntryIn^(0+384),w
  5067  0A3A  0086               	movwf	6
  5068  0A3B  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5069  0A3C  0087               	movwf	7
  5070  0A3D  3084               	movlw	132
  5071  0A3E  0601               	xorwf	1,w
  5072  0A3F  1D03               	btfss	3,2
  5073  0A40  2A4D               	goto	i1l3295
  5074                           
  5075                           ;usb_device.c: 2218: {
  5076                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5077  0A41  300C               	movlw	12
  5078  0A42  00F0               	movwf	??_USBStallHandler
  5079  0A43  0021               	movlb	1	; select bank1
  5080  0A44  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5081  0A45  0086               	movwf	6
  5082  0A46  0187               	clrf	7
  5083  0A47  0870               	movf	??_USBStallHandler,w
  5084  0A48  0081               	movwf	1
  5085                           
  5086                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5087  0A49  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5088  0A4A  0086               	movwf	6
  5089  0A4B  0187               	clrf	7
  5090  0A4C  1781               	bsf	1,7
  5091  0A4D                     i1l3295:	
  5092                           
  5093                           ;usb_device.c: 2222: }
  5094                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5095  0A4D  003D               	movlb	29	; select bank29
  5096  0A4E  1018               	bcf	24,0	;volatile
  5097  0A4F                     i1l3297:	
  5098                           
  5099                           ;usb_device.c: 2224: }
  5100                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5101  0A4F  30DF               	movlw	223
  5102  0A50  00F0               	movwf	??_USBStallHandler
  5103  0A51  0870               	movf	??_USBStallHandler,w
  5104  0A52  0590               	andwf	16,f	;volatile
  5105  0A53  0008               	return
  5106  0A54                     __end_of_USBStallHandler:	
  5107                           
  5108                           	psect	text19
  5109  095D                     __ptext19:	
  5110 ;; *************** function _USBIncrement1msInternalTimers *****************
  5111 ;; Defined at:
  5112 ;;		line 3025 in file "../lib/usb/src/usb_device.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;Total ram usage:        1 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_USBDeviceTasks
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           
  5140                           ;psect for function _USBIncrement1msInternalTimers
  5141  095D                     _USBIncrement1msInternalTimers:	
  5142                           
  5143                           ;usb_device.c: 3033: USB1msTickCount++;
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5147  095D  3001               	movlw	1
  5148  095E  0023               	movlb	3	; select bank3
  5149  095F  07BC               	addwf	_USB1msTickCount^(0+384),f	;volatile
  5150  0960  3000               	movlw	0
  5151  0961  3DBD               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  5152  0962  3000               	movlw	0
  5153  0963  3DBE               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  5154  0964  3000               	movlw	0
  5155  0965  3DBF               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  5156                           
  5157                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5158  0966  085B               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  5159  0967  1D03               	btfss	3,2
  5160  0968  0008               	return
  5161                           
  5162                           ;usb_device.c: 3035: {
  5163                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5164  0969  3001               	movlw	1
  5165  096A  00F0               	movwf	??_USBIncrement1msInternalTimers
  5166  096B  0870               	movf	??_USBIncrement1msInternalTimers,w
  5167  096C  07D2               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  5168                           
  5169                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5170  096D  0852               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  5171  096E  1D03               	btfss	3,2
  5172  096F  0008               	return
  5173                           
  5174                           ;usb_device.c: 3039: {
  5175                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5176  0970  30FF               	movlw	255
  5177  0971  00F0               	movwf	??_USBIncrement1msInternalTimers
  5178  0972  0870               	movf	??_USBIncrement1msInternalTimers,w
  5179  0973  00D2               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5180  0974  0008               	return
  5181  0975                     __end_of_USBIncrement1msInternalTimers:	
  5182                           
  5183                           	psect	text20
  5184  0C66                     __ptext20:	
  5185 ;; *************** function _USBCtrlEPService *****************
  5186 ;; Defined at:
  5187 ;;		line 2372 in file "../lib/usb/src/usb_device.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5205 ;;Total ram usage:        3 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    7
  5208 ;; This function calls:
  5209 ;;		_USBCtrlTrfInHandler
  5210 ;;		_USBCtrlTrfOutHandler
  5211 ;;		_USBCtrlTrfSetupHandler
  5212 ;; This function is called by:
  5213 ;;		_USBDeviceTasks
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _USBCtrlEPService
  5219  0C66                     _USBCtrlEPService:	
  5220                           
  5221                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5225  0C66  302D               	movlw	45
  5226  0C67  0021               	movlb	1	; select bank1
  5227  0C68  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5228  0C69  0866               	movf	??_USBCtrlEPService^(0+128),w
  5229  0C6A  0023               	movlb	3	; select bank3
  5230  0C6B  00D8               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  5231                           
  5232                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5233  0C6C  0021               	movlb	1	; select bank1
  5234  0C6D  0865               	movf	_USTATcopy^(0+128),w	;volatile
  5235  0C6E  39FD               	andlw	253
  5236  0C6F  1D03               	btfss	3,2
  5237  0C70  2CB2               	goto	i1l3317
  5238                           
  5239                           ;usb_device.c: 2383: {
  5240                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5241  0C71  3665               	lsrf	_USTATcopy^(0+128),w	;volatile
  5242  0C72  393F               	andlw	63
  5243  0C73  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5244  0C74  3001               	movlw	1
  5245  0C75                     u271_25:	
  5246  0C75  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  5247  0C76  3EFF               	addlw	-1
  5248  0C77  1D03               	skipz
  5249  0C78  2C75               	goto	u271_25
  5250  0C79  3566               	lslf	??_USBCtrlEPService^(0+128),w
  5251  0C7A  3E20               	addlw	32
  5252  0C7B  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  5253  0C7C  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5254  0C7D  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5255                           
  5256                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5257  0C7E  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5258  0C7F  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5259  0C80  39FF               	andlw	255
  5260  0C81  1D03               	skipz
  5261  0C82  3000               	movlw	0
  5262  0C83  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5263                           
  5264                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5265  0C84  3004               	movlw	4
  5266  0C85  0660               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  5267  0C86  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5268  0C87  3000               	movlw	0
  5269  0C88  0661               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5270  0C89  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5271                           
  5272                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5273  0C8A  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5274  0C8B  0086               	movwf	6
  5275  0C8C  0187               	clrf	7
  5276  0C8D  0C01               	rrf	1,w
  5277  0C8E  0C89               	rrf	9,f
  5278  0C8F  390F               	andlw	15
  5279  0C90  3A0D               	xorlw	13
  5280  0C91  1D03               	skipz
  5281  0C92  2CAF               	goto	i1l3315
  5282                           
  5283                           ;usb_device.c: 2400: {
  5284                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  5285  0C93  3050               	movlw	80
  5286  0C94  0086               	movwf	6
  5287  0C95  0187               	clrf	7
  5288  0C96  0021               	movlb	1	; select bank1
  5289  0C97  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5290  0C98  3E02               	addlw	2
  5291  0C99  0084               	movwf	4
  5292  0C9A  0185               	clrf	5
  5293  0C9B  3F00               	moviw [0]fsr0
  5294  0C9C  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5295  0C9D  3F01               	moviw [1]fsr0
  5296  0C9E  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5297  0C9F  0866               	movf	??_USBCtrlEPService^(0+128),w
  5298  0CA0  0084               	movwf	4
  5299  0CA1  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5300  0CA2  0085               	movwf	5
  5301  0CA3  3008               	movlw	8
  5302  0CA4  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  5303  0CA5  0868               	movf	(??_USBCtrlEPService+2)^(0+128),w
  5304  0CA6  1903               	skipnz
  5305  0CA7  2CAC               	goto	i1l3313
  5306  0CA8                     u273_2m0:	
  5307  0CA8  0012               	moviw fsr0++
  5308  0CA9  001E               	movwi fsr1++
  5309  0CAA  0BE8               	decfsz	(??_USBCtrlEPService+2)^(0+128),f
  5310  0CAB  2CA8               	goto	u273_2m0
  5311  0CAC                     i1l3313:	
  5312                           
  5313                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5314  0CAC  318B  23BD         	fcall	_USBCtrlTrfSetupHandler
  5315                           
  5316                           ;usb_device.c: 2409: }
  5317  0CAE  0008               	return
  5318  0CAF                     i1l3315:	
  5319                           
  5320                           ;usb_device.c: 2410: else
  5321                           ;usb_device.c: 2411: {
  5322                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  5323  0CAF  318A  228A         	fcall	_USBCtrlTrfOutHandler
  5324                           
  5325                           ;usb_device.c: 2414: }
  5326                           ;usb_device.c: 2415: }
  5327  0CB1  0008               	return
  5328  0CB2                     i1l3317:	
  5329                           
  5330                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5331  0CB2  30FD               	movlw	253
  5332  0CB3  0021               	movlb	1	; select bank1
  5333  0CB4  0565               	andwf	_USTATcopy^(0+128),w	;volatile
  5334  0CB5  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5335  0CB6  3004               	movlw	4
  5336  0CB7  0666               	xorwf	??_USBCtrlEPService^(0+128),w
  5337  0CB8  1D03               	btfss	3,2
  5338  0CB9  0008               	return
  5339                           
  5340                           ;usb_device.c: 2417: {
  5341                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5342  0CBA  318E  269F         	fcall	_USBCtrlTrfInHandler
  5343  0CBC  0008               	return
  5344  0CBD                     __end_of_USBCtrlEPService:	
  5345                           
  5346                           	psect	text21
  5347  0BBD                     __ptext21:	
  5348 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5349 ;; Defined at:
  5350 ;;		line 2465 in file "../lib/usb/src/usb_device.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;Total ram usage:        1 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    6
  5371 ;; This function calls:
  5372 ;;		_USBCheckStdRequest
  5373 ;;		_USBCtrlEPServiceComplete
  5374 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5375 ;; This function is called by:
  5376 ;;		_USBCtrlEPService
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _USBCtrlTrfSetupHandler
  5382  0BBD                     _USBCtrlTrfSetupHandler:	
  5383                           
  5384                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5385                           
  5386                           ;incstack = 0
  5387                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5388  0BBD  0022               	movlb	2	; select bank2
  5389  0BBE  01ED               	clrf	_shortPacketStatus^(0+256)	;volatile
  5390                           
  5391                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5392  0BBF  0023               	movlb	3	; select bank3
  5393  0BC0  01D7               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  5394                           
  5395                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5396  0BC1  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5397                           
  5398                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5399  0BC2  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5400                           
  5401                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5402  0BC3  01D9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5403                           
  5404                           ;usb_device.c: 2475: controlTransferState = 0;
  5405  0BC4  0021               	movlb	1	; select bank1
  5406  0BC5  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  5407                           
  5408                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5409  0BC6  307F               	movlw	127
  5410  0BC7  0020               	movlb	0	; select bank0
  5411  0BC8  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5412  0BC9  0023               	movlb	3	; select bank3
  5413  0BCA  0827               	movf	_pBDTEntryIn^(0+384),w
  5414  0BCB  0086               	movwf	6
  5415  0BCC  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5416  0BCD  0087               	movwf	7
  5417  0BCE  0020               	movlb	0	; select bank0
  5418  0BCF  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5419  0BD0  0581               	andwf	1,f
  5420                           
  5421                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5422  0BD1  3004               	movlw	4
  5423  0BD2  0023               	movlb	3	; select bank3
  5424  0BD3  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5425  0BD4  00A7               	movwf	_pBDTEntryIn^(0+384)
  5426  0BD5  3000               	movlw	0
  5427  0BD6  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5428  0BD7  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5429                           
  5430                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5431  0BD8  307F               	movlw	127
  5432  0BD9  0020               	movlb	0	; select bank0
  5433  0BDA  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5434  0BDB  0023               	movlb	3	; select bank3
  5435  0BDC  0827               	movf	_pBDTEntryIn^(0+384),w
  5436  0BDD  0086               	movwf	6
  5437  0BDE  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5438  0BDF  0087               	movwf	7
  5439  0BE0  0020               	movlb	0	; select bank0
  5440  0BE1  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5441  0BE2  0581               	andwf	1,f
  5442                           
  5443                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5444  0BE3  3004               	movlw	4
  5445  0BE4  0023               	movlb	3	; select bank3
  5446  0BE5  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5447  0BE6  00A7               	movwf	_pBDTEntryIn^(0+384)
  5448  0BE7  3000               	movlw	0
  5449  0BE8  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5450  0BE9  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5451                           
  5452                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5453  0BEA  307F               	movlw	127
  5454  0BEB  0020               	movlb	0	; select bank0
  5455  0BEC  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5456  0BED  0021               	movlb	1	; select bank1
  5457  0BEE  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5458  0BEF  0086               	movwf	6
  5459  0BF0  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5460  0BF1  0087               	movwf	7
  5461  0BF2  0020               	movlb	0	; select bank0
  5462  0BF3  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5463  0BF4  0581               	andwf	1,f
  5464                           
  5465                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5466  0BF5  0023               	movlb	3	; select bank3
  5467  0BF6  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  5468                           
  5469                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5470  0BF7  01B6               	clrf	(_inPipes^(0+384)+3)	;volatile
  5471  0BF8  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  5472                           
  5473                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5474  0BF9  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5475                           
  5476                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5477  0BFA  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5478  0BFB  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5479                           
  5480                           ;usb_device.c: 2500: USBCheckStdRequest();
  5481  0BFC  318D  25D3  318B   	fcall	_USBCheckStdRequest
  5482                           
  5483                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5484  0BFF  3000               	movlw	0
  5485  0C00  0020               	movlb	0	; select bank0
  5486  0C01  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5487  0C02  3003               	movlw	3
  5488  0C03  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5489  0C04  3000               	movlw	0
  5490  0C05  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5491  0C06  3000               	movlw	0
  5492  0C07  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5493  0C08  3000               	movlw	0
  5494  0C09  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5495  0C0A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5496  0C0B  318A  22C1  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5497                           
  5498                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5499  0C0E  3185  25CD         	fcall	_USBCtrlEPServiceComplete
  5500  0C10  0008               	return
  5501  0C11                     __end_of_USBCtrlTrfSetupHandler:	
  5502                           
  5503                           	psect	text22
  5504  05CD                     __ptext22:	
  5505 ;; *************** function _USBCtrlEPServiceComplete *****************
  5506 ;; Defined at:
  5507 ;;		line 1616 in file "../lib/usb/src/usb_device.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;Total ram usage:        2 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    2
  5528 ;; This function calls:
  5529 ;;		_USBCtrlEPAllowDataStage
  5530 ;;		_USBCtrlEPAllowStatusStage
  5531 ;; This function is called by:
  5532 ;;		_USBCtrlTrfSetupHandler
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function _USBCtrlEPServiceComplete
  5538  05CD                     _USBCtrlEPServiceComplete:	
  5539                           
  5540                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5544  05CD  003D               	movlb	29	; select bank29
  5545  05CE  120E               	bcf	14,4	;volatile
  5546                           
  5547                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5548  05CF  0023               	movlb	3	; select bank3
  5549  05D0  1BB5               	btfsc	(_inPipes^(0+384)+2),7	;volatile
  5550  05D1  2E15               	goto	i1l258
  5551                           
  5552                           ;usb_device.c: 1629: {
  5553                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5554  05D2  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  5555  05D3  2DE3               	goto	i1l3033
  5556                           
  5557                           ;usb_device.c: 1631: {
  5558                           ;usb_device.c: 1632: controlTransferState = 2;
  5559  05D4  3002               	movlw	2
  5560  05D5  00F5               	movwf	??_USBCtrlEPServiceComplete
  5561  05D6  0875               	movf	??_USBCtrlEPServiceComplete,w
  5562  05D7  0021               	movlb	1	; select bank1
  5563  05D8  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5564                           
  5565                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5566  05D9  0023               	movlb	3	; select bank3
  5567  05DA  0853               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  5568  05DB  1D03               	btfss	3,2
  5569  05DC  2DDF               	goto	i1l3029
  5570                           
  5571                           ;usb_device.c: 1644: {
  5572                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5573  05DD  318D  2518         	fcall	_USBCtrlEPAllowDataStage
  5574  05DF                     i1l3029:	
  5575                           
  5576                           ;usb_device.c: 1646: }
  5577                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5578  05DF  0023               	movlb	3	; select bank3
  5579  05E0  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5580                           
  5581                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5582  05E1  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5583                           
  5584                           ;usb_device.c: 1652: }
  5585  05E2  0008               	return
  5586  05E3                     i1l3033:	
  5587                           
  5588                           ;usb_device.c: 1653: else
  5589                           ;usb_device.c: 1654: {
  5590                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5591  05E3  0021               	movlb	1	; select bank1
  5592  05E4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5593  05E5  3E01               	addlw	1
  5594  05E6  00F5               	movwf	??_USBCtrlEPServiceComplete
  5595  05E7  3000               	movlw	0
  5596  05E8  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5597  05E9  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5598  05EA  0875               	movf	??_USBCtrlEPServiceComplete,w
  5599  05EB  0086               	movwf	6
  5600  05EC  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5601  05ED  0087               	movwf	7
  5602  05EE  3008               	movlw	8
  5603  05EF  0081               	movwf	1
  5604                           
  5605                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5606  05F0  3050               	movlw	80
  5607  05F1  00F5               	movwf	??_USBCtrlEPServiceComplete
  5608  05F2  3000               	movlw	0
  5609  05F3  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5610  05F4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5611  05F5  0086               	movwf	6
  5612  05F6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5613  05F7  0087               	movwf	7
  5614  05F8  3142               	addfsr 1,2
  5615  05F9  0875               	movf	??_USBCtrlEPServiceComplete,w
  5616  05FA  3FC0               	movwi [0]fsr1
  5617  05FB  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5618  05FC  3FC1               	movwi [1]fsr1
  5619                           
  5620                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5621  05FD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5622  05FE  0086               	movwf	6
  5623  05FF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5624  0600  0087               	movwf	7
  5625  0601  300C               	movlw	12
  5626  0602  0081               	movwf	1
  5627                           
  5628                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5629  0603  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5630  0604  0086               	movwf	6
  5631  0605  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5632  0606  0087               	movwf	7
  5633  0607  1781               	bsf	1,7
  5634                           
  5635                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5636  0608  0023               	movlb	3	; select bank3
  5637  0609  0827               	movf	_pBDTEntryIn^(0+384),w
  5638  060A  0086               	movwf	6
  5639  060B  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5640  060C  0087               	movwf	7
  5641  060D  3004               	movlw	4
  5642  060E  0081               	movwf	1
  5643                           
  5644                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5645  060F  0827               	movf	_pBDTEntryIn^(0+384),w
  5646  0610  0086               	movwf	6
  5647  0611  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5648  0612  0087               	movwf	7
  5649  0613  1781               	bsf	1,7
  5650                           
  5651                           ;usb_device.c: 1665: }
  5652                           ;usb_device.c: 1666: }
  5653  0614  0008               	return
  5654  0615                     i1l258:	
  5655                           
  5656                           ;usb_device.c: 1667: else
  5657                           ;usb_device.c: 1668: {
  5658                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5659  0615  0020               	movlb	0	; select bank0
  5660  0616  1FD0               	btfss	80,7	;volatile
  5661  0617  2E2D               	goto	i1l3059
  5662                           
  5663                           ;usb_device.c: 1670: {
  5664                           ;usb_device.c: 1671: controlTransferState = 1;
  5665  0618  3001               	movlw	1
  5666  0619  00F5               	movwf	??_USBCtrlEPServiceComplete
  5667  061A  0875               	movf	??_USBCtrlEPServiceComplete,w
  5668  061B  0021               	movlb	1	; select bank1
  5669  061C  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5670                           
  5671                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5672  061D  0023               	movlb	3	; select bank3
  5673  061E  0854               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  5674  061F  1D03               	btfss	3,2
  5675  0620  2E24               	goto	i1l3051
  5676                           
  5677                           ;usb_device.c: 1686: {
  5678                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5679  0621  318D  2518  3185   	fcall	_USBCtrlEPAllowDataStage
  5680  0624                     i1l3051:	
  5681                           
  5682                           ;usb_device.c: 1688: }
  5683                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5684  0624  0023               	movlb	3	; select bank3
  5685  0625  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5686                           
  5687                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5688  0626  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5689                           
  5690                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5691  0627  0857               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5692  0628  1D03               	btfss	3,2
  5693  0629  0008               	return
  5694                           
  5695                           ;usb_device.c: 1713: {
  5696                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5697  062A  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  5698                           
  5699                           ;usb_device.c: 1715: }
  5700                           ;usb_device.c: 1716: }
  5701  062C  0008               	return
  5702  062D                     i1l3059:	
  5703                           
  5704                           ;usb_device.c: 1717: else
  5705                           ;usb_device.c: 1718: {
  5706                           ;usb_device.c: 1729: controlTransferState = 2;
  5707  062D  3002               	movlw	2
  5708  062E  00F5               	movwf	??_USBCtrlEPServiceComplete
  5709  062F  0875               	movf	??_USBCtrlEPServiceComplete,w
  5710  0630  0021               	movlb	1	; select bank1
  5711  0631  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5712                           
  5713                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5714  0632  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5715  0633  3E01               	addlw	1
  5716  0634  00F5               	movwf	??_USBCtrlEPServiceComplete
  5717  0635  3000               	movlw	0
  5718  0636  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5719  0637  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5720  0638  0875               	movf	??_USBCtrlEPServiceComplete,w
  5721  0639  0086               	movwf	6
  5722  063A  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5723  063B  0087               	movwf	7
  5724  063C  3008               	movlw	8
  5725  063D  0081               	movwf	1
  5726                           
  5727                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5728  063E  3050               	movlw	80
  5729  063F  00F5               	movwf	??_USBCtrlEPServiceComplete
  5730  0640  3000               	movlw	0
  5731  0641  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5732  0642  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5733  0643  0086               	movwf	6
  5734  0644  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5735  0645  0087               	movwf	7
  5736  0646  3142               	addfsr 1,2
  5737  0647  0875               	movf	??_USBCtrlEPServiceComplete,w
  5738  0648  3FC0               	movwi [0]fsr1
  5739  0649  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5740  064A  3FC1               	movwi [1]fsr1
  5741                           
  5742                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5743  064B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5744  064C  0086               	movwf	6
  5745  064D  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5746  064E  0087               	movwf	7
  5747  064F  3004               	movlw	4
  5748  0650  0081               	movwf	1
  5749                           
  5750                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5751  0651  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5752  0652  0086               	movwf	6
  5753  0653  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5754  0654  0087               	movwf	7
  5755  0655  1781               	bsf	1,7
  5756                           
  5757                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5758  0656  0023               	movlb	3	; select bank3
  5759  0657  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5760                           
  5761                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5762  0658  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5763                           
  5764                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5765  0659  0857               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5766  065A  1D03               	btfss	3,2
  5767  065B  0008               	return
  5768                           
  5769                           ;usb_device.c: 1741: {
  5770                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5771  065C  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  5772  065E  0008               	return
  5773  065F                     __end_of_USBCtrlEPServiceComplete:	
  5774                           
  5775                           	psect	text23
  5776  0D18                     __ptext23:	
  5777 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5778 ;; Defined at:
  5779 ;;		line 1488 in file "../lib/usb/src/usb_device.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;Total ram usage:        2 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    1
  5800 ;; This function calls:
  5801 ;;		_USBCtrlTrfTxService
  5802 ;; This function is called by:
  5803 ;;		_USBCtrlEPServiceComplete
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _USBCtrlEPAllowDataStage
  5809  0D18                     _USBCtrlEPAllowDataStage:	
  5810                           
  5811                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5815  0D18  0023               	movlb	3	; select bank3
  5816  0D19  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5817                           
  5818                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5819  0D1A  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5820                           
  5821                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5822  0D1B  3002               	movlw	2
  5823  0D1C  0021               	movlb	1	; select bank1
  5824  0D1D  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  5825  0D1E  1D03               	btfss	3,2
  5826  0D1F  2D45               	goto	i1l2811
  5827                           
  5828                           ;usb_device.c: 1494: {
  5829                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5830  0D20  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5831  0D21  3E01               	addlw	1
  5832  0D22  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5833  0D23  3000               	movlw	0
  5834  0D24  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5835  0D25  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5836  0D26  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5837  0D27  0086               	movwf	6
  5838  0D28  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5839  0D29  0087               	movwf	7
  5840  0D2A  3008               	movlw	8
  5841  0D2B  0081               	movwf	1
  5842                           
  5843                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5844  0D2C  3058               	movlw	88
  5845  0D2D  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5846  0D2E  3000               	movlw	0
  5847  0D2F  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5848  0D30  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5849  0D31  0086               	movwf	6
  5850  0D32  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5851  0D33  0087               	movwf	7
  5852  0D34  3142               	addfsr 1,2
  5853  0D35  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5854  0D36  3FC0               	movwi [0]fsr1
  5855  0D37  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5856  0D38  3FC1               	movwi [1]fsr1
  5857                           
  5858                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5859  0D39  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5860  0D3A  0086               	movwf	6
  5861  0D3B  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5862  0D3C  0087               	movwf	7
  5863  0D3D  3048               	movlw	72
  5864  0D3E  0081               	movwf	1
  5865                           
  5866                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5867  0D3F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5868  0D40  0086               	movwf	6
  5869  0D41  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5870  0D42  0087               	movwf	7
  5871  0D43  1781               	bsf	1,7
  5872                           
  5873                           ;usb_device.c: 1500: }
  5874  0D44  0008               	return
  5875  0D45                     i1l2811:	
  5876                           
  5877                           ;usb_device.c: 1501: else
  5878                           ;usb_device.c: 1502: {
  5879                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5880  0D45  0023               	movlb	3	; select bank3
  5881  0D46  0837               	movf	((_inPipes+1)^(0+384)+3),w	;volatile
  5882  0D47  0020               	movlb	0	; select bank0
  5883  0D48  0257               	subwf	87,w	;volatile
  5884  0D49  1D03               	skipz
  5885  0D4A  2D4F               	goto	u207_25
  5886  0D4B  0023               	movlb	3	; select bank3
  5887  0D4C  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  5888  0D4D  0020               	movlb	0	; select bank0
  5889  0D4E  0256               	subwf	86,w	;volatile
  5890  0D4F                     u207_25:	
  5891  0D4F  1803               	skipnc
  5892  0D50  2D58               	goto	i1l2815
  5893                           
  5894                           ;usb_device.c: 1506: {
  5895                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5896  0D51  0857               	movf	87,w	;volatile
  5897  0D52  0023               	movlb	3	; select bank3
  5898  0D53  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  5899  0D54  0020               	movlb	0	; select bank0
  5900  0D55  0856               	movf	86,w	;volatile
  5901  0D56  0023               	movlb	3	; select bank3
  5902  0D57  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5903  0D58                     i1l2815:	
  5904                           
  5905                           ;usb_device.c: 1508: }
  5906                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5907  0D58  318E  2635         	fcall	_USBCtrlTrfTxService
  5908                           
  5909                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5910  0D5A  3058               	movlw	88
  5911  0D5B  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5912  0D5C  3000               	movlw	0
  5913  0D5D  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5914  0D5E  0023               	movlb	3	; select bank3
  5915  0D5F  0827               	movf	_pBDTEntryIn^(0+384),w
  5916  0D60  0086               	movwf	6
  5917  0D61  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5918  0D62  0087               	movwf	7
  5919  0D63  3142               	addfsr 1,2
  5920  0D64  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5921  0D65  3FC0               	movwi [0]fsr1
  5922  0D66  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5923  0D67  3FC1               	movwi [1]fsr1
  5924                           
  5925                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5926  0D68  0827               	movf	_pBDTEntryIn^(0+384),w
  5927  0D69  0086               	movwf	6
  5928  0D6A  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5929  0D6B  0087               	movwf	7
  5930  0D6C  3048               	movlw	72
  5931  0D6D  0081               	movwf	1
  5932                           
  5933                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5934  0D6E  0827               	movf	_pBDTEntryIn^(0+384),w
  5935  0D6F  0086               	movwf	6
  5936  0D70  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5937  0D71  0087               	movwf	7
  5938  0D72  1781               	bsf	1,7
  5939  0D73  0008               	return
  5940  0D74                     __end_of_USBCtrlEPAllowDataStage:	
  5941                           
  5942                           	psect	text24
  5943  0DD3                     __ptext24:	
  5944 ;; *************** function _USBCheckStdRequest *****************
  5945 ;; Defined at:
  5946 ;;		line 2686 in file "../lib/usb/src/usb_device.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;Total ram usage:        1 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    5
  5967 ;; This function calls:
  5968 ;;		_USBStdFeatureReqHandler
  5969 ;;		_USBStdGetDscHandler
  5970 ;;		_USBStdGetStatusHandler
  5971 ;;		_USBStdSetCfgHandler
  5972 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5973 ;; This function is called by:
  5974 ;;		_USBCtrlTrfSetupHandler
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function _USBCheckStdRequest
  5980  0DD3                     _USBCheckStdRequest:	
  5981                           
  5982                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5983                           
  5984                           ;incstack = 0
  5985                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5986  0DD3  0020               	movlb	0	; select bank0
  5987  0DD4  0E50               	swapf	80,w	;volatile
  5988  0DD5  0C89               	rrf	9,f
  5989  0DD6  3903               	andlw	3
  5990  0DD7  3A00               	xorlw	0
  5991  0DD8  1D03               	btfss	3,2
  5992  0DD9  0008               	return
  5993  0DDA  2E29               	goto	i1l3153
  5994  0DDB                     i1l385:	
  5995                           ;usb_device.c: 2691: {
  5996                           ;usb_device.c: 2692: case 5:
  5997                           
  5998                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  5999                           
  6000                           
  6001                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6002  0DDB  0023               	movlb	3	; select bank3
  6003  0DDC  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6004                           
  6005                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6006  0DDD  3008               	movlw	8
  6007  0DDE  0020               	movlb	0	; select bank0
  6008  0DDF  00ED               	movwf	??_USBCheckStdRequest
  6009  0DE0  086D               	movf	??_USBCheckStdRequest,w
  6010  0DE1  0022               	movlb	2	; select bank2
  6011  0DE2  00EE               	movwf	_USBDeviceState^(0+256)	;volatile
  6012                           
  6013                           ;usb_device.c: 2696: break;
  6014  0DE3  0008               	return
  6015  0DE4                     i1l3123:	
  6016                           ;usb_device.c: 2697: case 6:
  6017                           
  6018                           
  6019                           ;usb_device.c: 2698: USBStdGetDscHandler();
  6020  0DE4  318F  2781         	fcall	_USBStdGetDscHandler
  6021                           
  6022                           ;usb_device.c: 2699: break;
  6023  0DE6  0008               	return
  6024  0DE7                     i1l3125:	
  6025                           ;usb_device.c: 2700: case 9:
  6026                           
  6027                           
  6028                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  6029  0DE7  3186  265F         	fcall	_USBStdSetCfgHandler
  6030                           
  6031                           ;usb_device.c: 2702: break;
  6032  0DE9  0008               	return
  6033  0DEA                     i1l3127:	
  6034                           ;usb_device.c: 2703: case 8:
  6035                           
  6036                           
  6037                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6038  0DEA  306F               	movlw	low _USBActiveConfiguration
  6039  0DEB  0023               	movlb	3	; select bank3
  6040  0DEC  00B3               	movwf	_inPipes^(0+384)	;volatile
  6041  0DED  3001               	movlw	high _USBActiveConfiguration
  6042  0DEE  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6043                           
  6044                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6045  0DEF  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6046                           
  6047                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6048  0DF0  3001               	movlw	1
  6049  0DF1  0020               	movlb	0	; select bank0
  6050  0DF2  00ED               	movwf	??_USBCheckStdRequest
  6051  0DF3  086D               	movf	??_USBCheckStdRequest,w
  6052  0DF4  0023               	movlb	3	; select bank3
  6053  0DF5  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6054                           
  6055                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6056  0DF6  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6057                           
  6058                           ;usb_device.c: 2708: break;
  6059  0DF7  0008               	return
  6060  0DF8                     i1l3135:	
  6061                           ;usb_device.c: 2709: case 0:
  6062                           
  6063                           
  6064                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  6065  0DF8  318C  2411         	fcall	_USBStdGetStatusHandler
  6066                           
  6067                           ;usb_device.c: 2711: break;
  6068  0DFA  0008               	return
  6069  0DFB                     i1l3137:	
  6070                           ;usb_device.c: 2712: case 1:
  6071                           
  6072                           
  6073                           ;usb_device.c: 2713: case 3:
  6074                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  6075  0DFB  3180  2042         	fcall	_USBStdFeatureReqHandler
  6076                           
  6077                           ;usb_device.c: 2715: break;
  6078  0DFD  0008               	return
  6079  0DFE                     i1l3139:	
  6080                           ;usb_device.c: 2716: case 10:
  6081                           
  6082                           
  6083                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6084  0DFE  0020               	movlb	0	; select bank0
  6085  0DFF  0854               	movf	84,w	;volatile
  6086  0E00  3EE5               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6087  0E01  0023               	movlb	3	; select bank3
  6088  0E02  00B3               	movwf	_inPipes^(0+384)	;volatile
  6089  0E03  3001               	movlw	1
  6090  0E04  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6091                           
  6092                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6093  0E05  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6094                           
  6095                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6096  0E06  3001               	movlw	1
  6097  0E07  0020               	movlb	0	; select bank0
  6098  0E08  00ED               	movwf	??_USBCheckStdRequest
  6099  0E09  086D               	movf	??_USBCheckStdRequest,w
  6100  0E0A  0023               	movlb	3	; select bank3
  6101  0E0B  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6102                           
  6103                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6104  0E0C  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6105                           
  6106                           ;usb_device.c: 2721: break;
  6107  0E0D  0008               	return
  6108  0E0E                     i1l394:	
  6109                           ;usb_device.c: 2722: case 11:
  6110                           
  6111                           
  6112                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6113  0E0E  0023               	movlb	3	; select bank3
  6114  0E0F  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6115                           
  6116                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6117  0E10  0020               	movlb	0	; select bank0
  6118  0E11  0852               	movf	82,w	;volatile
  6119  0E12  00ED               	movwf	??_USBCheckStdRequest
  6120  0E13  0854               	movf	84,w	;volatile
  6121  0E14  3EE5               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6122  0E15  0086               	movwf	6
  6123  0E16  3001               	movlw	1	; select bank3/4
  6124  0E17  0087               	movwf	7
  6125  0E18  086D               	movf	??_USBCheckStdRequest,w
  6126  0E19  0081               	movwf	1
  6127                           
  6128                           ;usb_device.c: 2725: break;
  6129  0E1A  0008               	return
  6130  0E1B                     i1l3149:	
  6131                           ;usb_device.c: 2726: case 7:
  6132                           
  6133                           
  6134                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6135  0E1B  3000               	movlw	0
  6136  0E1C  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6137  0E1D  3002               	movlw	2
  6138  0E1E  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6139  0E1F  3000               	movlw	0
  6140  0E20  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6141  0E21  3000               	movlw	0
  6142  0E22  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6143  0E23  3000               	movlw	0
  6144  0E24  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6145  0E25  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6146  0E26  318A  22C1         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6147                           
  6148                           ;usb_device.c: 2732: }
  6149                           
  6150                           ;usb_device.c: 2731: break;
  6151                           
  6152                           ;usb_device.c: 2730: default:
  6153                           
  6154                           ;usb_device.c: 2729: case 12:
  6155                           
  6156                           ;usb_device.c: 2728: break;
  6157  0E28  0008               	return
  6158  0E29                     i1l3153:	
  6159  0E29  0020               	movlb	0	; select bank0
  6160  0E2A  0851               	movf	81,w	;volatile
  6161                           
  6162                           ; Switch size 1, requested type "space"
  6163                           ; Number of cases is 11, Range of values is 0 to 12
  6164                           ; switch strategies available:
  6165                           ; Name         Instructions Cycles
  6166                           ; direct_byte           32     6 (fixed)
  6167                           ; simple_byte           34    18 (average)
  6168                           ; jumptable            260     6 (fixed)
  6169                           ;	Chosen strategy is direct_byte
  6170  0E2B  0084               	movwf	4
  6171  0E2C  300D               	movlw	13
  6172  0E2D  0204               	subwf	4,w
  6173  0E2E  1803               	skipnc
  6174  0E2F  0008               	return
  6175  0E30  3188               	movlp	high i1S4505
  6176  0E31  3504               	lslf	4,w
  6177  0E32  3E00               	addlw	low i1S4505
  6178  0E33  0082               	movwf	2
  6179  0E34                     i1l383:	
  6180  0E34  0008               	return
  6181  0E35                     __end_of_USBCheckStdRequest:	
  6182                           
  6183                           	psect	swtext1
  6184  0800                     __pswtext1:	
  6185  0800                     i1S4505:	
  6186  0800  318D  2DF8         	ljmp	i1l3135
  6187  0802  318D  2DFB         	ljmp	i1l3137
  6188  0804  318E  2E34         	ljmp	i1l383
  6189  0806  318D  2DFB         	ljmp	i1l3137
  6190  0808  318E  2E34         	ljmp	i1l383
  6191  080A  318D  2DDB         	ljmp	i1l385
  6192  080C  318D  2DE4         	ljmp	i1l3123
  6193  080E  318E  2E1B         	ljmp	i1l3149
  6194  0810  318D  2DEA         	ljmp	i1l3127
  6195  0812  318D  2DE7         	ljmp	i1l3125
  6196  0814  318D  2DFE         	ljmp	i1l3139
  6197  0816  318E  2E0E         	ljmp	i1l394
  6198  0818  318E  2E34         	ljmp	i1l383
  6199                           
  6200                           	psect	text25
  6201  065F                     __ptext25:	
  6202 ;; *************** function _USBStdSetCfgHandler *****************
  6203 ;; Defined at:
  6204 ;;		line 1968 in file "../lib/usb/src/usb_device.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  p               2    7[BANK0 ] PTR unsigned char 
  6209 ;;		 -> UEP1(1), 
  6210 ;;  i               1    9[BANK0 ] unsigned char 
  6211 ;;  i               1   10[BANK0 ] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;Total ram usage:        5 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    4
  6228 ;; This function calls:
  6229 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6230 ;;		_memset
  6231 ;; This function is called by:
  6232 ;;		_USBCheckStdRequest
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           
  6237                           ;psect for function _USBStdSetCfgHandler
  6238  065F                     _USBStdSetCfgHandler:	
  6239                           
  6240                           ;usb_device.c: 1970: uint8_t i;
  6241                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6242                           
  6243                           ;incstack = 0
  6244                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6245  065F  0023               	movlb	3	; select bank3
  6246  0660  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6247                           
  6248                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  6249  0661  300E               	movlw	14
  6250  0662  0020               	movlb	0	; select bank0
  6251  0663  00E8               	movwf	USBStdSetCfgHandler@p+1
  6252  0664  3099               	movlw	153
  6253  0665  00E7               	movwf	USBStdSetCfgHandler@p
  6254  0666  01E9               	clrf	USBStdSetCfgHandler@i_1572
  6255  0667  3002               	movlw	2
  6256  0668  0269               	subwf	USBStdSetCfgHandler@i_1572,w
  6257  0669  1803               	btfsc	3,0
  6258  066A  2E7C               	goto	i1l2839
  6259  066B                     i1l2831:	
  6260  066B  0867               	movf	USBStdSetCfgHandler@p,w
  6261  066C  0086               	movwf	6
  6262  066D  0868               	movf	USBStdSetCfgHandler@p+1,w
  6263  066E  0087               	movwf	7
  6264  066F  0181               	clrf	1
  6265  0670  3001               	movlw	1
  6266  0671  07E7               	addwf	USBStdSetCfgHandler@p,f
  6267  0672  3000               	movlw	0
  6268  0673  3DE8               	addwfc	USBStdSetCfgHandler@p+1,f
  6269  0674  3001               	movlw	1
  6270  0675  00E6               	movwf	??_USBStdSetCfgHandler
  6271  0676  0866               	movf	??_USBStdSetCfgHandler,w
  6272  0677  07E9               	addwf	USBStdSetCfgHandler@i_1572,f
  6273  0678  3002               	movlw	2
  6274  0679  0269               	subwf	USBStdSetCfgHandler@i_1572,w
  6275  067A  1C03               	skipc
  6276  067B  2E6B               	goto	i1l2831
  6277  067C                     i1l2839:	
  6278                           
  6279                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6280  067C  3020               	movlw	32
  6281  067D  00F0               	movwf	memset@p1
  6282  067E  3000               	movlw	0
  6283  067F  00F1               	movwf	memset@p1+1
  6284  0680  3000               	movlw	0
  6285  0681  00F2               	movwf	memset@c
  6286  0682  00F3               	movwf	memset@c+1
  6287  0683  3030               	movlw	48
  6288  0684  00F4               	movwf	memset@n
  6289  0685  3000               	movlw	0
  6290  0686  00F5               	movwf	memset@n+1
  6291  0687  3189  2145  3186   	fcall	_memset
  6292                           
  6293                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6294  068A  003D               	movlb	29	; select bank29
  6295  068B  170E               	bsf	14,6	;volatile
  6296                           
  6297                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6298  068C  0020               	movlb	0	; select bank0
  6299  068D  01EA               	clrf	USBStdSetCfgHandler@i
  6300  068E  3003               	movlw	3
  6301  068F  026A               	subwf	USBStdSetCfgHandler@i,w
  6302  0690  1803               	btfsc	3,0
  6303  0691  2EA6               	goto	i1l2855
  6304  0692                     i1l2849:	
  6305                           
  6306                           ;usb_device.c: 1988: {
  6307                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6308  0692  086A               	movf	USBStdSetCfgHandler@i,w
  6309  0693  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6310  0694  0086               	movwf	6
  6311  0695  3001               	movlw	1	; select bank3/4
  6312  0696  0087               	movwf	7
  6313  0697  0181               	clrf	1
  6314                           
  6315                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6316  0698  086A               	movf	USBStdSetCfgHandler@i,w
  6317  0699  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6318  069A  0086               	movwf	6
  6319  069B  3001               	movlw	1	; select bank3/4
  6320  069C  0087               	movwf	7
  6321  069D  0181               	clrf	1
  6322  069E  3001               	movlw	1
  6323  069F  00E6               	movwf	??_USBStdSetCfgHandler
  6324  06A0  0866               	movf	??_USBStdSetCfgHandler,w
  6325  06A1  07EA               	addwf	USBStdSetCfgHandler@i,f
  6326  06A2  3003               	movlw	3
  6327  06A3  026A               	subwf	USBStdSetCfgHandler@i,w
  6328  06A4  1C03               	skipc
  6329  06A5  2E92               	goto	i1l2849
  6330  06A6                     i1l2855:	
  6331                           
  6332                           ;usb_device.c: 1991: }
  6333                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6334  06A6  30E5               	movlw	low _USBAlternateInterface
  6335  06A7  00F0               	movwf	memset@p1
  6336  06A8  3001               	movlw	high _USBAlternateInterface
  6337  06A9  00F1               	movwf	memset@p1+1
  6338  06AA  3000               	movlw	0
  6339  06AB  00F2               	movwf	memset@c
  6340  06AC  00F3               	movwf	memset@c+1
  6341  06AD  3002               	movlw	2
  6342  06AE  00F4               	movwf	memset@n
  6343  06AF  3000               	movlw	0
  6344  06B0  00F5               	movwf	memset@n+1
  6345  06B1  3189  2145  3186   	fcall	_memset
  6346                           
  6347                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6348  06B4  003D               	movlb	29	; select bank29
  6349  06B5  130E               	bcf	14,6	;volatile
  6350                           
  6351                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6352  06B6  3028               	movlw	40
  6353  06B7  0023               	movlb	3	; select bank3
  6354  06B8  00A7               	movwf	_pBDTEntryIn^(0+384)
  6355  06B9  3000               	movlw	0
  6356  06BA  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6357                           
  6358                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6359  06BB  3020               	movlw	32
  6360  06BC  0020               	movlb	0	; select bank0
  6361  06BD  00E6               	movwf	??_USBStdSetCfgHandler
  6362  06BE  0866               	movf	??_USBStdSetCfgHandler,w
  6363  06BF  0021               	movlb	1	; select bank1
  6364  06C0  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  6365                           
  6366                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6367  06C1  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6368  06C2  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6369  06C3  39FF               	andlw	255
  6370  06C4  1D03               	skipz
  6371  06C5  3000               	movlw	0
  6372  06C6  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  6373                           
  6374                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6375  06C7  0020               	movlb	0	; select bank0
  6376  06C8  0852               	movf	82,w	;volatile
  6377  06C9  00E6               	movwf	??_USBStdSetCfgHandler
  6378  06CA  0866               	movf	??_USBStdSetCfgHandler,w
  6379  06CB  0022               	movlb	2	; select bank2
  6380  06CC  00EF               	movwf	_USBActiveConfiguration^(0+256)	;volatile
  6381                           
  6382                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6383  06CD  086F               	movf	_USBActiveConfiguration^(0+256),w	;volatile
  6384  06CE  1D03               	btfss	3,2
  6385  06CF  2ED7               	goto	i1l2871
  6386                           
  6387                           ;usb_device.c: 2010: {
  6388                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6389  06D0  3010               	movlw	16
  6390  06D1  0020               	movlb	0	; select bank0
  6391  06D2  00E6               	movwf	??_USBStdSetCfgHandler
  6392  06D3  0866               	movf	??_USBStdSetCfgHandler,w
  6393  06D4  0022               	movlb	2	; select bank2
  6394  06D5  00EE               	movwf	_USBDeviceState^(0+256)	;volatile
  6395                           
  6396                           ;usb_device.c: 2013: }
  6397  06D6  0008               	return
  6398  06D7                     i1l2871:	
  6399                           
  6400                           ;usb_device.c: 2014: else
  6401                           ;usb_device.c: 2015: {
  6402                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6403  06D7  3000               	movlw	0
  6404  06D8  0020               	movlb	0	; select bank0
  6405  06D9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6406  06DA  3001               	movlw	1
  6407  06DB  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6408  06DC  306F               	movlw	low _USBActiveConfiguration
  6409  06DD  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6410  06DE  3001               	movlw	high _USBActiveConfiguration
  6411  06DF  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6412  06E0  3001               	movlw	1
  6413  06E1  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6414  06E2  3000               	movlw	0
  6415  06E3  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6416  06E4  318A  22C1         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6417                           
  6418                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6419  06E6  3020               	movlw	32
  6420  06E7  0020               	movlb	0	; select bank0
  6421  06E8  00E6               	movwf	??_USBStdSetCfgHandler
  6422  06E9  0866               	movf	??_USBStdSetCfgHandler,w
  6423  06EA  0022               	movlb	2	; select bank2
  6424  06EB  00EE               	movwf	_USBDeviceState^(0+256)	;volatile
  6425  06EC  0008               	return
  6426  06ED                     __end_of_USBStdSetCfgHandler:	
  6427                           
  6428                           	psect	text26
  6429  0945                     __ptext26:	
  6430 ;; *************** function _memset *****************
  6431 ;; Defined at:
  6432 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  p1              2    0[COMMON] PTR void 
  6435 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6436 ;;  c               2    2[COMMON] int 
  6437 ;;  n               2    4[COMMON] unsigned int 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  p               2    6[COMMON] PTR unsigned char 
  6440 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  2    0[COMMON] PTR void 
  6443 ;; Registers used:
  6444 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        8 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_USBStdSetCfgHandler
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           
  6464                           ;psect for function _memset
  6465  0945                     _memset:	
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6469  0945  0871               	movf	memset@p1+1,w
  6470  0946  00F7               	movwf	memset@p+1
  6471  0947  0870               	movf	memset@p1,w
  6472  0948  00F6               	movwf	memset@p
  6473  0949                     i1l2761:	
  6474  0949  3001               	movlw	1
  6475  094A  02F4               	subwf	memset@n,f
  6476  094B  3000               	movlw	0
  6477  094C  3BF5               	subwfb	memset@n+1,f
  6478  094D  0A74               	incf	memset@n,w
  6479  094E  1903               	btfsc	3,2
  6480  094F  0A75               	incf	memset@n+1,w
  6481  0950  1903               	btfsc	3,2
  6482  0951  0008               	return
  6483  0952  0876               	movf	memset@p,w
  6484  0953  0086               	movwf	6
  6485  0954  0877               	movf	memset@p+1,w
  6486  0955  0087               	movwf	7
  6487  0956  0872               	movf	memset@c,w
  6488  0957  0081               	movwf	1
  6489  0958  3001               	movlw	1
  6490  0959  07F6               	addwf	memset@p,f
  6491  095A  3000               	movlw	0
  6492  095B  3DF7               	addwfc	memset@p+1,f
  6493  095C  2949               	goto	i1l2761
  6494  095D                     __end_of_memset:	
  6495                           ;	Return value of _memset is never used
  6496                           
  6497                           
  6498                           	psect	text27
  6499  0C11                     __ptext27:	
  6500 ;; *************** function _USBStdGetStatusHandler *****************
  6501 ;; Defined at:
  6502 ;;		line 2129 in file "../lib/usb/src/usb_device.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  p               2    1[COMMON] PTR struct __BDT
  6507 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;Total ram usage:        3 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_USBCheckStdRequest
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           
  6531                           ;psect for function _USBStdGetStatusHandler
  6532  0C11                     _USBStdGetStatusHandler:	
  6533                           
  6534                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6535                           
  6536                           ;incstack = 0
  6537                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6538  0C11  0020               	movlb	0	; select bank0
  6539  0C12  01D8               	clrf	88	;volatile
  6540                           
  6541                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6542  0C13  01D9               	clrf	89	;volatile
  6543                           
  6544                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6545  0C14  2C4D               	goto	i1l2927
  6546  0C15                     i1l323:	
  6547                           ;usb_device.c: 2135: {
  6548                           ;usb_device.c: 2136: case (0x00):
  6549                           
  6550                           
  6551                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6552  0C15  0023               	movlb	3	; select bank3
  6553  0C16  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6554                           
  6555                           ;usb_device.c: 2145: }
  6556                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6557                           
  6558                           ;usb_device.c: 2143: {
  6559                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6560                           
  6561                           ;usb_device.c: 2142: if(0 == 1)
  6562  0C17  0023               	movlb	3	; select bank3
  6563  0C18  035C               	decf	_RemoteWakeup^(0+384),w	;volatile
  6564  0C19  1D03               	btfss	3,2
  6565  0C1A  2C59               	goto	i1l326
  6566                           
  6567                           ;usb_device.c: 2148: {
  6568                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6569  0C1B  0020               	movlb	0	; select bank0
  6570  0C1C  14D8               	bsf	88,1	;volatile
  6571                           
  6572                           ;usb_device.c: 2150: }
  6573                           ;usb_device.c: 2151: break;
  6574  0C1D  2C59               	goto	i1l326
  6575  0C1E                     i1l327:	
  6576                           ;usb_device.c: 2152: case (0x01):
  6577                           
  6578                           
  6579                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6580  0C1E  0023               	movlb	3	; select bank3
  6581  0C1F  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6582                           
  6583                           ;usb_device.c: 2154: break;
  6584  0C20  2C59               	goto	i1l326
  6585  0C21                     i1l328:	
  6586                           ;usb_device.c: 2155: case (0x02):
  6587                           
  6588                           
  6589                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6590  0C21  0023               	movlb	3	; select bank3
  6591  0C22  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6592                           
  6593                           ;usb_device.c: 2160: {
  6594                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6595                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6596  0C23  0020               	movlb	0	; select bank0
  6597  0C24  1BD4               	btfsc	84,7	;volatile
  6598  0C25  2C31               	goto	i1l2917
  6599                           
  6600                           ;usb_device.c: 2164: {
  6601                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6602  0C26  0854               	movf	84,w	;volatile
  6603  0C27  390F               	andlw	15
  6604  0C28  0709               	addwf	9,w
  6605  0C29  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6606  0C2A  0086               	movwf	6
  6607  0C2B  3001               	movlw	1	; select bank3/4
  6608  0C2C  0087               	movwf	7
  6609  0C2D  3F40               	moviw [0]fsr1
  6610  0C2E  00F1               	movwf	USBStdGetStatusHandler@p
  6611  0C2F  3F41               	moviw [1]fsr1
  6612  0C30  2C3B               	goto	L5
  6613  0C31                     i1l2917:	
  6614                           ;usb_device.c: 2166: }
  6615                           
  6616                           
  6617                           ;usb_device.c: 2167: else
  6618                           ;usb_device.c: 2168: {
  6619                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6620  0C31  0854               	movf	84,w	;volatile
  6621  0C32  390F               	andlw	15
  6622  0C33  0709               	addwf	9,w
  6623  0C34  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6624  0C35  0086               	movwf	6
  6625  0C36  3001               	movlw	1	; select bank3/4
  6626  0C37  0087               	movwf	7
  6627  0C38  3F40               	moviw [0]fsr1
  6628  0C39  00F1               	movwf	USBStdGetStatusHandler@p
  6629  0C3A  3F41               	moviw [1]fsr1
  6630  0C3B                     L5:	
  6631  0C3B  00F2               	movwf	USBStdGetStatusHandler@p+1
  6632                           
  6633                           ;usb_device.c: 2170: }
  6634                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6635  0C3C  0871               	movf	USBStdGetStatusHandler@p,w
  6636  0C3D  0086               	movwf	6
  6637  0C3E  0872               	movf	USBStdGetStatusHandler@p+1,w
  6638  0C3F  0087               	movwf	7
  6639  0C40  1F81               	btfss	1,7
  6640  0C41  2C59               	goto	i1l326
  6641  0C42  0871               	movf	USBStdGetStatusHandler@p,w
  6642  0C43  0086               	movwf	6
  6643  0C44  0872               	movf	USBStdGetStatusHandler@p+1,w
  6644  0C45  0087               	movwf	7
  6645  0C46  1D01               	btfss	1,2
  6646  0C47  2C59               	goto	i1l326
  6647                           
  6648                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6649  0C48  3001               	movlw	1
  6650  0C49  00F0               	movwf	??_USBStdGetStatusHandler
  6651  0C4A  0870               	movf	??_USBStdGetStatusHandler,w
  6652  0C4B  00D8               	movwf	88	;volatile
  6653                           
  6654                           ;usb_device.c: 2175: }
  6655                           ;usb_device.c: 2176: }
  6656                           
  6657                           ;usb_device.c: 2174: break;
  6658  0C4C  2C59               	goto	i1l326
  6659  0C4D                     i1l2927:	
  6660  0C4D  0850               	movf	80,w	;volatile
  6661  0C4E  391F               	andlw	31
  6662                           
  6663                           ; Switch size 1, requested type "space"
  6664                           ; Number of cases is 3, Range of values is 0 to 2
  6665                           ; switch strategies available:
  6666                           ; Name         Instructions Cycles
  6667                           ; simple_byte           10     6 (average)
  6668                           ; direct_byte           12     6 (fixed)
  6669                           ; jumptable            260     6 (fixed)
  6670                           ;	Chosen strategy is simple_byte
  6671  0C4F  3A00               	xorlw	0	; case 0
  6672  0C50  1903               	skipnz
  6673  0C51  2C15               	goto	i1l323
  6674  0C52  3A01               	xorlw	1	; case 1
  6675  0C53  1903               	skipnz
  6676  0C54  2C1E               	goto	i1l327
  6677  0C55  3A03               	xorlw	3	; case 2
  6678  0C56  1903               	skipnz
  6679  0C57  2C21               	goto	i1l328
  6680  0C58  2C59               	goto	i1l326
  6681  0C59                     i1l326:	
  6682                           
  6683                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6684  0C59  0023               	movlb	3	; select bank3
  6685  0C5A  1FB5               	btfss	(_inPipes^(0+384)+2),7	;volatile
  6686  0C5B  0008               	return
  6687                           
  6688                           ;usb_device.c: 2179: {
  6689                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6690  0C5C  3058               	movlw	88
  6691  0C5D  00B3               	movwf	_inPipes^(0+384)	;volatile
  6692  0C5E  3000               	movlw	0
  6693  0C5F  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6694                           
  6695                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6696  0C60  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6697                           
  6698                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6699  0C61  3002               	movlw	2
  6700  0C62  00F0               	movwf	??_USBStdGetStatusHandler
  6701  0C63  0870               	movf	??_USBStdGetStatusHandler,w
  6702  0C64  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6703  0C65  0008               	return
  6704  0C66                     __end_of_USBStdGetStatusHandler:	
  6705                           
  6706                           	psect	text28
  6707  0F81                     __ptext28:	
  6708 ;; *************** function _USBStdGetDscHandler *****************
  6709 ;; Defined at:
  6710 ;;		line 2043 in file "../lib/usb/src/usb_device.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;Total ram usage:        3 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_USBCheckStdRequest
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           
  6738                           ;psect for function _USBStdGetDscHandler
  6739  0F81                     _USBStdGetDscHandler:	
  6740                           
  6741                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6742                           
  6743                           ;incstack = 0
  6744                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6745  0F81  3080               	movlw	128
  6746  0F82  0020               	movlb	0	; select bank0
  6747  0F83  0650               	xorwf	80,w	;volatile
  6748  0F84  1D03               	btfss	3,2
  6749  0F85  0008               	return
  6750                           
  6751                           ;usb_device.c: 2046: {
  6752                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6753  0F86  30C0               	movlw	192
  6754  0F87  00F0               	movwf	??_USBStdGetDscHandler
  6755  0F88  0870               	movf	??_USBStdGetDscHandler,w
  6756  0F89  0023               	movlb	3	; select bank3
  6757  0F8A  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  6758                           
  6759                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6760  0F8B  2FF3               	goto	i1l2905
  6761  0F8C                     i1l2879:	
  6762                           ;usb_device.c: 2050: {
  6763                           ;usb_device.c: 2051: case 0x01:
  6764                           
  6765                           
  6766                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6767  0F8C  30AB               	movlw	low (_device_dsc| (0+32768))
  6768  0F8D  0023               	movlb	3	; select bank3
  6769  0F8E  00B3               	movwf	_inPipes^(0+384)	;volatile
  6770  0F8F  3090               	movlw	high (_device_dsc| (0+32768))
  6771  0F90  00B4               	movwf	(_inPipes^(0+384)+1)	;volatile
  6772                           
  6773                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6774  0F91  3000               	movlw	0
  6775  0F92  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6776  0F93  3012               	movlw	18
  6777  0F94  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6778                           
  6779                           ;usb_device.c: 2058: break;
  6780  0F95  0008               	return
  6781  0F96                     i1l2883:	
  6782                           ;usb_device.c: 2059: case 0x02:
  6783                           
  6784                           
  6785                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6786  0F96  0020               	movlb	0	; select bank0
  6787  0F97  0852               	movf	82,w	;volatile
  6788  0F98  1D03               	btfss	3,2
  6789  0F99  2FC9               	goto	i1l2891
  6790                           
  6791                           ;usb_device.c: 2064: {
  6792                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6793  0F9A  0852               	movf	82,w	;volatile
  6794  0F9B  00F0               	movwf	??_USBStdGetDscHandler
  6795  0F9C  01F1               	clrf	??_USBStdGetDscHandler+1
  6796  0F9D  35F0               	lslf	??_USBStdGetDscHandler,f
  6797  0F9E  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6798  0F9F  30C7               	movlw	low (_USB_CD_Ptr| (0+32768))
  6799  0FA0  0770               	addwf	??_USBStdGetDscHandler,w
  6800  0FA1  0084               	movwf	4
  6801  0FA2  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  6802  0FA3  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6803  0FA4  0085               	movwf	5
  6804  0FA5  3F00               	moviw [0]fsr0
  6805  0FA6  0023               	movlb	3	; select bank3
  6806  0FA7  00B3               	movwf	_inPipes^(0+384)	;volatile
  6807  0FA8  3F01               	moviw [1]fsr0
  6808  0FA9  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6809                           
  6810                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6811  0FAA  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6812  0FAB  00F1               	movwf	??_USBStdGetDscHandler+1
  6813  0FAC  0833               	movf	_inPipes^(0+384),w	;volatile
  6814  0FAD  00F0               	movwf	??_USBStdGetDscHandler
  6815  0FAE  3002               	movlw	2
  6816  0FAF  0770               	addwf	??_USBStdGetDscHandler,w
  6817  0FB0  0084               	movwf	4
  6818  0FB1  0871               	movf	??_USBStdGetDscHandler+1,w
  6819  0FB2  1803               	skipnc
  6820  0FB3  0A71               	incf	??_USBStdGetDscHandler+1,w
  6821  0FB4  0085               	movwf	5
  6822  0FB5  0800               	movf	0,w	;code access
  6823  0FB6  00F2               	movwf	??_USBStdGetDscHandler+2
  6824  0FB7  0872               	movf	??_USBStdGetDscHandler+2,w
  6825  0FB8  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6826                           
  6827                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6828  0FB9  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6829  0FBA  00F1               	movwf	??_USBStdGetDscHandler+1
  6830  0FBB  0833               	movf	_inPipes^(0+384),w	;volatile
  6831  0FBC  00F0               	movwf	??_USBStdGetDscHandler
  6832  0FBD  3003               	movlw	3
  6833  0FBE  0770               	addwf	??_USBStdGetDscHandler,w
  6834  0FBF  0084               	movwf	4
  6835  0FC0  0871               	movf	??_USBStdGetDscHandler+1,w
  6836  0FC1  1803               	skipnc
  6837  0FC2  0A71               	incf	??_USBStdGetDscHandler+1,w
  6838  0FC3  0085               	movwf	5
  6839  0FC4  0800               	movf	0,w	;code access
  6840  0FC5  00F2               	movwf	??_USBStdGetDscHandler+2
  6841  0FC6  0872               	movf	??_USBStdGetDscHandler+2,w
  6842  0FC7  00B7               	movwf	(_inPipes^(0+384)+4)	;volatile
  6843                           
  6844                           ;usb_device.c: 2076: }
  6845  0FC8  0008               	return
  6846  0FC9                     i1l2891:	
  6847                           
  6848                           ;usb_device.c: 2077: else
  6849                           ;usb_device.c: 2078: {
  6850                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6851  0FC9  0023               	movlb	3	; select bank3
  6852  0FCA  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6853                           
  6854                           ;usb_device.c: 2080: }
  6855                           ;usb_device.c: 2081: break;
  6856  0FCB  0008               	return
  6857  0FCC                     i1l2893:	
  6858                           ;usb_device.c: 2082: case 0x03:
  6859                           
  6860                           
  6861                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6862  0FCC  3003               	movlw	3
  6863  0FCD  0020               	movlb	0	; select bank0
  6864  0FCE  0252               	subwf	82,w	;volatile
  6865  0FCF  1803               	skipnc
  6866  0FD0  2FED               	goto	i1l2899
  6867                           
  6868                           ;usb_device.c: 2087: {
  6869                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6870  0FD1  0852               	movf	82,w	;volatile
  6871  0FD2  00F0               	movwf	??_USBStdGetDscHandler
  6872  0FD3  01F1               	clrf	??_USBStdGetDscHandler+1
  6873  0FD4  35F0               	lslf	??_USBStdGetDscHandler,f
  6874  0FD5  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6875  0FD6  30BD               	movlw	low (_USB_SD_Ptr| (0+32768))
  6876  0FD7  0770               	addwf	??_USBStdGetDscHandler,w
  6877  0FD8  0084               	movwf	4
  6878  0FD9  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  6879  0FDA  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6880  0FDB  0085               	movwf	5
  6881  0FDC  3F00               	moviw [0]fsr0
  6882  0FDD  0023               	movlb	3	; select bank3
  6883  0FDE  00B3               	movwf	_inPipes^(0+384)	;volatile
  6884  0FDF  3F01               	moviw [1]fsr0
  6885  0FE0  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6886                           
  6887                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6888  0FE1  0833               	movf	_inPipes^(0+384),w	;volatile
  6889  0FE2  0084               	movwf	4
  6890  0FE3  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6891  0FE4  0085               	movwf	5
  6892  0FE5  0800               	movf	0,w	;code access
  6893  0FE6  00F0               	movwf	??_USBStdGetDscHandler
  6894  0FE7  01F1               	clrf	??_USBStdGetDscHandler+1
  6895  0FE8  0870               	movf	??_USBStdGetDscHandler,w
  6896  0FE9  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6897  0FEA  0871               	movf	??_USBStdGetDscHandler+1,w
  6898  0FEB  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6899                           
  6900                           ;usb_device.c: 2092: }
  6901  0FEC  0008               	return
  6902  0FED                     i1l2899:	
  6903                           
  6904                           ;usb_device.c: 2102: else
  6905                           ;usb_device.c: 2103: {
  6906                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6907  0FED  0023               	movlb	3	; select bank3
  6908  0FEE  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6909                           
  6910                           ;usb_device.c: 2105: }
  6911                           ;usb_device.c: 2106: break;
  6912  0FEF  0008               	return
  6913  0FF0                     i1l2901:	
  6914                           ;usb_device.c: 2107: default:
  6915                           
  6916                           
  6917                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6918  0FF0  0023               	movlb	3	; select bank3
  6919  0FF1  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6920                           
  6921                           ;usb_device.c: 2110: }
  6922                           
  6923                           ;usb_device.c: 2109: break;
  6924  0FF2  0008               	return
  6925  0FF3                     i1l2905:	
  6926  0FF3  0020               	movlb	0	; select bank0
  6927  0FF4  0853               	movf	83,w	;volatile
  6928                           
  6929                           ; Switch size 1, requested type "space"
  6930                           ; Number of cases is 3, Range of values is 1 to 3
  6931                           ; switch strategies available:
  6932                           ; Name         Instructions Cycles
  6933                           ; simple_byte           10     6 (average)
  6934                           ; direct_byte           15     9 (fixed)
  6935                           ; jumptable            263     9 (fixed)
  6936                           ;	Chosen strategy is simple_byte
  6937  0FF5  3A01               	xorlw	1	; case 1
  6938  0FF6  1903               	skipnz
  6939  0FF7  2F8C               	goto	i1l2879
  6940  0FF8  3A03               	xorlw	3	; case 2
  6941  0FF9  1903               	skipnz
  6942  0FFA  2F96               	goto	i1l2883
  6943  0FFB  3A01               	xorlw	1	; case 3
  6944  0FFC  1903               	skipnz
  6945  0FFD  2FCC               	goto	i1l2893
  6946  0FFE  2FF0               	goto	i1l2901
  6947  0FFF  0008               	return
  6948  1000                     __end_of_USBStdGetDscHandler:	
  6949                           
  6950                           	psect	text29
  6951  0042                     __ptext29:	
  6952 ;; *************** function _USBStdFeatureReqHandler *****************
  6953 ;; Defined at:
  6954 ;;		line 2754 in file "../lib/usb/src/usb_device.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  p               2   11[BANK0 ] PTR struct __BDT
  6959 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6960 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  6961 ;;		 -> UEP0(1), 
  6962 ;;  current_ep_d    1   10[BANK0 ] struct .
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;Total ram usage:        7 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    4
  6979 ;; This function calls:
  6980 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6981 ;; This function is called by:
  6982 ;;		_USBCheckStdRequest
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           
  6987                           ;psect for function _USBStdFeatureReqHandler
  6988  0042                     _USBStdFeatureReqHandler:	
  6989                           
  6990                           ;usb_device.c: 2756: BDT_ENTRY *p;
  6991                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  6992                           ;usb_device.c: 2761: unsigned char* pUEP;
  6993                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  6994                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  6995                           
  6996                           ;incstack = 0
  6997                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6998  0042  0020               	movlb	0	; select bank0
  6999  0043  0352               	decf	82,w	;volatile
  7000  0044  1D03               	btfss	3,2
  7001  0045  285A               	goto	i1l2947
  7002  0046  0850               	movf	80,w	;volatile
  7003  0047  391F               	andlw	31
  7004  0048  3A00               	xorlw	0
  7005  0049  1D03               	skipz
  7006  004A  285A               	goto	i1l2947
  7007                           
  7008                           ;usb_device.c: 2801: {
  7009                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7010  004B  0023               	movlb	3	; select bank3
  7011  004C  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7012                           
  7013                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7014  004D  3003               	movlw	3
  7015  004E  0020               	movlb	0	; select bank0
  7016  004F  0651               	xorwf	81,w	;volatile
  7017  0050  1D03               	btfss	3,2
  7018  0051  2858               	goto	i1l2945
  7019                           
  7020                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7021  0052  3001               	movlw	1
  7022  0053  00E6               	movwf	??_USBStdFeatureReqHandler
  7023  0054  0866               	movf	??_USBStdFeatureReqHandler,w
  7024  0055  0023               	movlb	3	; select bank3
  7025  0056  00DC               	movwf	_RemoteWakeup^(0+384)	;volatile
  7026  0057  285A               	goto	i1l2947
  7027  0058                     i1l2945:	
  7028                           
  7029                           ;usb_device.c: 2805: else
  7030                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7031  0058  0023               	movlb	3	; select bank3
  7032  0059  01DC               	clrf	_RemoteWakeup^(0+384)	;volatile
  7033  005A                     i1l2947:	
  7034                           
  7035                           ;usb_device.c: 2807: }
  7036                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7037                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7038                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7039                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7040  005A  0020               	movlb	0	; select bank0
  7041  005B  0852               	movf	82,w	;volatile
  7042  005C  1D03               	btfss	3,2
  7043  005D  0008               	return
  7044  005E  0850               	movf	80,w	;volatile
  7045  005F  391F               	andlw	31
  7046  0060  3A02               	xorlw	2
  7047  0061  1D03               	skipz
  7048  0062  0008               	return
  7049  0063  0854               	movf	84,w	;volatile
  7050  0064  390F               	andlw	15
  7051  0065  3A00               	xorlw	0
  7052  0066  1903               	skipnz
  7053  0067  0008               	return
  7054  0068  0854               	movf	84,w	;volatile
  7055  0069  390F               	andlw	15
  7056  006A  00E6               	movwf	??_USBStdFeatureReqHandler
  7057  006B  3003               	movlw	3
  7058  006C  0266               	subwf	??_USBStdFeatureReqHandler,w
  7059  006D  1803               	skipnc
  7060  006E  0008               	return
  7061  006F  3020               	movlw	32
  7062  0070  0022               	movlb	2	; select bank2
  7063  0071  066E               	xorwf	_USBDeviceState^(0+256),w	;volatile
  7064  0072  1D03               	btfss	3,2
  7065  0073  0008               	return
  7066                           
  7067                           ;usb_device.c: 2814: {
  7068                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7069  0074  0023               	movlb	3	; select bank3
  7070  0075  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7071                           
  7072                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7073  0076  0020               	movlb	0	; select bank0
  7074  0077  1BD4               	btfsc	84,7	;volatile
  7075  0078  2888               	goto	i1l2961
  7076                           
  7077                           ;usb_device.c: 2821: {
  7078                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7079  0079  0854               	movf	84,w	;volatile
  7080  007A  390F               	andlw	15
  7081  007B  0709               	addwf	9,w
  7082  007C  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7083  007D  0086               	movwf	6
  7084  007E  3001               	movlw	1	; select bank3/4
  7085  007F  0087               	movwf	7
  7086  0080  3F40               	moviw [0]fsr1
  7087  0081  00EB               	movwf	USBStdFeatureReqHandler@p
  7088  0082  3F41               	moviw [1]fsr1
  7089  0083  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7090                           
  7091                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7092  0084  0854               	movf	84,w	;volatile
  7093  0085  390F               	andlw	15
  7094  0086  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7095  0087  2896               	goto	L6
  7096  0088                     i1l2961:	
  7097                           ;usb_device.c: 2824: }
  7098                           
  7099                           
  7100                           ;usb_device.c: 2825: else
  7101                           ;usb_device.c: 2826: {
  7102                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7103  0088  0854               	movf	84,w	;volatile
  7104  0089  390F               	andlw	15
  7105  008A  0709               	addwf	9,w
  7106  008B  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7107  008C  0086               	movwf	6
  7108  008D  3001               	movlw	1	; select bank3/4
  7109  008E  0087               	movwf	7
  7110  008F  3F40               	moviw [0]fsr1
  7111  0090  00EB               	movwf	USBStdFeatureReqHandler@p
  7112  0091  3F41               	moviw [1]fsr1
  7113  0092  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7114                           
  7115                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7116  0093  0854               	movf	84,w	;volatile
  7117  0094  390F               	andlw	15
  7118  0095  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7119  0096                     L6:	
  7120  0096  0086               	movwf	6
  7121  0097  3001               	movlw	1	; select bank3/4
  7122  0098  0087               	movwf	7
  7123  0099  0801               	movf	1,w
  7124  009A  00E6               	movwf	??_USBStdFeatureReqHandler
  7125  009B  0866               	movf	??_USBStdFeatureReqHandler,w
  7126  009C  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data
  7127                           
  7128                           ;usb_device.c: 2829: }
  7129                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7130  009D  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7131  009E  28A9               	goto	i1l2967
  7132                           
  7133                           ;usb_device.c: 2836: {
  7134                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7135  009F  30FB               	movlw	251
  7136  00A0  00E6               	movwf	??_USBStdFeatureReqHandler
  7137  00A1  30FF               	movlw	255
  7138  00A2  00E7               	movwf	??_USBStdFeatureReqHandler+1
  7139  00A3  086B               	movf	USBStdFeatureReqHandler@p,w
  7140  00A4  0566               	andwf	??_USBStdFeatureReqHandler,w
  7141  00A5  00EB               	movwf	USBStdFeatureReqHandler@p
  7142  00A6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7143  00A7  0567               	andwf	??_USBStdFeatureReqHandler+1,w
  7144  00A8  28AE               	goto	L7
  7145  00A9                     i1l2967:	
  7146                           ;usb_device.c: 2838: }
  7147                           
  7148                           
  7149                           ;usb_device.c: 2839: else
  7150                           ;usb_device.c: 2840: {
  7151                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7152  00A9  3004               	movlw	4
  7153  00AA  046B               	iorwf	USBStdFeatureReqHandler@p,w
  7154  00AB  00EB               	movwf	USBStdFeatureReqHandler@p
  7155  00AC  3000               	movlw	0
  7156  00AD  046C               	iorwf	USBStdFeatureReqHandler@p+1,w
  7157  00AE                     L7:	
  7158  00AE  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7159                           
  7160                           ;usb_device.c: 2842: }
  7161                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7162  00AF  1BD4               	btfsc	84,7	;volatile
  7163  00B0  28BD               	goto	i1l2973
  7164                           
  7165                           ;usb_device.c: 2848: {
  7166                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7167  00B1  0854               	movf	84,w	;volatile
  7168  00B2  390F               	andlw	15
  7169  00B3  0709               	addwf	9,w
  7170  00B4  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7171  00B5  0086               	movwf	6
  7172  00B6  3001               	movlw	1	; select bank3/4
  7173  00B7  0087               	movwf	7
  7174  00B8  086B               	movf	USBStdFeatureReqHandler@p,w
  7175  00B9  3FC0               	movwi [0]fsr1
  7176  00BA  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7177  00BB  3FC1               	movwi [1]fsr1
  7178                           
  7179                           ;usb_device.c: 2850: }
  7180  00BC  28C8               	goto	i1l2975
  7181  00BD                     i1l2973:	
  7182                           
  7183                           ;usb_device.c: 2851: else
  7184                           ;usb_device.c: 2852: {
  7185                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7186  00BD  0854               	movf	84,w	;volatile
  7187  00BE  390F               	andlw	15
  7188  00BF  0709               	addwf	9,w
  7189  00C0  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7190  00C1  0086               	movwf	6
  7191  00C2  3001               	movlw	1	; select bank3/4
  7192  00C3  0087               	movwf	7
  7193  00C4  086B               	movf	USBStdFeatureReqHandler@p,w
  7194  00C5  3FC0               	movwi [0]fsr1
  7195  00C6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7196  00C7  3FC1               	movwi [1]fsr1
  7197  00C8                     i1l2975:	
  7198                           
  7199                           ;usb_device.c: 2854: }
  7200                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7201  00C8  3003               	movlw	3
  7202  00C9  0651               	xorwf	81,w	;volatile
  7203  00CA  1D03               	btfss	3,2
  7204  00CB  28EA               	goto	i1l2989
  7205                           
  7206                           ;usb_device.c: 2858: {
  7207                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7208  00CC  086B               	movf	USBStdFeatureReqHandler@p,w
  7209  00CD  0086               	movwf	6
  7210  00CE  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7211  00CF  0087               	movwf	7
  7212  00D0  1F81               	btfss	1,7
  7213  00D1  28DF               	goto	i1l2985
  7214                           
  7215                           ;usb_device.c: 2860: {
  7216                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7217  00D2  1BD4               	btfsc	84,7	;volatile
  7218  00D3  28D8               	goto	i1l2983
  7219                           
  7220                           ;usb_device.c: 2864: {
  7221                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7222  00D4  0854               	movf	84,w	;volatile
  7223  00D5  390F               	andlw	15
  7224  00D6  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7225  00D7  28DB               	goto	L8
  7226  00D8                     i1l2983:	
  7227                           ;usb_device.c: 2866: }
  7228                           
  7229                           
  7230                           ;usb_device.c: 2867: else
  7231                           ;usb_device.c: 2868: {
  7232                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7233  00D8  0854               	movf	84,w	;volatile
  7234  00D9  390F               	andlw	15
  7235  00DA  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7236  00DB                     L8:	
  7237  00DB  0086               	movwf	6
  7238  00DC  3001               	movlw	1	; select bank3/4
  7239  00DD  0087               	movwf	7
  7240  00DE  1481               	bsf	1,1
  7241  00DF                     i1l2985:	
  7242                           
  7243                           ;usb_device.c: 2870: }
  7244                           ;usb_device.c: 2871: }
  7245                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7246  00DF  086B               	movf	USBStdFeatureReqHandler@p,w
  7247  00E0  0086               	movwf	6
  7248  00E1  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7249  00E2  0087               	movwf	7
  7250  00E3  1501               	bsf	1,2
  7251                           
  7252                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7253  00E4  086B               	movf	USBStdFeatureReqHandler@p,w
  7254  00E5  0086               	movwf	6
  7255  00E6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7256  00E7  0087               	movwf	7
  7257  00E8  1781               	bsf	1,7
  7258                           
  7259                           ;usb_device.c: 2876: }
  7260  00E9  0008               	return
  7261  00EA                     i1l2989:	
  7262                           
  7263                           ;usb_device.c: 2877: else
  7264                           ;usb_device.c: 2878: {
  7265                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7266  00EA  3004               	movlw	4
  7267  00EB  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7268  00EC  00EB               	movwf	USBStdFeatureReqHandler@p
  7269  00ED  3000               	movlw	0
  7270  00EE  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7271  00EF  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7272                           
  7273                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7274  00F0  086B               	movf	USBStdFeatureReqHandler@p,w
  7275  00F1  0086               	movwf	6
  7276  00F2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7277  00F3  0087               	movwf	7
  7278  00F4  1F81               	btfss	1,7
  7279  00F5  2913               	goto	i1l2999
  7280                           
  7281                           ;usb_device.c: 2885: {
  7282                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7283  00F6  307F               	movlw	127
  7284  00F7  00E6               	movwf	??_USBStdFeatureReqHandler
  7285  00F8  086B               	movf	USBStdFeatureReqHandler@p,w
  7286  00F9  0086               	movwf	6
  7287  00FA  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7288  00FB  0087               	movwf	7
  7289  00FC  0866               	movf	??_USBStdFeatureReqHandler,w
  7290  00FD  0581               	andwf	1,f
  7291                           
  7292                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7293  00FE  086B               	movf	USBStdFeatureReqHandler@p,w
  7294  00FF  0086               	movwf	6
  7295  0100  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7296  0101  0087               	movwf	7
  7297  0102  1701               	bsf	1,6
  7298                           
  7299                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7300  0103  3000               	movlw	0
  7301  0104  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7302  0105  3005               	movlw	5
  7303  0106  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7304  0107  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7305  0108  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7306  0109  086B               	movf	USBStdFeatureReqHandler@p,w
  7307  010A  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7308  010B  3002               	movlw	2
  7309  010C  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7310  010D  3000               	movlw	0
  7311  010E  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7312  010F  318A  22C1  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7313                           
  7314                           ;usb_device.c: 2891: }
  7315  0112  2919               	goto	i1l3001
  7316  0113                     i1l2999:	
  7317                           
  7318                           ;usb_device.c: 2892: else
  7319                           ;usb_device.c: 2893: {
  7320                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7321  0113  0020               	movlb	0	; select bank0
  7322  0114  086B               	movf	USBStdFeatureReqHandler@p,w
  7323  0115  0086               	movwf	6
  7324  0116  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7325  0117  0087               	movwf	7
  7326  0118  1701               	bsf	1,6
  7327  0119                     i1l3001:	
  7328                           
  7329                           ;usb_device.c: 2896: }
  7330                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7331  0119  3004               	movlw	4
  7332  011A  0020               	movlb	0	; select bank0
  7333  011B  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7334  011C  00EB               	movwf	USBStdFeatureReqHandler@p
  7335  011D  3000               	movlw	0
  7336  011E  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7337  011F  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7338                           
  7339                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7340  0120  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7341  0121  2928               	goto	i1l419
  7342  0122  086B               	movf	USBStdFeatureReqHandler@p,w
  7343  0123  0086               	movwf	6
  7344  0124  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7345  0125  0087               	movwf	7
  7346  0126  1F81               	btfss	1,7
  7347  0127  294D               	goto	i1l3013
  7348  0128                     i1l419:	
  7349                           
  7350                           ;usb_device.c: 2907: {
  7351                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7352  0128  1BD4               	btfsc	84,7	;volatile
  7353  0129  292E               	goto	i1l3009
  7354                           
  7355                           ;usb_device.c: 2909: {
  7356                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7357  012A  0854               	movf	84,w	;volatile
  7358  012B  390F               	andlw	15
  7359  012C  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7360  012D  2931               	goto	L9
  7361  012E                     i1l3009:	
  7362                           ;usb_device.c: 2911: }
  7363                           
  7364                           
  7365                           ;usb_device.c: 2912: else
  7366                           ;usb_device.c: 2913: {
  7367                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7368  012E  0854               	movf	84,w	;volatile
  7369  012F  390F               	andlw	15
  7370  0130  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7371  0131                     L9:	
  7372  0131  0086               	movwf	6
  7373  0132  3001               	movlw	1	; select bank3/4
  7374  0133  0087               	movwf	7
  7375  0134  1081               	bcf	1,1
  7376                           
  7377                           ;usb_device.c: 2915: }
  7378                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7379  0135  303B               	movlw	59
  7380  0136  00E6               	movwf	??_USBStdFeatureReqHandler
  7381  0137  086B               	movf	USBStdFeatureReqHandler@p,w
  7382  0138  0086               	movwf	6
  7383  0139  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7384  013A  0087               	movwf	7
  7385  013B  0866               	movf	??_USBStdFeatureReqHandler,w
  7386  013C  0581               	andwf	1,f
  7387                           
  7388                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7389  013D  3000               	movlw	0
  7390  013E  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7391  013F  3005               	movlw	5
  7392  0140  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7393  0141  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7394  0142  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7395  0143  086B               	movf	USBStdFeatureReqHandler@p,w
  7396  0144  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7397  0145  3002               	movlw	2
  7398  0146  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7399  0147  3000               	movlw	0
  7400  0148  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7401  0149  318A  22C1  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7402                           
  7403                           ;usb_device.c: 2921: }
  7404  014C  2956               	goto	i1l3015
  7405  014D                     i1l3013:	
  7406                           
  7407                           ;usb_device.c: 2922: else
  7408                           ;usb_device.c: 2923: {
  7409                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7410  014D  303B               	movlw	59
  7411  014E  0020               	movlb	0	; select bank0
  7412  014F  00E6               	movwf	??_USBStdFeatureReqHandler
  7413  0150  086B               	movf	USBStdFeatureReqHandler@p,w
  7414  0151  0086               	movwf	6
  7415  0152  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7416  0153  0087               	movwf	7
  7417  0154  0866               	movf	??_USBStdFeatureReqHandler,w
  7418  0155  0581               	andwf	1,f
  7419  0156                     i1l3015:	
  7420                           
  7421                           ;usb_device.c: 2926: }
  7422                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7423  0156  0020               	movlb	0	; select bank0
  7424  0157  0854               	movf	84,w	;volatile
  7425  0158  390F               	andlw	15
  7426  0159  3E98               	addlw	152
  7427  015A  00E6               	movwf	??_USBStdFeatureReqHandler
  7428  015B  01E7               	clrf	??_USBStdFeatureReqHandler+1
  7429  015C  300E               	movlw	14
  7430  015D  3DE7               	addwfc	??_USBStdFeatureReqHandler+1,f
  7431  015E  0866               	movf	??_USBStdFeatureReqHandler,w
  7432  015F  00E8               	movwf	USBStdFeatureReqHandler@pUEP
  7433  0160  0867               	movf	??_USBStdFeatureReqHandler+1,w
  7434  0161  00E9               	movwf	USBStdFeatureReqHandler@pUEP+1
  7435                           
  7436                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7437  0162  30FE               	movlw	254
  7438  0163  00E6               	movwf	??_USBStdFeatureReqHandler
  7439  0164  0868               	movf	USBStdFeatureReqHandler@pUEP,w
  7440  0165  0086               	movwf	6
  7441  0166  0869               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7442  0167  0087               	movwf	7
  7443  0168  0866               	movf	??_USBStdFeatureReqHandler,w
  7444  0169  0581               	andwf	1,f
  7445  016A  0008               	return
  7446  016B                     __end_of_USBStdFeatureReqHandler:	
  7447                           
  7448                           	psect	text30
  7449  0AC1                     __ptext30:	
  7450 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7451 ;; Defined at:
  7452 ;;		line 51 in file "../src/usb_events.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  event           2    0[BANK0 ] enum E2656
  7455 ;;  pdata           2    2[BANK0 ] PTR void 
  7456 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7457 ;;		 -> BDT(48), 
  7458 ;;  size            2    4[BANK0 ] unsigned int 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      unsigned char 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;Total ram usage:        6 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; Hardware stack levels required when called:    3
  7477 ;; This function calls:
  7478 ;;		_USBCheckCDCRequest
  7479 ;;		i1_CDCInitEP
  7480 ;;		i1_SYSTEM_Initialize
  7481 ;; This function is called by:
  7482 ;;		_USBDeviceTasks
  7483 ;;		_USBStdSetCfgHandler
  7484 ;;		_USBSuspend
  7485 ;;		_USBWakeFromSuspend
  7486 ;;		_USBCtrlTrfSetupHandler
  7487 ;;		_USBCheckStdRequest
  7488 ;;		_USBStdFeatureReqHandler
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7494  0AC1                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7495                           
  7496                           ;usb_events.c: 53: switch( (int) event )
  7497                           
  7498                           ;incstack = 0
  7499                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7500  0AC1  2AD0               	goto	i1l2705
  7501  0AC2                     i1l2695:	
  7502                           ;usb_events.c: 64: case EVENT_SUSPEND:
  7503                           
  7504                           ;usb_events.c: 62: break;
  7505                           
  7506                           ;usb_events.c: 58: case EVENT_SOF:
  7507                           
  7508                           ;usb_events.c: 56: break;
  7509                           
  7510                           ;usb_events.c: 54: {
  7511                           ;usb_events.c: 55: case EVENT_TRANSFER:
  7512                           
  7513                           
  7514                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7515  0AC2  3001               	movlw	1
  7516  0AC3  3189  2119         	fcall	i1_SYSTEM_Initialize
  7517                           
  7518                           ;usb_events.c: 75: break;
  7519  0AC5  0008               	return
  7520  0AC6                     i1l2697:	
  7521                           ;usb_events.c: 77: case EVENT_RESUME:
  7522                           
  7523                           
  7524                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7525  0AC6  3002               	movlw	2
  7526  0AC7  3189  2119         	fcall	i1_SYSTEM_Initialize
  7527                           
  7528                           ;usb_events.c: 86: break;
  7529  0AC9  0008               	return
  7530  0ACA                     i1l2699:	
  7531                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  7532                           
  7533                           
  7534                           ;usb_events.c: 91: CDCInitEP();
  7535  0ACA  318A  2254         	fcall	i1_CDCInitEP
  7536                           
  7537                           ;usb_events.c: 96: break;
  7538                           
  7539                           ;usb_events.c: 95: case EVENT_SET_DESCRIPTOR:
  7540                           
  7541                           ;usb_events.c: 93: break;
  7542  0ACC  0008               	return
  7543  0ACD                     i1l2701:	
  7544                           ;usb_events.c: 98: case EVENT_EP0_REQUEST:
  7545                           
  7546                           
  7547                           ;usb_events.c: 101: USBCheckCDCRequest();
  7548  0ACD  318D  2574         	fcall	_USBCheckCDCRequest
  7549                           
  7550                           ;usb_events.c: 112: }
  7551                           
  7552                           ;usb_events.c: 111: break;
  7553                           
  7554                           ;usb_events.c: 110: default:
  7555                           
  7556                           ;usb_events.c: 108: break;
  7557                           
  7558                           ;usb_events.c: 107: case EVENT_TRANSFER_TERMINATED:
  7559                           
  7560                           ;usb_events.c: 105: break;
  7561                           
  7562                           ;usb_events.c: 104: case EVENT_BUS_ERROR:
  7563                           
  7564                           ;usb_events.c: 102: break;
  7565  0ACF  0008               	return
  7566  0AD0                     i1l2705:	
  7567                           
  7568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7569                           ; Switch size 1, requested type "space"
  7570                           ; Number of cases is 2, Range of values is 0 to 127
  7571                           ; switch strategies available:
  7572                           ; Name         Instructions Cycles
  7573                           ; simple_byte            7     4 (average)
  7574                           ; direct_byte          262     6 (fixed)
  7575                           ; jumptable            260     6 (fixed)
  7576                           ;	Chosen strategy is simple_byte
  7577  0AD0  0020               	movlb	0	; select bank0
  7578  0AD1  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7579  0AD2  3A00               	xorlw	0	; case 0
  7580  0AD3  1903               	skipnz
  7581  0AD4  2AD9               	goto	i1l4507
  7582  0AD5  3A7F               	xorlw	127	; case 127
  7583  0AD6  1903               	skipnz
  7584  0AD7  2AF3               	goto	i1l4509
  7585  0AD8  2AF8               	goto	i1l35
  7586  0AD9                     i1l4507:	
  7587                           
  7588                           ; Switch size 1, requested type "space"
  7589                           ; Number of cases is 8, Range of values is 1 to 117
  7590                           ; switch strategies available:
  7591                           ; Name         Instructions Cycles
  7592                           ; simple_byte           25    13 (average)
  7593                           ; direct_byte          243     9 (fixed)
  7594                           ; jumptable            263     9 (fixed)
  7595                           ;	Chosen strategy is simple_byte
  7596  0AD9  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7597  0ADA  3A01               	xorlw	1	; case 1
  7598  0ADB  1903               	skipnz
  7599  0ADC  2ACA               	goto	i1l2699
  7600  0ADD  3A03               	xorlw	3	; case 2
  7601  0ADE  1903               	skipnz
  7602  0ADF  2AF8               	goto	i1l35
  7603  0AE0  3A01               	xorlw	1	; case 3
  7604  0AE1  1903               	skipnz
  7605  0AE2  2ACD               	goto	i1l2701
  7606  0AE3  3A06               	xorlw	6	; case 5
  7607  0AE4  1903               	skipnz
  7608  0AE5  2AF8               	goto	i1l35
  7609  0AE6  3A77               	xorlw	119	; case 114
  7610  0AE7  1903               	skipnz
  7611  0AE8  2AF8               	goto	i1l35
  7612  0AE9  3A01               	xorlw	1	; case 115
  7613  0AEA  1903               	skipnz
  7614  0AEB  2AF8               	goto	i1l35
  7615  0AEC  3A07               	xorlw	7	; case 116
  7616  0AED  1903               	skipnz
  7617  0AEE  2AC6               	goto	i1l2697
  7618  0AEF  3A01               	xorlw	1	; case 117
  7619  0AF0  1903               	skipnz
  7620  0AF1  2AC2               	goto	i1l2695
  7621  0AF2  2AF8               	goto	i1l35
  7622  0AF3                     i1l4509:	
  7623                           
  7624                           ; Switch size 1, requested type "space"
  7625                           ; Number of cases is 1, Range of values is 255 to 255
  7626                           ; switch strategies available:
  7627                           ; Name         Instructions Cycles
  7628                           ; simple_byte            4     3 (average)
  7629                           ; direct_byte            7     5 (fixed)
  7630                           ; jumptable            263     9 (fixed)
  7631                           ;	Chosen strategy is simple_byte
  7632  0AF3  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7633  0AF4  3AFF               	xorlw	255	; case 255
  7634  0AF5  1903               	skipnz
  7635  0AF6  2AF8               	goto	i1l35
  7636  0AF7  2AF8               	goto	i1l35
  7637  0AF8                     i1l35:	
  7638                           ;usb_events.c: 113: return 1;
  7639                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7640                           
  7641  0AF8  0008               	return
  7642  0AF9                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7643                           
  7644                           	psect	text31
  7645  0919                     __ptext31:	
  7646 ;; *************** function i1_SYSTEM_Initialize *****************
  7647 ;; Defined at:
  7648 ;;		line 82 in file "system.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  state           1    wreg     enum E2617
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  state           1    0[COMMON] enum E2617
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;Total ram usage:        1 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           
  7676                           ;psect for function i1_SYSTEM_Initialize
  7677  0919                     i1_SYSTEM_Initialize:	
  7678                           
  7679                           ;incstack = 0
  7680                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  7681                           ;i1SYSTEM_Initialize@state stored from wreg
  7682  0919  00F0               	movwf	i1SYSTEM_Initialize@state
  7683                           
  7684                           ;system.c: 84: switch(state)
  7685  091A  2922               	goto	i1l2691
  7686  091B                     i1l2687:	
  7687                           ;system.c: 85: {
  7688                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  7689                           
  7690                           
  7691                           ;system.c: 90: OSCCON = 0xFC;
  7692  091B  30FC               	movlw	252
  7693  091C  0021               	movlb	1	; select bank1
  7694  091D  0099               	movwf	25	;volatile
  7695                           
  7696                           ;system.c: 91: ACTCON = 0x90;
  7697  091E  3090               	movlw	144
  7698  091F  0027               	movlb	7	; select bank7
  7699  0920  009B               	movwf	27	;volatile
  7700                           
  7701                           ;system.c: 102: }
  7702                           
  7703                           ;system.c: 101: break;
  7704                           
  7705                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  7706                           
  7707                           ;system.c: 98: break;
  7708                           
  7709                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  7710                           
  7711                           ;system.c: 95: break;
  7712  0921  0008               	return
  7713  0922                     i1l2691:	
  7714  0922  0870               	movf	i1SYSTEM_Initialize@state,w
  7715                           
  7716                           ; Switch size 1, requested type "space"
  7717                           ; Number of cases is 3, Range of values is 0 to 2
  7718                           ; switch strategies available:
  7719                           ; Name         Instructions Cycles
  7720                           ; simple_byte           10     6 (average)
  7721                           ; direct_byte           12     6 (fixed)
  7722                           ; jumptable            260     6 (fixed)
  7723                           ;	Chosen strategy is simple_byte
  7724  0923  3A00               	xorlw	0	; case 0
  7725  0924  1903               	skipnz
  7726  0925  291B               	goto	i1l2687
  7727  0926  3A01               	xorlw	1	; case 1
  7728  0927  1903               	skipnz
  7729  0928  292D               	goto	i1l565
  7730  0929  3A03               	xorlw	3	; case 2
  7731  092A  1903               	skipnz
  7732  092B  292D               	goto	i1l565
  7733  092C  292D               	goto	i1l565
  7734  092D                     i1l565:	
  7735  092D  0008               	return
  7736  092E                     __end_ofi1_SYSTEM_Initialize:	
  7737                           
  7738                           	psect	text32
  7739  0A54                     __ptext32:	
  7740 ;; *************** function i1_CDCInitEP *****************
  7741 ;; Defined at:
  7742 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;Total ram usage:        1 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    2
  7763 ;; This function calls:
  7764 ;;		i1_USBEnableEndpoint
  7765 ;;		i1_USBTransferOnePacket
  7766 ;; This function is called by:
  7767 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function i1_CDCInitEP
  7773  0A54                     i1_CDCInitEP:	
  7774                           
  7775                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  7776                           
  7777                           ;incstack = 0
  7778                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7779  0A54  3000               	movlw	0
  7780  0A55  0023               	movlb	3	; select bank3
  7781  0A56  00E1               	movwf	(_line_coding+3)^(0+384)
  7782  0A57  3000               	movlw	0
  7783  0A58  00E0               	movwf	(_line_coding+2)^(0+384)
  7784  0A59  304B               	movlw	75
  7785  0A5A  00DF               	movwf	(_line_coding+1)^(0+384)
  7786  0A5B  3000               	movlw	0
  7787  0A5C  00DE               	movwf	_line_coding^(0+384)
  7788                           
  7789                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  7790  0A5D  01E2               	clrf	(_line_coding^(0+384)+4)
  7791                           
  7792                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  7793  0A5E  01E3               	clrf	(_line_coding^(0+384)+5)
  7794                           
  7795                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  7796  0A5F  3008               	movlw	8
  7797  0A60  00FD               	movwf	??i1_CDCInitEP
  7798  0A61  087D               	movf	??i1_CDCInitEP,w
  7799  0A62  00E4               	movwf	(_line_coding^(0+384)+6)
  7800                           
  7801                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  7802  0A63  01D1               	clrf	_cdc_rx_len^(0+384)
  7803                           
  7804                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  7805  0A64  301A               	movlw	26
  7806  0A65  00FD               	movwf	??i1_CDCInitEP
  7807  0A66  087D               	movf	??i1_CDCInitEP,w
  7808  0A67  00F7               	movwf	i1USBEnableEndpoint@options
  7809  0A68  3001               	movlw	1
  7810  0A69  3189  21CA  318A   	fcall	i1_USBEnableEndpoint
  7811                           
  7812                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7813  0A6C  301E               	movlw	30
  7814  0A6D  00FD               	movwf	??i1_CDCInitEP
  7815  0A6E  087D               	movf	??i1_CDCInitEP,w
  7816  0A6F  00F7               	movwf	i1USBEnableEndpoint@options
  7817  0A70  3002               	movlw	2
  7818  0A71  3189  21CA  318A   	fcall	i1_USBEnableEndpoint
  7819                           
  7820                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7821  0A74  01F0               	clrf	i1USBTransferOnePacket@dir
  7822  0A75  3020               	movlw	32
  7823  0A76  00F1               	movwf	i1USBTransferOnePacket@data
  7824  0A77  3001               	movlw	1
  7825  0A78  00F2               	movwf	i1USBTransferOnePacket@data+1
  7826  0A79  3040               	movlw	64
  7827  0A7A  00FD               	movwf	??i1_CDCInitEP
  7828  0A7B  087D               	movf	??i1_CDCInitEP,w
  7829  0A7C  00F3               	movwf	i1USBTransferOnePacket@len
  7830  0A7D  3002               	movlw	2
  7831  0A7E  3187  2771         	fcall	i1_USBTransferOnePacket
  7832  0A80  0871               	movf	?i1_USBTransferOnePacket+1,w
  7833  0A81  0023               	movlb	3	; select bank3
  7834  0A82  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  7835  0A83  0870               	movf	?i1_USBTransferOnePacket,w
  7836  0A84  00C8               	movwf	_CDCDataOutHandle^(0+384)
  7837                           
  7838                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  7839  0A85  01C6               	clrf	_CDCDataInHandle^(0+384)
  7840  0A86  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  7841                           
  7842                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  7843  0A87  0021               	movlb	1	; select bank1
  7844  0A88  01E2               	clrf	_cdc_trf_state^(0+128)
  7845  0A89  0008               	return
  7846  0A8A                     __end_ofi1_CDCInitEP:	
  7847                           
  7848                           	psect	text33
  7849  0771                     __ptext33:	
  7850 ;; *************** function i1_USBTransferOnePacket *****************
  7851 ;; Defined at:
  7852 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  ep              1    wreg     unsigned char 
  7855 ;;  dir             1    0[COMMON] unsigned char 
  7856 ;;  data            2    1[COMMON] PTR unsigned char 
  7857 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7858 ;;  len             1    3[COMMON] unsigned char 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  ep              1    8[COMMON] unsigned char 
  7861 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  7862 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  2    0[COMMON] PTR void 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;Total ram usage:       11 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		i1_CDCInitEP
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           
  7886                           ;psect for function i1_USBTransferOnePacket
  7887  0771                     i1_USBTransferOnePacket:	
  7888                           
  7889                           ;incstack = 0
  7890                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  7891                           ;i1USBTransferOnePacket@ep stored from wreg
  7892  0771  00F8               	movwf	i1USBTransferOnePacket@ep
  7893                           
  7894                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7895                           ;usb_device.c: 1000: if(dir != 0)
  7896  0772  0870               	movf	i1USBTransferOnePacket@dir,w
  7897  0773  1903               	btfsc	3,2
  7898  0774  2F7E               	goto	i1l2597
  7899                           
  7900                           ;usb_device.c: 1001: {
  7901                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7902  0775  3578               	lslf	i1USBTransferOnePacket@ep,w
  7903  0776  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7904  0777  0086               	movwf	6
  7905  0778  3001               	movlw	1	; select bank3/4
  7906  0779  0087               	movwf	7
  7907  077A  3F40               	moviw [0]fsr1
  7908  077B  00F9               	movwf	i1USBTransferOnePacket@handle
  7909  077C  3F41               	moviw [1]fsr1
  7910  077D  2F86               	goto	L10
  7911  077E                     i1l2597:	
  7912                           ;usb_device.c: 1004: }
  7913                           
  7914                           
  7915                           ;usb_device.c: 1005: else
  7916                           ;usb_device.c: 1006: {
  7917                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7918  077E  3578               	lslf	i1USBTransferOnePacket@ep,w
  7919  077F  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7920  0780  0086               	movwf	6
  7921  0781  3001               	movlw	1	; select bank3/4
  7922  0782  0087               	movwf	7
  7923  0783  3F40               	moviw [0]fsr1
  7924  0784  00F9               	movwf	i1USBTransferOnePacket@handle
  7925  0785  3F41               	moviw [1]fsr1
  7926  0786                     L10:	
  7927  0786  00FA               	movwf	i1USBTransferOnePacket@handle+1
  7928                           
  7929                           ;usb_device.c: 1009: }
  7930                           ;usb_device.c: 1013: if(handle == 0)
  7931  0787  0879               	movf	i1USBTransferOnePacket@handle,w
  7932  0788  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  7933  0789  1D03               	btfss	3,2
  7934  078A  2F8E               	goto	i1l2605
  7935                           
  7936                           ;usb_device.c: 1014: {
  7937                           ;usb_device.c: 1015: return 0;
  7938  078B  01F0               	clrf	?i1_USBTransferOnePacket
  7939  078C  01F1               	clrf	?i1_USBTransferOnePacket+1
  7940  078D  0008               	return
  7941  078E                     i1l2605:	
  7942                           
  7943                           ;usb_device.c: 1016: }
  7944                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  7945  078E  30FF               	movlw	255
  7946  078F  0571               	andwf	i1USBTransferOnePacket@data,w
  7947  0790  00F4               	movwf	??i1_USBTransferOnePacket
  7948  0791  307F               	movlw	127
  7949  0792  0572               	andwf	i1USBTransferOnePacket@data+1,w
  7950  0793  00F5               	movwf	??i1_USBTransferOnePacket+1
  7951  0794  0879               	movf	i1USBTransferOnePacket@handle,w
  7952  0795  0086               	movwf	6
  7953  0796  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7954  0797  0087               	movwf	7
  7955  0798  3142               	addfsr 1,2
  7956  0799  0874               	movf	??i1_USBTransferOnePacket,w
  7957  079A  3FC0               	movwi [0]fsr1
  7958  079B  0875               	movf	??i1_USBTransferOnePacket+1,w
  7959  079C  3FC1               	movwi [1]fsr1
  7960                           
  7961                           ;usb_device.c: 1030: handle->CNT = len;
  7962  079D  0879               	movf	i1USBTransferOnePacket@handle,w
  7963  079E  3E01               	addlw	1
  7964  079F  00F4               	movwf	??i1_USBTransferOnePacket
  7965  07A0  3000               	movlw	0
  7966  07A1  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  7967  07A2  00F5               	movwf	??i1_USBTransferOnePacket+1
  7968  07A3  0874               	movf	??i1_USBTransferOnePacket,w
  7969  07A4  0086               	movwf	6
  7970  07A5  0875               	movf	??i1_USBTransferOnePacket+1,w
  7971  07A6  0087               	movwf	7
  7972  07A7  0873               	movf	i1USBTransferOnePacket@len,w
  7973  07A8  0081               	movwf	1
  7974                           
  7975                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  7976  07A9  3040               	movlw	64
  7977  07AA  00F4               	movwf	??i1_USBTransferOnePacket
  7978  07AB  0879               	movf	i1USBTransferOnePacket@handle,w
  7979  07AC  0086               	movwf	6
  7980  07AD  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7981  07AE  0087               	movwf	7
  7982  07AF  0874               	movf	??i1_USBTransferOnePacket,w
  7983  07B0  0581               	andwf	1,f
  7984                           
  7985                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  7986  07B1  0879               	movf	i1USBTransferOnePacket@handle,w
  7987  07B2  0086               	movwf	6
  7988  07B3  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7989  07B4  0087               	movwf	7
  7990  07B5  1581               	bsf	1,3
  7991                           
  7992                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  7993  07B6  0879               	movf	i1USBTransferOnePacket@handle,w
  7994  07B7  0086               	movwf	6
  7995  07B8  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7996  07B9  0087               	movwf	7
  7997  07BA  1781               	bsf	1,7
  7998                           
  7999                           ;usb_device.c: 1036: if(dir != 0)
  8000  07BB  0870               	movf	i1USBTransferOnePacket@dir,w
  8001  07BC  1903               	btfsc	3,2
  8002  07BD  2FD7               	goto	i1l2615
  8003                           
  8004                           ;usb_device.c: 1037: {
  8005                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8006  07BE  3578               	lslf	i1USBTransferOnePacket@ep,w
  8007  07BF  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8008  07C0  0086               	movwf	6
  8009  07C1  3001               	movlw	1	; select bank3/4
  8010  07C2  0087               	movwf	7
  8011  07C3  3F40               	moviw [0]fsr1
  8012  07C4  00F4               	movwf	??i1_USBTransferOnePacket
  8013  07C5  3F41               	moviw [1]fsr1
  8014  07C6  00F5               	movwf	??i1_USBTransferOnePacket+1
  8015  07C7  3004               	movlw	4
  8016  07C8  0674               	xorwf	??i1_USBTransferOnePacket,w
  8017  07C9  00F6               	movwf	??i1_USBTransferOnePacket+2
  8018  07CA  3000               	movlw	0
  8019  07CB  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8020  07CC  00F7               	movwf	??i1_USBTransferOnePacket+3
  8021  07CD  3578               	lslf	i1USBTransferOnePacket@ep,w
  8022  07CE  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8023  07CF  0086               	movwf	6
  8024  07D0  3001               	movlw	1	; select bank3/4
  8025  07D1  0087               	movwf	7
  8026  07D2  0876               	movf	??i1_USBTransferOnePacket+2,w
  8027  07D3  3FC0               	movwi [0]fsr1
  8028  07D4  0877               	movf	??i1_USBTransferOnePacket+3,w
  8029  07D5  3FC1               	movwi [1]fsr1
  8030                           
  8031                           ;usb_device.c: 1040: }
  8032  07D6  2FEF               	goto	i1l2617
  8033  07D7                     i1l2615:	
  8034                           
  8035                           ;usb_device.c: 1041: else
  8036                           ;usb_device.c: 1042: {
  8037                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8038  07D7  3578               	lslf	i1USBTransferOnePacket@ep,w
  8039  07D8  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8040  07D9  0086               	movwf	6
  8041  07DA  3001               	movlw	1	; select bank3/4
  8042  07DB  0087               	movwf	7
  8043  07DC  3F40               	moviw [0]fsr1
  8044  07DD  00F4               	movwf	??i1_USBTransferOnePacket
  8045  07DE  3F41               	moviw [1]fsr1
  8046  07DF  00F5               	movwf	??i1_USBTransferOnePacket+1
  8047  07E0  3004               	movlw	4
  8048  07E1  0674               	xorwf	??i1_USBTransferOnePacket,w
  8049  07E2  00F6               	movwf	??i1_USBTransferOnePacket+2
  8050  07E3  3000               	movlw	0
  8051  07E4  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8052  07E5  00F7               	movwf	??i1_USBTransferOnePacket+3
  8053  07E6  3578               	lslf	i1USBTransferOnePacket@ep,w
  8054  07E7  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8055  07E8  0086               	movwf	6
  8056  07E9  3001               	movlw	1	; select bank3/4
  8057  07EA  0087               	movwf	7
  8058  07EB  0876               	movf	??i1_USBTransferOnePacket+2,w
  8059  07EC  3FC0               	movwi [0]fsr1
  8060  07ED  0877               	movf	??i1_USBTransferOnePacket+3,w
  8061  07EE  3FC1               	movwi [1]fsr1
  8062  07EF                     i1l2617:	
  8063                           
  8064                           ;usb_device.c: 1045: }
  8065                           ;usb_device.c: 1046: return (void*)handle;
  8066  07EF  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8067  07F0  00F1               	movwf	?i1_USBTransferOnePacket+1
  8068  07F1  0879               	movf	i1USBTransferOnePacket@handle,w
  8069  07F2  00F0               	movwf	?i1_USBTransferOnePacket
  8070  07F3  0008               	return
  8071  07F4                     __end_ofi1_USBTransferOnePacket:	
  8072                           
  8073                           	psect	text34
  8074  09CA                     __ptext34:	
  8075 ;; *************** function i1_USBEnableEndpoint *****************
  8076 ;; Defined at:
  8077 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  ep              1    wreg     unsigned char 
  8080 ;;  options         1    7[COMMON] unsigned char 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  ep              1   12[COMMON] unsigned char 
  8083 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
  8084 ;;		 -> UEP0(1), 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;Total ram usage:        6 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    1
  8101 ;; This function calls:
  8102 ;;		i1_USBConfigureEndpoint
  8103 ;; This function is called by:
  8104 ;;		i1_CDCInitEP
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           
  8109                           ;psect for function i1_USBEnableEndpoint
  8110  09CA                     i1_USBEnableEndpoint:	
  8111                           
  8112                           ;incstack = 0
  8113                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8114                           ;i1USBEnableEndpoint@ep stored from wreg
  8115  09CA  00FC               	movwf	i1USBEnableEndpoint@ep
  8116                           
  8117                           ;usb_device.c: 880: unsigned char* p;
  8118                           ;usb_device.c: 884: if(options & 0x04)
  8119  09CB  1D77               	btfss	i1USBEnableEndpoint@options,2
  8120  09CC  29D2               	goto	i1l2585
  8121                           
  8122                           ;usb_device.c: 885: {
  8123                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8124  09CD  01F0               	clrf	i1USBConfigureEndpoint@direction
  8125  09CE  087C               	movf	i1USBEnableEndpoint@ep,w
  8126  09CF  318B  2338  3189   	fcall	i1_USBConfigureEndpoint
  8127  09D2                     i1l2585:	
  8128                           
  8129                           ;usb_device.c: 887: }
  8130                           ;usb_device.c: 888: if(options & 0x02)
  8131  09D2  1CF7               	btfss	i1USBEnableEndpoint@options,1
  8132  09D3  29D9               	goto	i1l2589
  8133                           
  8134                           ;usb_device.c: 889: {
  8135                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8136  09D4  01F0               	clrf	i1USBConfigureEndpoint@direction
  8137  09D5  0AF0               	incf	i1USBConfigureEndpoint@direction,f
  8138  09D6  087C               	movf	i1USBEnableEndpoint@ep,w
  8139  09D7  318B  2338         	fcall	i1_USBConfigureEndpoint
  8140  09D9                     i1l2589:	
  8141                           
  8142                           ;usb_device.c: 891: }
  8143                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8144  09D9  087C               	movf	i1USBEnableEndpoint@ep,w
  8145  09DA  3E98               	addlw	152
  8146  09DB  00F8               	movwf	??i1_USBEnableEndpoint
  8147  09DC  01F9               	clrf	??i1_USBEnableEndpoint+1
  8148  09DD  300E               	movlw	14
  8149  09DE  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
  8150  09DF  0878               	movf	??i1_USBEnableEndpoint,w
  8151  09E0  00FA               	movwf	i1USBEnableEndpoint@p
  8152  09E1  0879               	movf	??i1_USBEnableEndpoint+1,w
  8153  09E2  00FB               	movwf	i1USBEnableEndpoint@p+1
  8154                           
  8155                           ;usb_device.c: 901: *p = options;
  8156  09E3  087A               	movf	i1USBEnableEndpoint@p,w
  8157  09E4  0086               	movwf	6
  8158  09E5  087B               	movf	i1USBEnableEndpoint@p+1,w
  8159  09E6  0087               	movwf	7
  8160  09E7  0877               	movf	i1USBEnableEndpoint@options,w
  8161  09E8  0081               	movwf	1
  8162  09E9  0008               	return
  8163  09EA                     __end_ofi1_USBEnableEndpoint:	
  8164                           
  8165                           	psect	text35
  8166  0B38                     __ptext35:	
  8167 ;; *************** function i1_USBConfigureEndpoint *****************
  8168 ;; Defined at:
  8169 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  EPNum           1    wreg     unsigned char 
  8172 ;;  direction       1    0[COMMON] unsigned char 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  EPNum           1    5[COMMON] unsigned char 
  8175 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
  8176 ;;		 -> BDT(48), 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1    wreg      void 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8186 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;Total ram usage:        7 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		i1_USBEnableEndpoint
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199                           
  8200                           ;psect for function i1_USBConfigureEndpoint
  8201  0B38                     i1_USBConfigureEndpoint:	
  8202                           
  8203                           ;incstack = 0
  8204                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8205                           ;i1USBConfigureEndpoint@EPNum stored from wreg
  8206  0B38  00F5               	movwf	i1USBConfigureEndpoint@EPNum
  8207                           
  8208                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8209                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8210  0B39  3020               	movlw	32
  8211  0B3A  00F1               	movwf	??i1_USBConfigureEndpoint
  8212  0B3B  0871               	movf	??i1_USBConfigureEndpoint,w
  8213  0B3C  00F6               	movwf	i1USBConfigureEndpoint@handle
  8214                           
  8215                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8216  0B3D  0870               	movf	i1USBConfigureEndpoint@direction,w
  8217  0B3E  00F1               	movwf	??i1_USBConfigureEndpoint
  8218  0B3F  3001               	movlw	1
  8219  0B40                     u182_25:	
  8220  0B40  35F1               	lslf	??i1_USBConfigureEndpoint,f
  8221  0B41  0B89               	decfsz	9,f
  8222  0B42  2B40               	goto	u182_25
  8223  0B43  0875               	movf	i1USBConfigureEndpoint@EPNum,w
  8224  0B44  00F2               	movwf	??i1_USBConfigureEndpoint+1
  8225  0B45  3001               	movlw	1
  8226  0B46                     u183_25:	
  8227  0B46  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
  8228  0B47  3EFF               	addlw	-1
  8229  0B48  1D03               	skipz
  8230  0B49  2B46               	goto	u183_25
  8231  0B4A  3572               	lslf	??i1_USBConfigureEndpoint+1,w
  8232  0B4B  0771               	addwf	??i1_USBConfigureEndpoint,w
  8233  0B4C  00F3               	movwf	??i1_USBConfigureEndpoint+2
  8234  0B4D  3001               	movlw	1
  8235  0B4E                     u184_25:	
  8236  0B4E  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
  8237  0B4F  3EFF               	addlw	-1
  8238  0B50  1D03               	skipz
  8239  0B51  2B4E               	goto	u184_25
  8240  0B52  3573               	lslf	??i1_USBConfigureEndpoint+2,w
  8241  0B53  00F4               	movwf	??i1_USBConfigureEndpoint+3
  8242  0B54  0874               	movf	??i1_USBConfigureEndpoint+3,w
  8243  0B55  07F6               	addwf	i1USBConfigureEndpoint@handle,f
  8244                           
  8245                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8246  0B56  0876               	movf	i1USBConfigureEndpoint@handle,w
  8247  0B57  0086               	movwf	6
  8248  0B58  0187               	clrf	7
  8249  0B59  1381               	bcf	1,7
  8250                           
  8251                           ;usb_device.c: 1557: if(direction == 0)
  8252  0B5A  0870               	movf	i1USBConfigureEndpoint@direction,w
  8253  0B5B  1D03               	btfss	3,2
  8254  0B5C  2B67               	goto	i1l2575
  8255                           
  8256                           ;usb_device.c: 1558: {
  8257                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8258  0B5D  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8259  0B5E  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8260  0B5F  0086               	movwf	6
  8261  0B60  3001               	movlw	1	; select bank3/4
  8262  0B61  0087               	movwf	7
  8263  0B62  0876               	movf	i1USBConfigureEndpoint@handle,w
  8264  0B63  3FC0               	movwi [0]fsr1
  8265  0B64  3000               	movlw	0
  8266  0B65  3FC1               	movwi [1]fsr1
  8267                           
  8268                           ;usb_device.c: 1560: }
  8269  0B66  2B70               	goto	i1l2577
  8270  0B67                     i1l2575:	
  8271                           
  8272                           ;usb_device.c: 1561: else
  8273                           ;usb_device.c: 1562: {
  8274                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8275  0B67  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8276  0B68  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8277  0B69  0086               	movwf	6
  8278  0B6A  3001               	movlw	1	; select bank3/4
  8279  0B6B  0087               	movwf	7
  8280  0B6C  0876               	movf	i1USBConfigureEndpoint@handle,w
  8281  0B6D  3FC0               	movwi [0]fsr1
  8282  0B6E  3000               	movlw	0
  8283  0B6F  3FC1               	movwi [1]fsr1
  8284  0B70                     i1l2577:	
  8285                           
  8286                           ;usb_device.c: 1564: }
  8287                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8288  0B70  0876               	movf	i1USBConfigureEndpoint@handle,w
  8289  0B71  0086               	movwf	6
  8290  0B72  0187               	clrf	7
  8291  0B73  1301               	bcf	1,6
  8292                           
  8293                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8294  0B74  0876               	movf	i1USBConfigureEndpoint@handle,w
  8295  0B75  3E04               	addlw	4
  8296  0B76  0086               	movwf	6
  8297  0B77  0187               	clrf	7
  8298  0B78  1701               	bsf	1,6
  8299  0B79  0008               	return
  8300  0B7A                     __end_ofi1_USBConfigureEndpoint:	
  8301                           
  8302                           	psect	text36
  8303  0D74                     __ptext36:	
  8304 ;; *************** function _USBCheckCDCRequest *****************
  8305 ;; Defined at:
  8306 ;;		line 147 in file "../lib/usb/src/usb_device_cdc.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;Total ram usage:        1 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           
  8334                           ;psect for function _USBCheckCDCRequest
  8335  0D74                     _USBCheckCDCRequest:	
  8336                           
  8337                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8338                           
  8339                           ;incstack = 0
  8340                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  8341  0D74  0020               	movlb	0	; select bank0
  8342  0D75  0850               	movf	80,w	;volatile
  8343  0D76  391F               	andlw	31
  8344  0D77  3A01               	xorlw	1
  8345  0D78  1D03               	btfss	3,2
  8346  0D79  0008               	return
  8347                           
  8348                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8349  0D7A  0E50               	swapf	80,w	;volatile
  8350  0D7B  0C89               	rrf	9,f
  8351  0D7C  3903               	andlw	3
  8352  0D7D  3A01               	xorlw	1
  8353  0D7E  1D03               	btfss	3,2
  8354  0D7F  0008               	return
  8355                           
  8356                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8357                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8358  0D80  0854               	movf	84,w	;volatile
  8359  0D81  1903               	btfsc	3,2
  8360  0D82  2DC0               	goto	i1l2665
  8361  0D83  0354               	decf	84,w	;volatile
  8362  0D84  1D03               	btfss	3,2
  8363  0D85  0008               	return
  8364  0D86  2DC0               	goto	i1l2665
  8365  0D87                     i1l2635:	
  8366                           ;usb_device_cdc.c: 167: {
  8367                           ;usb_device_cdc.c: 169: case 0x00:
  8368                           
  8369                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
  8370                           
  8371                           
  8372                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8373  0D87  302A               	movlw	low _dummy_encapsulated_cmd_response
  8374  0D88  0023               	movlb	3	; select bank3
  8375  0D89  00B3               	movwf	_inPipes^(0+384)	;volatile
  8376  0D8A  3002               	movlw	high _dummy_encapsulated_cmd_response
  8377  0D8B  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8378                           
  8379                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8380  0D8C  3000               	movlw	0
  8381  0D8D  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8382  0D8E  3008               	movlw	8
  8383  0D8F  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8384                           
  8385                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8386  0D90  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  8387                           
  8388                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8389  0D91  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8390                           
  8391                           ;usb_device_cdc.c: 175: break;
  8392  0D92  0008               	return
  8393  0D93                     i1l2643:	
  8394                           ;usb_device_cdc.c: 176: case 0x01:
  8395                           
  8396                           
  8397                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8398  0D93  302A               	movlw	low _dummy_encapsulated_cmd_response
  8399  0D94  0023               	movlb	3	; select bank3
  8400  0D95  00B3               	movwf	_inPipes^(0+384)	;volatile
  8401  0D96  3002               	movlw	high _dummy_encapsulated_cmd_response
  8402  0D97  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8403                           
  8404                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8405  0D98  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8406                           
  8407                           ;usb_device_cdc.c: 180: break;
  8408  0D99  0008               	return
  8409  0D9A                     i1l2647:	
  8410                           ;usb_device_cdc.c: 184: case 0x20:
  8411                           
  8412                           
  8413                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8414  0D9A  0020               	movlb	0	; select bank0
  8415  0D9B  0857               	movf	87,w	;volatile
  8416  0D9C  0023               	movlb	3	; select bank3
  8417  0D9D  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  8418  0D9E  0020               	movlb	0	; select bank0
  8419  0D9F  0856               	movf	86,w	;volatile
  8420  0DA0  0023               	movlb	3	; select bank3
  8421  0DA1  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  8422                           
  8423                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8424  0DA2  30DE               	movlw	(low (_line_coding| (0+256)))& (0+255)
  8425  0DA3  00F0               	movwf	??_USBCheckCDCRequest
  8426  0DA4  0870               	movf	??_USBCheckCDCRequest,w
  8427  0DA5  00A0               	movwf	_outPipes^(0+384)	;volatile
  8428                           
  8429                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8430  0DA6  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  8431  0DA7  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  8432                           
  8433                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8434  0DA8  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  8435                           
  8436                           ;usb_device_cdc.c: 189: break;
  8437  0DA9  0008               	return
  8438  0DAA                     i1l2653:	
  8439                           ;usb_device_cdc.c: 191: case 0x21:
  8440                           
  8441                           
  8442                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8443  0DAA  30DE               	movlw	low _line_coding
  8444  0DAB  0023               	movlb	3	; select bank3
  8445  0DAC  00B3               	movwf	_inPipes^(0+384)	;volatile
  8446  0DAD  3001               	movlw	high _line_coding
  8447  0DAE  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8448  0DAF  3000               	movlw	0
  8449  0DB0  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8450  0DB1  3007               	movlw	7
  8451  0DB2  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8452  0DB3  30C1               	movlw	193
  8453  0DB4  00F0               	movwf	??_USBCheckCDCRequest
  8454  0DB5  0870               	movf	??_USBCheckCDCRequest,w
  8455  0DB6  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  8456                           
  8457                           ;usb_device_cdc.c: 196: break;
  8458  0DB7  0008               	return
  8459  0DB8                     i1l2659:	
  8460                           ;usb_device_cdc.c: 198: case 0x22:
  8461                           
  8462                           
  8463                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8464  0DB8  0020               	movlb	0	; select bank0
  8465  0DB9  0852               	movf	82,w	;volatile
  8466  0DBA  00F0               	movwf	??_USBCheckCDCRequest
  8467  0DBB  0870               	movf	??_USBCheckCDCRequest,w
  8468  0DBC  0023               	movlb	3	; select bank3
  8469  0DBD  00CE               	movwf	_control_signal_bitmap^(0+384)
  8470                           
  8471                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8472  0DBE  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8473                           
  8474                           ;usb_device_cdc.c: 258: }
  8475                           
  8476                           ;usb_device_cdc.c: 257: break;
  8477                           
  8478                           ;usb_device_cdc.c: 256: default:
  8479                           
  8480                           ;usb_device_cdc.c: 232: break;
  8481  0DBF  0008               	return
  8482  0DC0                     i1l2665:	
  8483  0DC0  0020               	movlb	0	; select bank0
  8484  0DC1  0851               	movf	81,w	;volatile
  8485                           
  8486                           ; Switch size 1, requested type "space"
  8487                           ; Number of cases is 5, Range of values is 0 to 34
  8488                           ; switch strategies available:
  8489                           ; Name         Instructions Cycles
  8490                           ; simple_byte           16     9 (average)
  8491                           ; direct_byte           76     6 (fixed)
  8492                           ; jumptable            260     6 (fixed)
  8493                           ;	Chosen strategy is simple_byte
  8494  0DC2  3A00               	xorlw	0	; case 0
  8495  0DC3  1903               	skipnz
  8496  0DC4  2D87               	goto	i1l2635
  8497  0DC5  3A01               	xorlw	1	; case 1
  8498  0DC6  1903               	skipnz
  8499  0DC7  2D93               	goto	i1l2643
  8500  0DC8  3A21               	xorlw	33	; case 32
  8501  0DC9  1903               	skipnz
  8502  0DCA  2D9A               	goto	i1l2647
  8503  0DCB  3A01               	xorlw	1	; case 33
  8504  0DCC  1903               	skipnz
  8505  0DCD  2DAA               	goto	i1l2653
  8506  0DCE  3A03               	xorlw	3	; case 34
  8507  0DCF  1903               	skipnz
  8508  0DD0  2DB8               	goto	i1l2659
  8509  0DD1  2DD2               	goto	i1l479
  8510  0DD2                     i1l479:	
  8511  0DD2  0008               	return
  8512  0DD3                     __end_of_USBCheckCDCRequest:	
  8513                           
  8514                           	psect	text37
  8515  0A8A                     __ptext37:	
  8516 ;; *************** function _USBCtrlTrfOutHandler *****************
  8517 ;; Defined at:
  8518 ;;		line 2538 in file "../lib/usb/src/usb_device.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;Total ram usage:        2 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    2
  8539 ;; This function calls:
  8540 ;;		_USBCtrlTrfRxService
  8541 ;; This function is called by:
  8542 ;;		_USBCtrlEPService
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           
  8547                           ;psect for function _USBCtrlTrfOutHandler
  8548  0A8A                     _USBCtrlTrfOutHandler:	
  8549                           
  8550                           ;usb_device.c: 2540: if(controlTransferState == 2)
  8551                           
  8552                           ;incstack = 0
  8553                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8554  0A8A  3002               	movlw	2
  8555  0A8B  0021               	movlb	1	; select bank1
  8556  0A8C  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  8557  0A8D  1D03               	btfss	3,2
  8558  0A8E  2A92               	goto	i1l3205
  8559                           
  8560                           ;usb_device.c: 2541: {
  8561                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  8562  0A8F  3185  252C         	fcall	_USBCtrlTrfRxService
  8563                           
  8564                           ;usb_device.c: 2543: }
  8565  0A91  0008               	return
  8566  0A92                     i1l3205:	
  8567                           
  8568                           ;usb_device.c: 2544: else
  8569                           ;usb_device.c: 2545: {
  8570                           ;usb_device.c: 2548: controlTransferState = 0;
  8571  0A92  0021               	movlb	1	; select bank1
  8572  0A93  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  8573                           
  8574                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  8575  0A94  0023               	movlb	3	; select bank3
  8576  0A95  0859               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  8577  0A96  1D03               	btfss	3,2
  8578  0A97  2ABE               	goto	i1l3217
  8579                           
  8580                           ;usb_device.c: 2556: {
  8581                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  8582  0A98  0021               	movlb	1	; select bank1
  8583  0A99  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8584  0A9A  3E01               	addlw	1
  8585  0A9B  00F6               	movwf	??_USBCtrlTrfOutHandler
  8586  0A9C  3000               	movlw	0
  8587  0A9D  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8588  0A9E  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8589  0A9F  0876               	movf	??_USBCtrlTrfOutHandler,w
  8590  0AA0  0086               	movwf	6
  8591  0AA1  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8592  0AA2  0087               	movwf	7
  8593  0AA3  3008               	movlw	8
  8594  0AA4  0081               	movwf	1
  8595                           
  8596                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8597  0AA5  3050               	movlw	80
  8598  0AA6  00F6               	movwf	??_USBCtrlTrfOutHandler
  8599  0AA7  3000               	movlw	0
  8600  0AA8  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8601  0AA9  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8602  0AAA  0086               	movwf	6
  8603  0AAB  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8604  0AAC  0087               	movwf	7
  8605  0AAD  3142               	addfsr 1,2
  8606  0AAE  0876               	movf	??_USBCtrlTrfOutHandler,w
  8607  0AAF  3FC0               	movwi [0]fsr1
  8608  0AB0  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8609  0AB1  3FC1               	movwi [1]fsr1
  8610                           
  8611                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8612  0AB2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8613  0AB3  0086               	movwf	6
  8614  0AB4  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8615  0AB5  0087               	movwf	7
  8616  0AB6  300C               	movlw	12
  8617  0AB7  0081               	movwf	1
  8618                           
  8619                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8620  0AB8  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8621  0AB9  0086               	movwf	6
  8622  0ABA  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8623  0ABB  0087               	movwf	7
  8624  0ABC  1781               	bsf	1,7
  8625                           
  8626                           ;usb_device.c: 2561: }
  8627  0ABD  0008               	return
  8628  0ABE                     i1l3217:	
  8629                           
  8630                           ;usb_device.c: 2562: else
  8631                           ;usb_device.c: 2563: {
  8632                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  8633  0ABE  0023               	movlb	3	; select bank3
  8634  0ABF  01D9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8635  0AC0  0008               	return
  8636  0AC1                     __end_of_USBCtrlTrfOutHandler:	
  8637                           
  8638                           	psect	text38
  8639  052C                     __ptext38:	
  8640 ;; *************** function _USBCtrlTrfRxService *****************
  8641 ;; Defined at:
  8642 ;;		line 1852 in file "../lib/usb/src/usb_device.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;		None
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  byteToRead      1    5[COMMON] unsigned char 
  8647 ;;  i               1    4[COMMON] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;Total ram usage:        4 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    1
  8664 ;; This function calls:
  8665 ;;		_USBCtrlEPAllowStatusStage
  8666 ;; This function is called by:
  8667 ;;		_USBCtrlTrfOutHandler
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function _USBCtrlTrfRxService
  8673  052C                     _USBCtrlTrfRxService:	
  8674                           
  8675                           ;usb_device.c: 1854: uint8_t byteToRead;
  8676                           ;usb_device.c: 1855: uint8_t i;
  8677                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8678                           
  8679                           ;incstack = 0
  8680                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8681  052C  0021               	movlb	1	; select bank1
  8682  052D  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8683  052E  0086               	movwf	6
  8684  052F  0187               	clrf	7
  8685  0530  3F41               	moviw [1]fsr1
  8686  0531  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8687                           
  8688                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8689  0532  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8690  0533  00F2               	movwf	??_USBCtrlTrfRxService
  8691  0534  01F3               	clrf	??_USBCtrlTrfRxService+1
  8692  0535  0873               	movf	??_USBCtrlTrfRxService+1,w
  8693  0536  0023               	movlb	3	; select bank3
  8694  0537  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8695  0538  1D03               	skipz
  8696  0539  2D3C               	goto	u246_25
  8697  053A  0872               	movf	??_USBCtrlTrfRxService,w
  8698  053B  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  8699  053C                     u246_25:	
  8700  053C  1803               	skipnc
  8701  053D  2D42               	goto	i1l286
  8702                           
  8703                           ;usb_device.c: 1866: {
  8704                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8705  053E  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8706  053F  00F2               	movwf	??_USBCtrlTrfRxService
  8707  0540  0872               	movf	??_USBCtrlTrfRxService,w
  8708  0541  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8709  0542                     i1l286:	
  8710                           
  8711                           ;usb_device.c: 1868: }
  8712                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8713  0542  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8714  0543  00F2               	movwf	??_USBCtrlTrfRxService
  8715  0544  01F3               	clrf	??_USBCtrlTrfRxService+1
  8716  0545  0872               	movf	??_USBCtrlTrfRxService,w
  8717  0546  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  8718  0547  0873               	movf	??_USBCtrlTrfRxService+1,w
  8719  0548  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  8720                           
  8721                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8722  0549  01F4               	clrf	USBCtrlTrfRxService@i
  8723  054A                     i1l3089:	
  8724  054A  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8725  054B  0274               	subwf	USBCtrlTrfRxService@i,w
  8726  054C  1803               	btfsc	3,0
  8727  054D  2D63               	goto	i1l3091
  8728                           
  8729                           ;usb_device.c: 1875: {
  8730                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8731  054E  0874               	movf	USBCtrlTrfRxService@i,w
  8732  054F  3E58               	addlw	88
  8733  0550  0086               	movwf	6
  8734  0551  0187               	clrf	7
  8735  0552  0801               	movf	1,w
  8736  0553  00F2               	movwf	??_USBCtrlTrfRxService
  8737  0554  0820               	movf	_outPipes^(0+384),w	;volatile
  8738  0555  0086               	movwf	6
  8739  0556  3001               	movlw	1	; select bank2/3
  8740  0557  0087               	movwf	7
  8741  0558  0872               	movf	??_USBCtrlTrfRxService,w
  8742  0559  0081               	movwf	1
  8743  055A  3001               	movlw	1
  8744  055B  00F2               	movwf	??_USBCtrlTrfRxService
  8745  055C  0872               	movf	??_USBCtrlTrfRxService,w
  8746  055D  07A0               	addwf	_outPipes^(0+384),f	;volatile
  8747  055E  3001               	movlw	1
  8748  055F  00F2               	movwf	??_USBCtrlTrfRxService
  8749  0560  0872               	movf	??_USBCtrlTrfRxService,w
  8750  0561  07F4               	addwf	USBCtrlTrfRxService@i,f
  8751  0562  2D4A               	goto	i1l3089
  8752  0563                     i1l3091:	
  8753                           
  8754                           ;usb_device.c: 1877: }
  8755                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8756  0563  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8757  0564  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8758  0565  1903               	btfsc	3,2
  8759  0566  2D9E               	goto	i1l3103
  8760                           
  8761                           ;usb_device.c: 1882: {
  8762                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  8763  0567  0021               	movlb	1	; select bank1
  8764  0568  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8765  0569  3E01               	addlw	1
  8766  056A  00F2               	movwf	??_USBCtrlTrfRxService
  8767  056B  3000               	movlw	0
  8768  056C  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8769  056D  00F3               	movwf	??_USBCtrlTrfRxService+1
  8770  056E  0872               	movf	??_USBCtrlTrfRxService,w
  8771  056F  0086               	movwf	6
  8772  0570  0873               	movf	??_USBCtrlTrfRxService+1,w
  8773  0571  0087               	movwf	7
  8774  0572  3008               	movlw	8
  8775  0573  0081               	movwf	1
  8776                           
  8777                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8778  0574  3058               	movlw	88
  8779  0575  00F2               	movwf	??_USBCtrlTrfRxService
  8780  0576  3000               	movlw	0
  8781  0577  00F3               	movwf	??_USBCtrlTrfRxService+1
  8782  0578  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8783  0579  0086               	movwf	6
  8784  057A  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8785  057B  0087               	movwf	7
  8786  057C  3142               	addfsr 1,2
  8787  057D  0872               	movf	??_USBCtrlTrfRxService,w
  8788  057E  3FC0               	movwi [0]fsr1
  8789  057F  0873               	movf	??_USBCtrlTrfRxService+1,w
  8790  0580  3FC1               	movwi [1]fsr1
  8791                           
  8792                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8793  0581  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8794  0582  0086               	movwf	6
  8795  0583  0187               	clrf	7
  8796  0584  1B01               	btfsc	1,6
  8797  0585  2D92               	goto	i1l3101
  8798                           
  8799                           ;usb_device.c: 1886: {
  8800                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8801  0586  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8802  0587  0086               	movwf	6
  8803  0588  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8804  0589  0087               	movwf	7
  8805  058A  3048               	movlw	72
  8806  058B  0081               	movwf	1
  8807                           
  8808                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8809  058C  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8810  058D  0086               	movwf	6
  8811  058E  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8812  058F  0087               	movwf	7
  8813  0590  1781               	bsf	1,7
  8814                           
  8815                           ;usb_device.c: 1889: }
  8816  0591  0008               	return
  8817  0592                     i1l3101:	
  8818                           
  8819                           ;usb_device.c: 1890: else
  8820                           ;usb_device.c: 1891: {
  8821                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8822  0592  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8823  0593  0086               	movwf	6
  8824  0594  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8825  0595  0087               	movwf	7
  8826  0596  3008               	movlw	8
  8827  0597  0081               	movwf	1
  8828                           
  8829                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8830  0598  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8831  0599  0086               	movwf	6
  8832  059A  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8833  059B  0087               	movwf	7
  8834  059C  1781               	bsf	1,7
  8835                           
  8836                           ;usb_device.c: 1894: }
  8837                           ;usb_device.c: 1895: }
  8838  059D  0008               	return
  8839  059E                     i1l3103:	
  8840                           
  8841                           ;usb_device.c: 1896: else
  8842                           ;usb_device.c: 1897: {
  8843                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8844  059E  0021               	movlb	1	; select bank1
  8845  059F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8846  05A0  3E01               	addlw	1
  8847  05A1  00F2               	movwf	??_USBCtrlTrfRxService
  8848  05A2  3000               	movlw	0
  8849  05A3  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8850  05A4  00F3               	movwf	??_USBCtrlTrfRxService+1
  8851  05A5  0872               	movf	??_USBCtrlTrfRxService,w
  8852  05A6  0086               	movwf	6
  8853  05A7  0873               	movf	??_USBCtrlTrfRxService+1,w
  8854  05A8  0087               	movwf	7
  8855  05A9  3008               	movlw	8
  8856  05AA  0081               	movwf	1
  8857                           
  8858                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8859  05AB  3050               	movlw	80
  8860  05AC  00F2               	movwf	??_USBCtrlTrfRxService
  8861  05AD  3000               	movlw	0
  8862  05AE  00F3               	movwf	??_USBCtrlTrfRxService+1
  8863  05AF  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8864  05B0  0086               	movwf	6
  8865  05B1  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8866  05B2  0087               	movwf	7
  8867  05B3  3142               	addfsr 1,2
  8868  05B4  0872               	movf	??_USBCtrlTrfRxService,w
  8869  05B5  3FC0               	movwi [0]fsr1
  8870  05B6  0873               	movf	??_USBCtrlTrfRxService+1,w
  8871  05B7  3FC1               	movwi [1]fsr1
  8872                           
  8873                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8874  05B8  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8875  05B9  0086               	movwf	6
  8876  05BA  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8877  05BB  0087               	movwf	7
  8878  05BC  3004               	movlw	4
  8879  05BD  0081               	movwf	1
  8880                           
  8881                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8882  05BE  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8883  05BF  0086               	movwf	6
  8884  05C0  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8885  05C1  0087               	movwf	7
  8886  05C2  1781               	bsf	1,7
  8887                           
  8888                           ;usb_device.c: 1915: {
  8889                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8890  05C3  0023               	movlb	3	; select bank3
  8891  05C4  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8892  05C5  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8893                           
  8894                           ;usb_device.c: 1926: }
  8895                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8896  05C6  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8897                           
  8898                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8899  05C7  0857               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  8900  05C8  1D03               	btfss	3,2
  8901  05C9  0008               	return
  8902                           
  8903                           ;usb_device.c: 1942: {
  8904                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8905  05CA  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  8906  05CC  0008               	return
  8907  05CD                     __end_of_USBCtrlTrfRxService:	
  8908                           
  8909                           	psect	text39
  8910  0F0F                     __ptext39:	
  8911 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8912 ;; Defined at:
  8913 ;;		line 1416 in file "../lib/usb/src/usb_device.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;		None
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      void 
  8920 ;; Registers used:
  8921 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;Total ram usage:        2 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; This function calls:
  8934 ;;		Nothing
  8935 ;; This function is called by:
  8936 ;;		_USBDeviceTasks
  8937 ;;		_USBCtrlEPServiceComplete
  8938 ;;		_USBCtrlTrfRxService
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           
  8943                           ;psect for function _USBCtrlEPAllowStatusStage
  8944  0F0F                     _USBCtrlEPAllowStatusStage:	
  8945                           
  8946                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8947                           
  8948                           ;incstack = 0
  8949                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8950  0F0F  0023               	movlb	3	; select bank3
  8951  0F10  0856               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  8952  0F11  1D03               	btfss	3,2
  8953  0F12  0008               	return
  8954                           
  8955                           ;usb_device.c: 1424: {
  8956                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8957  0F13  3001               	movlw	1
  8958  0F14  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8959  0F15  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8960  0F16  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8961                           
  8962                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8963  0F17  0855               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  8964  0F18  1D03               	btfss	3,2
  8965  0F19  0008               	return
  8966                           
  8967                           ;usb_device.c: 1427: {
  8968                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8969  0F1A  3001               	movlw	1
  8970  0F1B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8971  0F1C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8972  0F1D  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8973                           
  8974                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8975  0F1E  3002               	movlw	2
  8976  0F1F  0021               	movlb	1	; select bank1
  8977  0F20  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  8978  0F21  1D03               	btfss	3,2
  8979  0F22  2F36               	goto	i1l2779
  8980                           
  8981                           ;usb_device.c: 1433: {
  8982                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8983  0F23  0023               	movlb	3	; select bank3
  8984  0F24  0827               	movf	_pBDTEntryIn^(0+384),w
  8985  0F25  0086               	movwf	6
  8986  0F26  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8987  0F27  0087               	movwf	7
  8988  0F28  3141               	addfsr 1,1
  8989  0F29  0181               	clrf	1
  8990                           
  8991                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8992  0F2A  0827               	movf	_pBDTEntryIn^(0+384),w
  8993  0F2B  0086               	movwf	6
  8994  0F2C  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8995  0F2D  0087               	movwf	7
  8996  0F2E  3048               	movlw	72
  8997  0F2F  0081               	movwf	1
  8998                           
  8999                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9000  0F30  0827               	movf	_pBDTEntryIn^(0+384),w
  9001  0F31  0086               	movwf	6
  9002  0F32  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9003  0F33  0087               	movwf	7
  9004  0F34  1781               	bsf	1,7
  9005                           
  9006                           ;usb_device.c: 1437: }
  9007  0F35  0008               	return
  9008  0F36                     i1l2779:	
  9009                           
  9010                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9011  0F36  0021               	movlb	1	; select bank1
  9012  0F37  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9013  0F38  1D03               	btfss	3,2
  9014  0F39  0008               	return
  9015                           
  9016                           ;usb_device.c: 1439: {
  9017                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9018  0F3A  0023               	movlb	3	; select bank3
  9019  0F3B  01D9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9020                           
  9021                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9022  0F3C  3008               	movlw	8
  9023  0F3D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9024  0F3E  0021               	movlb	1	; select bank1
  9025  0F3F  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  9026  0F40  0086               	movwf	6
  9027  0F41  0187               	clrf	7
  9028  0F42  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9029  0F43  0081               	movwf	1
  9030                           
  9031                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9032  0F44  3050               	movlw	80
  9033  0F45  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9034  0F46  3000               	movlw	0
  9035  0F47  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9036  0F48  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9037  0F49  3E02               	addlw	2
  9038  0F4A  0086               	movwf	6
  9039  0F4B  0187               	clrf	7
  9040  0F4C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9041  0F4D  3FC0               	movwi [0]fsr1
  9042  0F4E  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9043  0F4F  3FC1               	movwi [1]fsr1
  9044                           
  9045                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9046  0F50  3004               	movlw	4
  9047  0F51  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9048  0F52  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9049  0F53  0086               	movwf	6
  9050  0F54  0187               	clrf	7
  9051  0F55  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9052  0F56  0081               	movwf	1
  9053                           
  9054                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9055  0F57  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9056  0F58  0086               	movwf	6
  9057  0F59  0187               	clrf	7
  9058  0F5A  1781               	bsf	1,7
  9059                           
  9060                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9061  0F5B  3001               	movlw	1
  9062  0F5C  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9063  0F5D  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9064  0F5E  0023               	movlb	3	; select bank3
  9065  0F5F  00D9               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9066                           
  9067                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9068  0F60  0021               	movlb	1	; select bank1
  9069  0F61  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9070  0F62  3E01               	addlw	1
  9071  0F63  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9072  0F64  3000               	movlw	0
  9073  0F65  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9074  0F66  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9075  0F67  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9076  0F68  0086               	movwf	6
  9077  0F69  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9078  0F6A  0087               	movwf	7
  9079  0F6B  3008               	movlw	8
  9080  0F6C  0081               	movwf	1
  9081                           
  9082                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9083  0F6D  3050               	movlw	80
  9084  0F6E  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9085  0F6F  3000               	movlw	0
  9086  0F70  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9087  0F71  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9088  0F72  0086               	movwf	6
  9089  0F73  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9090  0F74  0087               	movwf	7
  9091  0F75  3142               	addfsr 1,2
  9092  0F76  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9093  0F77  3FC0               	movwi [0]fsr1
  9094  0F78  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9095  0F79  3FC1               	movwi [1]fsr1
  9096                           
  9097                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9098  0F7A  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9099  0F7B  0086               	movwf	6
  9100  0F7C  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9101  0F7D  0087               	movwf	7
  9102  0F7E  3080               	movlw	128
  9103  0F7F  0081               	movwf	1
  9104  0F80  0008               	return
  9105  0F81                     __end_of_USBCtrlEPAllowStatusStage:	
  9106                           
  9107                           	psect	text40
  9108  0E9F                     __ptext40:	
  9109 ;; *************** function _USBCtrlTrfInHandler *****************
  9110 ;; Defined at:
  9111 ;;		line 2592 in file "../lib/usb/src/usb_device.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;		None
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;  lastDTS         1    5[COMMON] unsigned char 
  9116 ;; Return value:  Size  Location     Type
  9117 ;;                  1    wreg      void 
  9118 ;; Registers used:
  9119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9120 ;; Tracked objects:
  9121 ;;		On entry : 0/0
  9122 ;;		On exit  : 0/0
  9123 ;;		Unchanged: 0/0
  9124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;Total ram usage:        3 bytes
  9130 ;; Hardware stack levels used:    1
  9131 ;; Hardware stack levels required when called:    1
  9132 ;; This function calls:
  9133 ;;		_USBCtrlTrfTxService
  9134 ;; This function is called by:
  9135 ;;		_USBCtrlEPService
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           
  9140                           ;psect for function _USBCtrlTrfInHandler
  9141  0E9F                     _USBCtrlTrfInHandler:	
  9142                           
  9143                           ;usb_device.c: 2594: uint8_t lastDTS;
  9144                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9145                           
  9146                           ;incstack = 0
  9147                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9148  0E9F  0023               	movlb	3	; select bank3
  9149  0EA0  0827               	movf	_pBDTEntryIn^(0+384),w
  9150  0EA1  0086               	movwf	6
  9151  0EA2  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9152  0EA3  0087               	movwf	7
  9153  0EA4  3000               	movlw	0
  9154  0EA5  1B01               	btfsc	1,6
  9155  0EA6  3001               	movlw	1
  9156  0EA7  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9157                           
  9158                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9159  0EA8  3004               	movlw	4
  9160  0EA9  0627               	xorwf	_pBDTEntryIn^(0+384),w
  9161  0EAA  00A7               	movwf	_pBDTEntryIn^(0+384)
  9162  0EAB  3000               	movlw	0
  9163  0EAC  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  9164  0EAD  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  9165                           
  9166                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9167  0EAE  3008               	movlw	8
  9168  0EAF  0022               	movlb	2	; select bank2
  9169  0EB0  066E               	xorwf	_USBDeviceState^(0+256),w	;volatile
  9170  0EB1  1D03               	btfss	3,2
  9171  0EB2  2EC2               	goto	i1l3233
  9172                           
  9173                           ;usb_device.c: 2605: {
  9174                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9175  0EB3  0020               	movlb	0	; select bank0
  9176  0EB4  0852               	movf	82,w	;volatile
  9177  0EB5  397F               	andlw	127
  9178  0EB6  003D               	movlb	29	; select bank29
  9179  0EB7  0096               	movwf	22	;volatile
  9180                           
  9181                           ;usb_device.c: 2607: if(UADDR != 0u)
  9182  0EB8  0816               	movf	22,w	;volatile
  9183  0EB9  1903               	btfsc	3,2
  9184  0EBA  2EBD               	goto	i1l3231
  9185                           
  9186                           ;usb_device.c: 2608: {
  9187                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9188  0EBB  3010               	movlw	16
  9189  0EBC  2EBE               	goto	L11
  9190  0EBD                     i1l3231:	
  9191                           ;usb_device.c: 2610: }
  9192                           
  9193                           
  9194                           ;usb_device.c: 2611: else
  9195                           ;usb_device.c: 2612: {
  9196                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9197  0EBD  3004               	movlw	4
  9198  0EBE                     L11:	
  9199  0EBE  00F3               	movwf	??_USBCtrlTrfInHandler
  9200  0EBF  0873               	movf	??_USBCtrlTrfInHandler,w
  9201  0EC0  0022               	movlb	2	; select bank2
  9202  0EC1  00EE               	movwf	_USBDeviceState^(0+256)	;volatile
  9203  0EC2                     i1l3233:	
  9204                           
  9205                           ;usb_device.c: 2614: }
  9206                           ;usb_device.c: 2615: }
  9207                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9208  0EC2  0021               	movlb	1	; select bank1
  9209  0EC3  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9210  0EC4  1D03               	btfss	3,2
  9211  0EC5  2F06               	goto	i1l371
  9212                           
  9213                           ;usb_device.c: 2619: {
  9214                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9215  0EC6  3058               	movlw	88
  9216  0EC7  00F3               	movwf	??_USBCtrlTrfInHandler
  9217  0EC8  3000               	movlw	0
  9218  0EC9  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9219  0ECA  0023               	movlb	3	; select bank3
  9220  0ECB  0827               	movf	_pBDTEntryIn^(0+384),w
  9221  0ECC  0086               	movwf	6
  9222  0ECD  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9223  0ECE  0087               	movwf	7
  9224  0ECF  3142               	addfsr 1,2
  9225  0ED0  0873               	movf	??_USBCtrlTrfInHandler,w
  9226  0ED1  3FC0               	movwi [0]fsr1
  9227  0ED2  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9228  0ED3  3FC1               	movwi [1]fsr1
  9229                           
  9230                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9231  0ED4  318E  2635  318E   	fcall	_USBCtrlTrfTxService
  9232                           
  9233                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9234  0ED7  3002               	movlw	2
  9235  0ED8  0022               	movlb	2	; select bank2
  9236  0ED9  066D               	xorwf	_shortPacketStatus^(0+256),w	;volatile
  9237  0EDA  1D03               	btfss	3,2
  9238  0EDB  2EE9               	goto	i1l3243
  9239                           
  9240                           ;usb_device.c: 2628: {
  9241                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9242  0EDC  0023               	movlb	3	; select bank3
  9243  0EDD  0827               	movf	_pBDTEntryIn^(0+384),w
  9244  0EDE  0086               	movwf	6
  9245  0EDF  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9246  0EE0  0087               	movwf	7
  9247  0EE1  3004               	movlw	4
  9248  0EE2  0081               	movwf	1
  9249                           
  9250                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9251  0EE3  0827               	movf	_pBDTEntryIn^(0+384),w
  9252  0EE4  0086               	movwf	6
  9253  0EE5  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9254  0EE6  0087               	movwf	7
  9255  0EE7  1781               	bsf	1,7
  9256                           
  9257                           ;usb_device.c: 2633: }
  9258  0EE8  0008               	return
  9259  0EE9                     i1l3243:	
  9260                           
  9261                           ;usb_device.c: 2634: else
  9262                           ;usb_device.c: 2635: {
  9263                           ;usb_device.c: 2636: if(lastDTS == 0)
  9264  0EE9  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9265  0EEA  1D03               	btfss	3,2
  9266  0EEB  2EF9               	goto	i1l3247
  9267                           
  9268                           ;usb_device.c: 2637: {
  9269                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9270  0EEC  0023               	movlb	3	; select bank3
  9271  0EED  0827               	movf	_pBDTEntryIn^(0+384),w
  9272  0EEE  0086               	movwf	6
  9273  0EEF  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9274  0EF0  0087               	movwf	7
  9275  0EF1  3048               	movlw	72
  9276  0EF2  0081               	movwf	1
  9277                           
  9278                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9279  0EF3  0827               	movf	_pBDTEntryIn^(0+384),w
  9280  0EF4  0086               	movwf	6
  9281  0EF5  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9282  0EF6  0087               	movwf	7
  9283  0EF7  1781               	bsf	1,7
  9284                           
  9285                           ;usb_device.c: 2640: }
  9286  0EF8  0008               	return
  9287  0EF9                     i1l3247:	
  9288                           
  9289                           ;usb_device.c: 2641: else
  9290                           ;usb_device.c: 2642: {
  9291                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9292  0EF9  0023               	movlb	3	; select bank3
  9293  0EFA  0827               	movf	_pBDTEntryIn^(0+384),w
  9294  0EFB  0086               	movwf	6
  9295  0EFC  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9296  0EFD  0087               	movwf	7
  9297  0EFE  3008               	movlw	8
  9298  0EFF  0081               	movwf	1
  9299                           
  9300                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9301  0F00  0827               	movf	_pBDTEntryIn^(0+384),w
  9302  0F01  0086               	movwf	6
  9303  0F02  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9304  0F03  0087               	movwf	7
  9305  0F04  1781               	bsf	1,7
  9306                           
  9307                           ;usb_device.c: 2645: }
  9308                           ;usb_device.c: 2646: }
  9309                           ;usb_device.c: 2647: }
  9310  0F05  0008               	return
  9311  0F06                     i1l371:	
  9312                           
  9313                           ;usb_device.c: 2648: else
  9314                           ;usb_device.c: 2649: {
  9315                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  9316  0F06  0023               	movlb	3	; select bank3
  9317  0F07  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  9318  0F08  2F0C               	goto	i1l3251
  9319                           
  9320                           ;usb_device.c: 2656: {
  9321                           ;usb_device.c: 2657: outPipes[0].pFunc();
  9322  0F09  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9323  0F0A  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9324                           
  9325                           ;usb_device.c: 2658: }
  9326                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  9327  0F0B  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9328  0F0C                     i1l3251:	
  9329                           
  9330                           ;usb_device.c: 2660: }
  9331                           ;usb_device.c: 2662: controlTransferState = 0;
  9332  0F0C  0021               	movlb	1	; select bank1
  9333  0F0D  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  9334  0F0E  0008               	return
  9335  0F0F                     __end_of_USBCtrlTrfInHandler:	
  9336                           
  9337                           	psect	text41
  9338  0E35                     __ptext41:	
  9339 ;; *************** function _USBCtrlTrfTxService *****************
  9340 ;; Defined at:
  9341 ;;		line 1771 in file "../lib/usb/src/usb_device.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;		None
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  byteToSend      1    2[COMMON] unsigned char 
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1    wreg      void 
  9348 ;; Registers used:
  9349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;Total ram usage:        3 bytes
  9360 ;; Hardware stack levels used:    1
  9361 ;; This function calls:
  9362 ;;		Nothing
  9363 ;; This function is called by:
  9364 ;;		_USBCtrlEPAllowDataStage
  9365 ;;		_USBCtrlTrfInHandler
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           
  9370                           ;psect for function _USBCtrlTrfTxService
  9371  0E35                     _USBCtrlTrfTxService:	
  9372                           
  9373                           ;usb_device.c: 1773: uint8_t byteToSend;
  9374                           ;usb_device.c: 1777: byteToSend = 8;
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9378  0E35  3008               	movlw	8
  9379  0E36  00F0               	movwf	??_USBCtrlTrfTxService
  9380  0E37  0870               	movf	??_USBCtrlTrfTxService,w
  9381  0E38  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9382                           
  9383                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  9384  0E39  3000               	movlw	0
  9385  0E3A  0023               	movlb	3	; select bank3
  9386  0E3B  0237               	subwf	((_inPipes+1)^(0+384)+3),w	;volatile
  9387  0E3C  3008               	movlw	8
  9388  0E3D  1903               	skipnz
  9389  0E3E  0236               	subwf	(_inPipes^(0+384)+3),w	;volatile
  9390  0E3F  1803               	skipnc
  9391  0E40  2E52               	goto	i1l271
  9392                           
  9393                           ;usb_device.c: 1779: {
  9394                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  9395  0E41  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  9396  0E42  00F0               	movwf	??_USBCtrlTrfTxService
  9397  0E43  0870               	movf	??_USBCtrlTrfTxService,w
  9398  0E44  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9399                           
  9400                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  9401  0E45  0022               	movlb	2	; select bank2
  9402  0E46  086D               	movf	_shortPacketStatus^(0+256),w	;volatile
  9403  0E47  1D03               	btfss	3,2
  9404  0E48  2E4B               	goto	i1l2723
  9405                           
  9406                           ;usb_device.c: 1788: {
  9407                           ;usb_device.c: 1789: shortPacketStatus = 1;
  9408  0E49  3001               	movlw	1
  9409  0E4A  2E4F               	goto	L12
  9410  0E4B                     i1l2723:	
  9411                           ;usb_device.c: 1790: }
  9412                           
  9413                           
  9414                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  9415  0E4B  036D               	decf	_shortPacketStatus^(0+256),w	;volatile
  9416  0E4C  1D03               	btfss	3,2
  9417  0E4D  2E52               	goto	i1l271
  9418                           
  9419                           ;usb_device.c: 1792: {
  9420                           ;usb_device.c: 1793: shortPacketStatus = 2;
  9421  0E4E  3002               	movlw	2
  9422  0E4F                     L12:	
  9423  0E4F  00F0               	movwf	??_USBCtrlTrfTxService
  9424  0E50  0870               	movf	??_USBCtrlTrfTxService,w
  9425  0E51  00ED               	movwf	_shortPacketStatus^(0+256)	;volatile
  9426  0E52                     i1l271:	
  9427                           
  9428                           ;usb_device.c: 1794: }
  9429                           ;usb_device.c: 1795: }
  9430                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  9431  0E52  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9432  0E53  00F0               	movwf	??_USBCtrlTrfTxService
  9433  0E54  01F1               	clrf	??_USBCtrlTrfTxService+1
  9434  0E55  0870               	movf	??_USBCtrlTrfTxService,w
  9435  0E56  0023               	movlb	3	; select bank3
  9436  0E57  02B6               	subwf	(_inPipes^(0+384)+3),f	;volatile
  9437  0E58  0871               	movf	??_USBCtrlTrfTxService+1,w
  9438  0E59  3BB7               	subwfb	((_inPipes+1)^(0+384)+3),f	;volatile
  9439                           
  9440                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  9441  0E5A  0827               	movf	_pBDTEntryIn^(0+384),w
  9442  0E5B  3E01               	addlw	1
  9443  0E5C  00F0               	movwf	??_USBCtrlTrfTxService
  9444  0E5D  3000               	movlw	0
  9445  0E5E  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  9446  0E5F  00F1               	movwf	??_USBCtrlTrfTxService+1
  9447  0E60  0870               	movf	??_USBCtrlTrfTxService,w
  9448  0E61  0086               	movwf	6
  9449  0E62  0871               	movf	??_USBCtrlTrfTxService+1,w
  9450  0E63  0087               	movwf	7
  9451  0E64  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9452  0E65  0081               	movwf	1
  9453                           
  9454                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  9455  0E66  3058               	movlw	88
  9456  0E67  00F0               	movwf	??_USBCtrlTrfTxService
  9457  0E68  0870               	movf	??_USBCtrlTrfTxService,w
  9458  0E69  00DD               	movwf	_pDst^(0+384)
  9459                           
  9460                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9461  0E6A  1C35               	btfss	(_inPipes^(0+384)+2),0	;volatile
  9462  0E6B  2E82               	goto	i1l2743
  9463  0E6C  2E9B               	goto	i1l2753
  9464  0E6D                     i1l2735:	
  9465                           ;usb_device.c: 1810: {
  9466                           ;usb_device.c: 1811: while(byteToSend)
  9467                           
  9468                           
  9469                           ;usb_device.c: 1812: {
  9470                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  9471  0E6D  0833               	movf	_inPipes^(0+384),w	;volatile
  9472  0E6E  0084               	movwf	4
  9473  0E6F  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9474  0E70  0085               	movwf	5
  9475  0E71  0800               	movf	0,w	;code access
  9476  0E72  00F0               	movwf	??_USBCtrlTrfTxService
  9477  0E73  085D               	movf	_pDst^(0+384),w
  9478  0E74  0086               	movwf	6
  9479  0E75  0187               	clrf	7
  9480  0E76  0870               	movf	??_USBCtrlTrfTxService,w
  9481  0E77  0081               	movwf	1
  9482  0E78  3001               	movlw	1
  9483  0E79  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9484  0E7A  3000               	movlw	0
  9485  0E7B  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9486  0E7C  3001               	movlw	1
  9487  0E7D  00F0               	movwf	??_USBCtrlTrfTxService
  9488  0E7E  0870               	movf	??_USBCtrlTrfTxService,w
  9489  0E7F  07DD               	addwf	_pDst^(0+384),f
  9490                           
  9491                           ;usb_device.c: 1814: byteToSend--;
  9492  0E80  3001               	movlw	1
  9493  0E81  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9494  0E82                     i1l2743:	
  9495  0E82  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9496  0E83  1903               	btfsc	3,2
  9497  0E84  0008               	return
  9498  0E85  2E6D               	goto	i1l2735
  9499  0E86                     i1l2745:	
  9500                           ;usb_device.c: 1817: else
  9501                           ;usb_device.c: 1818: {
  9502                           ;usb_device.c: 1819: while(byteToSend)
  9503                           
  9504                           ;usb_device.c: 1815: }
  9505                           ;usb_device.c: 1816: }
  9506                           
  9507                           
  9508                           ;usb_device.c: 1820: {
  9509                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  9510  0E86  0833               	movf	_inPipes^(0+384),w	;volatile
  9511  0E87  0084               	movwf	4
  9512  0E88  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9513  0E89  0085               	movwf	5
  9514  0E8A  0800               	movf	0,w	;code access
  9515  0E8B  00F0               	movwf	??_USBCtrlTrfTxService
  9516  0E8C  085D               	movf	_pDst^(0+384),w
  9517  0E8D  0086               	movwf	6
  9518  0E8E  0187               	clrf	7
  9519  0E8F  0870               	movf	??_USBCtrlTrfTxService,w
  9520  0E90  0081               	movwf	1
  9521  0E91  3001               	movlw	1
  9522  0E92  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9523  0E93  3000               	movlw	0
  9524  0E94  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9525  0E95  3001               	movlw	1
  9526  0E96  00F0               	movwf	??_USBCtrlTrfTxService
  9527  0E97  0870               	movf	??_USBCtrlTrfTxService,w
  9528  0E98  07DD               	addwf	_pDst^(0+384),f
  9529                           
  9530                           ;usb_device.c: 1822: byteToSend--;
  9531  0E99  3001               	movlw	1
  9532  0E9A  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9533  0E9B                     i1l2753:	
  9534  0E9B  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9535  0E9C  1903               	btfsc	3,2
  9536  0E9D  0008               	return
  9537  0E9E  2E86               	goto	i1l2745
  9538  0E9F                     __end_of_USBCtrlTrfTxService:	
  9539  007E                     btemp	set	126	;btemp
  9540  007E                     int$flags	set	126
  9541  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         226
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      6      12
    BANK2            16     13      16
    BANK3            80      4      75
    BANK4            80      7      25
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0[8]), RAM(DATA[4096]), SetupPkt(BANK0[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK2[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK5[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1782_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1782_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1782_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1782_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S249$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S239$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S239$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S215$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S215$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S215$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S215$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_CDCTxService
    _main->_getsUSBUSART

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    8504
                                              2 BANK3      2     2      0
                                              0 BANK4      7     7      0
                          _CDCInitEP
                       _CDCTxService
                           _SPI_Init
                          _SPI_Write
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (1) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _getsUSBUSART                                         4     3      1    2332
                                             11 BANK2      2     1      1
                                              0 BANK3      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            3     3      0      34
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             11 BANK2      1     1      0
                                              0 BANK3      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _CDCInitEP                                            1     1      0    3045
                                              0 BANK3      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    2093
                                              0 BANK2     11     7      4
 ---------------------------------------------------------------------------------
 (2) _USBEnableEndpoint                                    6     5      1     952
                                              7 BANK2      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBConfigureEndpoint                                 7     6      1     524
                                              0 BANK2      7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   27385
                                              5 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   27385
                                             15 BANK0      1     1      0
                                              3 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   16120
                                              0 BANK1      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   15891
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12150
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4335
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     526
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4120
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3649
                                              0 BANK0      6     0      6
                 _USBCheckCDCRequest
                        i1_CDCInitEP
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_CDCInitEP                                          1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) i1_USBEnableEndpoint                                  6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) i1_USBConfigureEndpoint                               7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _SPI_Init
   _SPI_Write
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
   _getsUSBUSART
     _USBTransferOnePacket
   _putUSBUSART

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_SYSTEM_Initialize
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_SYSTEM_Initialize
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      6       C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      D      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      7      19      13       31.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed May 31 11:24:03 2017

                              _USB_SD_Ptr 10BD                                         pc 0002  
                             __CFG_CP$OFF 0000                               _SSPSTATbits 0214  
                           _USBDeviceInit 031A                        __size_of_CDCInitEP 003F  
                             __CFG_LVP$ON 0000      USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062                                       l233 09A0  
                                     l173 0361               __end_of_USBStdGetDscHandler 1000  
                                     l642 0914                                       l565 0944  
                                     l663 04D4                                       l666 04E9  
                                     _BDT 0020                                       _RC2 0072  
                                     _RB7 006F                                       _UIE 0E92  
                                     _UIR 0E90                                _USBSuspend 09AB  
                    USBStdSetCfgHandler@i 006A                      USBStdSetCfgHandler@p 0067  
             __end_ofi1_SYSTEM_Initialize 092E                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 016B  
                          _USBDeviceState 016E                     ??_USBCtrlTrfRxService 0072  
                          ??_getsUSBUSART 01E7                  USBEnableEndpoint@options 0167  
                                    l4101 0931                                      l4105 0938  
              USBConfigureEndpoint@handle 0166                                      l4053 0BAA  
                                    l4055 0BB3                                      l4063 0A13  
                                    l4151 0348                                      l4143 033B  
                                    l4135 032A                                      l4305 02B3  
                                    l4313 02CE                                      l4067 0A1B  
                                    l4083 070B                                      l4075 06FB  
                                    l4331 02F9                                      l4315 02D2  
                                    l4323 02ED                                      l4227 09A5  
                                    l4163 0366                                      l4235 0CCB  
                                    l4093 0754                                      l4333 02FF  
                                    l4325 02F0                                      l4245 0CE2  
                                    l4095 076C                                      l4335 0317  
                                    l4191 03AD                                      l4247 0CFF  
                                    l4239 0CE0                                      l4263 098D  
                                    l4281 026C                                      l4273 0262  
                                    l4185 0389                                      l4249 0D16  
                                    l4443 0528                                      l4293 0295  
                                    l4287 028B                                      l4399 04A9  
                                    u4067 04CF                                      u4077 04E4  
                                    u3625 0B83                                      u3635 0B89  
                                    u3645 0B91                                      u3745 034B  
                                    i1l35 0AF8                     ??_USBCtrlTrfTxService 0070  
                                    _UCFG 0E91                                      _UEP0 0E98  
                                    _UEP1 0E99                                      _UEIE 0E97  
                                    _UEIR 0E93                                      _UCON 0E8E  
                            ?i1_CDCInitEP 0070                              __CFG_WRT$OFF 0000  
                         _CDCDataInHandle 01C6    USBStdFeatureReqHandler@current_ep_data 006A  
                                    _pDst 01DD                                      _main 0480  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                               _BaudRateGen 01B8  
                                    fsr1l 0006                           _USBDeviceAttach 098F  
                                    btemp 007E                                      start 0012  
                           __CFG_IESO$OFF 0000                __end_of_USBCheckStdRequest 0E35  
                  ??_USBCtrlTrfOutHandler 0076                             __CFG_MCLRE$ON 0000  
               ??_USBStdFeatureReqHandler 0066                  ??_USBStdGetStatusHandler 0070  
                          ?_USBDeviceInit 0070                               _writeBuffer 02A0  
                                   ?_main 0070                i1USBEnableEndpoint@options 0077  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0092  
                                   _ANSC2 0C72                                     _ANSC3 0C73  
                  __end_of_USBDeviceTasks 0252                 ?_USBCtrlEPServiceComplete 0070  
                                   i1l323 0C15                                     i1l173 0417  
                                   i1l326 0C59                                     i1l190 01CB  
                                   i1l271 0E52                                     i1l327 0C1E  
                                   i1l328 0C21                                     i1l184 018E  
                                   i1l258 0615                                     i1l194 01F6  
                                   i1l371 0F06                                     i1l419 0128  
                                   i1l195 024F                                     i1l196 01FF  
                                   i1l286 0542                                     i1l383 0E34  
                                   i1l385 0DDB                                     i1l394 0E0E  
                                   i1l565 092D                                     i1l479 0DD2  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0072                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 0D74                                     _sd000 10C3  
                                   _sd001 1077                                     _sd002 1043  
          ?_USBIncrement1msInternalTimers 0070                          __end_of_SPI_Init 0906  
                          __CFG_BOREN$OFF 0000                         __end_of_CDCInitEP 0B38  
                                   status 0003                                     wtemp0 007E  
                      __size_of_SPI_Write 0013                           putUSBUSART@data 0162  
            __size_of_USBStdSetCfgHandler 008E                           __initialization 0014  
                            __end_of_main 052C                     _control_signal_bitmap 01CE  
                          __CFG_LPBOR$OFF 0000                 __size_of_USBCtrlEPService 0057  
                                  ??_main 01E9                           ?_USBDeviceTasks 0070  
                             ?_USBSuspend 0070                          SPI_Write@TempVar 0161  
                     __CFG_USBLSCLK$48MHz 0000                           i1_USBDeviceInit 03D2  
                            _cdc_mem_type 01CF                   __end_of_USBDeviceAttach 09AB  
                                  _ADCON1 009E                                    _ADCON2 009F  
                        _CDCDataOutHandle 01C8                                    i1S4505 0800  
                                  _ACTCON 039B                                    _ADRESH 009C  
                                  _ADRESL 009B                           getsUSBUSART@len 016B  
                  SYSTEM_Initialize@state 0160                     __size_of_CDCTxService 00C8  
                                  i1l3001 0119                                    i1l3101 0592  
                                  i1l3013 014D                                    i1l3103 059E  
                                  i1l3015 0156                                    i1l3009 012E  
                                  i1l3033 05E3                                    i1l3123 0DE4  
                                  i1l3051 0624                                    i1l3205 0A92  
                                  i1l3125 0DE7                                    i1l3029 05DF  
                                  i1l3231 0EBD                                    i1l3135 0DF8  
                                  i1l3127 0DEA                                    i1l3233 0EC2  
                                  i1l3217 0ABE                                    i1l3137 0DFB  
                                  i1l3153 0E29                                    i1l3313 0CAC  
                                  i1l3251 0F0C                                    i1l3243 0EE9  
                                  i1l3091 0563                                    i1l3139 0DFE  
                                  i1l3059 062D                                    i1l3315 0CAF  
                                  i1l2605 078E                                    i1l2701 0ACD  
                                  i1l3149 0E1B                                    i1l3317 0CB2  
                                  i1l3421 0439                                    i1l3247 0EF9  
                                  i1l2615 07D7                                    i1l3263 09FE  
                                  i1l3089 054A                                    i1l2617 07EF  
                                  i1l2705 0AD0                                    i1l3265 0A07  
                                  i1l2723 0E4B                                    i1l2643 0D93  
                                  i1l2635 0D87                                    i1l2811 0D45  
                                  i1l3427 045D                                    i1l3371 03E1  
                                  i1l2653 0DAA                                    i1l2901 0FF0  
                                  i1l3621 01D8                                    i1l3605 01BC  
                                  i1l2735 0E6D                                    i1l2743 0E82  
                                  i1l2647 0D9A                                    i1l2575 0B67  
                                  i1l2831 066B                                    i1l2815 0D58  
                                  i1l3295 0A4D                                    i1l3615 01D1  
                                  i1l2745 0E86                                    i1l2753 0E9B  
                                  i1l2665 0DC0                                    i1l2577 0B70  
                                  i1l2585 09D2                                    i1l2905 0FF3  
                                  i1l2761 0949                                    i1l3297 0A4F  
                                  i1l2659 0DB8                                    i1l2691 0922  
                                  i1l4507 0AD9                                    i1l3387 03FE  
                                  i1l3379 03F2                                    i1l3571 017B  
                                  i1l2589 09D9                                    i1l2597 077E  
                                  i1l4509 0AF3                                    i1l2917 0C31  
                                  i1l3629 01EE                                    i1l2687 091B  
                                  i1l2695 0AC2                                    i1l2927 0C4D  
                                  i1l2871 06D7                                    i1l2855 06A6  
                                  i1l2839 067C                                    i1l3399 041C  
                                  i1l3655 0236                                    i1l2697 0AC6  
                                  i1l2961 0088                                    i1l2945 0058  
                                  i1l2849 0692                                    i1l3657 0245  
                                  i1l3649 021D                                    i1l3593 01A1  
                                  i1l2779 0F36                                    i1l2699 0ACA  
                                  i1l2947 005A                                    i1l2891 0FC9  
                                  i1l2883 0F96                                    i1l3579 0188  
                                  i1l2973 00BD                                    i1l2893 0FCC  
                                  i1l2983 00D8                                    i1l2975 00C8  
                                  i1l2967 00A9                                    i1l2879 0F8C  
                                  i1l3599 01A7                                    i1l2985 00DF  
                                  i1l2899 0FED                                    i1l2989 00EA  
                                  i1l2999 0113                                    u207_25 0D4F  
                                  u246_25 053C                                    u182_25 0B40  
                                  u183_25 0B46                                    u271_25 0C75  
                                  u184_25 0B4E                                    u283_25 0401  
                                  _OSCCON 0099                             CDCTxService@i 01E7  
                                  _TRISB4 046C                                    _TRISC2 0472  
                                  _TRISC3 0473                                    _TRISB6 046E  
                                  _TRISB7 046F                                    _TRISC6 0476  
                                  _TRISC7 0477                                    _SSPBUF 0211  
            i1USBTransferOnePacket@handle 0079                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 016D                           USBDeviceTasks@i 006F  
             USBStdFeatureReqHandler@pUEP 0068                  USBTransferOnePacket@data 0161  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 0160  
                            ?_putUSBUSART 0160                            __CFG_STVREN$ON 0000  
                    __end_of_getsUSBUSART 0D18                         _USBEnableEndpoint 0A0A  
         __size_of_USBStdGetStatusHandler 0055                                    _memset 0945  
                    i1USBEnableEndpoint@p 007A                        ?_USBEnableEndpoint 0167  
                                  main@v1 0234                                    main@v2 0237  
           __size_of_USBTransferOnePacket 0084                         __end_of_SPI_Write 0919  
                            _CDCTxService 0252                       ??_USBEnableEndpoint 0168  
            i1USBConfigureEndpoint@handle 0076                               _CtrlTrfData 0058  
                    _controlTransferState 00E3                         _SYSTEM_Initialize 092E  
                 __end_of__initialization 003E                i1USBTransferOnePacket@data 0071  
                    __size_ofi1_CDCInitEP 0036                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0027                       __size_of_USBSuspend 001F  
                    i1USBDeviceInit@i_821 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0A2D                             __end_of_sd000 10C7  
                           __end_of_sd001 10AB                             __end_of_sd002 1077  
                     ??_SYSTEM_Initialize 0160          __size_of_USBCtrlEPAllowDataStage 005C  
           __size_of_USBConfigureEndpoint 0043                   __end_ofi1_USBDeviceInit 0480  
             __end_of_USBCtrlTrfInHandler 0F0F                                 ?_SPI_Init 0070  
                          _OPTION_REGbits 0095                                _cdc_notice 0220  
                              _cdc_rx_len 01D1                                _cdc_tx_len 01D0  
                ??_USBCtrlTrfSetupHandler 006E                   _USBTicksSinceSuspendEnd 01D2  
                        ?_USBDeviceAttach 0070                 __end_of_SYSTEM_Initialize 0945  
                  _USBStdGetStatusHandler 0C11                                __pbssBANK1 00E0  
                              __pbssBANK2 016D                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                __pbssBANK5 02A0  
                              __pbssBANK6 0320               __size_of_USBWakeFromSuspend 0020  
                             _pBDTEntryIn 01A7          __end_of_USBCtrlEPServiceComplete 065F  
             __size_of_USBCheckCDCRequest 005F                                __pmaintext 0480  
                    USBCtrlTrfRxService@i 0074                           __CFG_PLLMULT$3x 0000  
                              __pintentry 0004              __size_ofi1_USBEnableEndpoint 0020  
                                 ?_memset 0070                                _device_dsc 10AB  
                              ??_SPI_Init 0160                          _USBCtrlEPService 0C66  
                              _ep_data_in 01C3               __end_of_USBCtrlTrfRxService 05CD  
                      _USBCheckStdRequest 0DD3                         _configDescriptor1 1000  
             __end_of_USBCtrlTrfTxService 0E9F                       _USBStdSetCfgHandler 065F  
                                 u273_2m0 0CA8                                   _SSP1BUF 0211  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92                                   _UIRbits 0E90  
            __size_ofi1_SYSTEM_Initialize 0015                             _cdc_trf_state 00E2  
                ??i1_USBTransferOnePacket 0074                                   _pCDCDst 01CA  
                                 _pCDCSrc 01CC                     __size_of_getsUSBUSART 005B  
         ??_USBIncrement1msInternalTimers 0070                      ?_USBStdSetCfgHandler 0070  
                               _CDCInitEP 0AF9                             SPI_Write@data 0162  
              __size_of_USBEnableEndpoint 0023                                _readBuffer 0320  
                    ??_USBCheckStdRequest 006D             __size_of_USBCtrlTrfOutHandler 0037  
                        ??_USBDeviceTasks 00E9                         ??_USBStallHandler 0070  
                        ?i1_USBDeviceInit 0070                      __size_of_putUSBUSART 001A  
                      getsUSBUSART@buffer 016C                           __size_of_memset 0018  
               __end_of_configDescriptor1 1043                                   __ptext1 0975  
                                 __ptext2 0CBD                                   __ptext3 031A  
                                 __ptext4 098F                                   __ptext5 092E  
                                 __ptext6 0906                                   __ptext7 08F3  
                                 __ptext8 0252                                   __ptext9 0AF9  
                                 _inPipes 01B3               _USBDeferOUTDataStagePackets 01D3  
                            ??_USBSuspend 0066                     i1USBEnableEndpoint@ep 007C  
                      __end_of_USB_CD_Ptr 10C9                __size_of_SYSTEM_Initialize 0017  
         __size_of_USBCtrlTrfSetupHandler 0054                                   clrloop0 07F5  
                ??i1_USBConfigureEndpoint 0071                      end_of_initialization 003E  
                            _getsUSBUSART 0CBD                        __end_of_USB_SD_Ptr 10C3  
                     _pBDTEntryEP0OutNext 00E0                                   memset@c 0072  
                                 memset@n 0074                                   memset@p 0076  
                         _USB1msTickCount 01BC           _dummy_encapsulated_cmd_response 022A  
                ?_USBStdFeatureReqHandler 0070                     ??_USBStdSetCfgHandler 0066  
                        __CFG_CLKOUTEN$ON 0000                                ?_CDCInitEP 0070  
                      __end_of_USBSuspend 09CA                   _USBCtrlEPAllowDataStage 0D18  
                _USBCtrlEPServiceComplete 05CD                _USBStatusStageEnabledFlag1 01D6  
              _USBStatusStageEnabledFlag2 01D5                        USBEnableEndpoint@p 016A  
                        __CFG_FOSC$INTOSC 0000                        _BothEP0OutUOWNsSet 01D9  
               USBStdSetCfgHandler@i_1572 0069                                 _SPI_Write 0906  
               USBConfigureEndpoint@EPNum 0165                ?_USBCtrlEPAllowStatusStage 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0064                                 _USTATcopy 00E5  
                i1USBTransferOnePacket@ep 0078              __end_of_USBTransferOnePacket 0771  
         __size_ofi1_USBTransferOnePacket 0083                                main@result 0232  
                       putUSBUSART@length 0160                        __CFG_PLLEN$ENABLED 0000  
                      USBDeviceInit@i_821 0163                    _USBCtrlTrfSetupHandler 0BBD  
                   __end_of_USBDeviceInit 03D2     __end_of_USBIncrement1msInternalTimers 0975  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 095D  
                          __end_of_memset 095D                         _USBBusIsSuspended 01DB  
                       __size_of_SPI_Init 0013                       start_initialization 0014  
                 ?_USBStdGetStatusHandler 0070             USBCtrlTrfRxService@byteToRead 0075  
                              ?_SPI_Write 0070                               _cdc_data_rx 0120  
                             _cdc_data_tx 00A0              __end_of_USBConfigureEndpoint 0BBD  
         __end_of_USBStdFeatureReqHandler 016B                       i1_USBEnableEndpoint 09CA  
         __size_ofi1_USBConfigureEndpoint 0042                             ??i1_CDCInitEP 007D  
       __end_of_USBCtrlEPAllowStatusStage 0F81                  __end_of_USBCtrlEPService 0CBD  
               ??_USBCtrlEPAllowDataStage 0073                               ??_CDCInitEP 01E7  
                          USBDeviceInit@i 0164                            USBDeviceInit@p 0161  
                  _pBDTEntryEP0OutCurrent 00E4                   USBTransferOnePacket@dir 0160  
                 USBTransferOnePacket@len 0163               i1USBConfigureEndpoint@EPNum 0075  
                     _USBStdGetDscHandler 0F81                      ?i1_USBEnableEndpoint 0077  
                                ??_memset 0076                       i1_SYSTEM_Initialize 0919  
                  i1_USBTransferOnePacket 0771                    _USBActiveConfiguration 016F  
          __end_of_USBStdGetStatusHandler 0C66                 i1USBTransferOnePacket@dir 0070  
               i1USBTransferOnePacket@len 0073                                 ___latbits 0002  
                           __pcstackBANK0 0060                             __pcstackBANK1 00E6  
                           __pcstackBANK2 0160                             __pcstackBANK3 01E7  
            __size_of_USBCtrlTrfInHandler 0070                             __pcstackBANK4 0232  
                    ?_USBStdGetDscHandler 0070                      ?i1_SYSTEM_Initialize 0070  
              __end_of_USBWakeFromSuspend 0A0A                           _USBStallHandler 0A2D  
                            _pBDTEntryOut 01AD                __end_of_USBCheckCDCRequest 0DD3  
                __size_of_USBDeviceAttach 001C                       __end_ofi1_CDCInitEP 0A8A  
                   ??i1_USBEnableEndpoint 0078                    i1_USBConfigureEndpoint 0B38  
                               __pswtext1 0800                      _USBTransferOnePacket 06ED  
                        main@numBytesRead 0236              __end_of_USBCtrlTrfOutHandler 0AC1  
                   ??_USBStdGetDscHandler 0070                               ??_SPI_Write 0160  
                             _ep_data_out 01C0              __size_of_USBCtrlTrfRxService 00A1  
           USBConfigureEndpoint@direction 0160                     ??i1_SYSTEM_Initialize 0070  
            __size_of_USBCtrlTrfTxService 006A                ??_USBCtrlEPServiceComplete 0075  
                               clear_ram0 07F4                                  _PIE1bits 0091  
                                _PIE2bits 0092                                  _PIR1bits 0011  
                                _PIR2bits 0012                             ??_putUSBUSART 0161  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 01D4  
             __size_of_USBCheckStdRequest 0062                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 0B7A                                  _SPI_Init 08F3  
        __size_of_USBStdFeatureReqHandler 0129                                _ADCON0bits 009D  
                   ?_USBTransferOnePacket 0160                         _SYS_InterruptHigh 0004  
                           ?_CDCTxService 0070                              _RemoteWakeup 01DC  
                      ?_SYS_InterruptHigh 0070                  __size_ofi1_USBDeviceInit 00AE  
                 __end_of_USBStallHandler 0A54               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 06ED                               i1_CDCInitEP 0A54  
                     ??_SYS_InterruptHigh 00EB                        __end_of_device_dsc 10BD  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 0168                                  _SetupPkt 0050  
                   ?_USBConfigureEndpoint 0160                         ??_USBDeviceAttach 0160  
               __end_of_SYS_InterruptHigh 0012                       __end_of_putUSBUSART 098F  
                             _line_coding 01DE                            ??_CDCTxService 016B  
                 __size_of_USBDeviceTasks 00E7                                  __ptext10 06ED  
                                __ptext11 0A0A                                  __ptext20 0C66  
                                __ptext12 0B7A                                  __ptext21 0BBD  
                                __ptext30 0AC1                                  __ptext22 05CD  
                                __ptext14 016B                                  __ptext31 0919  
                                __ptext23 0D18                                  __ptext15 03D2  
                                __ptext40 0E9F                                  __ptext32 0A54  
                                __ptext24 0DD3                                  __ptext16 09EA  
                                __ptext41 0E35                                  __ptext33 0771  
                                __ptext25 065F                                  __ptext17 09AB  
                                __ptext34 09CA                                  __ptext26 0945  
                                __ptext18 0A2D                                  __ptext35 0B38  
                                __ptext27 0C11                                  __ptext19 095D  
                                __ptext36 0D74                                  __ptext28 0F81  
                                __ptext37 0A8A                                  __ptext29 0042  
                                __ptext38 052C                                  __ptext39 0F0F  
          __end_of_USBCtrlTrfSetupHandler 0C11                             __size_of_main 00AC  
                       ?_USBCtrlEPService 0070           i1USBConfigureEndpoint@direction 0070  
                      ??_USBCtrlEPService 00E6                       _USBCtrlTrfInHandler 0E9F  
                                _outPipes 01A0                      _USBCtrlTrfOutHandler 0A8A  
                                int$flags 007E                   ?i1_USBTransferOnePacket 0070  
               _USBCtrlEPAllowStatusStage 0F0F                    ??_USBTransferOnePacket 0164  
               _USBDeferStatusStagePacket 01D7                  CDCTxService@byte_to_send 01E8  
                        i1USBDeviceInit@i 0074                          i1USBDeviceInit@p 0071  
                              _INTCONbits 000B                  i1SYSTEM_Initialize@state 0070  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 0072  
                                memset@p1 0070                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 006B                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00B8   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0AF9  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0038          ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007E           _USER_USB_CALLBACK_EVENT_HANDLER 0AC1  
                       ??i1_USBDeviceInit 0070                   ?i1_USBConfigureEndpoint 0070  
          __end_ofi1_USBTransferOnePacket 07F4                    ??_USBConfigureEndpoint 0161  
                   ?_USBCtrlTrfOutHandler 0070                               _putUSBUSART 0975  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 052C  
                      _USBWakeFromSuspend 09EA                   _USBStdFeatureReqHandler 0042  
                      _USBCheckCDCRequest 0D74                       _USBCtrlTrfTxService 0E35  
              __size_of_SYS_InterruptHigh 000E                             __pstringtext1 10BD  
                           __pstringtext2 10C7                             __pstringtext3 1000  
                           __pstringtext4 1043                             __pstringtext5 1077  
                           __pstringtext6 10AB                             __pstringtext7 10C3  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0073  
                   _USBAlternateInterface 01E5                       ?_USBCheckCDCRequest 0070  
                             _SSPCON1bits 0215                       USBEnableEndpoint@ep 016C  
                         _endpoint_number 01DA                      ?_USBCtrlTrfRxService 0070  
                           ?_getsUSBUSART 016B                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 01D8  
          __end_ofi1_USBConfigureEndpoint 0B7A                      ??_USBWakeFromSuspend 0066  
             __end_ofi1_USBEnableEndpoint 09EA                USBTransferOnePacket@handle 0169  
                    __end_of_CDCTxService 031A                      ??_USBCheckCDCRequest 0070  
                              _USB_CD_Ptr 10C7  
