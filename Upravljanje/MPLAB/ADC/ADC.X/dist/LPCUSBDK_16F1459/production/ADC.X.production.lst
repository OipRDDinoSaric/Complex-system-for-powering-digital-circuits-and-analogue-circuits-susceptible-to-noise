

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 25 09:16:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext1,local,class=CONST,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x20,48,_BDT
    65                           	dabs	1,0x58,8,_CtrlTrfData
    66                           	dabs	1,0x50,8,_SetupPkt
    67                           	dabs	1,0xA0,64,_cdc_data_tx
    68                           	dabs	1,0x120,64,_cdc_data_rx
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 1.45
    72                           ; Generated 16/11/2017 GMT
    73                           ; 
    74                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1459 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  0111                     	;# 
   152  0112                     	;# 
   153  0113                     	;# 
   154  0114                     	;# 
   155  0115                     	;# 
   156  0116                     	;# 
   157  0117                     	;# 
   158  0118                     	;# 
   159  0119                     	;# 
   160  011D                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  0191                     	;# 
   165  0191                     	;# 
   166  0192                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  020C                     	;# 
   182  020D                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0391                     	;# 
   199  0392                     	;# 
   200  0393                     	;# 
   201  0394                     	;# 
   202  0395                     	;# 
   203  0396                     	;# 
   204  039A                     	;# 
   205  039B                     	;# 
   206  0611                     	;# 
   207  0612                     	;# 
   208  0613                     	;# 
   209  0613                     	;# 
   210  0614                     	;# 
   211  0615                     	;# 
   212  0616                     	;# 
   213  0616                     	;# 
   214  0691                     	;# 
   215  0692                     	;# 
   216  0693                     	;# 
   217  0694                     	;# 
   218  0695                     	;# 
   219  0E8E                     	;# 
   220  0E8F                     	;# 
   221  0E90                     	;# 
   222  0E91                     	;# 
   223  0E92                     	;# 
   224  0E93                     	;# 
   225  0E94                     	;# 
   226  0E94                     	;# 
   227  0E95                     	;# 
   228  0E96                     	;# 
   229  0E97                     	;# 
   230  0E98                     	;# 
   231  0E99                     	;# 
   232  0E9A                     	;# 
   233  0E9B                     	;# 
   234  0E9C                     	;# 
   235  0E9D                     	;# 
   236  0E9E                     	;# 
   237  0E9F                     	;# 
   238  0FE4                     	;# 
   239  0FE5                     	;# 
   240  0FE6                     	;# 
   241  0FE7                     	;# 
   242  0FE8                     	;# 
   243  0FE9                     	;# 
   244  0FEA                     	;# 
   245  0FEB                     	;# 
   246  0FED                     	;# 
   247  0FEE                     	;# 
   248  0FEF                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0113                     	;# 
   298  0114                     	;# 
   299  0115                     	;# 
   300  0116                     	;# 
   301  0117                     	;# 
   302  0118                     	;# 
   303  0119                     	;# 
   304  011D                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  018E                     	;# 
   308  0191                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0194                     	;# 
   314  0195                     	;# 
   315  0196                     	;# 
   316  0197                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020D                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0391                     	;# 
   343  0392                     	;# 
   344  0393                     	;# 
   345  0394                     	;# 
   346  0395                     	;# 
   347  0396                     	;# 
   348  039A                     	;# 
   349  039B                     	;# 
   350  0611                     	;# 
   351  0612                     	;# 
   352  0613                     	;# 
   353  0613                     	;# 
   354  0614                     	;# 
   355  0615                     	;# 
   356  0616                     	;# 
   357  0616                     	;# 
   358  0691                     	;# 
   359  0692                     	;# 
   360  0693                     	;# 
   361  0694                     	;# 
   362  0695                     	;# 
   363  0E8E                     	;# 
   364  0E8F                     	;# 
   365  0E90                     	;# 
   366  0E91                     	;# 
   367  0E92                     	;# 
   368  0E93                     	;# 
   369  0E94                     	;# 
   370  0E94                     	;# 
   371  0E95                     	;# 
   372  0E96                     	;# 
   373  0E97                     	;# 
   374  0E98                     	;# 
   375  0E99                     	;# 
   376  0E9A                     	;# 
   377  0E9B                     	;# 
   378  0E9C                     	;# 
   379  0E9D                     	;# 
   380  0E9E                     	;# 
   381  0E9F                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011D                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  018E                     	;# 
   452  0191                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0194                     	;# 
   458  0195                     	;# 
   459  0196                     	;# 
   460  0197                     	;# 
   461  0199                     	;# 
   462  019A                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020C                     	;# 
   470  020D                     	;# 
   471  0211                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0212                     	;# 
   475  0213                     	;# 
   476  0213                     	;# 
   477  0214                     	;# 
   478  0214                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0216                     	;# 
   483  0216                     	;# 
   484  0217                     	;# 
   485  0217                     	;# 
   486  0391                     	;# 
   487  0392                     	;# 
   488  0393                     	;# 
   489  0394                     	;# 
   490  0395                     	;# 
   491  0396                     	;# 
   492  039A                     	;# 
   493  039B                     	;# 
   494  0611                     	;# 
   495  0612                     	;# 
   496  0613                     	;# 
   497  0613                     	;# 
   498  0614                     	;# 
   499  0615                     	;# 
   500  0616                     	;# 
   501  0616                     	;# 
   502  0691                     	;# 
   503  0692                     	;# 
   504  0693                     	;# 
   505  0694                     	;# 
   506  0695                     	;# 
   507  0E8E                     	;# 
   508  0E8F                     	;# 
   509  0E90                     	;# 
   510  0E91                     	;# 
   511  0E92                     	;# 
   512  0E93                     	;# 
   513  0E94                     	;# 
   514  0E94                     	;# 
   515  0E95                     	;# 
   516  0E96                     	;# 
   517  0E97                     	;# 
   518  0E98                     	;# 
   519  0E99                     	;# 
   520  0E9A                     	;# 
   521  0E9B                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0E9F                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  000E                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  010D                     	;# 
   582  010E                     	;# 
   583  0111                     	;# 
   584  0112                     	;# 
   585  0113                     	;# 
   586  0114                     	;# 
   587  0115                     	;# 
   588  0116                     	;# 
   589  0117                     	;# 
   590  0118                     	;# 
   591  0119                     	;# 
   592  011D                     	;# 
   593  018C                     	;# 
   594  018D                     	;# 
   595  018E                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  0211                     	;# 
   616  0211                     	;# 
   617  0212                     	;# 
   618  0212                     	;# 
   619  0213                     	;# 
   620  0213                     	;# 
   621  0214                     	;# 
   622  0214                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0216                     	;# 
   627  0216                     	;# 
   628  0217                     	;# 
   629  0217                     	;# 
   630  0391                     	;# 
   631  0392                     	;# 
   632  0393                     	;# 
   633  0394                     	;# 
   634  0395                     	;# 
   635  0396                     	;# 
   636  039A                     	;# 
   637  039B                     	;# 
   638  0611                     	;# 
   639  0612                     	;# 
   640  0613                     	;# 
   641  0613                     	;# 
   642  0614                     	;# 
   643  0615                     	;# 
   644  0616                     	;# 
   645  0616                     	;# 
   646  0691                     	;# 
   647  0692                     	;# 
   648  0693                     	;# 
   649  0694                     	;# 
   650  0695                     	;# 
   651  0E8E                     	;# 
   652  0E8F                     	;# 
   653  0E90                     	;# 
   654  0E91                     	;# 
   655  0E92                     	;# 
   656  0E93                     	;# 
   657  0E94                     	;# 
   658  0E94                     	;# 
   659  0E95                     	;# 
   660  0E96                     	;# 
   661  0E97                     	;# 
   662  0E98                     	;# 
   663  0E99                     	;# 
   664  0E9A                     	;# 
   665  0E9B                     	;# 
   666  0E9C                     	;# 
   667  0E9D                     	;# 
   668  0E9E                     	;# 
   669  0E9F                     	;# 
   670  0FE4                     	;# 
   671  0FE5                     	;# 
   672  0FE6                     	;# 
   673  0FE7                     	;# 
   674  0FE8                     	;# 
   675  0FE9                     	;# 
   676  0FEA                     	;# 
   677  0FEB                     	;# 
   678  0FED                     	;# 
   679  0FEE                     	;# 
   680  0FEF                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0008                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0015                     	;# 
   699  0016                     	;# 
   700  0016                     	;# 
   701  0017                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  001B                     	;# 
   706  001C                     	;# 
   707  008C                     	;# 
   708  008D                     	;# 
   709  008E                     	;# 
   710  0091                     	;# 
   711  0092                     	;# 
   712  0095                     	;# 
   713  0096                     	;# 
   714  0097                     	;# 
   715  0098                     	;# 
   716  0099                     	;# 
   717  009A                     	;# 
   718  009B                     	;# 
   719  009B                     	;# 
   720  009C                     	;# 
   721  009D                     	;# 
   722  009E                     	;# 
   723  009F                     	;# 
   724  010C                     	;# 
   725  010D                     	;# 
   726  010E                     	;# 
   727  0111                     	;# 
   728  0112                     	;# 
   729  0113                     	;# 
   730  0114                     	;# 
   731  0115                     	;# 
   732  0116                     	;# 
   733  0117                     	;# 
   734  0118                     	;# 
   735  0119                     	;# 
   736  011D                     	;# 
   737  018C                     	;# 
   738  018D                     	;# 
   739  018E                     	;# 
   740  0191                     	;# 
   741  0191                     	;# 
   742  0192                     	;# 
   743  0193                     	;# 
   744  0193                     	;# 
   745  0194                     	;# 
   746  0195                     	;# 
   747  0196                     	;# 
   748  0197                     	;# 
   749  0199                     	;# 
   750  019A                     	;# 
   751  019B                     	;# 
   752  019B                     	;# 
   753  019C                     	;# 
   754  019D                     	;# 
   755  019E                     	;# 
   756  019F                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  0211                     	;# 
   760  0211                     	;# 
   761  0212                     	;# 
   762  0212                     	;# 
   763  0213                     	;# 
   764  0213                     	;# 
   765  0214                     	;# 
   766  0214                     	;# 
   767  0215                     	;# 
   768  0215                     	;# 
   769  0215                     	;# 
   770  0216                     	;# 
   771  0216                     	;# 
   772  0217                     	;# 
   773  0217                     	;# 
   774  0391                     	;# 
   775  0392                     	;# 
   776  0393                     	;# 
   777  0394                     	;# 
   778  0395                     	;# 
   779  0396                     	;# 
   780  039A                     	;# 
   781  039B                     	;# 
   782  0611                     	;# 
   783  0612                     	;# 
   784  0613                     	;# 
   785  0613                     	;# 
   786  0614                     	;# 
   787  0615                     	;# 
   788  0616                     	;# 
   789  0616                     	;# 
   790  0691                     	;# 
   791  0692                     	;# 
   792  0693                     	;# 
   793  0694                     	;# 
   794  0695                     	;# 
   795  0E8E                     	;# 
   796  0E8F                     	;# 
   797  0E90                     	;# 
   798  0E91                     	;# 
   799  0E92                     	;# 
   800  0E93                     	;# 
   801  0E94                     	;# 
   802  0E94                     	;# 
   803  0E95                     	;# 
   804  0E96                     	;# 
   805  0E97                     	;# 
   806  0E98                     	;# 
   807  0E99                     	;# 
   808  0E9A                     	;# 
   809  0E9B                     	;# 
   810  0E9C                     	;# 
   811  0E9D                     	;# 
   812  0E9E                     	;# 
   813  0E9F                     	;# 
   814  0FE4                     	;# 
   815  0FE5                     	;# 
   816  0FE6                     	;# 
   817  0FE7                     	;# 
   818  0FE8                     	;# 
   819  0FE9                     	;# 
   820  0FEA                     	;# 
   821  0FEB                     	;# 
   822  0FED                     	;# 
   823  0FEE                     	;# 
   824  0FEF                     	;# 
   825  0000                     	;# 
   826  0001                     	;# 
   827  0002                     	;# 
   828  0003                     	;# 
   829  0004                     	;# 
   830  0005                     	;# 
   831  0006                     	;# 
   832  0007                     	;# 
   833  0008                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000D                     	;# 
   839  000E                     	;# 
   840  0011                     	;# 
   841  0012                     	;# 
   842  0015                     	;# 
   843  0016                     	;# 
   844  0016                     	;# 
   845  0017                     	;# 
   846  0018                     	;# 
   847  0019                     	;# 
   848  001A                     	;# 
   849  001B                     	;# 
   850  001C                     	;# 
   851  008C                     	;# 
   852  008D                     	;# 
   853  008E                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0095                     	;# 
   857  0096                     	;# 
   858  0097                     	;# 
   859  0098                     	;# 
   860  0099                     	;# 
   861  009A                     	;# 
   862  009B                     	;# 
   863  009B                     	;# 
   864  009C                     	;# 
   865  009D                     	;# 
   866  009E                     	;# 
   867  009F                     	;# 
   868  010C                     	;# 
   869  010D                     	;# 
   870  010E                     	;# 
   871  0111                     	;# 
   872  0112                     	;# 
   873  0113                     	;# 
   874  0114                     	;# 
   875  0115                     	;# 
   876  0116                     	;# 
   877  0117                     	;# 
   878  0118                     	;# 
   879  0119                     	;# 
   880  011D                     	;# 
   881  018C                     	;# 
   882  018D                     	;# 
   883  018E                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0194                     	;# 
   890  0195                     	;# 
   891  0196                     	;# 
   892  0197                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019C                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019F                     	;# 
   901  020C                     	;# 
   902  020D                     	;# 
   903  0211                     	;# 
   904  0211                     	;# 
   905  0212                     	;# 
   906  0212                     	;# 
   907  0213                     	;# 
   908  0213                     	;# 
   909  0214                     	;# 
   910  0214                     	;# 
   911  0215                     	;# 
   912  0215                     	;# 
   913  0215                     	;# 
   914  0216                     	;# 
   915  0216                     	;# 
   916  0217                     	;# 
   917  0217                     	;# 
   918  0391                     	;# 
   919  0392                     	;# 
   920  0393                     	;# 
   921  0394                     	;# 
   922  0395                     	;# 
   923  0396                     	;# 
   924  039A                     	;# 
   925  039B                     	;# 
   926  0611                     	;# 
   927  0612                     	;# 
   928  0613                     	;# 
   929  0613                     	;# 
   930  0614                     	;# 
   931  0615                     	;# 
   932  0616                     	;# 
   933  0616                     	;# 
   934  0691                     	;# 
   935  0692                     	;# 
   936  0693                     	;# 
   937  0694                     	;# 
   938  0695                     	;# 
   939  0E8E                     	;# 
   940  0E8F                     	;# 
   941  0E90                     	;# 
   942  0E91                     	;# 
   943  0E92                     	;# 
   944  0E93                     	;# 
   945  0E94                     	;# 
   946  0E94                     	;# 
   947  0E95                     	;# 
   948  0E96                     	;# 
   949  0E97                     	;# 
   950  0E98                     	;# 
   951  0E99                     	;# 
   952  0E9A                     	;# 
   953  0E9B                     	;# 
   954  0E9C                     	;# 
   955  0E9D                     	;# 
   956  0E9E                     	;# 
   957  0E9F                     	;# 
   958  0FE4                     	;# 
   959  0FE5                     	;# 
   960  0FE6                     	;# 
   961  0FE7                     	;# 
   962  0FE8                     	;# 
   963  0FE9                     	;# 
   964  0FEA                     	;# 
   965  0FEB                     	;# 
   966  0FED                     	;# 
   967  0FEE                     	;# 
   968  0FEF                     	;# 
   969                           
   970                           	psect	stringtext1
   971  10BD                     __pstringtext1:	
   972  10BD                     _USB_SD_Ptr:	
   973  10BD  34C3               	retlw	low (_sd000| (0+32768))
   974  10BE  3490               	retlw	high (_sd000| (0+32768))
   975  10BF  3477               	retlw	low (_sd001| (0+32768))
   976  10C0  3490               	retlw	high (_sd001| (0+32768))
   977  10C1  3443               	retlw	low (_sd002| (0+32768))
   978  10C2  3490               	retlw	high (_sd002| (0+32768))
   979  10C3                     __end_of_USB_SD_Ptr:	
   980                           
   981                           	psect	stringtext2
   982  10C7                     __pstringtext2:	
   983  10C7                     _USB_CD_Ptr:	
   984  10C7  3400               	retlw	low (_configDescriptor1| (0+32768))
   985  10C8  3490               	retlw	high (_configDescriptor1| (0+32768))
   986  10C9                     __end_of_USB_CD_Ptr:	
   987                           
   988                           	psect	stringtext3
   989  1000                     __pstringtext3:	
   990  1000                     _configDescriptor1:	
   991  1000  3409               	retlw	9
   992  1001  3402               	retlw	2
   993  1002  3443               	retlw	67
   994  1003  3400               	retlw	0
   995  1004  3402               	retlw	2
   996  1005  3401               	retlw	1
   997  1006  3400               	retlw	0
   998  1007  34C0               	retlw	192
   999  1008  3432               	retlw	50
  1000  1009  3409               	retlw	9
  1001  100A  3404               	retlw	4
  1002  100B  3400               	retlw	0
  1003  100C  3400               	retlw	0
  1004  100D  3401               	retlw	1
  1005  100E  3402               	retlw	2
  1006  100F  3402               	retlw	2
  1007  1010  3401               	retlw	1
  1008  1011  3400               	retlw	0
  1009  1012  3405               	retlw	5
  1010  1013  3424               	retlw	36
  1011  1014  3400               	retlw	0
  1012  1015  3410               	retlw	16
  1013  1016  3401               	retlw	1
  1014  1017  3404               	retlw	4
  1015  1018  3424               	retlw	36
  1016  1019  3402               	retlw	2
  1017  101A  3402               	retlw	2
  1018  101B  3405               	retlw	5
  1019  101C  3424               	retlw	36
  1020  101D  3406               	retlw	6
  1021  101E  3400               	retlw	0
  1022  101F  3401               	retlw	1
  1023  1020  3405               	retlw	5
  1024  1021  3424               	retlw	36
  1025  1022  3401               	retlw	1
  1026  1023  3400               	retlw	0
  1027  1024  3401               	retlw	1
  1028  1025  3407               	retlw	7
  1029  1026  3405               	retlw	5
  1030  1027  3481               	retlw	129
  1031  1028  3403               	retlw	3
  1032  1029  3408               	retlw	8
  1033  102A  3400               	retlw	0
  1034  102B  3402               	retlw	2
  1035  102C  3409               	retlw	9
  1036  102D  3404               	retlw	4
  1037  102E  3401               	retlw	1
  1038  102F  3400               	retlw	0
  1039  1030  3402               	retlw	2
  1040  1031  340A               	retlw	10
  1041  1032  3400               	retlw	0
  1042  1033  3400               	retlw	0
  1043  1034  3400               	retlw	0
  1044  1035  3407               	retlw	7
  1045  1036  3405               	retlw	5
  1046  1037  3402               	retlw	2
  1047  1038  3402               	retlw	2
  1048  1039  3440               	retlw	64
  1049  103A  3400               	retlw	0
  1050  103B  3400               	retlw	0
  1051  103C  3407               	retlw	7
  1052  103D  3405               	retlw	5
  1053  103E  3482               	retlw	130
  1054  103F  3402               	retlw	2
  1055  1040  3440               	retlw	64
  1056  1041  3400               	retlw	0
  1057  1042  3400               	retlw	0
  1058  1043                     __end_of_configDescriptor1:	
  1059                           
  1060                           	psect	stringtext4
  1061  1043                     __pstringtext4:	
  1062  1043                     _sd002:	
  1063  1043  3434               	retlw	52
  1064  1044  3403               	retlw	3
  1065  1045  3443               	retlw	67
  1066  1046  3400               	retlw	0
  1067  1047  3444               	retlw	68
  1068  1048  3400               	retlw	0
  1069  1049  3443               	retlw	67
  1070  104A  3400               	retlw	0
  1071  104B  3420               	retlw	32
  1072  104C  3400               	retlw	0
  1073  104D  3452               	retlw	82
  1074  104E  3400               	retlw	0
  1075  104F  3453               	retlw	83
  1076  1050  3400               	retlw	0
  1077  1051  342D               	retlw	45
  1078  1052  3400               	retlw	0
  1079  1053  3432               	retlw	50
  1080  1054  3400               	retlw	0
  1081  1055  3433               	retlw	51
  1082  1056  3400               	retlw	0
  1083  1057  3432               	retlw	50
  1084  1058  3400               	retlw	0
  1085  1059  3420               	retlw	32
  1086  105A  3400               	retlw	0
  1087  105B  3445               	retlw	69
  1088  105C  3400               	retlw	0
  1089  105D  346D               	retlw	109
  1090  105E  3400               	retlw	0
  1091  105F  3475               	retlw	117
  1092  1060  3400               	retlw	0
  1093  1061  346C               	retlw	108
  1094  1062  3400               	retlw	0
  1095  1063  3461               	retlw	97
  1096  1064  3400               	retlw	0
  1097  1065  3474               	retlw	116
  1098  1066  3400               	retlw	0
  1099  1067  3469               	retlw	105
  1100  1068  3400               	retlw	0
  1101  1069  346F               	retlw	111
  1102  106A  3400               	retlw	0
  1103  106B  346E               	retlw	110
  1104  106C  3400               	retlw	0
  1105  106D  3420               	retlw	32
  1106  106E  3400               	retlw	0
  1107  106F  3444               	retlw	68
  1108  1070  3400               	retlw	0
  1109  1071  3465               	retlw	101
  1110  1072  3400               	retlw	0
  1111  1073  346D               	retlw	109
  1112  1074  3400               	retlw	0
  1113  1075  346F               	retlw	111
  1114  1076  3400               	retlw	0
  1115  1077                     __end_of_sd002:	
  1116                           
  1117                           	psect	stringtext5
  1118  1077                     __pstringtext5:	
  1119  1077                     _sd001:	
  1120  1077  3434               	retlw	52
  1121  1078  3403               	retlw	3
  1122  1079  344D               	retlw	77
  1123  107A  3400               	retlw	0
  1124  107B  3469               	retlw	105
  1125  107C  3400               	retlw	0
  1126  107D  3463               	retlw	99
  1127  107E  3400               	retlw	0
  1128  107F  3472               	retlw	114
  1129  1080  3400               	retlw	0
  1130  1081  346F               	retlw	111
  1131  1082  3400               	retlw	0
  1132  1083  3463               	retlw	99
  1133  1084  3400               	retlw	0
  1134  1085  3468               	retlw	104
  1135  1086  3400               	retlw	0
  1136  1087  3469               	retlw	105
  1137  1088  3400               	retlw	0
  1138  1089  3470               	retlw	112
  1139  108A  3400               	retlw	0
  1140  108B  3420               	retlw	32
  1141  108C  3400               	retlw	0
  1142  108D  3454               	retlw	84
  1143  108E  3400               	retlw	0
  1144  108F  3465               	retlw	101
  1145  1090  3400               	retlw	0
  1146  1091  3463               	retlw	99
  1147  1092  3400               	retlw	0
  1148  1093  3468               	retlw	104
  1149  1094  3400               	retlw	0
  1150  1095  346E               	retlw	110
  1151  1096  3400               	retlw	0
  1152  1097  346F               	retlw	111
  1153  1098  3400               	retlw	0
  1154  1099  346C               	retlw	108
  1155  109A  3400               	retlw	0
  1156  109B  346F               	retlw	111
  1157  109C  3400               	retlw	0
  1158  109D  3467               	retlw	103
  1159  109E  3400               	retlw	0
  1160  109F  3479               	retlw	121
  1161  10A0  3400               	retlw	0
  1162  10A1  3420               	retlw	32
  1163  10A2  3400               	retlw	0
  1164  10A3  3449               	retlw	73
  1165  10A4  3400               	retlw	0
  1166  10A5  346E               	retlw	110
  1167  10A6  3400               	retlw	0
  1168  10A7  3463               	retlw	99
  1169  10A8  3400               	retlw	0
  1170  10A9  342E               	retlw	46
  1171  10AA  3400               	retlw	0
  1172  10AB                     __end_of_sd001:	
  1173                           
  1174                           	psect	stringtext6
  1175  10AB                     __pstringtext6:	
  1176  10AB                     _device_dsc:	
  1177  10AB  3412               	retlw	18
  1178  10AC  3401               	retlw	1
  1179  10AD  3400               	retlw	0
  1180  10AE  3402               	retlw	2
  1181  10AF  3402               	retlw	2
  1182  10B0  3400               	retlw	0
  1183  10B1  3400               	retlw	0
  1184  10B2  3408               	retlw	8
  1185  10B3  34D8               	retlw	216
  1186  10B4  3404               	retlw	4
  1187  10B5  340A               	retlw	10
  1188  10B6  3400               	retlw	0
  1189  10B7  3400               	retlw	0
  1190  10B8  3401               	retlw	1
  1191  10B9  3401               	retlw	1
  1192  10BA  3402               	retlw	2
  1193  10BB  3400               	retlw	0
  1194  10BC  3401               	retlw	1
  1195  10BD                     __end_of_device_dsc:	
  1196                           
  1197                           	psect	stringtext7
  1198  10C3                     __pstringtext7:	
  1199  10C3                     _sd000:	
  1200  10C3  3404               	retlw	4
  1201  10C4  3403               	retlw	3
  1202  10C5  3409               	retlw	9
  1203  10C6  3404               	retlw	4
  1204  10C7                     __end_of_sd000:	
  1205  000D                     _PORTBbits	set	13
  1206  000E                     _PORTCbits	set	14
  1207  000B                     _INTCONbits	set	11
  1208  0012                     _PIR2bits	set	18
  1209  006F                     _RB7	set	111
  1210  008E                     _TRISC	set	142
  1211  008D                     _TRISB	set	141
  1212  0099                     _OSCCON	set	153
  1213  0092                     _PIE2bits	set	146
  1214  018E                     _ANSELC	set	398
  1215  018D                     _ANSELB	set	397
  1216  039B                     _ACTCON	set	923
  1217  0E98                     _UEP0bits	set	3736
  1218  0E8E                     _UCON	set	3726
  1219  0E8F                     _USTAT	set	3727
  1220  0E92                     _UIEbits	set	3730
  1221  0E90                     _UIRbits	set	3728
  1222  0E96                     _UADDR	set	3734
  1223  0E8E                     _UCONbits	set	3726
  1224  0E92                     _UIE	set	3730
  1225  0E97                     _UEIE	set	3735
  1226  0E91                     _UCFG	set	3729
  1227  0E90                     _UIR	set	3728
  1228  0E93                     _UEIR	set	3731
  1229  0E99                     _UEP1	set	3737
  1230  0E98                     _UEP0	set	3736
  1231                           
  1232                           ; #config settings
  1233  0000                     
  1234                           	psect	cinit
  1235  0014                     start_initialization:	
  1236  0014                     __initialization:	
  1237                           
  1238                           ; Clear objects allocated to BANK1
  1239  0014  0021               	movlb	1	; select bank1
  1240  0015  01E0               	clrf	__pbssBANK1& (0+127)
  1241  0016  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  1242  0017  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  1243  0018  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  1244  0019  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  1245  001A  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  1246                           
  1247                           ; Clear objects allocated to BANK2
  1248  001B  0022               	movlb	2	; select bank2
  1249  001C  01EF               	clrf	__pbssBANK2& (0+127)
  1250                           
  1251                           ; Clear objects allocated to BANK3
  1252  001D  30A0               	movlw	low __pbssBANK3
  1253  001E  0084               	movwf	4
  1254  001F  3001               	movlw	high __pbssBANK3
  1255  0020  0085               	movwf	5
  1256  0021  3049               	movlw	73
  1257  0022  3189  215B  3180   	fcall	clear_ram0
  1258                           
  1259                           ; Clear objects allocated to BANK4
  1260  0025  3020               	movlw	low __pbssBANK4
  1261  0026  0084               	movwf	4
  1262  0027  3002               	movlw	high __pbssBANK4
  1263  0028  0085               	movwf	5
  1264  0029  3012               	movlw	18
  1265  002A  3189  215B  3180   	fcall	clear_ram0
  1266                           
  1267                           ; Clear objects allocated to BANK5
  1268  002D  30A0               	movlw	low __pbssBANK5
  1269  002E  0084               	movwf	4
  1270  002F  3002               	movlw	high __pbssBANK5
  1271  0030  0085               	movwf	5
  1272  0031  3040               	movlw	64
  1273  0032  3189  215B  3180   	fcall	clear_ram0
  1274                           
  1275                           ; Clear objects allocated to BANK6
  1276  0035  3020               	movlw	low __pbssBANK6
  1277  0036  0084               	movwf	4
  1278  0037  3003               	movlw	high __pbssBANK6
  1279  0038  0085               	movwf	5
  1280  0039  3040               	movlw	64
  1281  003A  3189  215B         	fcall	clear_ram0
  1282  003C                     end_of_initialization:	
  1283                           ;End of C runtime variable initialization code
  1284                           
  1285  003C                     __end_of__initialization:	
  1286  003C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1287  003D  0020               	movlb	0
  1288  003E  3186  2E42         	ljmp	_main	;jump to C main() function
  1289                           
  1290                           	psect	bssBANK1
  1291  00E0                     __pbssBANK1:	
  1292  00E0                     _pBDTEntryEP0OutNext:	
  1293  00E0                     	ds	2
  1294  00E2                     _cdc_trf_state:	
  1295  00E2                     	ds	1
  1296  00E3                     _controlTransferState:	
  1297  00E3                     	ds	1
  1298  00E4                     _pBDTEntryEP0OutCurrent:	
  1299  00E4                     	ds	1
  1300  00E5                     _USTATcopy:	
  1301  00E5                     	ds	1
  1302                           
  1303                           	psect	bssBANK2
  1304  016F                     __pbssBANK2:	
  1305  016F                     _USBDeviceState:	
  1306  016F                     	ds	1
  1307                           
  1308                           	psect	bssBANK3
  1309  01A0                     __pbssBANK3:	
  1310  01A0                     _outPipes:	
  1311  01A0                     	ds	7
  1312  01A7                     _pBDTEntryIn:	
  1313  01A7                     	ds	6
  1314  01AD                     _pBDTEntryOut:	
  1315  01AD                     	ds	6
  1316  01B3                     _inPipes:	
  1317  01B3                     	ds	5
  1318  01B8                     _BaudRateGen:	
  1319  01B8                     	ds	4
  1320  01BC                     _USB1msTickCount:	
  1321  01BC                     	ds	4
  1322  01C0                     _ep_data_out:	
  1323  01C0                     	ds	3
  1324  01C3                     _ep_data_in:	
  1325  01C3                     	ds	3
  1326  01C6                     _CDCDataInHandle:	
  1327  01C6                     	ds	2
  1328  01C8                     _CDCDataOutHandle:	
  1329  01C8                     	ds	2
  1330  01CA                     _pCDCDst:	
  1331  01CA                     	ds	2
  1332  01CC                     _pCDCSrc:	
  1333  01CC                     	ds	2
  1334  01CE                     _control_signal_bitmap:	
  1335  01CE                     	ds	1
  1336  01CF                     _cdc_mem_type:	
  1337  01CF                     	ds	1
  1338  01D0                     _cdc_tx_len:	
  1339  01D0                     	ds	1
  1340  01D1                     _cdc_rx_len:	
  1341  01D1                     	ds	1
  1342  01D2                     _USBTicksSinceSuspendEnd:	
  1343  01D2                     	ds	1
  1344  01D3                     _USBDeferOUTDataStagePackets:	
  1345  01D3                     	ds	1
  1346  01D4                     _USBDeferINDataStagePackets:	
  1347  01D4                     	ds	1
  1348  01D5                     _USBStatusStageEnabledFlag2:	
  1349  01D5                     	ds	1
  1350  01D6                     _USBStatusStageEnabledFlag1:	
  1351  01D6                     	ds	1
  1352  01D7                     _USBDeferStatusStagePacket:	
  1353  01D7                     	ds	1
  1354  01D8                     _USBStatusStageTimeoutCounter:	
  1355  01D8                     	ds	1
  1356  01D9                     _BothEP0OutUOWNsSet:	
  1357  01D9                     	ds	1
  1358  01DA                     _endpoint_number:	
  1359  01DA                     	ds	1
  1360  01DB                     _USBBusIsSuspended:	
  1361  01DB                     	ds	1
  1362  01DC                     _RemoteWakeup:	
  1363  01DC                     	ds	1
  1364  01DD                     _pDst:	
  1365  01DD                     	ds	1
  1366  01DE                     _shortPacketStatus:	
  1367  01DE                     	ds	1
  1368  01DF                     _line_coding:	
  1369  01DF                     	ds	7
  1370  01E6                     _USBAlternateInterface:	
  1371  01E6                     	ds	2
  1372  01E8                     _USBActiveConfiguration:	
  1373  01E8                     	ds	1
  1374                           
  1375                           	psect	bssBANK4
  1376  0220                     __pbssBANK4:	
  1377  0220                     _cdc_notice:	
  1378  0220                     	ds	10
  1379  022A                     _dummy_encapsulated_cmd_response:	
  1380  022A                     	ds	8
  1381                           
  1382                           	psect	bssBANK5
  1383  02A0                     __pbssBANK5:	
  1384  02A0                     _readBuffer:	
  1385  02A0                     	ds	64
  1386                           
  1387                           	psect	bssBANK6
  1388  0320                     __pbssBANK6:	
  1389  0320                     _writeBuffer:	
  1390  0320                     	ds	64
  1391                           
  1392                           	psect	clrtext
  1393  095B                     clear_ram0:	
  1394                           ;	Called with FSR0 containing the base address, and
  1395                           ;	WREG with the size to clear
  1396                           
  1397  095B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1398  095C                     clrloop0:	
  1399  095C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1400  095D  3101               	addfsr 0,1
  1401  095E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1402  095F  295C               	goto	clrloop0	;have we reached the end yet?
  1403  0960  3400               	retlw	0	;all done for this memory range, return
  1404                           
  1405                           	psect	cstackBANK3
  1406  01E9                     __pcstackBANK3:	
  1407  01E9                     ??_main:	
  1408                           
  1409                           ; 1 bytes @ 0x0
  1410  01E9                     	ds	2
  1411  01EB                     main@numBytesRead:	
  1412                           
  1413                           ; 1 bytes @ 0x2
  1414  01EB                     	ds	1
  1415  01EC                     main@i:	
  1416                           
  1417                           ; 1 bytes @ 0x3
  1418  01EC                     	ds	1
  1419                           
  1420                           	psect	cstackBANK2
  1421  0160                     __pcstackBANK2:	
  1422  0160                     ??_SYSTEM_Initialize:	
  1423  0160                     ?_USBConfigureEndpoint:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0160                     ??_USBDeviceInit:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0160                     ??_USBDeviceAttach:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0160                     ?_USBTransferOnePacket:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0160                     USBTransferOnePacket@dir:	
  1436                           ; 2 bytes @ 0x0
  1437                           
  1438  0160                     USBConfigureEndpoint@direction:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0160                     SYSTEM_Initialize@state:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444                           
  1445                           ; 1 bytes @ 0x0
  1446  0160                     	ds	1
  1447  0161                     ??_USBConfigureEndpoint:	
  1448  0161                     USBDeviceInit@p:	
  1449                           ; 1 bytes @ 0x1
  1450                           
  1451  0161                     USBTransferOnePacket@data:	
  1452                           ; 2 bytes @ 0x1
  1453                           
  1454                           
  1455                           ; 2 bytes @ 0x1
  1456  0161                     	ds	2
  1457  0163                     USBDeviceInit@i_821:	
  1458  0163                     USBTransferOnePacket@len:	
  1459                           ; 1 bytes @ 0x3
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x3
  1463  0163                     	ds	1
  1464  0164                     ??_USBTransferOnePacket:	
  1465  0164                     USBDeviceInit@i:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468                           
  1469                           ; 1 bytes @ 0x4
  1470  0164                     	ds	1
  1471  0165                     USBConfigureEndpoint@EPNum:	
  1472                           
  1473                           ; 1 bytes @ 0x5
  1474  0165                     	ds	1
  1475  0166                     USBConfigureEndpoint@handle:	
  1476                           
  1477                           ; 1 bytes @ 0x6
  1478  0166                     	ds	1
  1479  0167                     ?_USBEnableEndpoint:	
  1480  0167                     USBEnableEndpoint@options:	
  1481                           ; 1 bytes @ 0x7
  1482                           
  1483                           
  1484                           ; 1 bytes @ 0x7
  1485  0167                     	ds	1
  1486  0168                     ??_USBEnableEndpoint:	
  1487  0168                     USBTransferOnePacket@ep:	
  1488                           ; 1 bytes @ 0x8
  1489                           
  1490                           
  1491                           ; 1 bytes @ 0x8
  1492  0168                     	ds	1
  1493  0169                     USBTransferOnePacket@handle:	
  1494                           
  1495                           ; 2 bytes @ 0x9
  1496  0169                     	ds	1
  1497  016A                     USBEnableEndpoint@p:	
  1498                           
  1499                           ; 2 bytes @ 0xA
  1500  016A                     	ds	1
  1501  016B                     ?_getsUSBUSART:	
  1502  016B                     ??_CDCTxService:	
  1503                           ; 1 bytes @ 0xB
  1504                           
  1505  016B                     getsUSBUSART@len:	
  1506                           ; 1 bytes @ 0xB
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0xB
  1510  016B                     	ds	1
  1511  016C                     ??_getsUSBUSART:	
  1512  016C                     USBEnableEndpoint@ep:	
  1513                           ; 1 bytes @ 0xC
  1514                           
  1515  016C                     CDCTxService@i:	
  1516                           ; 1 bytes @ 0xC
  1517                           
  1518                           
  1519                           ; 1 bytes @ 0xC
  1520  016C                     	ds	1
  1521  016D                     ??_CDCInitEP:	
  1522  016D                     CDCTxService@byte_to_send:	
  1523                           ; 1 bytes @ 0xD
  1524                           
  1525                           
  1526                           ; 1 bytes @ 0xD
  1527  016D                     	ds	1
  1528  016E                     getsUSBUSART@buffer:	
  1529                           
  1530                           ; 1 bytes @ 0xE
  1531  016E                     	ds	1
  1532                           
  1533                           	psect	cstackBANK1
  1534  00E6                     __pcstackBANK1:	
  1535  00E6                     ??_USBCtrlEPService:	
  1536                           
  1537                           ; 1 bytes @ 0x0
  1538  00E6                     	ds	3
  1539  00E9                     ??_USBDeviceTasks:	
  1540                           
  1541                           ; 1 bytes @ 0x3
  1542  00E9                     	ds	2
  1543  00EB                     ??_SYS_InterruptHigh:	
  1544                           
  1545                           ; 1 bytes @ 0x5
  1546  00EB                     	ds	1
  1547                           
  1548                           	psect	cstackCOMMON
  1549  0070                     __pcstackCOMMON:	
  1550  0070                     ?_SYSTEM_Initialize:	
  1551  0070                     ?_CDCInitEP:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_USBCheckCDCRequest:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ??_USBCheckCDCRequest:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_USBWakeFromSuspend:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_USBSuspend:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_USBIncrement1msInternalTimers:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ??_USBIncrement1msInternalTimers:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_USBCtrlEPAllowStatusStage:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ??_USBCtrlEPAllowStatusStage:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_USBStallHandler:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ??_USBStallHandler:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_USBCtrlEPService:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_USBCtrlTrfTxService:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ??_USBCtrlTrfTxService:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ?_USBCtrlTrfSetupHandler:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ?_USBCtrlTrfOutHandler:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?_USBCtrlTrfInHandler:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?_USBCheckStdRequest:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_USBStdFeatureReqHandler:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ?_USBDeviceInit:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     ?_USBDeviceTasks:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     ?_USBDeviceAttach:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ?_USBCtrlEPAllowDataStage:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ?_USBCtrlEPServiceComplete:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ?_USBCtrlTrfRxService:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?_USBStdSetCfgHandler:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ?_USBStdGetDscHandler:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ??_USBStdGetDscHandler:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ?_USBStdGetStatusHandler:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ??_USBStdGetStatusHandler:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ?_CDCTxService:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ?_SYS_InterruptHigh:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_main:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ?i1_USBDeviceInit:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ??i1_USBDeviceInit:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0070                     ?i1_USBConfigureEndpoint:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     ?i1_CDCInitEP:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0070                     ?i1_SYSTEM_Initialize:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665  0070                     ??i1_SYSTEM_Initialize:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668  0070                     ?_memset:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671  0070                     ?i1_USBTransferOnePacket:	
  1672                           ; 2 bytes @ 0x0
  1673                           
  1674  0070                     i1USBTransferOnePacket@dir:	
  1675                           ; 2 bytes @ 0x0
  1676                           
  1677  0070                     i1USBConfigureEndpoint@direction:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680  0070                     i1SYSTEM_Initialize@state:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683  0070                     memset@p1:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686                           
  1687                           ; 2 bytes @ 0x0
  1688  0070                     	ds	1
  1689  0071                     ??i1_USBConfigureEndpoint:	
  1690  0071                     USBStdGetStatusHandler@p:	
  1691                           ; 1 bytes @ 0x1
  1692                           
  1693  0071                     i1USBDeviceInit@p:	
  1694                           ; 2 bytes @ 0x1
  1695                           
  1696  0071                     i1USBTransferOnePacket@data:	
  1697                           ; 2 bytes @ 0x1
  1698                           
  1699                           
  1700                           ; 2 bytes @ 0x1
  1701  0071                     	ds	1
  1702  0072                     ??_USBCtrlTrfRxService:	
  1703  0072                     USBCtrlTrfTxService@byteToSend:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0072                     memset@c:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709                           
  1710                           ; 2 bytes @ 0x2
  1711  0072                     	ds	1
  1712  0073                     ??_USBCtrlTrfInHandler:	
  1713  0073                     ??_USBCtrlEPAllowDataStage:	
  1714                           ; 1 bytes @ 0x3
  1715                           
  1716  0073                     i1USBDeviceInit@i_821:	
  1717                           ; 1 bytes @ 0x3
  1718                           
  1719  0073                     i1USBTransferOnePacket@len:	
  1720                           ; 1 bytes @ 0x3
  1721                           
  1722                           
  1723                           ; 1 bytes @ 0x3
  1724  0073                     	ds	1
  1725  0074                     ??i1_USBTransferOnePacket:	
  1726  0074                     USBCtrlTrfRxService@i:	
  1727                           ; 1 bytes @ 0x4
  1728                           
  1729  0074                     i1USBDeviceInit@i:	
  1730                           ; 1 bytes @ 0x4
  1731                           
  1732  0074                     memset@n:	
  1733                           ; 1 bytes @ 0x4
  1734                           
  1735                           
  1736                           ; 2 bytes @ 0x4
  1737  0074                     	ds	1
  1738  0075                     ??_USBCtrlEPServiceComplete:	
  1739  0075                     USBCtrlTrfRxService@byteToRead:	
  1740                           ; 1 bytes @ 0x5
  1741                           
  1742  0075                     USBCtrlTrfInHandler@lastDTS:	
  1743                           ; 1 bytes @ 0x5
  1744                           
  1745  0075                     i1USBConfigureEndpoint@EPNum:	
  1746                           ; 1 bytes @ 0x5
  1747                           
  1748                           
  1749                           ; 1 bytes @ 0x5
  1750  0075                     	ds	1
  1751  0076                     ??_memset:	
  1752  0076                     ??_USBCtrlTrfOutHandler:	
  1753                           ; 1 bytes @ 0x6
  1754                           
  1755  0076                     i1USBConfigureEndpoint@handle:	
  1756                           ; 1 bytes @ 0x6
  1757                           
  1758  0076                     memset@p:	
  1759                           ; 1 bytes @ 0x6
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x6
  1763  0076                     	ds	1
  1764  0077                     ?i1_USBEnableEndpoint:	
  1765  0077                     i1USBEnableEndpoint@options:	
  1766                           ; 1 bytes @ 0x7
  1767                           
  1768                           
  1769                           ; 1 bytes @ 0x7
  1770  0077                     	ds	1
  1771  0078                     ??i1_USBEnableEndpoint:	
  1772  0078                     i1USBTransferOnePacket@ep:	
  1773                           ; 1 bytes @ 0x8
  1774                           
  1775                           
  1776                           ; 1 bytes @ 0x8
  1777  0078                     	ds	1
  1778  0079                     i1USBTransferOnePacket@handle:	
  1779                           
  1780                           ; 2 bytes @ 0x9
  1781  0079                     	ds	1
  1782  007A                     i1USBEnableEndpoint@p:	
  1783                           
  1784                           ; 2 bytes @ 0xA
  1785  007A                     	ds	2
  1786  007C                     i1USBEnableEndpoint@ep:	
  1787                           
  1788                           ; 1 bytes @ 0xC
  1789  007C                     	ds	1
  1790  007D                     ??i1_CDCInitEP:	
  1791                           
  1792                           ; 1 bytes @ 0xD
  1793  007D                     	ds	1
  1794  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1795                           
  1796                           	psect	cstackBANK0
  1797  0060                     __pcstackBANK0:	
  1798                           ; 1 bytes @ 0xE
  1799                           
  1800  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1801  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804                           
  1805                           ; 2 bytes @ 0x0
  1806  0060                     	ds	2
  1807  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1808                           
  1809                           ; 2 bytes @ 0x2
  1810  0062                     	ds	2
  1811  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1812                           
  1813                           ; 2 bytes @ 0x4
  1814  0064                     	ds	2
  1815  0066                     ??_USBWakeFromSuspend:	
  1816  0066                     ??_USBSuspend:	
  1817                           ; 1 bytes @ 0x6
  1818                           
  1819  0066                     ??_USBStdFeatureReqHandler:	
  1820                           ; 1 bytes @ 0x6
  1821                           
  1822  0066                     ??_USBStdSetCfgHandler:	
  1823                           ; 1 bytes @ 0x6
  1824                           
  1825                           
  1826                           ; 1 bytes @ 0x6
  1827  0066                     	ds	1
  1828  0067                     USBStdSetCfgHandler@p:	
  1829                           
  1830                           ; 2 bytes @ 0x7
  1831  0067                     	ds	1
  1832  0068                     USBStdFeatureReqHandler@pUEP:	
  1833                           
  1834                           ; 2 bytes @ 0x8
  1835  0068                     	ds	1
  1836  0069                     USBStdSetCfgHandler@i_1572:	
  1837                           
  1838                           ; 1 bytes @ 0x9
  1839  0069                     	ds	1
  1840  006A                     USBStdSetCfgHandler@i:	
  1841  006A                     USBStdFeatureReqHandler@current_ep_data:	
  1842                           ; 1 bytes @ 0xA
  1843                           
  1844                           
  1845                           ; 1 bytes @ 0xA
  1846  006A                     	ds	1
  1847  006B                     USBStdFeatureReqHandler@p:	
  1848                           
  1849                           ; 2 bytes @ 0xB
  1850  006B                     	ds	2
  1851  006D                     ??_USBCheckStdRequest:	
  1852                           
  1853                           ; 1 bytes @ 0xD
  1854  006D                     	ds	1
  1855  006E                     ??_USBCtrlTrfSetupHandler:	
  1856                           
  1857                           ; 1 bytes @ 0xE
  1858  006E                     	ds	1
  1859  006F                     USBDeviceTasks@i:	
  1860                           
  1861                           ; 1 bytes @ 0xF
  1862  006F                     	ds	1
  1863                           
  1864                           	psect	maintext
  1865  0642                     __pmaintext:	
  1866 ;;
  1867 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1868 ;;
  1869 ;; *************** function _main *****************
  1870 ;; Defined at:
  1871 ;;		line 14 in file "../src/main.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  i               1    3[BANK3 ] unsigned char 
  1876 ;;  numBytesRead    1    2[BANK3 ] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : B1F/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  1890 ;;Total ram usage:        4 bytes
  1891 ;; Hardware stack levels required when called:   13
  1892 ;; This function calls:
  1893 ;;		_CDCInitEP
  1894 ;;		_CDCTxService
  1895 ;;		_SYSTEM_Initialize
  1896 ;;		_USBDeviceAttach
  1897 ;;		_USBDeviceInit
  1898 ;;		_getsUSBUSART
  1899 ;; This function is called by:
  1900 ;;		Startup code after reset
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _main
  1906  0642                     _main:	
  1907                           
  1908                           ;main.c: 16: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1912  0642  3000               	movlw	0
  1913  0643  3189  2176  3186   	fcall	_SYSTEM_Initialize
  1914                           
  1915                           ;main.c: 17: USBDeviceInit();
  1916  0646  3183  231D  3186   	fcall	_USBDeviceInit
  1917                           
  1918                           ;main.c: 18: USBDeviceAttach();
  1919  0649  3189  21BD  3186   	fcall	_USBDeviceAttach
  1920                           
  1921                           ;main.c: 19: CDCInitEP();
  1922  064C  318B  2300  3186   	fcall	_CDCInitEP
  1923                           
  1924                           ;main.c: 20: {line_coding.dwDTERate=1200;};
  1925  064F  3000               	movlw	0
  1926  0650  0023               	movlb	3	; select bank3
  1927  0651  00E2               	movwf	(_line_coding+3)^(0+384)
  1928  0652  3000               	movlw	0
  1929  0653  00E1               	movwf	(_line_coding+2)^(0+384)
  1930  0654  3004               	movlw	4
  1931  0655  00E0               	movwf	(_line_coding+1)^(0+384)
  1932  0656  30B0               	movlw	176
  1933  0657  00DF               	movwf	_line_coding^(0+384)
  1934                           
  1935                           ;main.c: 22: ANSELB=0x00;
  1936  0658  018D               	clrf	13	;volatile
  1937                           
  1938                           ;main.c: 23: ANSELC=0x00;
  1939  0659  018E               	clrf	14	;volatile
  1940                           
  1941                           ;main.c: 24: TRISB=0x00;
  1942  065A  0021               	movlb	1	; select bank1
  1943  065B  018D               	clrf	13	;volatile
  1944                           
  1945                           ;main.c: 25: TRISC=0x00;
  1946  065C  018E               	clrf	14	;volatile
  1947                           
  1948                           ;main.c: 26: PORTCbits.RC2=1;
  1949  065D  0020               	movlb	0	; select bank0
  1950  065E  150E               	bsf	14,2	;volatile
  1951                           
  1952                           ;main.c: 27: PORTBbits.RB4=0;
  1953  065F  120D               	bcf	13,4	;volatile
  1954  0660                     l4241:	
  1955                           ;main.c: 29: while(1){
  1956                           
  1957                           
  1958                           ;main.c: 30: if( (cdc_trf_state == 0) == 1){
  1959  0660  0021               	movlb	1	; select bank1
  1960  0661  0862               	movf	_cdc_trf_state^(0+128),w
  1961  0662  1D03               	btfss	3,2
  1962  0663  2ECB               	goto	l4271
  1963                           
  1964                           ;main.c: 31: RB7=0;
  1965  0664  0020               	movlb	0	; select bank0
  1966  0665  138D               	bcf	13,7	;volatile
  1967                           
  1968                           ;main.c: 32: _delay((unsigned long)((500)*(48000000/4000.0)));
  1969  0666  301F               	movlw	31
  1970  0667  0023               	movlb	3	; select bank3
  1971  0668  00EA               	movwf	(??_main^(0+384)+1)
  1972  0669  3071               	movlw	113
  1973  066A  00E9               	movwf	??_main^(0+384)
  1974  066B  301E               	movlw	30
  1975  066C                     u3987:	
  1976  066C  0B89               	decfsz	9,f
  1977  066D  2E6C               	goto	u3987
  1978  066E  0BE9               	decfsz	??_main^(0+384),f
  1979  066F  2E6C               	goto	u3987
  1980  0670  0BEA               	decfsz	(??_main^(0+384)+1),f
  1981  0671  2E6C               	goto	u3987
  1982  0672  0000               	nop
  1983                           
  1984                           ;main.c: 33: uint8_t numBytesRead, i;
  1985                           ;main.c: 34: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  1986  0673  3040               	movlw	64
  1987  0674  0023               	movlb	3	; select bank3
  1988  0675  00E9               	movwf	??_main^(0+384)
  1989  0676  0869               	movf	??_main^(0+384),w
  1990  0677  0022               	movlb	2	; select bank2
  1991  0678  00EB               	movwf	getsUSBUSART@len^(0+256)
  1992  0679  30A0               	movlw	(low (_readBuffer| (0+512)))& (0+255)
  1993  067A  318C  24C2  3186   	fcall	_getsUSBUSART
  1994  067D  0023               	movlb	3	; select bank3
  1995  067E  00EA               	movwf	(??_main+1)^(0+384)
  1996  067F  086A               	movf	(??_main+1)^(0+384),w
  1997  0680  00EB               	movwf	main@numBytesRead^(0+384)
  1998                           
  1999                           ;main.c: 35: if(numBytesRead > 0){
  2000  0681  086B               	movf	main@numBytesRead^(0+384),w
  2001  0682  1903               	btfsc	3,2
  2002  0683  2ECB               	goto	l4271
  2003                           
  2004                           ;main.c: 37: RB7 = 1;
  2005  0684  0020               	movlb	0	; select bank0
  2006  0685  178D               	bsf	13,7	;volatile
  2007                           
  2008                           ;main.c: 38: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2009  0686  303D               	movlw	61
  2010  0687  0023               	movlb	3	; select bank3
  2011  0688  00EA               	movwf	(??_main^(0+384)+1)
  2012  0689  30E1               	movlw	225
  2013  068A  00E9               	movwf	??_main^(0+384)
  2014  068B  303F               	movlw	63
  2015  068C                     u3997:	
  2016  068C  0B89               	decfsz	9,f
  2017  068D  2E8C               	goto	u3997
  2018  068E  0BE9               	decfsz	??_main^(0+384),f
  2019  068F  2E8C               	goto	u3997
  2020  0690  0BEA               	decfsz	(??_main^(0+384)+1),f
  2021  0691  2E8C               	goto	u3997
  2022  0692  3200               	nop2
  2023                           
  2024                           ;main.c: 41: switch(readBuffer[0]){
  2025  0693  2EBC               	goto	l4269
  2026  0694                     l615:	
  2027                           ;main.c: 42: case 1:
  2028                           
  2029                           
  2030                           ;main.c: 43: PORTCbits.RC2=1;
  2031  0694  0020               	movlb	0	; select bank0
  2032  0695  150E               	bsf	14,2	;volatile
  2033                           
  2034                           ;main.c: 44: break;
  2035  0696  2ECB               	goto	l4271
  2036  0697                     l617:	
  2037                           ;main.c: 45: case 2:
  2038                           
  2039                           
  2040                           ;main.c: 46: PORTCbits.RC2=0;
  2041  0697  0020               	movlb	0	; select bank0
  2042  0698  110E               	bcf	14,2	;volatile
  2043                           
  2044                           ;main.c: 47: break;
  2045  0699  2ECB               	goto	l4271
  2046  069A                     l618:	
  2047                           ;main.c: 48: case 3:
  2048                           
  2049                           
  2050                           ;main.c: 49: PORTBbits.RB4=0;
  2051  069A  0020               	movlb	0	; select bank0
  2052  069B  120D               	bcf	13,4	;volatile
  2053                           
  2054                           ;main.c: 51: break;
  2055  069C  2ECB               	goto	l4271
  2056  069D                     l619:	
  2057                           ;main.c: 52: case 4:
  2058                           
  2059                           
  2060                           ;main.c: 53: PORTBbits.RB4=1;
  2061  069D  0020               	movlb	0	; select bank0
  2062  069E  160D               	bsf	13,4	;volatile
  2063                           
  2064                           ;main.c: 55: break;
  2065  069F  2ECB               	goto	l4271
  2066  06A0                     l4255:	
  2067                           ;main.c: 56: default:
  2068                           
  2069                           
  2070                           ;main.c: 58: for(i=0;i<15;i++){
  2071  06A0  0023               	movlb	3	; select bank3
  2072  06A1  01EC               	clrf	main@i^(0+384)
  2073  06A2                     L1:	
  2074  06A2  300F               	movlw	15
  2075  06A3  026C               	subwf	main@i^(0+384),w
  2076  06A4  1803               	btfsc	3,0
  2077  06A5  2ECB               	goto	l4271
  2078                           
  2079                           ;main.c: 59: RB7 = ~RB7;
  2080  06A6  3080               	movlw	128
  2081  06A7  0020               	movlb	0	; select bank0
  2082  06A8  068D               	xorwf	13,f
  2083                           
  2084                           ;main.c: 60: _delay((unsigned long)((100)*(48000000/4000.0)));
  2085  06A9  3007               	movlw	7
  2086  06AA  0023               	movlb	3	; select bank3
  2087  06AB  00EA               	movwf	(??_main^(0+384)+1)
  2088  06AC  3017               	movlw	23
  2089  06AD  00E9               	movwf	??_main^(0+384)
  2090  06AE  306A               	movlw	106
  2091  06AF                     u4007:	
  2092  06AF  0B89               	decfsz	9,f
  2093  06B0  2EAF               	goto	u4007
  2094  06B1  0BE9               	decfsz	??_main^(0+384),f
  2095  06B2  2EAF               	goto	u4007
  2096  06B3  0BEA               	decfsz	(??_main^(0+384)+1),f
  2097  06B4  2EAF               	goto	u4007
  2098  06B5  0000               	nop
  2099  06B6  3001               	movlw	1
  2100  06B7  0023               	movlb	3	; select bank3
  2101  06B8  00E9               	movwf	??_main^(0+384)
  2102  06B9  0869               	movf	??_main^(0+384),w
  2103  06BA  07EC               	addwf	main@i^(0+384),f
  2104  06BB  2EA2               	goto	L1
  2105  06BC                     l4269:	
  2106                           ;main.c: 63: }
  2107                           
  2108                           ;main.c: 61: }
  2109                           ;main.c: 62: break;
  2110                           
  2111  06BC  0025               	movlb	5	; select bank5
  2112  06BD  0820               	movf	_readBuffer^(0+640),w
  2113                           
  2114                           ; Switch size 1, requested type "space"
  2115                           ; Number of cases is 4, Range of values is 1 to 4
  2116                           ; switch strategies available:
  2117                           ; Name         Instructions Cycles
  2118                           ; simple_byte           13     7 (average)
  2119                           ; direct_byte           17     9 (fixed)
  2120                           ; jumptable            263     9 (fixed)
  2121                           ;	Chosen strategy is simple_byte
  2122  06BE  3A01               	xorlw	1	; case 1
  2123  06BF  1903               	skipnz
  2124  06C0  2E94               	goto	l615
  2125  06C1  3A03               	xorlw	3	; case 2
  2126  06C2  1903               	skipnz
  2127  06C3  2E97               	goto	l617
  2128  06C4  3A01               	xorlw	1	; case 3
  2129  06C5  1903               	skipnz
  2130  06C6  2E9A               	goto	l618
  2131  06C7  3A07               	xorlw	7	; case 4
  2132  06C8  1903               	skipnz
  2133  06C9  2E9D               	goto	l619
  2134  06CA  2EA0               	goto	l4255
  2135  06CB                     l4271:	
  2136                           
  2137                           ;main.c: 65: }
  2138                           ;main.c: 66: }
  2139                           ;main.c: 67: CDCTxService();
  2140  06CB  3182  2250  3186   	fcall	_CDCTxService
  2141  06CE  2E60               	goto	l4241
  2142  06CF                     __end_of_main:	
  2143                           
  2144                           	psect	text1
  2145  0CC2                     __ptext1:	
  2146 ;; *************** function _getsUSBUSART *****************
  2147 ;; Defined at:
  2148 ;;		line 485 in file "../lib/usb/src/usb_device_cdc.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  buffer          1    wreg     PTR unsigned char 
  2151 ;;		 -> readBuffer(64), 
  2152 ;;  len             1   11[BANK2 ] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  buffer          1   14[BANK2 ] PTR unsigned char 
  2155 ;;		 -> readBuffer(64), 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      unsigned char 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2165 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;Total ram usage:        4 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:   11
  2172 ;; This function calls:
  2173 ;;		_USBTransferOnePacket
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _getsUSBUSART
  2181  0CC2                     _getsUSBUSART:	
  2182                           
  2183                           ;incstack = 0
  2184                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2185                           ;getsUSBUSART@buffer stored from wreg
  2186  0CC2  0022               	movlb	2	; select bank2
  2187  0CC3  00EE               	movwf	getsUSBUSART@buffer^(0+256)
  2188                           
  2189                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2190  0CC4  0023               	movlb	3	; select bank3
  2191  0CC5  01D1               	clrf	_cdc_rx_len^(0+384)
  2192                           
  2193                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2194  0CC6  0848               	movf	_CDCDataOutHandle^(0+384),w
  2195  0CC7  0449               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  2196  0CC8  1903               	btfsc	3,2
  2197  0CC9  2CD0               	goto	l4111
  2198  0CCA  0848               	movf	_CDCDataOutHandle^(0+384),w
  2199  0CCB  0086               	movwf	6
  2200  0CCC  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2201  0CCD  0087               	movwf	7
  2202  0CCE  1B81               	btfsc	1,7
  2203  0CCF  2D1B               	goto	l4125
  2204  0CD0                     l4111:	
  2205                           
  2206                           ;usb_device_cdc.c: 490: {
  2207                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2208  0CD0  0848               	movf	_CDCDataOutHandle^(0+384),w
  2209  0CD1  0086               	movwf	6
  2210  0CD2  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2211  0CD3  0087               	movwf	7
  2212  0CD4  3141               	addfsr 1,1
  2213  0CD5  0022               	movlb	2	; select bank2
  2214  0CD6  086B               	movf	getsUSBUSART@len^(0+256),w
  2215  0CD7  0201               	subwf	1,w
  2216  0CD8  1803               	skipnc
  2217  0CD9  2CE5               	goto	l4115
  2218                           
  2219                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2220  0CDA  0023               	movlb	3	; select bank3
  2221  0CDB  0848               	movf	_CDCDataOutHandle^(0+384),w
  2222  0CDC  0086               	movwf	6
  2223  0CDD  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2224  0CDE  0087               	movwf	7
  2225  0CDF  3141               	addfsr 1,1
  2226  0CE0  0801               	movf	1,w
  2227  0CE1  0022               	movlb	2	; select bank2
  2228  0CE2  00EC               	movwf	??_getsUSBUSART^(0+256)
  2229  0CE3  086C               	movf	??_getsUSBUSART^(0+256),w
  2230  0CE4  00EB               	movwf	getsUSBUSART@len^(0+256)
  2231  0CE5                     l4115:	
  2232                           
  2233                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2234  0CE5  0023               	movlb	3	; select bank3
  2235  0CE6  01D1               	clrf	_cdc_rx_len^(0+384)
  2236  0CE7                     l4121:	
  2237  0CE7  0022               	movlb	2	; select bank2
  2238  0CE8  086B               	movf	getsUSBUSART@len^(0+256),w
  2239  0CE9  0023               	movlb	3	; select bank3
  2240  0CEA  0251               	subwf	_cdc_rx_len^(0+384),w
  2241  0CEB  1803               	btfsc	3,0
  2242  0CEC  2D06               	goto	l4123
  2243                           
  2244                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2245  0CED  0851               	movf	_cdc_rx_len^(0+384),w
  2246  0CEE  3E20               	addlw	32
  2247  0CEF  0086               	movwf	6
  2248  0CF0  3001               	movlw	1	; select bank2/3
  2249  0CF1  0087               	movwf	7
  2250  0CF2  0801               	movf	1,w
  2251  0CF3  0022               	movlb	2	; select bank2
  2252  0CF4  00EC               	movwf	??_getsUSBUSART^(0+256)
  2253  0CF5  0023               	movlb	3	; select bank3
  2254  0CF6  0851               	movf	_cdc_rx_len^(0+384),w
  2255  0CF7  0022               	movlb	2	; select bank2
  2256  0CF8  076E               	addwf	getsUSBUSART@buffer^(0+256),w
  2257  0CF9  00ED               	movwf	(??_getsUSBUSART+1)^(0+256)
  2258  0CFA  086D               	movf	(??_getsUSBUSART+1)^(0+256),w
  2259  0CFB  0086               	movwf	6
  2260  0CFC  3002               	movlw	2	; select bank4/5
  2261  0CFD  0087               	movwf	7
  2262  0CFE  086C               	movf	??_getsUSBUSART^(0+256),w
  2263  0CFF  0081               	movwf	1
  2264  0D00  3001               	movlw	1
  2265  0D01  00EC               	movwf	??_getsUSBUSART^(0+256)
  2266  0D02  086C               	movf	??_getsUSBUSART^(0+256),w
  2267  0D03  0023               	movlb	3	; select bank3
  2268  0D04  07D1               	addwf	_cdc_rx_len^(0+384),f
  2269  0D05  2CE7               	goto	l4121
  2270  0D06                     l4123:	
  2271                           
  2272                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2273  0D06  0022               	movlb	2	; select bank2
  2274  0D07  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  2275  0D08  3020               	movlw	32
  2276  0D09  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  2277  0D0A  3001               	movlw	1
  2278  0D0B  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  2279  0D0C  3040               	movlw	64
  2280  0D0D  00EC               	movwf	??_getsUSBUSART^(0+256)
  2281  0D0E  086C               	movf	??_getsUSBUSART^(0+256),w
  2282  0D0F  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  2283  0D10  3002               	movlw	2
  2284  0D11  3186  26CF         	fcall	_USBTransferOnePacket
  2285  0D13  0022               	movlb	2	; select bank2
  2286  0D14  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  2287  0D15  0023               	movlb	3	; select bank3
  2288  0D16  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  2289  0D17  0022               	movlb	2	; select bank2
  2290  0D18  0860               	movf	?_USBTransferOnePacket^(0+256),w
  2291  0D19  0023               	movlb	3	; select bank3
  2292  0D1A  00C8               	movwf	_CDCDataOutHandle^(0+384)
  2293  0D1B                     l4125:	
  2294                           
  2295                           ;usb_device_cdc.c: 510: }
  2296                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2297  0D1B  0851               	movf	_cdc_rx_len^(0+384),w
  2298  0D1C  0008               	return
  2299  0D1D                     __end_of_getsUSBUSART:	
  2300                           
  2301                           	psect	text2
  2302  031D                     __ptext2:	
  2303 ;; *************** function _USBDeviceInit *****************
  2304 ;; Defined at:
  2305 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  p               2    1[BANK2 ] PTR unsigned char 
  2310 ;;		 -> UEP1(1), 
  2311 ;;  i               1    3[BANK2 ] unsigned char 
  2312 ;;  i               1    4[BANK2 ] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2323 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;Total ram usage:        5 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:   10
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _USBDeviceInit
  2338  031D                     _USBDeviceInit:	
  2339                           
  2340                           ;usb_device.c: 279: uint8_t i;
  2341                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2345  031D  0021               	movlb	1	; select bank1
  2346  031E  1112               	bcf	18,2	;volatile
  2347                           
  2348                           ;usb_device.c: 285: ;
  2349                           ;usb_device.c: 288: {UEIR = 0;};
  2350  031F  003D               	movlb	29	; select bank29
  2351  0320  0193               	clrf	19	;volatile
  2352                           
  2353                           ;usb_device.c: 291: {UIR = 0;};
  2354  0321  0190               	clrf	16	;volatile
  2355                           
  2356                           ;usb_device.c: 294: UEP0 = 0;
  2357  0322  0198               	clrf	24	;volatile
  2358                           
  2359                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  2360  0323  300E               	movlw	14
  2361  0324  0022               	movlb	2	; select bank2
  2362  0325  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  2363  0326  3099               	movlw	153
  2364  0327  00E1               	movwf	USBDeviceInit@p^(0+256)
  2365  0328  01E3               	clrf	USBDeviceInit@i_821^(0+256)
  2366  0329  3002               	movlw	2
  2367  032A  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  2368  032B  1803               	btfsc	3,0
  2369  032C  2B3E               	goto	l4019
  2370  032D                     l4011:	
  2371  032D  0861               	movf	USBDeviceInit@p^(0+256),w
  2372  032E  0086               	movwf	6
  2373  032F  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  2374  0330  0087               	movwf	7
  2375  0331  0181               	clrf	1
  2376  0332  3001               	movlw	1
  2377  0333  07E1               	addwf	USBDeviceInit@p^(0+256),f
  2378  0334  3000               	movlw	0
  2379  0335  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  2380  0336  3001               	movlw	1
  2381  0337  00E0               	movwf	??_USBDeviceInit^(0+256)
  2382  0338  0860               	movf	??_USBDeviceInit^(0+256),w
  2383  0339  07E3               	addwf	USBDeviceInit@i_821^(0+256),f
  2384  033A  3002               	movlw	2
  2385  033B  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  2386  033C  1C03               	skipc
  2387  033D  2B2D               	goto	l4011
  2388  033E                     l4019:	
  2389                           
  2390                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2391  033E  3016               	movlw	22
  2392  033F  003D               	movlb	29	; select bank29
  2393  0340  0091               	movwf	17	;volatile
  2394  0341  309F               	movlw	159
  2395  0342  0097               	movwf	23	;volatile
  2396  0343  307B               	movlw	123
  2397  0344  0092               	movwf	18	;volatile
  2398                           
  2399                           ;usb_device.c: 301: ;
  2400                           ;usb_device.c: 304: ;
  2401                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  2402  0345  0022               	movlb	2	; select bank2
  2403  0346  01E4               	clrf	USBDeviceInit@i^(0+256)
  2404  0347  300C               	movlw	12
  2405  0348  0264               	subwf	USBDeviceInit@i^(0+256),w
  2406  0349  1803               	btfsc	3,0
  2407  034A  2B64               	goto	l173
  2408  034B                     l4027:	
  2409                           
  2410                           ;usb_device.c: 308: {
  2411                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  2412  034B  0864               	movf	USBDeviceInit@i^(0+256),w
  2413  034C  00E0               	movwf	??_USBDeviceInit^(0+256)
  2414  034D  3001               	movlw	1
  2415  034E                     u3695:	
  2416  034E  35E0               	lslf	??_USBDeviceInit^(0+256),f
  2417  034F  3EFF               	addlw	-1
  2418  0350  1D03               	skipz
  2419  0351  2B4E               	goto	u3695
  2420  0352  3560               	lslf	??_USBDeviceInit^(0+256),w
  2421  0353  3E20               	addlw	32
  2422  0354  0086               	movwf	6
  2423  0355  0187               	clrf	7
  2424  0356  3000               	movlw	0
  2425  0357  3FC0               	movwi [0]fsr1
  2426  0358  3000               	movlw	0
  2427  0359  3FC1               	movwi [1]fsr1
  2428  035A  3FC2               	movwi [2]fsr1
  2429  035B  3FC3               	movwi [3]fsr1
  2430  035C  3001               	movlw	1
  2431  035D  00E0               	movwf	??_USBDeviceInit^(0+256)
  2432  035E  0860               	movf	??_USBDeviceInit^(0+256),w
  2433  035F  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2434  0360  300C               	movlw	12
  2435  0361  0264               	subwf	USBDeviceInit@i^(0+256),w
  2436  0362  1C03               	skipc
  2437  0363  2B4B               	goto	l4027
  2438  0364                     l173:	
  2439                           
  2440                           ;usb_device.c: 310: }
  2441                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  2442  0364  003D               	movlb	29	; select bank29
  2443  0365  170E               	bsf	14,6	;volatile
  2444                           
  2445                           ;usb_device.c: 316: UADDR = 0x00;
  2446  0366  0196               	clrf	22	;volatile
  2447                           
  2448                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  2449  0367  120E               	bcf	14,4	;volatile
  2450                           
  2451                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  2452  0368  130E               	bcf	14,6	;volatile
  2453  0369                     l4039:	
  2454                           ;usb_device.c: 325: do
  2455                           
  2456                           
  2457                           ;usb_device.c: 326: {
  2458                           ;usb_device.c: 327: (UIR &= 0xF7);
  2459  0369  30F7               	movlw	247
  2460  036A  0022               	movlb	2	; select bank2
  2461  036B  00E0               	movwf	??_USBDeviceInit^(0+256)
  2462  036C  0860               	movf	??_USBDeviceInit^(0+256),w
  2463  036D  003D               	movlb	29	; select bank29
  2464  036E  0590               	andwf	16,f	;volatile
  2465                           
  2466                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  2467  036F  0023               	movlb	3	; select bank3
  2468  0370  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  2469                           
  2470                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  2471  0371  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  2472                           
  2473                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  2474  0372  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  2475  0373  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  2476                           
  2477                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  2478  0374  003D               	movlb	29	; select bank29
  2479  0375  1990               	btfsc	16,3	;volatile
  2480  0376  2B69               	goto	l4039
  2481                           
  2482                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  2483  0377  3001               	movlw	1
  2484  0378  0022               	movlb	2	; select bank2
  2485  0379  00E0               	movwf	??_USBDeviceInit^(0+256)
  2486  037A  0860               	movf	??_USBDeviceInit^(0+256),w
  2487  037B  0023               	movlb	3	; select bank3
  2488  037C  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  2489                           
  2490                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  2491  037D  3001               	movlw	1
  2492  037E  0022               	movlb	2	; select bank2
  2493  037F  00E0               	movwf	??_USBDeviceInit^(0+256)
  2494  0380  0860               	movf	??_USBDeviceInit^(0+256),w
  2495  0381  0023               	movlb	3	; select bank3
  2496  0382  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  2497                           
  2498                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  2499  0383  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  2500                           
  2501                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  2502  0384  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  2503                           
  2504                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  2505  0385  01DB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  2506                           
  2507                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  2508  0386  0022               	movlb	2	; select bank2
  2509  0387  01E4               	clrf	USBDeviceInit@i^(0+256)
  2510  0388  3003               	movlw	3
  2511  0389  0264               	subwf	USBDeviceInit@i^(0+256),w
  2512  038A  1803               	btfsc	3,0
  2513  038B  2BB0               	goto	l4067
  2514  038C                     l4061:	
  2515                           
  2516                           ;usb_device.c: 346: {
  2517                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  2518  038C  3564               	lslf	USBDeviceInit@i^(0+256),w
  2519  038D  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  2520  038E  0086               	movwf	6
  2521  038F  3001               	movlw	1	; select bank3/4
  2522  0390  0087               	movwf	7
  2523  0391  3000               	movlw	0
  2524  0392  3FC0               	movwi [0]fsr1
  2525  0393  3FC1               	movwi [1]fsr1
  2526                           
  2527                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  2528  0394  3564               	lslf	USBDeviceInit@i^(0+256),w
  2529  0395  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2530  0396  0086               	movwf	6
  2531  0397  3001               	movlw	1	; select bank3/4
  2532  0398  0087               	movwf	7
  2533  0399  3000               	movlw	0
  2534  039A  3FC0               	movwi [0]fsr1
  2535  039B  3FC1               	movwi [1]fsr1
  2536                           
  2537                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  2538  039C  0864               	movf	USBDeviceInit@i^(0+256),w
  2539  039D  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2540  039E  0086               	movwf	6
  2541  039F  3001               	movlw	1	; select bank3/4
  2542  03A0  0087               	movwf	7
  2543  03A1  0181               	clrf	1
  2544                           
  2545                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  2546  03A2  0864               	movf	USBDeviceInit@i^(0+256),w
  2547  03A3  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2548  03A4  0086               	movwf	6
  2549  03A5  3001               	movlw	1	; select bank3/4
  2550  03A6  0087               	movwf	7
  2551  03A7  0181               	clrf	1
  2552  03A8  3001               	movlw	1
  2553  03A9  00E0               	movwf	??_USBDeviceInit^(0+256)
  2554  03AA  0860               	movf	??_USBDeviceInit^(0+256),w
  2555  03AB  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2556  03AC  3003               	movlw	3
  2557  03AD  0264               	subwf	USBDeviceInit@i^(0+256),w
  2558  03AE  1C03               	skipc
  2559  03AF  2B8C               	goto	l4061
  2560  03B0                     l4067:	
  2561                           
  2562                           ;usb_device.c: 351: }
  2563                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2564  03B0  3028               	movlw	40
  2565  03B1  0023               	movlb	3	; select bank3
  2566  03B2  00A7               	movwf	_pBDTEntryIn^(0+384)
  2567  03B3  3000               	movlw	0
  2568  03B4  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  2569                           
  2570                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  2571  03B5  3016               	movlw	22
  2572  03B6  003D               	movlb	29	; select bank29
  2573  03B7  0098               	movwf	24	;volatile
  2574                           
  2575                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2576  03B8  3000               	movlw	0
  2577  03B9  0020               	movlb	0	; select bank0
  2578  03BA  00A3               	movwf	35	;volatile
  2579  03BB  3050               	movlw	80
  2580  03BC  00A2               	movwf	34	;volatile
  2581                           
  2582                           ;usb_device.c: 359: BDT[0].CNT = 8;
  2583  03BD  3008               	movlw	8
  2584  03BE  00A1               	movwf	33	;volatile
  2585                           
  2586                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  2587  03BF  3004               	movlw	4
  2588  03C0  0022               	movlb	2	; select bank2
  2589  03C1  00E0               	movwf	??_USBDeviceInit^(0+256)
  2590  03C2  0860               	movf	??_USBDeviceInit^(0+256),w
  2591  03C3  0020               	movlb	0	; select bank0
  2592  03C4  00A0               	movwf	32	;volatile
  2593                           
  2594                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  2595  03C5  17A0               	bsf	32,7	;volatile
  2596                           
  2597                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  2598  03C6  0023               	movlb	3	; select bank3
  2599  03C7  01E8               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  2600                           
  2601                           ;usb_device.c: 366: USB1msTickCount = 0;
  2602  03C8  3000               	movlw	0
  2603  03C9  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  2604  03CA  3000               	movlw	0
  2605  03CB  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  2606  03CC  3000               	movlw	0
  2607  03CD  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  2608  03CE  3000               	movlw	0
  2609  03CF  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  2610                           
  2611                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  2612  03D0  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  2613                           
  2614                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  2615  03D1  0022               	movlb	2	; select bank2
  2616  03D2  01EF               	clrf	_USBDeviceState^(0+256)	;volatile
  2617  03D3  0008               	return
  2618  03D4                     __end_of_USBDeviceInit:	
  2619                           
  2620                           	psect	text3
  2621  09BD                     __ptext3:	
  2622 ;; *************** function _USBDeviceAttach *****************
  2623 ;; Defined at:
  2624 ;;		line 1352 in file "../lib/usb/src/usb_device.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2641 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2642 ;;Total ram usage:        1 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:   10
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function _USBDeviceAttach
  2654  09BD                     _USBDeviceAttach:	
  2655                           
  2656                           ;usb_device.c: 1356: {
  2657                           ;usb_device.c: 1357: if(1 == 1)
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2661  09BD  0022               	movlb	2	; select bank2
  2662  09BE  086F               	movf	_USBDeviceState^(0+256),w	;volatile
  2663  09BF  1D03               	btfss	3,2
  2664  09C0  0008               	return
  2665                           
  2666                           ;usb_device.c: 1358: {
  2667                           ;usb_device.c: 1360: UCON = 0;
  2668  09C1  003D               	movlb	29	; select bank29
  2669  09C2  018E               	clrf	14	;volatile
  2670                           
  2671                           ;usb_device.c: 1363: UIE = 0;
  2672  09C3  0192               	clrf	18	;volatile
  2673                           
  2674                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2675  09C4  3016               	movlw	22
  2676  09C5  0091               	movwf	17	;volatile
  2677  09C6  309F               	movlw	159
  2678  09C7  0097               	movwf	23	;volatile
  2679  09C8  307B               	movlw	123
  2680  09C9  0092               	movwf	18	;volatile
  2681                           
  2682                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2683  09CA  0021               	movlb	1	; select bank1
  2684  09CB  1512               	bsf	18,2	;volatile
  2685  09CC  170B               	bsf	11,6	;volatile
  2686  09CD  178B               	bsf	11,7	;volatile
  2687  09CE                     l233:	
  2688                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2689                           
  2690  09CE  003D               	movlb	29	; select bank29
  2691  09CF  198E               	btfsc	14,3	;volatile
  2692  09D0  29D3               	goto	l4103
  2693  09D1  158E               	bsf	14,3	;volatile
  2694  09D2  29CE               	goto	l233
  2695  09D3                     l4103:	
  2696                           
  2697                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  2698  09D3  3001               	movlw	1
  2699  09D4  0022               	movlb	2	; select bank2
  2700  09D5  00E0               	movwf	??_USBDeviceAttach^(0+256)
  2701  09D6  0860               	movf	??_USBDeviceAttach^(0+256),w
  2702  09D7  00EF               	movwf	_USBDeviceState^(0+256)	;volatile
  2703  09D8  0008               	return
  2704  09D9                     __end_of_USBDeviceAttach:	
  2705                           
  2706                           	psect	text4
  2707  0976                     __ptext4:	
  2708 ;; *************** function _SYSTEM_Initialize *****************
  2709 ;; Defined at:
  2710 ;;		line 82 in file "system.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  state           1    wreg     enum E2617
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  state           1    0[BANK2 ] enum E2617
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;Total ram usage:        1 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:   10
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _SYSTEM_Initialize
  2740  0976                     _SYSTEM_Initialize:	
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  2744                           ;SYSTEM_Initialize@state stored from wreg
  2745  0976  0022               	movlb	2	; select bank2
  2746  0977  00E0               	movwf	SYSTEM_Initialize@state^(0+256)
  2747                           
  2748                           ;system.c: 84: switch(state)
  2749  0978  2980               	goto	l3981
  2750  0979                     l3977:	
  2751                           ;system.c: 85: {
  2752                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  2753                           
  2754                           
  2755                           ;system.c: 90: OSCCON = 0xFC;
  2756  0979  30FC               	movlw	252
  2757  097A  0021               	movlb	1	; select bank1
  2758  097B  0099               	movwf	25	;volatile
  2759                           
  2760                           ;system.c: 91: ACTCON = 0x90;
  2761  097C  3090               	movlw	144
  2762  097D  0027               	movlb	7	; select bank7
  2763  097E  009B               	movwf	27	;volatile
  2764                           
  2765                           ;system.c: 102: }
  2766                           
  2767                           ;system.c: 101: break;
  2768                           
  2769                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  2770                           
  2771                           ;system.c: 98: break;
  2772                           
  2773                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  2774                           
  2775                           ;system.c: 95: break;
  2776  097F  0008               	return
  2777  0980                     l3981:	
  2778  0980  0022               	movlb	2	; select bank2
  2779  0981  0860               	movf	SYSTEM_Initialize@state^(0+256),w
  2780                           
  2781                           ; Switch size 1, requested type "space"
  2782                           ; Number of cases is 3, Range of values is 0 to 2
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte           10     6 (average)
  2786                           ; direct_byte           12     6 (fixed)
  2787                           ; jumptable            260     6 (fixed)
  2788                           ;	Chosen strategy is simple_byte
  2789  0982  3A00               	xorlw	0	; case 0
  2790  0983  1903               	skipnz
  2791  0984  2979               	goto	l3977
  2792  0985  3A01               	xorlw	1	; case 1
  2793  0986  1903               	skipnz
  2794  0987  298C               	goto	l565
  2795  0988  3A03               	xorlw	3	; case 2
  2796  0989  1903               	skipnz
  2797  098A  298C               	goto	l565
  2798  098B  298C               	goto	l565
  2799  098C                     l565:	
  2800  098C  0008               	return
  2801  098D                     __end_of_SYSTEM_Initialize:	
  2802                           
  2803                           	psect	text5
  2804  0250                     __ptext5:	
  2805 ;; *************** function _CDCTxService *****************
  2806 ;; Defined at:
  2807 ;;		line 836 in file "../lib/usb/src/usb_device_cdc.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  byte_to_send    1   13[BANK2 ] unsigned char 
  2812 ;;  i               1   12[BANK2 ] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2823 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2824 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;Total ram usage:        3 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:   11
  2829 ;; This function calls:
  2830 ;;		_USBTransferOnePacket
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           
  2837                           ;psect for function _CDCTxService
  2838  0250                     _CDCTxService:	
  2839                           
  2840                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  2841                           ;usb_device_cdc.c: 839: uint8_t i;
  2842                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  2843                           
  2844                           ;incstack = 0
  2845                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2846  0250  0021               	movlb	1	; select bank1
  2847  0251  1112               	bcf	18,2	;volatile
  2848                           
  2849                           ;usb_device_cdc.c: 843: {};
  2850                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  2851  0252  0023               	movlb	3	; select bank3
  2852  0253  0846               	movf	_CDCDataInHandle^(0+384),w
  2853  0254  0447               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  2854  0255  1903               	btfsc	3,2
  2855  0256  2A60               	goto	l4137
  2856  0257  0846               	movf	_CDCDataInHandle^(0+384),w
  2857  0258  0086               	movwf	6
  2858  0259  0847               	movf	(_CDCDataInHandle+1)^(0+384),w
  2859  025A  0087               	movwf	7
  2860  025B  1F81               	btfss	1,7
  2861  025C  2A60               	goto	l4137
  2862                           
  2863                           ;usb_device_cdc.c: 846: {
  2864                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  2865  025D  0021               	movlb	1	; select bank1
  2866  025E  1512               	bsf	18,2	;volatile
  2867                           
  2868                           ;usb_device_cdc.c: 848: return;
  2869  025F  0008               	return
  2870  0260                     l4137:	
  2871                           
  2872                           ;usb_device_cdc.c: 849: }
  2873                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  2874  0260  3003               	movlw	3
  2875  0261  0021               	movlb	1	; select bank1
  2876  0262  0662               	xorwf	_cdc_trf_state^(0+128),w
  2877  0263  1903               	btfsc	3,2
  2878                           
  2879                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  2880  0264  01E2               	clrf	_cdc_trf_state^(0+128)
  2881                           
  2882                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  2883  0265  0862               	movf	_cdc_trf_state^(0+128),w
  2884  0266  1D03               	btfss	3,2
  2885  0267  2A6A               	goto	l4145
  2886                           
  2887                           ;usb_device_cdc.c: 863: {
  2888                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  2889  0268  1512               	bsf	18,2	;volatile
  2890                           
  2891                           ;usb_device_cdc.c: 865: return;
  2892  0269  0008               	return
  2893  026A                     l4145:	
  2894                           
  2895                           ;usb_device_cdc.c: 866: }
  2896                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  2897  026A  3002               	movlw	2
  2898  026B  0662               	xorwf	_cdc_trf_state^(0+128),w
  2899  026C  1D03               	btfss	3,2
  2900  026D  2A89               	goto	l4151
  2901                           
  2902                           ;usb_device_cdc.c: 872: {
  2903                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  2904  026E  0022               	movlb	2	; select bank2
  2905  026F  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  2906  0270  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  2907  0271  3000               	movlw	0
  2908  0272  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  2909  0273  3000               	movlw	0
  2910  0274  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  2911  0275  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  2912  0276  3002               	movlw	2
  2913  0277  3186  26CF  3182   	fcall	_USBTransferOnePacket
  2914  027A  0022               	movlb	2	; select bank2
  2915  027B  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  2916  027C  0023               	movlb	3	; select bank3
  2917  027D  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  2918  027E  0022               	movlb	2	; select bank2
  2919  027F  0860               	movf	?_USBTransferOnePacket^(0+256),w
  2920  0280  0023               	movlb	3	; select bank3
  2921  0281  00C6               	movwf	_CDCDataInHandle^(0+384)
  2922                           
  2923                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  2924  0282  3003               	movlw	3
  2925  0283  0022               	movlb	2	; select bank2
  2926  0284  00EB               	movwf	??_CDCTxService^(0+256)
  2927  0285  086B               	movf	??_CDCTxService^(0+256),w
  2928  0286  0021               	movlb	1	; select bank1
  2929  0287  00E2               	movwf	_cdc_trf_state^(0+128)
  2930                           
  2931                           ;usb_device_cdc.c: 876: }
  2932  0288  2B1A               	goto	l4199
  2933  0289                     l4151:	
  2934                           
  2935                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  2936  0289  0362               	decf	_cdc_trf_state^(0+128),w
  2937  028A  1D03               	btfss	3,2
  2938  028B  2B1A               	goto	l4199
  2939                           
  2940                           ;usb_device_cdc.c: 878: {
  2941                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  2942  028C  3041               	movlw	65
  2943  028D  0023               	movlb	3	; select bank3
  2944  028E  0250               	subwf	_cdc_tx_len^(0+384),w
  2945  028F  1C03               	skipc
  2946  0290  2A93               	goto	l4157
  2947                           
  2948                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  2949  0291  3040               	movlw	64
  2950  0292  2A95               	goto	L2
  2951  0293                     l4157:	
  2952                           
  2953                           ;usb_device_cdc.c: 884: else
  2954                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  2955  0293  0023               	movlb	3	; select bank3
  2956  0294  0850               	movf	_cdc_tx_len^(0+384),w
  2957  0295                     L2:	
  2958  0295  0022               	movlb	2	; select bank2
  2959  0296  00EB               	movwf	??_CDCTxService^(0+256)
  2960  0297  086B               	movf	??_CDCTxService^(0+256),w
  2961  0298  00ED               	movwf	CDCTxService@byte_to_send^(0+256)
  2962                           
  2963                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  2964  0299  036D               	decf	CDCTxService@byte_to_send^(0+256),w
  2965  029A  3AFF               	xorlw	255
  2966  029B  0023               	movlb	3	; select bank3
  2967  029C  0750               	addwf	_cdc_tx_len^(0+384),w
  2968  029D  0022               	movlb	2	; select bank2
  2969  029E  00EB               	movwf	??_CDCTxService^(0+256)
  2970  029F  086B               	movf	??_CDCTxService^(0+256),w
  2971  02A0  0023               	movlb	3	; select bank3
  2972  02A1  00D0               	movwf	_cdc_tx_len^(0+384)
  2973                           
  2974                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  2975  02A2  30A0               	movlw	160
  2976  02A3  0022               	movlb	2	; select bank2
  2977  02A4  00EB               	movwf	??_CDCTxService^(0+256)
  2978  02A5  086B               	movf	??_CDCTxService^(0+256),w
  2979  02A6  0023               	movlb	3	; select bank3
  2980  02A7  00CA               	movwf	_pCDCDst^(0+384)
  2981                           
  2982                           ;usb_device_cdc.c: 894: i = byte_to_send;
  2983  02A8  0022               	movlb	2	; select bank2
  2984  02A9  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  2985  02AA  00EB               	movwf	??_CDCTxService^(0+256)
  2986  02AB  086B               	movf	??_CDCTxService^(0+256),w
  2987  02AC  00EC               	movwf	CDCTxService@i^(0+256)
  2988                           
  2989                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  2990  02AD  0023               	movlb	3	; select bank3
  2991  02AE  084F               	movf	_cdc_mem_type^(0+384),w
  2992  02AF  1903               	btfsc	3,2
  2993  02B0  2ACE               	goto	l4177
  2994  02B1  2AEF               	goto	l4187
  2995  02B2                     l4169:	
  2996                           ;usb_device_cdc.c: 896: {
  2997                           ;usb_device_cdc.c: 897: while(i)
  2998                           
  2999                           
  3000                           ;usb_device_cdc.c: 898: {
  3001                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3002  02B2  0023               	movlb	3	; select bank3
  3003  02B3  084C               	movf	_pCDCSrc^(0+384),w
  3004  02B4  0086               	movwf	6
  3005  02B5  0187               	clrf	7
  3006  02B6  0801               	movf	1,w
  3007  02B7  0022               	movlb	2	; select bank2
  3008  02B8  00EB               	movwf	??_CDCTxService^(0+256)
  3009  02B9  0023               	movlb	3	; select bank3
  3010  02BA  084A               	movf	_pCDCDst^(0+384),w
  3011  02BB  0086               	movwf	6
  3012  02BC  0187               	clrf	7
  3013  02BD  0022               	movlb	2	; select bank2
  3014  02BE  086B               	movf	??_CDCTxService^(0+256),w
  3015  02BF  0081               	movwf	1
  3016                           
  3017                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3018  02C0  3001               	movlw	1
  3019  02C1  00EB               	movwf	??_CDCTxService^(0+256)
  3020  02C2  086B               	movf	??_CDCTxService^(0+256),w
  3021  02C3  0023               	movlb	3	; select bank3
  3022  02C4  07CA               	addwf	_pCDCDst^(0+384),f
  3023                           
  3024                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3025  02C5  3001               	movlw	1
  3026  02C6  0022               	movlb	2	; select bank2
  3027  02C7  00EB               	movwf	??_CDCTxService^(0+256)
  3028  02C8  086B               	movf	??_CDCTxService^(0+256),w
  3029  02C9  0023               	movlb	3	; select bank3
  3030  02CA  07CC               	addwf	_pCDCSrc^(0+384),f
  3031                           
  3032                           ;usb_device_cdc.c: 902: i--;
  3033  02CB  3001               	movlw	1
  3034  02CC  0022               	movlb	2	; select bank2
  3035  02CD  02EC               	subwf	CDCTxService@i^(0+256),f
  3036  02CE                     l4177:	
  3037  02CE  0022               	movlb	2	; select bank2
  3038  02CF  086C               	movf	CDCTxService@i^(0+256),w
  3039  02D0  1903               	btfsc	3,2
  3040  02D1  2AF3               	goto	l4189
  3041  02D2  2AB2               	goto	l4169
  3042  02D3                     l4179:	
  3043                           ;usb_device_cdc.c: 905: else
  3044                           ;usb_device_cdc.c: 906: {
  3045                           ;usb_device_cdc.c: 907: while(i)
  3046                           
  3047                           ;usb_device_cdc.c: 903: }
  3048                           ;usb_device_cdc.c: 904: }
  3049                           
  3050                           
  3051                           ;usb_device_cdc.c: 908: {
  3052                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3053  02D3  0023               	movlb	3	; select bank3
  3054  02D4  084C               	movf	_pCDCSrc^(0+384),w
  3055  02D5  0086               	movwf	6
  3056  02D6  0187               	clrf	7
  3057  02D7  0801               	movf	1,w
  3058  02D8  0022               	movlb	2	; select bank2
  3059  02D9  00EB               	movwf	??_CDCTxService^(0+256)
  3060  02DA  0023               	movlb	3	; select bank3
  3061  02DB  084A               	movf	_pCDCDst^(0+384),w
  3062  02DC  0086               	movwf	6
  3063  02DD  0187               	clrf	7
  3064  02DE  0022               	movlb	2	; select bank2
  3065  02DF  086B               	movf	??_CDCTxService^(0+256),w
  3066  02E0  0081               	movwf	1
  3067                           
  3068                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3069  02E1  3001               	movlw	1
  3070  02E2  00EB               	movwf	??_CDCTxService^(0+256)
  3071  02E3  086B               	movf	??_CDCTxService^(0+256),w
  3072  02E4  0023               	movlb	3	; select bank3
  3073  02E5  07CA               	addwf	_pCDCDst^(0+384),f
  3074                           
  3075                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3076  02E6  3001               	movlw	1
  3077  02E7  0022               	movlb	2	; select bank2
  3078  02E8  00EB               	movwf	??_CDCTxService^(0+256)
  3079  02E9  086B               	movf	??_CDCTxService^(0+256),w
  3080  02EA  0023               	movlb	3	; select bank3
  3081  02EB  07CC               	addwf	_pCDCSrc^(0+384),f
  3082                           
  3083                           ;usb_device_cdc.c: 912: i--;
  3084  02EC  3001               	movlw	1
  3085  02ED  0022               	movlb	2	; select bank2
  3086  02EE  02EC               	subwf	CDCTxService@i^(0+256),f
  3087  02EF                     l4187:	
  3088  02EF  0022               	movlb	2	; select bank2
  3089  02F0  086C               	movf	CDCTxService@i^(0+256),w
  3090  02F1  1D03               	btfss	3,2
  3091  02F2  2AD3               	goto	l4179
  3092  02F3                     l4189:	
  3093                           
  3094                           ;usb_device_cdc.c: 913: }
  3095                           ;usb_device_cdc.c: 914: }
  3096                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3097  02F3  0023               	movlb	3	; select bank3
  3098  02F4  0850               	movf	_cdc_tx_len^(0+384),w
  3099  02F5  1D03               	btfss	3,2
  3100  02F6  2B04               	goto	l4197
  3101                           
  3102                           ;usb_device_cdc.c: 921: {
  3103                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  3104  02F7  3040               	movlw	64
  3105  02F8  0022               	movlb	2	; select bank2
  3106  02F9  066D               	xorwf	CDCTxService@byte_to_send^(0+256),w
  3107  02FA  1D03               	btfss	3,2
  3108  02FB  2AFE               	goto	l4195
  3109                           
  3110                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3111  02FC  3002               	movlw	2
  3112  02FD  2B00               	goto	L3
  3113  02FE                     l4195:	
  3114                           
  3115                           ;usb_device_cdc.c: 924: else
  3116                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3117  02FE  3003               	movlw	3
  3118  02FF  0022               	movlb	2	; select bank2
  3119  0300                     L3:	
  3120  0300  00EB               	movwf	??_CDCTxService^(0+256)
  3121  0301  086B               	movf	??_CDCTxService^(0+256),w
  3122  0302  0021               	movlb	1	; select bank1
  3123  0303  00E2               	movwf	_cdc_trf_state^(0+128)
  3124  0304                     l4197:	
  3125                           
  3126                           ;usb_device_cdc.c: 926: }
  3127                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3128  0304  0022               	movlb	2	; select bank2
  3129  0305  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3130  0306  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3131  0307  30A0               	movlw	160
  3132  0308  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3133  0309  3000               	movlw	0
  3134  030A  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3135  030B  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  3136  030C  00EB               	movwf	??_CDCTxService^(0+256)
  3137  030D  086B               	movf	??_CDCTxService^(0+256),w
  3138  030E  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3139  030F  3002               	movlw	2
  3140  0310  3186  26CF         	fcall	_USBTransferOnePacket
  3141  0312  0022               	movlb	2	; select bank2
  3142  0313  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3143  0314  0023               	movlb	3	; select bank3
  3144  0315  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3145  0316  0022               	movlb	2	; select bank2
  3146  0317  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3147  0318  0023               	movlb	3	; select bank3
  3148  0319  00C6               	movwf	_CDCDataInHandle^(0+384)
  3149  031A                     l4199:	
  3150                           
  3151                           ;usb_device_cdc.c: 929: }
  3152                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3153  031A  0021               	movlb	1	; select bank1
  3154  031B  1512               	bsf	18,2	;volatile
  3155  031C  0008               	return
  3156  031D                     __end_of_CDCTxService:	
  3157                           
  3158                           	psect	text6
  3159  0B00                     __ptext6:	
  3160 ;; *************** function _CDCInitEP *****************
  3161 ;; Defined at:
  3162 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3178 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3179 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3180 ;;Total ram usage:        1 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:   12
  3183 ;; This function calls:
  3184 ;;		_USBEnableEndpoint
  3185 ;;		_USBTransferOnePacket
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _CDCInitEP
  3193  0B00                     _CDCInitEP:	
  3194                           
  3195                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3199  0B00  3000               	movlw	0
  3200  0B01  0023               	movlb	3	; select bank3
  3201  0B02  00E2               	movwf	(_line_coding+3)^(0+384)
  3202  0B03  3000               	movlw	0
  3203  0B04  00E1               	movwf	(_line_coding+2)^(0+384)
  3204  0B05  304B               	movlw	75
  3205  0B06  00E0               	movwf	(_line_coding+1)^(0+384)
  3206  0B07  3000               	movlw	0
  3207  0B08  00DF               	movwf	_line_coding^(0+384)
  3208                           
  3209                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  3210  0B09  01E3               	clrf	(_line_coding^(0+384)+4)
  3211                           
  3212                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  3213  0B0A  01E4               	clrf	(_line_coding^(0+384)+5)
  3214                           
  3215                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  3216  0B0B  3008               	movlw	8
  3217  0B0C  0022               	movlb	2	; select bank2
  3218  0B0D  00ED               	movwf	??_CDCInitEP^(0+256)
  3219  0B0E  086D               	movf	??_CDCInitEP^(0+256),w
  3220  0B0F  0023               	movlb	3	; select bank3
  3221  0B10  00E5               	movwf	(_line_coding^(0+384)+6)
  3222                           
  3223                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  3224  0B11  01D1               	clrf	_cdc_rx_len^(0+384)
  3225                           
  3226                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  3227  0B12  301A               	movlw	26
  3228  0B13  0022               	movlb	2	; select bank2
  3229  0B14  00ED               	movwf	??_CDCInitEP^(0+256)
  3230  0B15  086D               	movf	??_CDCInitEP^(0+256),w
  3231  0B16  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3232  0B17  3001               	movlw	1
  3233  0B18  318A  2238  318B   	fcall	_USBEnableEndpoint
  3234                           
  3235                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  3236  0B1B  301E               	movlw	30
  3237  0B1C  0022               	movlb	2	; select bank2
  3238  0B1D  00ED               	movwf	??_CDCInitEP^(0+256)
  3239  0B1E  086D               	movf	??_CDCInitEP^(0+256),w
  3240  0B1F  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3241  0B20  3002               	movlw	2
  3242  0B21  318A  2238  318B   	fcall	_USBEnableEndpoint
  3243                           
  3244                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3245  0B24  0022               	movlb	2	; select bank2
  3246  0B25  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3247  0B26  3020               	movlw	32
  3248  0B27  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3249  0B28  3001               	movlw	1
  3250  0B29  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3251  0B2A  3040               	movlw	64
  3252  0B2B  00ED               	movwf	??_CDCInitEP^(0+256)
  3253  0B2C  086D               	movf	??_CDCInitEP^(0+256),w
  3254  0B2D  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3255  0B2E  3002               	movlw	2
  3256  0B2F  3186  26CF         	fcall	_USBTransferOnePacket
  3257  0B31  0022               	movlb	2	; select bank2
  3258  0B32  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3259  0B33  0023               	movlb	3	; select bank3
  3260  0B34  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  3261  0B35  0022               	movlb	2	; select bank2
  3262  0B36  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3263  0B37  0023               	movlb	3	; select bank3
  3264  0B38  00C8               	movwf	_CDCDataOutHandle^(0+384)
  3265                           
  3266                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  3267  0B39  01C6               	clrf	_CDCDataInHandle^(0+384)
  3268  0B3A  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  3269                           
  3270                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  3271  0B3B  0021               	movlb	1	; select bank1
  3272  0B3C  01E2               	clrf	_cdc_trf_state^(0+128)
  3273  0B3D  0008               	return
  3274  0B3E                     __end_of_CDCInitEP:	
  3275                           
  3276                           	psect	text7
  3277  06CF                     __ptext7:	
  3278 ;; *************** function _USBTransferOnePacket *****************
  3279 ;; Defined at:
  3280 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  ep              1    wreg     unsigned char 
  3283 ;;  dir             1    0[BANK2 ] unsigned char 
  3284 ;;  data            2    1[BANK2 ] PTR unsigned char 
  3285 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  3286 ;;  len             1    3[BANK2 ] unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  ep              1    8[BANK2 ] unsigned char 
  3289 ;;  handle          2    9[BANK2 ] PTR volatile struct __BD
  3290 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  2    0[BANK2 ] PTR void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3300 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;Total ram usage:       11 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:   10
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_CDCInitEP
  3311 ;;		_getsUSBUSART
  3312 ;;		_CDCTxService
  3313 ;;		_USBCDCEventHandler
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _USBTransferOnePacket
  3319  06CF                     _USBTransferOnePacket:	
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  3323                           ;USBTransferOnePacket@ep stored from wreg
  3324  06CF  0022               	movlb	2	; select bank2
  3325  06D0  00E8               	movwf	USBTransferOnePacket@ep^(0+256)
  3326                           
  3327                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  3328                           ;usb_device.c: 1000: if(dir != 0)
  3329  06D1  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3330  06D2  1903               	btfsc	3,2
  3331  06D3  2EDD               	goto	l3951
  3332                           
  3333                           ;usb_device.c: 1001: {
  3334                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  3335  06D4  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3336  06D5  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3337  06D6  0086               	movwf	6
  3338  06D7  3001               	movlw	1	; select bank3/4
  3339  06D8  0087               	movwf	7
  3340  06D9  3F40               	moviw [0]fsr1
  3341  06DA  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3342  06DB  3F41               	moviw [1]fsr1
  3343  06DC  2EE5               	goto	L4
  3344  06DD                     l3951:	
  3345                           ;usb_device.c: 1004: }
  3346                           
  3347                           
  3348                           ;usb_device.c: 1005: else
  3349                           ;usb_device.c: 1006: {
  3350                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  3351  06DD  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3352  06DE  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3353  06DF  0086               	movwf	6
  3354  06E0  3001               	movlw	1	; select bank3/4
  3355  06E1  0087               	movwf	7
  3356  06E2  3F40               	moviw [0]fsr1
  3357  06E3  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3358  06E4  3F41               	moviw [1]fsr1
  3359  06E5                     L4:	
  3360  06E5  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  3361                           
  3362                           ;usb_device.c: 1009: }
  3363                           ;usb_device.c: 1013: if(handle == 0)
  3364  06E6  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3365  06E7  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+256),w
  3366  06E8  1D03               	btfss	3,2
  3367  06E9  2EED               	goto	l3959
  3368                           
  3369                           ;usb_device.c: 1014: {
  3370                           ;usb_device.c: 1015: return 0;
  3371  06EA  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  3372  06EB  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  3373  06EC  0008               	return
  3374  06ED                     l3959:	
  3375                           
  3376                           ;usb_device.c: 1016: }
  3377                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  3378  06ED  30FF               	movlw	255
  3379  06EE  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  3380  06EF  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3381  06F0  307F               	movlw	127
  3382  06F1  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  3383  06F2  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3384  06F3  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3385  06F4  0086               	movwf	6
  3386  06F5  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3387  06F6  0087               	movwf	7
  3388  06F7  3142               	addfsr 1,2
  3389  06F8  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3390  06F9  3FC0               	movwi [0]fsr1
  3391  06FA  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  3392  06FB  3FC1               	movwi [1]fsr1
  3393                           
  3394                           ;usb_device.c: 1030: handle->CNT = len;
  3395  06FC  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3396  06FD  3E01               	addlw	1
  3397  06FE  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3398  06FF  3000               	movlw	0
  3399  0700  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  3400  0701  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3401  0702  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3402  0703  0086               	movwf	6
  3403  0704  0865               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  3404  0705  0087               	movwf	7
  3405  0706  0863               	movf	USBTransferOnePacket@len^(0+256),w
  3406  0707  0081               	movwf	1
  3407                           
  3408                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  3409  0708  3040               	movlw	64
  3410  0709  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3411  070A  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3412  070B  0086               	movwf	6
  3413  070C  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3414  070D  0087               	movwf	7
  3415  070E  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3416  070F  0581               	andwf	1,f
  3417                           
  3418                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  3419  0710  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3420  0711  0086               	movwf	6
  3421  0712  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3422  0713  0087               	movwf	7
  3423  0714  1581               	bsf	1,3
  3424                           
  3425                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  3426  0715  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3427  0716  0086               	movwf	6
  3428  0717  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3429  0718  0087               	movwf	7
  3430  0719  1781               	bsf	1,7
  3431                           
  3432                           ;usb_device.c: 1036: if(dir != 0)
  3433  071A  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3434  071B  1903               	btfsc	3,2
  3435  071C  2F36               	goto	l3969
  3436                           
  3437                           ;usb_device.c: 1037: {
  3438                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  3439  071D  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3440  071E  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3441  071F  0086               	movwf	6
  3442  0720  3001               	movlw	1	; select bank3/4
  3443  0721  0087               	movwf	7
  3444  0722  3F40               	moviw [0]fsr1
  3445  0723  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3446  0724  3F41               	moviw [1]fsr1
  3447  0725  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3448  0726  3004               	movlw	4
  3449  0727  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3450  0728  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3451  0729  3000               	movlw	0
  3452  072A  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3453  072B  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3454  072C  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3455  072D  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3456  072E  0086               	movwf	6
  3457  072F  3001               	movlw	1	; select bank3/4
  3458  0730  0087               	movwf	7
  3459  0731  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3460  0732  3FC0               	movwi [0]fsr1
  3461  0733  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3462  0734  3FC1               	movwi [1]fsr1
  3463                           
  3464                           ;usb_device.c: 1040: }
  3465  0735  2F4E               	goto	l3971
  3466  0736                     l3969:	
  3467                           
  3468                           ;usb_device.c: 1041: else
  3469                           ;usb_device.c: 1042: {
  3470                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  3471  0736  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3472  0737  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3473  0738  0086               	movwf	6
  3474  0739  3001               	movlw	1	; select bank3/4
  3475  073A  0087               	movwf	7
  3476  073B  3F40               	moviw [0]fsr1
  3477  073C  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3478  073D  3F41               	moviw [1]fsr1
  3479  073E  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3480  073F  3004               	movlw	4
  3481  0740  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3482  0741  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3483  0742  3000               	movlw	0
  3484  0743  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3485  0744  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3486  0745  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3487  0746  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3488  0747  0086               	movwf	6
  3489  0748  3001               	movlw	1	; select bank3/4
  3490  0749  0087               	movwf	7
  3491  074A  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3492  074B  3FC0               	movwi [0]fsr1
  3493  074C  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3494  074D  3FC1               	movwi [1]fsr1
  3495  074E                     l3971:	
  3496                           
  3497                           ;usb_device.c: 1045: }
  3498                           ;usb_device.c: 1046: return (void*)handle;
  3499  074E  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3500  074F  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  3501  0750  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3502  0751  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  3503  0752  0008               	return
  3504  0753                     __end_of_USBTransferOnePacket:	
  3505                           
  3506                           	psect	text8
  3507  0A38                     __ptext8:	
  3508 ;; *************** function _USBEnableEndpoint *****************
  3509 ;; Defined at:
  3510 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  ep              1    wreg     unsigned char 
  3513 ;;  options         1    7[BANK2 ] unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  ep              1   12[BANK2 ] unsigned char 
  3516 ;;  p               2   10[BANK2 ] PTR unsigned char 
  3517 ;;		 -> UEP0(1), 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3527 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;Total ram usage:        6 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:   11
  3534 ;; This function calls:
  3535 ;;		_USBConfigureEndpoint
  3536 ;; This function is called by:
  3537 ;;		_CDCInitEP
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _USBEnableEndpoint
  3543  0A38                     _USBEnableEndpoint:	
  3544                           
  3545                           ;incstack = 0
  3546                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3547                           ;USBEnableEndpoint@ep stored from wreg
  3548  0A38  0022               	movlb	2	; select bank2
  3549  0A39  00EC               	movwf	USBEnableEndpoint@ep^(0+256)
  3550                           
  3551                           ;usb_device.c: 880: unsigned char* p;
  3552                           ;usb_device.c: 884: if(options & 0x04)
  3553  0A3A  1D67               	btfss	USBEnableEndpoint@options^(0+256),2
  3554  0A3B  2A41               	goto	l3939
  3555                           
  3556                           ;usb_device.c: 885: {
  3557                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  3558  0A3C  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3559  0A3D  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3560  0A3E  318B  2380  318A   	fcall	_USBConfigureEndpoint
  3561  0A41                     l3939:	
  3562                           
  3563                           ;usb_device.c: 887: }
  3564                           ;usb_device.c: 888: if(options & 0x02)
  3565  0A41  0022               	movlb	2	; select bank2
  3566  0A42  1CE7               	btfss	USBEnableEndpoint@options^(0+256),1
  3567  0A43  2A49               	goto	l3943
  3568                           
  3569                           ;usb_device.c: 889: {
  3570                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  3571  0A44  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3572  0A45  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  3573  0A46  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3574  0A47  318B  2380         	fcall	_USBConfigureEndpoint
  3575  0A49                     l3943:	
  3576                           
  3577                           ;usb_device.c: 891: }
  3578                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  3579  0A49  0022               	movlb	2	; select bank2
  3580  0A4A  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3581  0A4B  3E98               	addlw	152
  3582  0A4C  00E8               	movwf	??_USBEnableEndpoint^(0+256)
  3583  0A4D  01E9               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  3584  0A4E  300E               	movlw	14
  3585  0A4F  3DE9               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  3586  0A50  0868               	movf	??_USBEnableEndpoint^(0+256),w
  3587  0A51  00EA               	movwf	USBEnableEndpoint@p^(0+256)
  3588  0A52  0869               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  3589  0A53  00EB               	movwf	(USBEnableEndpoint@p+1)^(0+256)
  3590                           
  3591                           ;usb_device.c: 901: *p = options;
  3592  0A54  086A               	movf	USBEnableEndpoint@p^(0+256),w
  3593  0A55  0086               	movwf	6
  3594  0A56  086B               	movf	(USBEnableEndpoint@p+1)^(0+256),w
  3595  0A57  0087               	movwf	7
  3596  0A58  0867               	movf	USBEnableEndpoint@options^(0+256),w
  3597  0A59  0081               	movwf	1
  3598  0A5A  0008               	return
  3599  0A5B                     __end_of_USBEnableEndpoint:	
  3600                           
  3601                           	psect	text9
  3602  0B80                     __ptext9:	
  3603 ;; *************** function _USBConfigureEndpoint *****************
  3604 ;; Defined at:
  3605 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  EPNum           1    wreg     unsigned char 
  3608 ;;  direction       1    0[BANK2 ] unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  EPNum           1    5[BANK2 ] unsigned char 
  3611 ;;  handle          1    6[BANK2 ] PTR volatile struct __BD
  3612 ;;		 -> BDT(48), 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3622 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;Total ram usage:        7 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:   10
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_USBEnableEndpoint
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function _USBConfigureEndpoint
  3638  0B80                     _USBConfigureEndpoint:	
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  3642                           ;USBConfigureEndpoint@EPNum stored from wreg
  3643  0B80  0022               	movlb	2	; select bank2
  3644  0B81  00E5               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  3645                           
  3646                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  3647                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  3648  0B82  3020               	movlw	32
  3649  0B83  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3650  0B84  0861               	movf	??_USBConfigureEndpoint^(0+256),w
  3651  0B85  00E6               	movwf	USBConfigureEndpoint@handle^(0+256)
  3652                           
  3653                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  3654  0B86  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  3655  0B87  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3656  0B88  3001               	movlw	1
  3657  0B89                     u3575:	
  3658  0B89  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  3659  0B8A  0B89               	decfsz	9,f
  3660  0B8B  2B89               	goto	u3575
  3661  0B8C  0865               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  3662  0B8D  00E2               	movwf	(??_USBConfigureEndpoint+1)^(0+256)
  3663  0B8E  3001               	movlw	1
  3664  0B8F                     u3585:	
  3665  0B8F  35E2               	lslf	(??_USBConfigureEndpoint+1)^(0+256),f
  3666  0B90  3EFF               	addlw	-1
  3667  0B91  1D03               	skipz
  3668  0B92  2B8F               	goto	u3585
  3669  0B93  3562               	lslf	(??_USBConfigureEndpoint+1)^(0+256),w
  3670  0B94  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  3671  0B95  00E3               	movwf	(??_USBConfigureEndpoint+2)^(0+256)
  3672  0B96  3001               	movlw	1
  3673  0B97                     u3595:	
  3674  0B97  35E3               	lslf	(??_USBConfigureEndpoint+2)^(0+256),f
  3675  0B98  3EFF               	addlw	-1
  3676  0B99  1D03               	skipz
  3677  0B9A  2B97               	goto	u3595
  3678  0B9B  3563               	lslf	(??_USBConfigureEndpoint+2)^(0+256),w
  3679  0B9C  00E4               	movwf	(??_USBConfigureEndpoint+3)^(0+256)
  3680  0B9D  0864               	movf	(??_USBConfigureEndpoint+3)^(0+256),w
  3681  0B9E  07E6               	addwf	USBConfigureEndpoint@handle^(0+256),f
  3682                           
  3683                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  3684  0B9F  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3685  0BA0  0086               	movwf	6
  3686  0BA1  0187               	clrf	7
  3687  0BA2  1381               	bcf	1,7
  3688                           
  3689                           ;usb_device.c: 1557: if(direction == 0)
  3690  0BA3  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  3691  0BA4  1D03               	btfss	3,2
  3692  0BA5  2BB0               	goto	l3929
  3693                           
  3694                           ;usb_device.c: 1558: {
  3695                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  3696  0BA6  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  3697  0BA7  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3698  0BA8  0086               	movwf	6
  3699  0BA9  3001               	movlw	1	; select bank3/4
  3700  0BAA  0087               	movwf	7
  3701  0BAB  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3702  0BAC  3FC0               	movwi [0]fsr1
  3703  0BAD  3000               	movlw	0
  3704  0BAE  3FC1               	movwi [1]fsr1
  3705                           
  3706                           ;usb_device.c: 1560: }
  3707  0BAF  2BB9               	goto	l3931
  3708  0BB0                     l3929:	
  3709                           
  3710                           ;usb_device.c: 1561: else
  3711                           ;usb_device.c: 1562: {
  3712                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  3713  0BB0  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  3714  0BB1  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3715  0BB2  0086               	movwf	6
  3716  0BB3  3001               	movlw	1	; select bank3/4
  3717  0BB4  0087               	movwf	7
  3718  0BB5  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3719  0BB6  3FC0               	movwi [0]fsr1
  3720  0BB7  3000               	movlw	0
  3721  0BB8  3FC1               	movwi [1]fsr1
  3722  0BB9                     l3931:	
  3723                           
  3724                           ;usb_device.c: 1564: }
  3725                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  3726  0BB9  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3727  0BBA  0086               	movwf	6
  3728  0BBB  0187               	clrf	7
  3729  0BBC  1301               	bcf	1,6
  3730                           
  3731                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  3732  0BBD  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3733  0BBE  3E04               	addlw	4
  3734  0BBF  0086               	movwf	6
  3735  0BC0  0187               	clrf	7
  3736  0BC1  1701               	bsf	1,6
  3737  0BC2  0008               	return
  3738  0BC3                     __end_of_USBConfigureEndpoint:	
  3739                           
  3740                           	psect	intentry
  3741  0004                     __pintentry:	
  3742 ;; *************** function _SYS_InterruptHigh *****************
  3743 ;; Defined at:
  3744 ;;		line 107 in file "system.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;Total ram usage:        1 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    9
  3765 ;; This function calls:
  3766 ;;		_USBDeviceTasks
  3767 ;; This function is called by:
  3768 ;;		Interrupt level 1
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772  0004                     _SYS_InterruptHigh:	
  3773                           
  3774                           ;incstack = 0
  3775  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3776                           
  3777                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3778  0005  3180               	pagesel	$
  3779  0006  0020               	movlb	0	; select bank0
  3780  0007  087F               	movf	127,w
  3781  0008  0021               	movlb	1	; select bank1
  3782  0009  00EB               	movwf	??_SYS_InterruptHigh^(0+128)
  3783                           
  3784                           ;system.c: 110: USBDeviceTasks();
  3785  000A  3181  2169         	fcall	_USBDeviceTasks
  3786  000C  0021               	movlb	1	; select bank1
  3787  000D  086B               	movf	??_SYS_InterruptHigh^(0+128),w
  3788  000E  0020               	movlb	0	; select bank0
  3789  000F  00FF               	movwf	127
  3790  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3791  0011  0009               	retfie
  3792  0012                     __end_of_SYS_InterruptHigh:	
  3793                           
  3794                           	psect	text11
  3795  0169                     __ptext11:	
  3796 ;; *************** function _USBDeviceTasks *****************
  3797 ;; Defined at:
  3798 ;;		line 477 in file "../lib/usb/src/usb_device.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  i               1   15[BANK0 ] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;Total ram usage:        3 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    8
  3819 ;; This function calls:
  3820 ;;		_USBCtrlEPAllowStatusStage
  3821 ;;		_USBCtrlEPService
  3822 ;;		_USBIncrement1msInternalTimers
  3823 ;;		_USBStallHandler
  3824 ;;		_USBSuspend
  3825 ;;		_USBWakeFromSuspend
  3826 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3827 ;;		i1_USBDeviceInit
  3828 ;; This function is called by:
  3829 ;;		_SYS_InterruptHigh
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           
  3834                           ;psect for function _USBDeviceTasks
  3835  0169                     _USBDeviceTasks:	
  3836                           
  3837                           ;usb_device.c: 479: uint8_t i;
  3838                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3842  0169  0022               	movlb	2	; select bank2
  3843  016A  036F               	decf	_USBDeviceState^(0+256),w	;volatile
  3844  016B  1D03               	btfss	3,2
  3845  016C  2979               	goto	i1l3483
  3846                           
  3847                           ;usb_device.c: 591: {
  3848                           ;usb_device.c: 601: if(!UCONbits.SE0)
  3849  016D  003D               	movlb	29	; select bank29
  3850  016E  1A8E               	btfsc	14,5	;volatile
  3851  016F  2979               	goto	i1l3483
  3852                           
  3853                           ;usb_device.c: 602: {
  3854                           ;usb_device.c: 608: {UIR = 0;};
  3855  0170  0190               	clrf	16	;volatile
  3856                           
  3857                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  3858  0171  1412               	bsf	18,0	;volatile
  3859                           
  3860                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  3861  0172  1612               	bsf	18,4	;volatile
  3862                           
  3863                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  3864  0173  3002               	movlw	2
  3865  0174  0021               	movlb	1	; select bank1
  3866  0175  00E9               	movwf	??_USBDeviceTasks^(0+128)
  3867  0176  0869               	movf	??_USBDeviceTasks^(0+128),w
  3868  0177  0022               	movlb	2	; select bank2
  3869  0178  00EF               	movwf	_USBDeviceState^(0+256)	;volatile
  3870  0179                     i1l3483:	
  3871                           
  3872                           ;usb_device.c: 617: }
  3873                           ;usb_device.c: 618: }
  3874                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3875  0179  003D               	movlb	29	; select bank29
  3876  017A  1910               	btfsc	16,2	;volatile
  3877  017B  1D12               	btfss	18,2	;volatile
  3878  017C  2986               	goto	i1l3491
  3879                           
  3880                           ;usb_device.c: 635: {
  3881                           ;usb_device.c: 636: (UIR &= 0xFB);
  3882  017D  30FB               	movlw	251
  3883  017E  0021               	movlb	1	; select bank1
  3884  017F  00E9               	movwf	??_USBDeviceTasks^(0+128)
  3885  0180  0869               	movf	??_USBDeviceTasks^(0+128),w
  3886  0181  003D               	movlb	29	; select bank29
  3887  0182  0590               	andwf	16,f	;volatile
  3888                           
  3889                           ;usb_device.c: 640: USBWakeFromSuspend();
  3890  0183  318A  2218  3181   	fcall	_USBWakeFromSuspend
  3891  0186                     i1l3491:	
  3892                           
  3893                           ;usb_device.c: 642: }
  3894                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  3895  0186  003D               	movlb	29	; select bank29
  3896  0187  1C8E               	btfss	14,1	;volatile
  3897  0188  298C               	goto	i1l184
  3898                           
  3899                           ;usb_device.c: 648: {
  3900                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  3901  0189  0020               	movlb	0	; select bank0
  3902  018A  1112               	bcf	18,2	;volatile
  3903                           
  3904                           ;usb_device.c: 650: return;
  3905  018B  0008               	return
  3906  018C                     i1l184:	
  3907                           
  3908                           ;usb_device.c: 651: }
  3909                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3910  018C  1810               	btfsc	16,0	;volatile
  3911  018D  1C12               	btfss	18,0	;volatile
  3912  018E  299F               	goto	i1l3505
  3913                           
  3914                           ;usb_device.c: 664: {
  3915                           ;usb_device.c: 665: USBDeviceInit();
  3916  018F  3183  23D4  3181   	fcall	i1_USBDeviceInit
  3917                           
  3918                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  3919  0192  0021               	movlb	1	; select bank1
  3920  0193  1512               	bsf	18,2	;volatile
  3921                           
  3922                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  3923  0194  3004               	movlw	4
  3924  0195  00E9               	movwf	??_USBDeviceTasks^(0+128)
  3925  0196  0869               	movf	??_USBDeviceTasks^(0+128),w
  3926  0197  0022               	movlb	2	; select bank2
  3927  0198  00EF               	movwf	_USBDeviceState^(0+256)	;volatile
  3928                           
  3929                           ;usb_device.c: 681: (UIR &= 0xFE);
  3930  0199  30FE               	movlw	254
  3931  019A  0021               	movlb	1	; select bank1
  3932  019B  00E9               	movwf	??_USBDeviceTasks^(0+128)
  3933  019C  0869               	movf	??_USBDeviceTasks^(0+128),w
  3934  019D  003D               	movlb	29	; select bank29
  3935  019E  0590               	andwf	16,f	;volatile
  3936  019F                     i1l3505:	
  3937                           
  3938                           ;usb_device.c: 682: }
  3939                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3940  019F  1A10               	btfsc	16,4	;volatile
  3941  01A0  1E12               	btfss	18,4	;volatile
  3942  01A1  29A5               	goto	i1l3511
  3943                           
  3944                           ;usb_device.c: 688: {
  3945                           ;usb_device.c: 694: USBSuspend();
  3946  01A2  3189  21D9  3181   	fcall	_USBSuspend
  3947  01A5                     i1l3511:	
  3948                           
  3949                           ;usb_device.c: 696: }
  3950                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  3951  01A5  003D               	movlb	29	; select bank29
  3952  01A6  1F10               	btfss	16,6	;volatile
  3953  01A7  29CF               	goto	i1l3527
  3954                           
  3955                           ;usb_device.c: 709: {
  3956                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  3957  01A8  1F12               	btfss	18,6	;volatile
  3958  01A9  29BA               	goto	i1l3517
  3959                           
  3960                           ;usb_device.c: 712: {
  3961                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3962  01AA  3073               	movlw	115
  3963  01AB  0020               	movlb	0	; select bank0
  3964  01AC  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3965  01AD  3000               	movlw	0
  3966  01AE  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3967  01AF  3000               	movlw	0
  3968  01B0  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3969  01B1  3000               	movlw	0
  3970  01B2  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  3971  01B3  3001               	movlw	1
  3972  01B4  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3973  01B5  3000               	movlw	0
  3974  01B6  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3975  01B7  318A  22C8  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3976  01BA                     i1l3517:	
  3977                           
  3978                           ;usb_device.c: 714: }
  3979                           ;usb_device.c: 715: (UIR &= 0xBF);
  3980  01BA  30BF               	movlw	191
  3981  01BB  0021               	movlb	1	; select bank1
  3982  01BC  00E9               	movwf	??_USBDeviceTasks^(0+128)
  3983  01BD  0869               	movf	??_USBDeviceTasks^(0+128),w
  3984  01BE  003D               	movlb	29	; select bank29
  3985  01BF  0590               	andwf	16,f	;volatile
  3986                           
  3987                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  3988  01C0  3189  21A5  3181   	fcall	_USBIncrement1msInternalTimers
  3989                           
  3990                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  3991  01C3  0023               	movlb	3	; select bank3
  3992  01C4  0858               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  3993  01C5  1903               	btfsc	3,2
  3994  01C6  29C9               	goto	i1l190
  3995                           
  3996                           ;usb_device.c: 736: {
  3997                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  3998  01C7  3001               	movlw	1
  3999  01C8  02D8               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4000  01C9                     i1l190:	
  4001                           
  4002                           ;usb_device.c: 738: }
  4003                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4004  01C9  0858               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4005  01CA  1D03               	btfss	3,2
  4006  01CB  29CF               	goto	i1l3527
  4007                           
  4008                           ;usb_device.c: 745: {
  4009                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4010  01CC  318F  270F  3181   	fcall	_USBCtrlEPAllowStatusStage
  4011  01CF                     i1l3527:	
  4012                           
  4013                           ;usb_device.c: 747: }
  4014                           ;usb_device.c: 749: }
  4015                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4016  01CF  003D               	movlb	29	; select bank29
  4017  01D0  1A90               	btfsc	16,5	;volatile
  4018  01D1  1E92               	btfss	18,5	;volatile
  4019  01D2  29D6               	goto	i1l3533
  4020                           
  4021                           ;usb_device.c: 752: {
  4022                           ;usb_device.c: 753: USBStallHandler();
  4023  01D3  3187  27D6  3181   	fcall	_USBStallHandler
  4024  01D6                     i1l3533:	
  4025                           
  4026                           ;usb_device.c: 754: }
  4027                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4028  01D6  003D               	movlb	29	; select bank29
  4029  01D7  1890               	btfsc	16,1	;volatile
  4030  01D8  1C92               	btfss	18,1	;volatile
  4031  01D9  29EC               	goto	i1l3541
  4032                           
  4033                           ;usb_device.c: 757: {
  4034                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4035  01DA  30FF               	movlw	255
  4036  01DB  0020               	movlb	0	; select bank0
  4037  01DC  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4038  01DD  307F               	movlw	127
  4039  01DE  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4040  01DF  3000               	movlw	0
  4041  01E0  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4042  01E1  3000               	movlw	0
  4043  01E2  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4044  01E3  3001               	movlw	1
  4045  01E4  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4046  01E5  3000               	movlw	0
  4047  01E6  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4048  01E7  318A  22C8  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4049                           
  4050                           ;usb_device.c: 759: {UEIR = 0;};
  4051  01EA  003D               	movlb	29	; select bank29
  4052  01EB  0193               	clrf	19	;volatile
  4053  01EC                     i1l3541:	
  4054                           
  4055                           ;usb_device.c: 767: }
  4056                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4057  01EC  3004               	movlw	4
  4058  01ED  0022               	movlb	2	; select bank2
  4059  01EE  026F               	subwf	_USBDeviceState^(0+256),w	;volatile
  4060  01EF  1803               	skipnc
  4061  01F0  29F4               	goto	i1l194
  4062                           
  4063                           ;usb_device.c: 775: {
  4064                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4065  01F1  0020               	movlb	0	; select bank0
  4066  01F2  1112               	bcf	18,2	;volatile
  4067                           
  4068                           ;usb_device.c: 777: return;
  4069  01F3  0008               	return
  4070  01F4                     i1l194:	
  4071                           
  4072                           ;usb_device.c: 778: }
  4073                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4074  01F4  003D               	movlb	29	; select bank29
  4075  01F5  1D92               	btfss	18,3	;volatile
  4076  01F6  2A4D               	goto	i1l195
  4077                           
  4078                           ;usb_device.c: 784: {
  4079                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4080  01F7  0020               	movlb	0	; select bank0
  4081  01F8  01EF               	clrf	USBDeviceTasks@i
  4082  01F9  3004               	movlw	4
  4083  01FA  026F               	subwf	USBDeviceTasks@i,w
  4084  01FB  1803               	btfsc	3,0
  4085  01FC  2A4D               	goto	i1l195
  4086  01FD                     i1l196:	
  4087                           
  4088                           ;usb_device.c: 786: {
  4089                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4090  01FD  003D               	movlb	29	; select bank29
  4091  01FE  1D90               	btfss	16,3	;volatile
  4092  01FF  2A4D               	goto	i1l195
  4093                           
  4094                           ;usb_device.c: 788: {
  4095                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4096  0200  080F               	movf	15,w	;volatile
  4097  0201  0021               	movlb	1	; select bank1
  4098  0202  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4099  0203  0869               	movf	??_USBDeviceTasks^(0+128),w
  4100  0204  00E5               	movwf	_USTATcopy^(0+128)	;volatile
  4101                           
  4102                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4103  0205  0C65               	rrf	_USTATcopy^(0+128),w	;volatile
  4104  0206  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4105  0207  0CE9               	rrf	??_USBDeviceTasks^(0+128),f
  4106  0208  0C69               	rrf	??_USBDeviceTasks^(0+128),w
  4107  0209  390F               	andlw	15
  4108  020A  00EA               	movwf	(??_USBDeviceTasks+1)^(0+128)
  4109  020B  086A               	movf	(??_USBDeviceTasks+1)^(0+128),w
  4110  020C  0023               	movlb	3	; select bank3
  4111  020D  00DA               	movwf	_endpoint_number^(0+384)	;volatile
  4112                           
  4113                           ;usb_device.c: 793: (UIR &= 0xF7);
  4114  020E  30F7               	movlw	247
  4115  020F  0021               	movlb	1	; select bank1
  4116  0210  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4117  0211  0869               	movf	??_USBDeviceTasks^(0+128),w
  4118  0212  003D               	movlb	29	; select bank29
  4119  0213  0590               	andwf	16,f	;volatile
  4120                           
  4121                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4122  0214  0021               	movlb	1	; select bank1
  4123  0215  1965               	btfsc	_USTATcopy^(0+128),2	;volatile
  4124  0216  2A1B               	goto	i1l3561
  4125                           
  4126                           ;usb_device.c: 799: {
  4127                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4128  0217  0023               	movlb	3	; select bank3
  4129  0218  085A               	movf	_endpoint_number^(0+384),w	;volatile
  4130  0219  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4131  021A  2A1E               	goto	L5
  4132  021B                     i1l3561:	
  4133                           ;usb_device.c: 801: }
  4134                           
  4135                           
  4136                           ;usb_device.c: 802: else
  4137                           ;usb_device.c: 803: {
  4138                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4139  021B  0023               	movlb	3	; select bank3
  4140  021C  085A               	movf	_endpoint_number^(0+384),w	;volatile
  4141  021D  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4142  021E                     L5:	
  4143  021E  0086               	movwf	6
  4144  021F  3001               	movlw	1	; select bank3/4
  4145  0220  0087               	movwf	7
  4146  0221  0801               	movf	1,w
  4147  0222  3901               	andlw	1
  4148  0223  0021               	movlb	1	; select bank1
  4149  0224  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4150  0225  3001               	movlw	1
  4151  0226  06E9               	xorwf	??_USBDeviceTasks^(0+128),f
  4152  0227  0801               	movf	1,w
  4153  0228  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4154  0229  39FE               	andlw	-2
  4155  022A  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4156  022B  0081               	movwf	1
  4157                           
  4158                           ;usb_device.c: 805: }
  4159                           ;usb_device.c: 810: if(endpoint_number == 0)
  4160  022C  0023               	movlb	3	; select bank3
  4161  022D  085A               	movf	_endpoint_number^(0+384),w	;volatile
  4162  022E  1D03               	btfss	3,2
  4163  022F  2A34               	goto	i1l3567
  4164                           
  4165                           ;usb_device.c: 811: {
  4166                           ;usb_device.c: 812: USBCtrlEPService();
  4167  0230  318C  246B  3181   	fcall	_USBCtrlEPService
  4168                           
  4169                           ;usb_device.c: 813: }
  4170  0233  2A43               	goto	i1l3569
  4171  0234                     i1l3567:	
  4172                           
  4173                           ;usb_device.c: 814: else
  4174                           ;usb_device.c: 815: {
  4175                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4176  0234  3072               	movlw	114
  4177  0235  0020               	movlb	0	; select bank0
  4178  0236  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4179  0237  3000               	movlw	0
  4180  0238  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4181  0239  30E5               	movlw	low _USTATcopy
  4182  023A  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4183  023B  3000               	movlw	high _USTATcopy
  4184  023C  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4185  023D  3000               	movlw	0
  4186  023E  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4187  023F  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4188  0240  318A  22C8  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4189  0243                     i1l3569:	
  4190                           ;usb_device.c: 819: else
  4191                           ;usb_device.c: 820: {
  4192                           ;usb_device.c: 821: break;
  4193                           
  4194                           ;usb_device.c: 817: }
  4195                           ;usb_device.c: 818: }
  4196                           
  4197  0243  3001               	movlw	1
  4198  0244  0021               	movlb	1	; select bank1
  4199  0245  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4200  0246  0869               	movf	??_USBDeviceTasks^(0+128),w
  4201  0247  0020               	movlb	0	; select bank0
  4202  0248  07EF               	addwf	USBDeviceTasks@i,f
  4203  0249  3004               	movlw	4
  4204  024A  026F               	subwf	USBDeviceTasks@i,w
  4205  024B  1C03               	skipc
  4206  024C  29FD               	goto	i1l196
  4207  024D                     i1l195:	
  4208                           
  4209                           ;usb_device.c: 822: }
  4210                           ;usb_device.c: 823: }
  4211                           ;usb_device.c: 824: }
  4212                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4213  024D  0020               	movlb	0	; select bank0
  4214  024E  1112               	bcf	18,2	;volatile
  4215  024F  0008               	return
  4216  0250                     __end_of_USBDeviceTasks:	
  4217                           
  4218                           	psect	text12
  4219  03D4                     __ptext12:	
  4220 ;; *************** function i1_USBDeviceInit *****************
  4221 ;; Defined at:
  4222 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  4227 ;;		 -> UEP1(1), 
  4228 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4229 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;Total ram usage:        5 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_USBDeviceTasks
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function i1_USBDeviceInit
  4254  03D4                     i1_USBDeviceInit:	
  4255                           
  4256                           ;usb_device.c: 279: uint8_t i;
  4257                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4258                           
  4259                           ;incstack = 0
  4260                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4261  03D4  0021               	movlb	1	; select bank1
  4262  03D5  1112               	bcf	18,2	;volatile
  4263                           
  4264                           ;usb_device.c: 285: ;
  4265                           ;usb_device.c: 288: {UEIR = 0;};
  4266  03D6  003D               	movlb	29	; select bank29
  4267  03D7  0193               	clrf	19	;volatile
  4268                           
  4269                           ;usb_device.c: 291: {UIR = 0;};
  4270  03D8  0190               	clrf	16	;volatile
  4271                           
  4272                           ;usb_device.c: 294: UEP0 = 0;
  4273  03D9  0198               	clrf	24	;volatile
  4274                           
  4275                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  4276  03DA  300E               	movlw	14
  4277  03DB  00F2               	movwf	i1USBDeviceInit@p+1
  4278  03DC  3099               	movlw	153
  4279  03DD  00F1               	movwf	i1USBDeviceInit@p
  4280  03DE  01F3               	clrf	i1USBDeviceInit@i_821
  4281  03DF  3002               	movlw	2
  4282  03E0  0273               	subwf	i1USBDeviceInit@i_821,w
  4283  03E1  1803               	btfsc	3,0
  4284  03E2  2BF4               	goto	i1l3291
  4285  03E3                     i1l3283:	
  4286  03E3  0871               	movf	i1USBDeviceInit@p,w
  4287  03E4  0086               	movwf	6
  4288  03E5  0872               	movf	i1USBDeviceInit@p+1,w
  4289  03E6  0087               	movwf	7
  4290  03E7  0181               	clrf	1
  4291  03E8  3001               	movlw	1
  4292  03E9  07F1               	addwf	i1USBDeviceInit@p,f
  4293  03EA  3000               	movlw	0
  4294  03EB  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  4295  03EC  3001               	movlw	1
  4296  03ED  00F0               	movwf	??i1_USBDeviceInit
  4297  03EE  0870               	movf	??i1_USBDeviceInit,w
  4298  03EF  07F3               	addwf	i1USBDeviceInit@i_821,f
  4299  03F0  3002               	movlw	2
  4300  03F1  0273               	subwf	i1USBDeviceInit@i_821,w
  4301  03F2  1C03               	skipc
  4302  03F3  2BE3               	goto	i1l3283
  4303  03F4                     i1l3291:	
  4304                           
  4305                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4306  03F4  3016               	movlw	22
  4307  03F5  003D               	movlb	29	; select bank29
  4308  03F6  0091               	movwf	17	;volatile
  4309  03F7  309F               	movlw	159
  4310  03F8  0097               	movwf	23	;volatile
  4311  03F9  307B               	movlw	123
  4312  03FA  0092               	movwf	18	;volatile
  4313                           
  4314                           ;usb_device.c: 301: ;
  4315                           ;usb_device.c: 304: ;
  4316                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4317  03FB  01F4               	clrf	i1USBDeviceInit@i
  4318  03FC  300C               	movlw	12
  4319  03FD  0274               	subwf	i1USBDeviceInit@i,w
  4320  03FE  1803               	btfsc	3,0
  4321  03FF  2C19               	goto	i1l173
  4322  0400                     i1l3299:	
  4323                           
  4324                           ;usb_device.c: 308: {
  4325                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4326  0400  0874               	movf	i1USBDeviceInit@i,w
  4327  0401  00F0               	movwf	??i1_USBDeviceInit
  4328  0402  3001               	movlw	1
  4329  0403                     u280_25:	
  4330  0403  35F0               	lslf	??i1_USBDeviceInit,f
  4331  0404  3EFF               	addlw	-1
  4332  0405  1D03               	skipz
  4333  0406  2C03               	goto	u280_25
  4334  0407  3570               	lslf	??i1_USBDeviceInit,w
  4335  0408  3E20               	addlw	32
  4336  0409  0086               	movwf	6
  4337  040A  0187               	clrf	7
  4338  040B  3000               	movlw	0
  4339  040C  3FC0               	movwi [0]fsr1
  4340  040D  3000               	movlw	0
  4341  040E  3FC1               	movwi [1]fsr1
  4342  040F  3FC2               	movwi [2]fsr1
  4343  0410  3FC3               	movwi [3]fsr1
  4344  0411  3001               	movlw	1
  4345  0412  00F0               	movwf	??i1_USBDeviceInit
  4346  0413  0870               	movf	??i1_USBDeviceInit,w
  4347  0414  07F4               	addwf	i1USBDeviceInit@i,f
  4348  0415  300C               	movlw	12
  4349  0416  0274               	subwf	i1USBDeviceInit@i,w
  4350  0417  1C03               	skipc
  4351  0418  2C00               	goto	i1l3299
  4352  0419                     i1l173:	
  4353                           
  4354                           ;usb_device.c: 310: }
  4355                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4356  0419  003D               	movlb	29	; select bank29
  4357  041A  170E               	bsf	14,6	;volatile
  4358                           
  4359                           ;usb_device.c: 316: UADDR = 0x00;
  4360  041B  0196               	clrf	22	;volatile
  4361                           
  4362                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4363  041C  120E               	bcf	14,4	;volatile
  4364                           
  4365                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4366  041D  130E               	bcf	14,6	;volatile
  4367  041E                     i1l3311:	
  4368                           ;usb_device.c: 325: do
  4369                           
  4370                           
  4371                           ;usb_device.c: 326: {
  4372                           ;usb_device.c: 327: (UIR &= 0xF7);
  4373  041E  30F7               	movlw	247
  4374  041F  00F0               	movwf	??i1_USBDeviceInit
  4375  0420  0870               	movf	??i1_USBDeviceInit,w
  4376  0421  0590               	andwf	16,f	;volatile
  4377                           
  4378                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4379  0422  0023               	movlb	3	; select bank3
  4380  0423  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  4381                           
  4382                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4383  0424  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  4384                           
  4385                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4386  0425  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  4387  0426  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  4388                           
  4389                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4390  0427  003D               	movlb	29	; select bank29
  4391  0428  1990               	btfsc	16,3	;volatile
  4392  0429  2C1E               	goto	i1l3311
  4393                           
  4394                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4395  042A  3001               	movlw	1
  4396  042B  00F0               	movwf	??i1_USBDeviceInit
  4397  042C  0870               	movf	??i1_USBDeviceInit,w
  4398  042D  0023               	movlb	3	; select bank3
  4399  042E  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4400                           
  4401                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4402  042F  3001               	movlw	1
  4403  0430  00F0               	movwf	??i1_USBDeviceInit
  4404  0431  0870               	movf	??i1_USBDeviceInit,w
  4405  0432  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4406                           
  4407                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4408  0433  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4409                           
  4410                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4411  0434  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4412                           
  4413                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4414  0435  01DB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4415                           
  4416                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4417  0436  01F4               	clrf	i1USBDeviceInit@i
  4418  0437  3003               	movlw	3
  4419  0438  0274               	subwf	i1USBDeviceInit@i,w
  4420  0439  1803               	btfsc	3,0
  4421  043A  2C5F               	goto	i1l3339
  4422  043B                     i1l3333:	
  4423                           
  4424                           ;usb_device.c: 346: {
  4425                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4426  043B  3574               	lslf	i1USBDeviceInit@i,w
  4427  043C  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4428  043D  0086               	movwf	6
  4429  043E  3001               	movlw	1	; select bank3/4
  4430  043F  0087               	movwf	7
  4431  0440  3000               	movlw	0
  4432  0441  3FC0               	movwi [0]fsr1
  4433  0442  3FC1               	movwi [1]fsr1
  4434                           
  4435                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4436  0443  3574               	lslf	i1USBDeviceInit@i,w
  4437  0444  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4438  0445  0086               	movwf	6
  4439  0446  3001               	movlw	1	; select bank3/4
  4440  0447  0087               	movwf	7
  4441  0448  3000               	movlw	0
  4442  0449  3FC0               	movwi [0]fsr1
  4443  044A  3FC1               	movwi [1]fsr1
  4444                           
  4445                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4446  044B  0874               	movf	i1USBDeviceInit@i,w
  4447  044C  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4448  044D  0086               	movwf	6
  4449  044E  3001               	movlw	1	; select bank3/4
  4450  044F  0087               	movwf	7
  4451  0450  0181               	clrf	1
  4452                           
  4453                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4454  0451  0874               	movf	i1USBDeviceInit@i,w
  4455  0452  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4456  0453  0086               	movwf	6
  4457  0454  3001               	movlw	1	; select bank3/4
  4458  0455  0087               	movwf	7
  4459  0456  0181               	clrf	1
  4460  0457  3001               	movlw	1
  4461  0458  00F0               	movwf	??i1_USBDeviceInit
  4462  0459  0870               	movf	??i1_USBDeviceInit,w
  4463  045A  07F4               	addwf	i1USBDeviceInit@i,f
  4464  045B  3003               	movlw	3
  4465  045C  0274               	subwf	i1USBDeviceInit@i,w
  4466  045D  1C03               	skipc
  4467  045E  2C3B               	goto	i1l3333
  4468  045F                     i1l3339:	
  4469                           
  4470                           ;usb_device.c: 351: }
  4471                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4472  045F  3028               	movlw	40
  4473  0460  0023               	movlb	3	; select bank3
  4474  0461  00A7               	movwf	_pBDTEntryIn^(0+384)
  4475  0462  3000               	movlw	0
  4476  0463  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4477                           
  4478                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4479  0464  3016               	movlw	22
  4480  0465  003D               	movlb	29	; select bank29
  4481  0466  0098               	movwf	24	;volatile
  4482                           
  4483                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4484  0467  3000               	movlw	0
  4485  0468  0020               	movlb	0	; select bank0
  4486  0469  00A3               	movwf	35	;volatile
  4487  046A  3050               	movlw	80
  4488  046B  00A2               	movwf	34	;volatile
  4489                           
  4490                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4491  046C  3008               	movlw	8
  4492  046D  00A1               	movwf	33	;volatile
  4493                           
  4494                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4495  046E  3004               	movlw	4
  4496  046F  00F0               	movwf	??i1_USBDeviceInit
  4497  0470  0870               	movf	??i1_USBDeviceInit,w
  4498  0471  00A0               	movwf	32	;volatile
  4499                           
  4500                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4501  0472  17A0               	bsf	32,7	;volatile
  4502                           
  4503                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4504  0473  0023               	movlb	3	; select bank3
  4505  0474  01E8               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  4506                           
  4507                           ;usb_device.c: 366: USB1msTickCount = 0;
  4508  0475  3000               	movlw	0
  4509  0476  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  4510  0477  3000               	movlw	0
  4511  0478  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  4512  0479  3000               	movlw	0
  4513  047A  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  4514  047B  3000               	movlw	0
  4515  047C  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  4516                           
  4517                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4518  047D  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4519                           
  4520                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4521  047E  0022               	movlb	2	; select bank2
  4522  047F  01EF               	clrf	_USBDeviceState^(0+256)	;volatile
  4523  0480  0008               	return
  4524  0481                     __end_ofi1_USBDeviceInit:	
  4525                           
  4526                           	psect	text13
  4527  0A18                     __ptext13:	
  4528 ;; *************** function _USBWakeFromSuspend *****************
  4529 ;; Defined at:
  4530 ;;		line 2303 in file "../lib/usb/src/usb_device.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        1 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    4
  4551 ;; This function calls:
  4552 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4553 ;; This function is called by:
  4554 ;;		_USBDeviceTasks
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function _USBWakeFromSuspend
  4560  0A18                     _USBWakeFromSuspend:	
  4561                           
  4562                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  4563                           
  4564                           ;incstack = 0
  4565                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4566  0A18  0023               	movlb	3	; select bank3
  4567  0A19  01DB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4568                           
  4569                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4570  0A1A  3074               	movlw	116
  4571  0A1B  0020               	movlb	0	; select bank0
  4572  0A1C  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4573  0A1D  3000               	movlw	0
  4574  0A1E  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4575  0A1F  3000               	movlw	0
  4576  0A20  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4577  0A21  3000               	movlw	0
  4578  0A22  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4579  0A23  3000               	movlw	0
  4580  0A24  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4581  0A25  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4582  0A26  318A  22C8  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4583                           
  4584                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  4585  0A29  003D               	movlb	29	; select bank29
  4586  0A2A  108E               	bcf	14,1	;volatile
  4587                           
  4588                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  4589  0A2B  1112               	bcf	18,2	;volatile
  4590  0A2C                     i1l3175:	
  4591                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  4592                           
  4593  0A2C  1D10               	btfss	16,2	;volatile
  4594  0A2D  2A35               	goto	i1l3177
  4595                           
  4596                           ;usb_device.c: 2343: {
  4597                           ;usb_device.c: 2344: (UIR &= 0xFB);
  4598  0A2E  30FB               	movlw	251
  4599  0A2F  0020               	movlb	0	; select bank0
  4600  0A30  00E6               	movwf	??_USBWakeFromSuspend
  4601  0A31  0866               	movf	??_USBWakeFromSuspend,w
  4602  0A32  003D               	movlb	29	; select bank29
  4603  0A33  0590               	andwf	16,f	;volatile
  4604  0A34  2A2C               	goto	i1l3175
  4605  0A35                     i1l3177:	
  4606                           
  4607                           ;usb_device.c: 2345: }
  4608                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  4609  0A35  0023               	movlb	3	; select bank3
  4610  0A36  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4611  0A37  0008               	return
  4612  0A38                     __end_of_USBWakeFromSuspend:	
  4613                           
  4614                           	psect	text14
  4615  09D9                     __ptext14:	
  4616 ;; *************** function _USBSuspend *****************
  4617 ;; Defined at:
  4618 ;;		line 2245 in file "../lib/usb/src/usb_device.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;Total ram usage:        1 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    4
  4639 ;; This function calls:
  4640 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4641 ;; This function is called by:
  4642 ;;		_USBDeviceTasks
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _USBSuspend
  4648  09D9                     _USBSuspend:	
  4649                           
  4650                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4654  09D9  003D               	movlb	29	; select bank29
  4655  09DA  1512               	bsf	18,2	;volatile
  4656                           
  4657                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4658  09DB  30EF               	movlw	239
  4659  09DC  0020               	movlb	0	; select bank0
  4660  09DD  00E6               	movwf	??_USBSuspend
  4661  09DE  0866               	movf	??_USBSuspend,w
  4662  09DF  003D               	movlb	29	; select bank29
  4663  09E0  0590               	andwf	16,f	;volatile
  4664                           
  4665                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4666  09E1  148E               	bsf	14,1	;volatile
  4667                           
  4668                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4669  09E2  3001               	movlw	1
  4670  09E3  0020               	movlb	0	; select bank0
  4671  09E4  00E6               	movwf	??_USBSuspend
  4672  09E5  0866               	movf	??_USBSuspend,w
  4673  09E6  0023               	movlb	3	; select bank3
  4674  09E7  00DB               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  4675                           
  4676                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4677  09E8  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4678                           
  4679                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4680  09E9  3075               	movlw	117
  4681  09EA  0020               	movlb	0	; select bank0
  4682  09EB  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4683  09EC  3000               	movlw	0
  4684  09ED  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4685  09EE  3000               	movlw	0
  4686  09EF  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4687  09F0  3000               	movlw	0
  4688  09F1  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4689  09F2  3000               	movlw	0
  4690  09F3  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4691  09F4  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4692  09F5  318A  22C8         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4693  09F7  0008               	return
  4694  09F8                     __end_of_USBSuspend:	
  4695                           
  4696                           	psect	text15
  4697  07D6                     __ptext15:	
  4698 ;; *************** function _USBStallHandler *****************
  4699 ;; Defined at:
  4700 ;;		line 2202 in file "../lib/usb/src/usb_device.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;Total ram usage:        1 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_USBDeviceTasks
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           
  4728                           ;psect for function _USBStallHandler
  4729  07D6                     _USBStallHandler:	
  4730                           
  4731                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4735  07D6  003D               	movlb	29	; select bank29
  4736  07D7  1C18               	btfss	24,0	;volatile
  4737  07D8  2FF8               	goto	i1l3209
  4738                           
  4739                           ;usb_device.c: 2215: {
  4740                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4741  07D9  0021               	movlb	1	; select bank1
  4742  07DA  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4743  07DB  0086               	movwf	6
  4744  07DC  0187               	clrf	7
  4745  07DD  3080               	movlw	128
  4746  07DE  0601               	xorwf	1,w
  4747  07DF  1D03               	btfss	3,2
  4748  07E0  2FF6               	goto	i1l3207
  4749  07E1  0023               	movlb	3	; select bank3
  4750  07E2  0827               	movf	_pBDTEntryIn^(0+384),w
  4751  07E3  0086               	movwf	6
  4752  07E4  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  4753  07E5  0087               	movwf	7
  4754  07E6  3084               	movlw	132
  4755  07E7  0601               	xorwf	1,w
  4756  07E8  1D03               	btfss	3,2
  4757  07E9  2FF6               	goto	i1l3207
  4758                           
  4759                           ;usb_device.c: 2218: {
  4760                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4761  07EA  300C               	movlw	12
  4762  07EB  00F0               	movwf	??_USBStallHandler
  4763  07EC  0021               	movlb	1	; select bank1
  4764  07ED  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4765  07EE  0086               	movwf	6
  4766  07EF  0187               	clrf	7
  4767  07F0  0870               	movf	??_USBStallHandler,w
  4768  07F1  0081               	movwf	1
  4769                           
  4770                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4771  07F2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4772  07F3  0086               	movwf	6
  4773  07F4  0187               	clrf	7
  4774  07F5  1781               	bsf	1,7
  4775  07F6                     i1l3207:	
  4776                           
  4777                           ;usb_device.c: 2222: }
  4778                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4779  07F6  003D               	movlb	29	; select bank29
  4780  07F7  1018               	bcf	24,0	;volatile
  4781  07F8                     i1l3209:	
  4782                           
  4783                           ;usb_device.c: 2224: }
  4784                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4785  07F8  30DF               	movlw	223
  4786  07F9  00F0               	movwf	??_USBStallHandler
  4787  07FA  0870               	movf	??_USBStallHandler,w
  4788  07FB  0590               	andwf	16,f	;volatile
  4789  07FC  0008               	return
  4790  07FD                     __end_of_USBStallHandler:	
  4791                           
  4792                           	psect	text16
  4793  09A5                     __ptext16:	
  4794 ;; *************** function _USBIncrement1msInternalTimers *****************
  4795 ;; Defined at:
  4796 ;;		line 3025 in file "../lib/usb/src/usb_device.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;Total ram usage:        1 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_USBDeviceTasks
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           
  4824                           ;psect for function _USBIncrement1msInternalTimers
  4825  09A5                     _USBIncrement1msInternalTimers:	
  4826                           
  4827                           ;usb_device.c: 3033: USB1msTickCount++;
  4828                           
  4829                           ;incstack = 0
  4830                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4831  09A5  3001               	movlw	1
  4832  09A6  0023               	movlb	3	; select bank3
  4833  09A7  07BC               	addwf	_USB1msTickCount^(0+384),f	;volatile
  4834  09A8  3000               	movlw	0
  4835  09A9  3DBD               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  4836  09AA  3000               	movlw	0
  4837  09AB  3DBE               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  4838  09AC  3000               	movlw	0
  4839  09AD  3DBF               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  4840                           
  4841                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  4842  09AE  085B               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  4843  09AF  1D03               	btfss	3,2
  4844  09B0  0008               	return
  4845                           
  4846                           ;usb_device.c: 3035: {
  4847                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  4848  09B1  3001               	movlw	1
  4849  09B2  00F0               	movwf	??_USBIncrement1msInternalTimers
  4850  09B3  0870               	movf	??_USBIncrement1msInternalTimers,w
  4851  09B4  07D2               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  4852                           
  4853                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  4854  09B5  0852               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  4855  09B6  1D03               	btfss	3,2
  4856  09B7  0008               	return
  4857                           
  4858                           ;usb_device.c: 3039: {
  4859                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  4860  09B8  30FF               	movlw	255
  4861  09B9  00F0               	movwf	??_USBIncrement1msInternalTimers
  4862  09BA  0870               	movf	??_USBIncrement1msInternalTimers,w
  4863  09BB  00D2               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4864  09BC  0008               	return
  4865  09BD                     __end_of_USBIncrement1msInternalTimers:	
  4866                           
  4867                           	psect	text17
  4868  0C6B                     __ptext17:	
  4869 ;; *************** function _USBCtrlEPService *****************
  4870 ;; Defined at:
  4871 ;;		line 2372 in file "../lib/usb/src/usb_device.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;		None
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;		None
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;Total ram usage:        3 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:    7
  4892 ;; This function calls:
  4893 ;;		_USBCtrlTrfInHandler
  4894 ;;		_USBCtrlTrfOutHandler
  4895 ;;		_USBCtrlTrfSetupHandler
  4896 ;; This function is called by:
  4897 ;;		_USBDeviceTasks
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _USBCtrlEPService
  4903  0C6B                     _USBCtrlEPService:	
  4904                           
  4905                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4909  0C6B  302D               	movlw	45
  4910  0C6C  0021               	movlb	1	; select bank1
  4911  0C6D  00E6               	movwf	??_USBCtrlEPService^(0+128)
  4912  0C6E  0866               	movf	??_USBCtrlEPService^(0+128),w
  4913  0C6F  0023               	movlb	3	; select bank3
  4914  0C70  00D8               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  4915                           
  4916                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  4917  0C71  0021               	movlb	1	; select bank1
  4918  0C72  0865               	movf	_USTATcopy^(0+128),w	;volatile
  4919  0C73  39FD               	andlw	253
  4920  0C74  1D03               	btfss	3,2
  4921  0C75  2CB7               	goto	i1l3229
  4922                           
  4923                           ;usb_device.c: 2383: {
  4924                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4925  0C76  3665               	lsrf	_USTATcopy^(0+128),w	;volatile
  4926  0C77  393F               	andlw	63
  4927  0C78  00E6               	movwf	??_USBCtrlEPService^(0+128)
  4928  0C79  3001               	movlw	1
  4929  0C7A                     u268_25:	
  4930  0C7A  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  4931  0C7B  3EFF               	addlw	-1
  4932  0C7C  1D03               	skipz
  4933  0C7D  2C7A               	goto	u268_25
  4934  0C7E  3566               	lslf	??_USBCtrlEPService^(0+128),w
  4935  0C7F  3E20               	addlw	32
  4936  0C80  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  4937  0C81  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  4938  0C82  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  4939                           
  4940                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4941  0C83  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4942  0C84  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4943  0C85  39FF               	andlw	255
  4944  0C86  1D03               	skipz
  4945  0C87  3000               	movlw	0
  4946  0C88  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4947                           
  4948                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  4949  0C89  3004               	movlw	4
  4950  0C8A  0660               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  4951  0C8B  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4952  0C8C  3000               	movlw	0
  4953  0C8D  0661               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4954  0C8E  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4955                           
  4956                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4957  0C8F  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4958  0C90  0086               	movwf	6
  4959  0C91  0187               	clrf	7
  4960  0C92  0C01               	rrf	1,w
  4961  0C93  0C89               	rrf	9,f
  4962  0C94  390F               	andlw	15
  4963  0C95  3A0D               	xorlw	13
  4964  0C96  1D03               	skipz
  4965  0C97  2CB4               	goto	i1l3227
  4966                           
  4967                           ;usb_device.c: 2400: {
  4968                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  4969  0C98  3050               	movlw	80
  4970  0C99  0086               	movwf	6
  4971  0C9A  0187               	clrf	7
  4972  0C9B  0021               	movlb	1	; select bank1
  4973  0C9C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4974  0C9D  3E02               	addlw	2
  4975  0C9E  0084               	movwf	4
  4976  0C9F  0185               	clrf	5
  4977  0CA0  3F00               	moviw [0]fsr0
  4978  0CA1  00E6               	movwf	??_USBCtrlEPService^(0+128)
  4979  0CA2  3F01               	moviw [1]fsr0
  4980  0CA3  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  4981  0CA4  0866               	movf	??_USBCtrlEPService^(0+128),w
  4982  0CA5  0084               	movwf	4
  4983  0CA6  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  4984  0CA7  0085               	movwf	5
  4985  0CA8  3008               	movlw	8
  4986  0CA9  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  4987  0CAA  0868               	movf	(??_USBCtrlEPService+2)^(0+128),w
  4988  0CAB  1903               	skipnz
  4989  0CAC  2CB1               	goto	i1l3225
  4990  0CAD                     u270_2m0:	
  4991  0CAD  0012               	moviw fsr0++
  4992  0CAE  001E               	movwi fsr1++
  4993  0CAF  0BE8               	decfsz	(??_USBCtrlEPService+2)^(0+128),f
  4994  0CB0  2CAD               	goto	u270_2m0
  4995  0CB1                     i1l3225:	
  4996                           
  4997                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  4998  0CB1  318B  23C3         	fcall	_USBCtrlTrfSetupHandler
  4999                           
  5000                           ;usb_device.c: 2409: }
  5001  0CB3  0008               	return
  5002  0CB4                     i1l3227:	
  5003                           
  5004                           ;usb_device.c: 2410: else
  5005                           ;usb_device.c: 2411: {
  5006                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  5007  0CB4  318A  2291         	fcall	_USBCtrlTrfOutHandler
  5008                           
  5009                           ;usb_device.c: 2414: }
  5010                           ;usb_device.c: 2415: }
  5011  0CB6  0008               	return
  5012  0CB7                     i1l3229:	
  5013                           
  5014                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5015  0CB7  30FD               	movlw	253
  5016  0CB8  0021               	movlb	1	; select bank1
  5017  0CB9  0565               	andwf	_USTATcopy^(0+128),w	;volatile
  5018  0CBA  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5019  0CBB  3004               	movlw	4
  5020  0CBC  0666               	xorwf	??_USBCtrlEPService^(0+128),w
  5021  0CBD  1D03               	btfss	3,2
  5022  0CBE  0008               	return
  5023                           
  5024                           ;usb_device.c: 2417: {
  5025                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5026  0CBF  318E  26A2         	fcall	_USBCtrlTrfInHandler
  5027  0CC1  0008               	return
  5028  0CC2                     __end_of_USBCtrlEPService:	
  5029                           
  5030                           	psect	text18
  5031  0BC3                     __ptext18:	
  5032 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5033 ;; Defined at:
  5034 ;;		line 2465 in file "../lib/usb/src/usb_device.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;Total ram usage:        1 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    6
  5055 ;; This function calls:
  5056 ;;		_USBCheckStdRequest
  5057 ;;		_USBCtrlEPServiceComplete
  5058 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5059 ;; This function is called by:
  5060 ;;		_USBCtrlEPService
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _USBCtrlTrfSetupHandler
  5066  0BC3                     _USBCtrlTrfSetupHandler:	
  5067                           
  5068                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5069                           
  5070                           ;incstack = 0
  5071                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5072  0BC3  0023               	movlb	3	; select bank3
  5073  0BC4  01DE               	clrf	_shortPacketStatus^(0+384)	;volatile
  5074                           
  5075                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5076  0BC5  01D7               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  5077                           
  5078                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5079  0BC6  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5080                           
  5081                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5082  0BC7  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5083                           
  5084                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5085  0BC8  01D9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5086                           
  5087                           ;usb_device.c: 2475: controlTransferState = 0;
  5088  0BC9  0021               	movlb	1	; select bank1
  5089  0BCA  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  5090                           
  5091                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5092  0BCB  307F               	movlw	127
  5093  0BCC  0020               	movlb	0	; select bank0
  5094  0BCD  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5095  0BCE  0023               	movlb	3	; select bank3
  5096  0BCF  0827               	movf	_pBDTEntryIn^(0+384),w
  5097  0BD0  0086               	movwf	6
  5098  0BD1  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5099  0BD2  0087               	movwf	7
  5100  0BD3  0020               	movlb	0	; select bank0
  5101  0BD4  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5102  0BD5  0581               	andwf	1,f
  5103                           
  5104                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5105  0BD6  3004               	movlw	4
  5106  0BD7  0023               	movlb	3	; select bank3
  5107  0BD8  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5108  0BD9  00A7               	movwf	_pBDTEntryIn^(0+384)
  5109  0BDA  3000               	movlw	0
  5110  0BDB  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5111  0BDC  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5112                           
  5113                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5114  0BDD  307F               	movlw	127
  5115  0BDE  0020               	movlb	0	; select bank0
  5116  0BDF  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5117  0BE0  0023               	movlb	3	; select bank3
  5118  0BE1  0827               	movf	_pBDTEntryIn^(0+384),w
  5119  0BE2  0086               	movwf	6
  5120  0BE3  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5121  0BE4  0087               	movwf	7
  5122  0BE5  0020               	movlb	0	; select bank0
  5123  0BE6  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5124  0BE7  0581               	andwf	1,f
  5125                           
  5126                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5127  0BE8  3004               	movlw	4
  5128  0BE9  0023               	movlb	3	; select bank3
  5129  0BEA  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5130  0BEB  00A7               	movwf	_pBDTEntryIn^(0+384)
  5131  0BEC  3000               	movlw	0
  5132  0BED  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5133  0BEE  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5134                           
  5135                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5136  0BEF  307F               	movlw	127
  5137  0BF0  0020               	movlb	0	; select bank0
  5138  0BF1  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5139  0BF2  0021               	movlb	1	; select bank1
  5140  0BF3  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5141  0BF4  0086               	movwf	6
  5142  0BF5  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5143  0BF6  0087               	movwf	7
  5144  0BF7  0020               	movlb	0	; select bank0
  5145  0BF8  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5146  0BF9  0581               	andwf	1,f
  5147                           
  5148                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5149  0BFA  0023               	movlb	3	; select bank3
  5150  0BFB  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  5151                           
  5152                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5153  0BFC  01B6               	clrf	(_inPipes^(0+384)+3)	;volatile
  5154  0BFD  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  5155                           
  5156                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5157  0BFE  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5158                           
  5159                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5160  0BFF  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5161  0C00  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5162                           
  5163                           ;usb_device.c: 2500: USBCheckStdRequest();
  5164  0C01  318D  25D8  318B   	fcall	_USBCheckStdRequest
  5165                           
  5166                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5167  0C04  3000               	movlw	0
  5168  0C05  0020               	movlb	0	; select bank0
  5169  0C06  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5170  0C07  3003               	movlw	3
  5171  0C08  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5172  0C09  3000               	movlw	0
  5173  0C0A  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5174  0C0B  3000               	movlw	0
  5175  0C0C  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5176  0C0D  3000               	movlw	0
  5177  0C0E  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5178  0C0F  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5179  0C10  318A  22C8  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5180                           
  5181                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5182  0C13  3185  2522         	fcall	_USBCtrlEPServiceComplete
  5183  0C15  0008               	return
  5184  0C16                     __end_of_USBCtrlTrfSetupHandler:	
  5185                           
  5186                           	psect	text19
  5187  0522                     __ptext19:	
  5188 ;; *************** function _USBCtrlEPServiceComplete *****************
  5189 ;; Defined at:
  5190 ;;		line 1616 in file "../lib/usb/src/usb_device.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;		None
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;Total ram usage:        2 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    2
  5211 ;; This function calls:
  5212 ;;		_USBCtrlEPAllowDataStage
  5213 ;;		_USBCtrlEPAllowStatusStage
  5214 ;; This function is called by:
  5215 ;;		_USBCtrlTrfSetupHandler
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           
  5220                           ;psect for function _USBCtrlEPServiceComplete
  5221  0522                     _USBCtrlEPServiceComplete:	
  5222                           
  5223                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5224                           
  5225                           ;incstack = 0
  5226                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5227  0522  003D               	movlb	29	; select bank29
  5228  0523  120E               	bcf	14,4	;volatile
  5229                           
  5230                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5231  0524  0023               	movlb	3	; select bank3
  5232  0525  1BB5               	btfsc	(_inPipes^(0+384)+2),7	;volatile
  5233  0526  2D6A               	goto	i1l258
  5234                           
  5235                           ;usb_device.c: 1629: {
  5236                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5237  0527  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  5238  0528  2D38               	goto	i1l2945
  5239                           
  5240                           ;usb_device.c: 1631: {
  5241                           ;usb_device.c: 1632: controlTransferState = 2;
  5242  0529  3002               	movlw	2
  5243  052A  00F5               	movwf	??_USBCtrlEPServiceComplete
  5244  052B  0875               	movf	??_USBCtrlEPServiceComplete,w
  5245  052C  0021               	movlb	1	; select bank1
  5246  052D  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5247                           
  5248                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5249  052E  0023               	movlb	3	; select bank3
  5250  052F  0853               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  5251  0530  1D03               	btfss	3,2
  5252  0531  2D34               	goto	i1l2941
  5253                           
  5254                           ;usb_device.c: 1644: {
  5255                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5256  0532  318D  251D         	fcall	_USBCtrlEPAllowDataStage
  5257  0534                     i1l2941:	
  5258                           
  5259                           ;usb_device.c: 1646: }
  5260                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5261  0534  0023               	movlb	3	; select bank3
  5262  0535  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5263                           
  5264                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5265  0536  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5266                           
  5267                           ;usb_device.c: 1652: }
  5268  0537  0008               	return
  5269  0538                     i1l2945:	
  5270                           
  5271                           ;usb_device.c: 1653: else
  5272                           ;usb_device.c: 1654: {
  5273                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5274  0538  0021               	movlb	1	; select bank1
  5275  0539  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5276  053A  3E01               	addlw	1
  5277  053B  00F5               	movwf	??_USBCtrlEPServiceComplete
  5278  053C  3000               	movlw	0
  5279  053D  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5280  053E  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5281  053F  0875               	movf	??_USBCtrlEPServiceComplete,w
  5282  0540  0086               	movwf	6
  5283  0541  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5284  0542  0087               	movwf	7
  5285  0543  3008               	movlw	8
  5286  0544  0081               	movwf	1
  5287                           
  5288                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5289  0545  3050               	movlw	80
  5290  0546  00F5               	movwf	??_USBCtrlEPServiceComplete
  5291  0547  3000               	movlw	0
  5292  0548  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5293  0549  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5294  054A  0086               	movwf	6
  5295  054B  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5296  054C  0087               	movwf	7
  5297  054D  3142               	addfsr 1,2
  5298  054E  0875               	movf	??_USBCtrlEPServiceComplete,w
  5299  054F  3FC0               	movwi [0]fsr1
  5300  0550  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5301  0551  3FC1               	movwi [1]fsr1
  5302                           
  5303                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5304  0552  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5305  0553  0086               	movwf	6
  5306  0554  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5307  0555  0087               	movwf	7
  5308  0556  300C               	movlw	12
  5309  0557  0081               	movwf	1
  5310                           
  5311                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5312  0558  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5313  0559  0086               	movwf	6
  5314  055A  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5315  055B  0087               	movwf	7
  5316  055C  1781               	bsf	1,7
  5317                           
  5318                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5319  055D  0023               	movlb	3	; select bank3
  5320  055E  0827               	movf	_pBDTEntryIn^(0+384),w
  5321  055F  0086               	movwf	6
  5322  0560  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5323  0561  0087               	movwf	7
  5324  0562  3004               	movlw	4
  5325  0563  0081               	movwf	1
  5326                           
  5327                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5328  0564  0827               	movf	_pBDTEntryIn^(0+384),w
  5329  0565  0086               	movwf	6
  5330  0566  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5331  0567  0087               	movwf	7
  5332  0568  1781               	bsf	1,7
  5333                           
  5334                           ;usb_device.c: 1665: }
  5335                           ;usb_device.c: 1666: }
  5336  0569  0008               	return
  5337  056A                     i1l258:	
  5338                           
  5339                           ;usb_device.c: 1667: else
  5340                           ;usb_device.c: 1668: {
  5341                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5342  056A  0020               	movlb	0	; select bank0
  5343  056B  1FD0               	btfss	80,7	;volatile
  5344  056C  2D82               	goto	i1l2971
  5345                           
  5346                           ;usb_device.c: 1670: {
  5347                           ;usb_device.c: 1671: controlTransferState = 1;
  5348  056D  3001               	movlw	1
  5349  056E  00F5               	movwf	??_USBCtrlEPServiceComplete
  5350  056F  0875               	movf	??_USBCtrlEPServiceComplete,w
  5351  0570  0021               	movlb	1	; select bank1
  5352  0571  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5353                           
  5354                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5355  0572  0023               	movlb	3	; select bank3
  5356  0573  0854               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  5357  0574  1D03               	btfss	3,2
  5358  0575  2D79               	goto	i1l2963
  5359                           
  5360                           ;usb_device.c: 1686: {
  5361                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5362  0576  318D  251D  3185   	fcall	_USBCtrlEPAllowDataStage
  5363  0579                     i1l2963:	
  5364                           
  5365                           ;usb_device.c: 1688: }
  5366                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5367  0579  0023               	movlb	3	; select bank3
  5368  057A  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5369                           
  5370                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5371  057B  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5372                           
  5373                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5374  057C  0857               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5375  057D  1D03               	btfss	3,2
  5376  057E  0008               	return
  5377                           
  5378                           ;usb_device.c: 1713: {
  5379                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5380  057F  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  5381                           
  5382                           ;usb_device.c: 1715: }
  5383                           ;usb_device.c: 1716: }
  5384  0581  0008               	return
  5385  0582                     i1l2971:	
  5386                           
  5387                           ;usb_device.c: 1717: else
  5388                           ;usb_device.c: 1718: {
  5389                           ;usb_device.c: 1729: controlTransferState = 2;
  5390  0582  3002               	movlw	2
  5391  0583  00F5               	movwf	??_USBCtrlEPServiceComplete
  5392  0584  0875               	movf	??_USBCtrlEPServiceComplete,w
  5393  0585  0021               	movlb	1	; select bank1
  5394  0586  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  5395                           
  5396                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5397  0587  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5398  0588  3E01               	addlw	1
  5399  0589  00F5               	movwf	??_USBCtrlEPServiceComplete
  5400  058A  3000               	movlw	0
  5401  058B  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5402  058C  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5403  058D  0875               	movf	??_USBCtrlEPServiceComplete,w
  5404  058E  0086               	movwf	6
  5405  058F  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5406  0590  0087               	movwf	7
  5407  0591  3008               	movlw	8
  5408  0592  0081               	movwf	1
  5409                           
  5410                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5411  0593  3050               	movlw	80
  5412  0594  00F5               	movwf	??_USBCtrlEPServiceComplete
  5413  0595  3000               	movlw	0
  5414  0596  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5415  0597  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5416  0598  0086               	movwf	6
  5417  0599  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5418  059A  0087               	movwf	7
  5419  059B  3142               	addfsr 1,2
  5420  059C  0875               	movf	??_USBCtrlEPServiceComplete,w
  5421  059D  3FC0               	movwi [0]fsr1
  5422  059E  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5423  059F  3FC1               	movwi [1]fsr1
  5424                           
  5425                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5426  05A0  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5427  05A1  0086               	movwf	6
  5428  05A2  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5429  05A3  0087               	movwf	7
  5430  05A4  3004               	movlw	4
  5431  05A5  0081               	movwf	1
  5432                           
  5433                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5434  05A6  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5435  05A7  0086               	movwf	6
  5436  05A8  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5437  05A9  0087               	movwf	7
  5438  05AA  1781               	bsf	1,7
  5439                           
  5440                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5441  05AB  0023               	movlb	3	; select bank3
  5442  05AC  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5443                           
  5444                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5445  05AD  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5446                           
  5447                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5448  05AE  0857               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5449  05AF  1D03               	btfss	3,2
  5450  05B0  0008               	return
  5451                           
  5452                           ;usb_device.c: 1741: {
  5453                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5454  05B1  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  5455  05B3  0008               	return
  5456  05B4                     __end_of_USBCtrlEPServiceComplete:	
  5457                           
  5458                           	psect	text20
  5459  0D1D                     __ptext20:	
  5460 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5461 ;; Defined at:
  5462 ;;		line 1488 in file "../lib/usb/src/usb_device.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;Total ram usage:        2 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    1
  5483 ;; This function calls:
  5484 ;;		_USBCtrlTrfTxService
  5485 ;; This function is called by:
  5486 ;;		_USBCtrlEPServiceComplete
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           
  5491                           ;psect for function _USBCtrlEPAllowDataStage
  5492  0D1D                     _USBCtrlEPAllowDataStage:	
  5493                           
  5494                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5495                           
  5496                           ;incstack = 0
  5497                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5498  0D1D  0023               	movlb	3	; select bank3
  5499  0D1E  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5500                           
  5501                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5502  0D1F  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5503                           
  5504                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5505  0D20  3002               	movlw	2
  5506  0D21  0021               	movlb	1	; select bank1
  5507  0D22  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  5508  0D23  1D03               	btfss	3,2
  5509  0D24  2D4A               	goto	i1l2723
  5510                           
  5511                           ;usb_device.c: 1494: {
  5512                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5513  0D25  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5514  0D26  3E01               	addlw	1
  5515  0D27  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5516  0D28  3000               	movlw	0
  5517  0D29  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5518  0D2A  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5519  0D2B  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5520  0D2C  0086               	movwf	6
  5521  0D2D  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5522  0D2E  0087               	movwf	7
  5523  0D2F  3008               	movlw	8
  5524  0D30  0081               	movwf	1
  5525                           
  5526                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5527  0D31  3058               	movlw	88
  5528  0D32  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5529  0D33  3000               	movlw	0
  5530  0D34  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5531  0D35  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5532  0D36  0086               	movwf	6
  5533  0D37  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5534  0D38  0087               	movwf	7
  5535  0D39  3142               	addfsr 1,2
  5536  0D3A  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5537  0D3B  3FC0               	movwi [0]fsr1
  5538  0D3C  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5539  0D3D  3FC1               	movwi [1]fsr1
  5540                           
  5541                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5542  0D3E  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5543  0D3F  0086               	movwf	6
  5544  0D40  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5545  0D41  0087               	movwf	7
  5546  0D42  3048               	movlw	72
  5547  0D43  0081               	movwf	1
  5548                           
  5549                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5550  0D44  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5551  0D45  0086               	movwf	6
  5552  0D46  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5553  0D47  0087               	movwf	7
  5554  0D48  1781               	bsf	1,7
  5555                           
  5556                           ;usb_device.c: 1500: }
  5557  0D49  0008               	return
  5558  0D4A                     i1l2723:	
  5559                           
  5560                           ;usb_device.c: 1501: else
  5561                           ;usb_device.c: 1502: {
  5562                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5563  0D4A  0023               	movlb	3	; select bank3
  5564  0D4B  0837               	movf	((_inPipes+1)^(0+384)+3),w	;volatile
  5565  0D4C  0020               	movlb	0	; select bank0
  5566  0D4D  0257               	subwf	87,w	;volatile
  5567  0D4E  1D03               	skipz
  5568  0D4F  2D54               	goto	u204_25
  5569  0D50  0023               	movlb	3	; select bank3
  5570  0D51  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  5571  0D52  0020               	movlb	0	; select bank0
  5572  0D53  0256               	subwf	86,w	;volatile
  5573  0D54                     u204_25:	
  5574  0D54  1803               	skipnc
  5575  0D55  2D5D               	goto	i1l2727
  5576                           
  5577                           ;usb_device.c: 1506: {
  5578                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5579  0D56  0857               	movf	87,w	;volatile
  5580  0D57  0023               	movlb	3	; select bank3
  5581  0D58  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  5582  0D59  0020               	movlb	0	; select bank0
  5583  0D5A  0856               	movf	86,w	;volatile
  5584  0D5B  0023               	movlb	3	; select bank3
  5585  0D5C  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5586  0D5D                     i1l2727:	
  5587                           
  5588                           ;usb_device.c: 1508: }
  5589                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5590  0D5D  318E  263A         	fcall	_USBCtrlTrfTxService
  5591                           
  5592                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5593  0D5F  3058               	movlw	88
  5594  0D60  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5595  0D61  3000               	movlw	0
  5596  0D62  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5597  0D63  0023               	movlb	3	; select bank3
  5598  0D64  0827               	movf	_pBDTEntryIn^(0+384),w
  5599  0D65  0086               	movwf	6
  5600  0D66  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5601  0D67  0087               	movwf	7
  5602  0D68  3142               	addfsr 1,2
  5603  0D69  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5604  0D6A  3FC0               	movwi [0]fsr1
  5605  0D6B  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5606  0D6C  3FC1               	movwi [1]fsr1
  5607                           
  5608                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5609  0D6D  0827               	movf	_pBDTEntryIn^(0+384),w
  5610  0D6E  0086               	movwf	6
  5611  0D6F  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5612  0D70  0087               	movwf	7
  5613  0D71  3048               	movlw	72
  5614  0D72  0081               	movwf	1
  5615                           
  5616                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5617  0D73  0827               	movf	_pBDTEntryIn^(0+384),w
  5618  0D74  0086               	movwf	6
  5619  0D75  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5620  0D76  0087               	movwf	7
  5621  0D77  1781               	bsf	1,7
  5622  0D78  0008               	return
  5623  0D79                     __end_of_USBCtrlEPAllowDataStage:	
  5624                           
  5625                           	psect	text21
  5626  0DD8                     __ptext21:	
  5627 ;; *************** function _USBCheckStdRequest *****************
  5628 ;; Defined at:
  5629 ;;		line 2686 in file "../lib/usb/src/usb_device.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;		None
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;Total ram usage:        1 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    5
  5650 ;; This function calls:
  5651 ;;		_USBStdFeatureReqHandler
  5652 ;;		_USBStdGetDscHandler
  5653 ;;		_USBStdGetStatusHandler
  5654 ;;		_USBStdSetCfgHandler
  5655 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5656 ;; This function is called by:
  5657 ;;		_USBCtrlTrfSetupHandler
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _USBCheckStdRequest
  5663  0DD8                     _USBCheckStdRequest:	
  5664                           
  5665                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5669  0DD8  0020               	movlb	0	; select bank0
  5670  0DD9  0E50               	swapf	80,w	;volatile
  5671  0DDA  0C89               	rrf	9,f
  5672  0DDB  3903               	andlw	3
  5673  0DDC  3A00               	xorlw	0
  5674  0DDD  1D03               	btfss	3,2
  5675  0DDE  0008               	return
  5676  0DDF  2E2E               	goto	i1l3065
  5677  0DE0                     i1l385:	
  5678                           ;usb_device.c: 2691: {
  5679                           ;usb_device.c: 2692: case 5:
  5680                           
  5681                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  5682                           
  5683                           
  5684                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  5685  0DE0  0023               	movlb	3	; select bank3
  5686  0DE1  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5687                           
  5688                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  5689  0DE2  3008               	movlw	8
  5690  0DE3  0020               	movlb	0	; select bank0
  5691  0DE4  00ED               	movwf	??_USBCheckStdRequest
  5692  0DE5  086D               	movf	??_USBCheckStdRequest,w
  5693  0DE6  0022               	movlb	2	; select bank2
  5694  0DE7  00EF               	movwf	_USBDeviceState^(0+256)	;volatile
  5695                           
  5696                           ;usb_device.c: 2696: break;
  5697  0DE8  0008               	return
  5698  0DE9                     i1l3035:	
  5699                           ;usb_device.c: 2697: case 6:
  5700                           
  5701                           
  5702                           ;usb_device.c: 2698: USBStdGetDscHandler();
  5703  0DE9  318F  2781         	fcall	_USBStdGetDscHandler
  5704                           
  5705                           ;usb_device.c: 2699: break;
  5706  0DEB  0008               	return
  5707  0DEC                     i1l3037:	
  5708                           ;usb_device.c: 2700: case 9:
  5709                           
  5710                           
  5711                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  5712  0DEC  3185  25B4         	fcall	_USBStdSetCfgHandler
  5713                           
  5714                           ;usb_device.c: 2702: break;
  5715  0DEE  0008               	return
  5716  0DEF                     i1l3039:	
  5717                           ;usb_device.c: 2703: case 8:
  5718                           
  5719                           
  5720                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5721  0DEF  30E8               	movlw	low _USBActiveConfiguration
  5722  0DF0  0023               	movlb	3	; select bank3
  5723  0DF1  00B3               	movwf	_inPipes^(0+384)	;volatile
  5724  0DF2  3001               	movlw	high _USBActiveConfiguration
  5725  0DF3  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  5726                           
  5727                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5728  0DF4  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  5729                           
  5730                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  5731  0DF5  3001               	movlw	1
  5732  0DF6  0020               	movlb	0	; select bank0
  5733  0DF7  00ED               	movwf	??_USBCheckStdRequest
  5734  0DF8  086D               	movf	??_USBCheckStdRequest,w
  5735  0DF9  0023               	movlb	3	; select bank3
  5736  0DFA  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5737                           
  5738                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  5739  0DFB  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5740                           
  5741                           ;usb_device.c: 2708: break;
  5742  0DFC  0008               	return
  5743  0DFD                     i1l3047:	
  5744                           ;usb_device.c: 2709: case 0:
  5745                           
  5746                           
  5747                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  5748  0DFD  318C  2416         	fcall	_USBStdGetStatusHandler
  5749                           
  5750                           ;usb_device.c: 2711: break;
  5751  0DFF  0008               	return
  5752  0E00                     i1l3049:	
  5753                           ;usb_device.c: 2712: case 1:
  5754                           
  5755                           
  5756                           ;usb_device.c: 2713: case 3:
  5757                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  5758  0E00  3180  2040         	fcall	_USBStdFeatureReqHandler
  5759                           
  5760                           ;usb_device.c: 2715: break;
  5761  0E02  0008               	return
  5762  0E03                     i1l3051:	
  5763                           ;usb_device.c: 2716: case 10:
  5764                           
  5765                           
  5766                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5767  0E03  0020               	movlb	0	; select bank0
  5768  0E04  0854               	movf	84,w	;volatile
  5769  0E05  3EE6               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5770  0E06  0023               	movlb	3	; select bank3
  5771  0E07  00B3               	movwf	_inPipes^(0+384)	;volatile
  5772  0E08  3001               	movlw	1
  5773  0E09  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  5774                           
  5775                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5776  0E0A  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  5777                           
  5778                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  5779  0E0B  3001               	movlw	1
  5780  0E0C  0020               	movlb	0	; select bank0
  5781  0E0D  00ED               	movwf	??_USBCheckStdRequest
  5782  0E0E  086D               	movf	??_USBCheckStdRequest,w
  5783  0E0F  0023               	movlb	3	; select bank3
  5784  0E10  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5785                           
  5786                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  5787  0E11  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5788                           
  5789                           ;usb_device.c: 2721: break;
  5790  0E12  0008               	return
  5791  0E13                     i1l394:	
  5792                           ;usb_device.c: 2722: case 11:
  5793                           
  5794                           
  5795                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5796  0E13  0023               	movlb	3	; select bank3
  5797  0E14  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5798                           
  5799                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5800  0E15  0020               	movlb	0	; select bank0
  5801  0E16  0852               	movf	82,w	;volatile
  5802  0E17  00ED               	movwf	??_USBCheckStdRequest
  5803  0E18  0854               	movf	84,w	;volatile
  5804  0E19  3EE6               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5805  0E1A  0086               	movwf	6
  5806  0E1B  3001               	movlw	1	; select bank3/4
  5807  0E1C  0087               	movwf	7
  5808  0E1D  086D               	movf	??_USBCheckStdRequest,w
  5809  0E1E  0081               	movwf	1
  5810                           
  5811                           ;usb_device.c: 2725: break;
  5812  0E1F  0008               	return
  5813  0E20                     i1l3061:	
  5814                           ;usb_device.c: 2726: case 7:
  5815                           
  5816                           
  5817                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5818  0E20  3000               	movlw	0
  5819  0E21  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5820  0E22  3002               	movlw	2
  5821  0E23  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5822  0E24  3000               	movlw	0
  5823  0E25  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5824  0E26  3000               	movlw	0
  5825  0E27  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5826  0E28  3000               	movlw	0
  5827  0E29  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5828  0E2A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5829  0E2B  318A  22C8         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5830                           
  5831                           ;usb_device.c: 2732: }
  5832                           
  5833                           ;usb_device.c: 2731: break;
  5834                           
  5835                           ;usb_device.c: 2730: default:
  5836                           
  5837                           ;usb_device.c: 2729: case 12:
  5838                           
  5839                           ;usb_device.c: 2728: break;
  5840  0E2D  0008               	return
  5841  0E2E                     i1l3065:	
  5842  0E2E  0020               	movlb	0	; select bank0
  5843  0E2F  0851               	movf	81,w	;volatile
  5844                           
  5845                           ; Switch size 1, requested type "space"
  5846                           ; Number of cases is 11, Range of values is 0 to 12
  5847                           ; switch strategies available:
  5848                           ; Name         Instructions Cycles
  5849                           ; direct_byte           32     6 (fixed)
  5850                           ; simple_byte           34    18 (average)
  5851                           ; jumptable            260     6 (fixed)
  5852                           ;	Chosen strategy is direct_byte
  5853  0E30  0084               	movwf	4
  5854  0E31  300D               	movlw	13
  5855  0E32  0204               	subwf	4,w
  5856  0E33  1803               	skipnc
  5857  0E34  0008               	return
  5858  0E35  3188               	movlp	high i1S4333
  5859  0E36  3504               	lslf	4,w
  5860  0E37  3E00               	addlw	low i1S4333
  5861  0E38  0082               	movwf	2
  5862  0E39                     i1l383:	
  5863  0E39  0008               	return
  5864  0E3A                     __end_of_USBCheckStdRequest:	
  5865                           
  5866                           	psect	swtext1
  5867  0800                     __pswtext1:	
  5868  0800                     i1S4333:	
  5869  0800  318D  2DFD         	ljmp	i1l3047
  5870  0802  318E  2E00         	ljmp	i1l3049
  5871  0804  318E  2E39         	ljmp	i1l383
  5872  0806  318E  2E00         	ljmp	i1l3049
  5873  0808  318E  2E39         	ljmp	i1l383
  5874  080A  318D  2DE0         	ljmp	i1l385
  5875  080C  318D  2DE9         	ljmp	i1l3035
  5876  080E  318E  2E20         	ljmp	i1l3061
  5877  0810  318D  2DEF         	ljmp	i1l3039
  5878  0812  318D  2DEC         	ljmp	i1l3037
  5879  0814  318E  2E03         	ljmp	i1l3051
  5880  0816  318E  2E13         	ljmp	i1l394
  5881  0818  318E  2E39         	ljmp	i1l383
  5882                           
  5883                           	psect	text22
  5884  05B4                     __ptext22:	
  5885 ;; *************** function _USBStdSetCfgHandler *****************
  5886 ;; Defined at:
  5887 ;;		line 1968 in file "../lib/usb/src/usb_device.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  p               2    7[BANK0 ] PTR unsigned char 
  5892 ;;		 -> UEP1(1), 
  5893 ;;  i               1    9[BANK0 ] unsigned char 
  5894 ;;  i               1   10[BANK0 ] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;Total ram usage:        5 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    4
  5911 ;; This function calls:
  5912 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5913 ;;		_memset
  5914 ;; This function is called by:
  5915 ;;		_USBCheckStdRequest
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function _USBStdSetCfgHandler
  5921  05B4                     _USBStdSetCfgHandler:	
  5922                           
  5923                           ;usb_device.c: 1970: uint8_t i;
  5924                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  5925                           
  5926                           ;incstack = 0
  5927                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5928  05B4  0023               	movlb	3	; select bank3
  5929  05B5  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  5930                           
  5931                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  5932  05B6  300E               	movlw	14
  5933  05B7  0020               	movlb	0	; select bank0
  5934  05B8  00E8               	movwf	USBStdSetCfgHandler@p+1
  5935  05B9  3099               	movlw	153
  5936  05BA  00E7               	movwf	USBStdSetCfgHandler@p
  5937  05BB  01E9               	clrf	USBStdSetCfgHandler@i_1572
  5938  05BC  3002               	movlw	2
  5939  05BD  0269               	subwf	USBStdSetCfgHandler@i_1572,w
  5940  05BE  1803               	btfsc	3,0
  5941  05BF  2DD1               	goto	i1l2751
  5942  05C0                     i1l2743:	
  5943  05C0  0867               	movf	USBStdSetCfgHandler@p,w
  5944  05C1  0086               	movwf	6
  5945  05C2  0868               	movf	USBStdSetCfgHandler@p+1,w
  5946  05C3  0087               	movwf	7
  5947  05C4  0181               	clrf	1
  5948  05C5  3001               	movlw	1
  5949  05C6  07E7               	addwf	USBStdSetCfgHandler@p,f
  5950  05C7  3000               	movlw	0
  5951  05C8  3DE8               	addwfc	USBStdSetCfgHandler@p+1,f
  5952  05C9  3001               	movlw	1
  5953  05CA  00E6               	movwf	??_USBStdSetCfgHandler
  5954  05CB  0866               	movf	??_USBStdSetCfgHandler,w
  5955  05CC  07E9               	addwf	USBStdSetCfgHandler@i_1572,f
  5956  05CD  3002               	movlw	2
  5957  05CE  0269               	subwf	USBStdSetCfgHandler@i_1572,w
  5958  05CF  1C03               	skipc
  5959  05D0  2DC0               	goto	i1l2743
  5960  05D1                     i1l2751:	
  5961                           
  5962                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5963  05D1  3020               	movlw	32
  5964  05D2  00F0               	movwf	memset@p1
  5965  05D3  3000               	movlw	0
  5966  05D4  00F1               	movwf	memset@p1+1
  5967  05D5  3000               	movlw	0
  5968  05D6  00F2               	movwf	memset@c
  5969  05D7  00F3               	movwf	memset@c+1
  5970  05D8  3030               	movlw	48
  5971  05D9  00F4               	movwf	memset@n
  5972  05DA  3000               	movlw	0
  5973  05DB  00F5               	movwf	memset@n+1
  5974  05DC  3189  218D  3185   	fcall	_memset
  5975                           
  5976                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  5977  05DF  003D               	movlb	29	; select bank29
  5978  05E0  170E               	bsf	14,6	;volatile
  5979                           
  5980                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  5981  05E1  0020               	movlb	0	; select bank0
  5982  05E2  01EA               	clrf	USBStdSetCfgHandler@i
  5983  05E3  3003               	movlw	3
  5984  05E4  026A               	subwf	USBStdSetCfgHandler@i,w
  5985  05E5  1803               	btfsc	3,0
  5986  05E6  2DFB               	goto	i1l2767
  5987  05E7                     i1l2761:	
  5988                           
  5989                           ;usb_device.c: 1988: {
  5990                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  5991  05E7  086A               	movf	USBStdSetCfgHandler@i,w
  5992  05E8  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5993  05E9  0086               	movwf	6
  5994  05EA  3001               	movlw	1	; select bank3/4
  5995  05EB  0087               	movwf	7
  5996  05EC  0181               	clrf	1
  5997                           
  5998                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  5999  05ED  086A               	movf	USBStdSetCfgHandler@i,w
  6000  05EE  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6001  05EF  0086               	movwf	6
  6002  05F0  3001               	movlw	1	; select bank3/4
  6003  05F1  0087               	movwf	7
  6004  05F2  0181               	clrf	1
  6005  05F3  3001               	movlw	1
  6006  05F4  00E6               	movwf	??_USBStdSetCfgHandler
  6007  05F5  0866               	movf	??_USBStdSetCfgHandler,w
  6008  05F6  07EA               	addwf	USBStdSetCfgHandler@i,f
  6009  05F7  3003               	movlw	3
  6010  05F8  026A               	subwf	USBStdSetCfgHandler@i,w
  6011  05F9  1C03               	skipc
  6012  05FA  2DE7               	goto	i1l2761
  6013  05FB                     i1l2767:	
  6014                           
  6015                           ;usb_device.c: 1991: }
  6016                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6017  05FB  30E6               	movlw	low _USBAlternateInterface
  6018  05FC  00F0               	movwf	memset@p1
  6019  05FD  3001               	movlw	high _USBAlternateInterface
  6020  05FE  00F1               	movwf	memset@p1+1
  6021  05FF  3000               	movlw	0
  6022  0600  00F2               	movwf	memset@c
  6023  0601  00F3               	movwf	memset@c+1
  6024  0602  3002               	movlw	2
  6025  0603  00F4               	movwf	memset@n
  6026  0604  3000               	movlw	0
  6027  0605  00F5               	movwf	memset@n+1
  6028  0606  3189  218D  3185   	fcall	_memset
  6029                           
  6030                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6031  0609  003D               	movlb	29	; select bank29
  6032  060A  130E               	bcf	14,6	;volatile
  6033                           
  6034                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6035  060B  3028               	movlw	40
  6036  060C  0023               	movlb	3	; select bank3
  6037  060D  00A7               	movwf	_pBDTEntryIn^(0+384)
  6038  060E  3000               	movlw	0
  6039  060F  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6040                           
  6041                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6042  0610  3020               	movlw	32
  6043  0611  0020               	movlb	0	; select bank0
  6044  0612  00E6               	movwf	??_USBStdSetCfgHandler
  6045  0613  0866               	movf	??_USBStdSetCfgHandler,w
  6046  0614  0021               	movlb	1	; select bank1
  6047  0615  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  6048                           
  6049                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6050  0616  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6051  0617  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6052  0618  39FF               	andlw	255
  6053  0619  1D03               	skipz
  6054  061A  3000               	movlw	0
  6055  061B  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  6056                           
  6057                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6058  061C  0020               	movlb	0	; select bank0
  6059  061D  0852               	movf	82,w	;volatile
  6060  061E  00E6               	movwf	??_USBStdSetCfgHandler
  6061  061F  0866               	movf	??_USBStdSetCfgHandler,w
  6062  0620  0023               	movlb	3	; select bank3
  6063  0621  00E8               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  6064                           
  6065                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6066  0622  0868               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  6067  0623  1D03               	btfss	3,2
  6068  0624  2E2C               	goto	i1l2783
  6069                           
  6070                           ;usb_device.c: 2010: {
  6071                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6072  0625  3010               	movlw	16
  6073  0626  0020               	movlb	0	; select bank0
  6074  0627  00E6               	movwf	??_USBStdSetCfgHandler
  6075  0628  0866               	movf	??_USBStdSetCfgHandler,w
  6076  0629  0022               	movlb	2	; select bank2
  6077  062A  00EF               	movwf	_USBDeviceState^(0+256)	;volatile
  6078                           
  6079                           ;usb_device.c: 2013: }
  6080  062B  0008               	return
  6081  062C                     i1l2783:	
  6082                           
  6083                           ;usb_device.c: 2014: else
  6084                           ;usb_device.c: 2015: {
  6085                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6086  062C  3000               	movlw	0
  6087  062D  0020               	movlb	0	; select bank0
  6088  062E  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6089  062F  3001               	movlw	1
  6090  0630  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6091  0631  30E8               	movlw	low _USBActiveConfiguration
  6092  0632  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6093  0633  3001               	movlw	high _USBActiveConfiguration
  6094  0634  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6095  0635  3001               	movlw	1
  6096  0636  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6097  0637  3000               	movlw	0
  6098  0638  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6099  0639  318A  22C8         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6100                           
  6101                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6102  063B  3020               	movlw	32
  6103  063C  0020               	movlb	0	; select bank0
  6104  063D  00E6               	movwf	??_USBStdSetCfgHandler
  6105  063E  0866               	movf	??_USBStdSetCfgHandler,w
  6106  063F  0022               	movlb	2	; select bank2
  6107  0640  00EF               	movwf	_USBDeviceState^(0+256)	;volatile
  6108  0641  0008               	return
  6109  0642                     __end_of_USBStdSetCfgHandler:	
  6110                           
  6111                           	psect	text23
  6112  098D                     __ptext23:	
  6113 ;; *************** function _memset *****************
  6114 ;; Defined at:
  6115 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  p1              2    0[COMMON] PTR void 
  6118 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6119 ;;  c               2    2[COMMON] int 
  6120 ;;  n               2    4[COMMON] unsigned int 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  p               2    6[COMMON] PTR unsigned char 
  6123 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2    0[COMMON] PTR void 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6133 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;Total ram usage:        8 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_USBStdSetCfgHandler
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _memset
  6148  098D                     _memset:	
  6149                           
  6150                           ;incstack = 0
  6151                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6152  098D  0871               	movf	memset@p1+1,w
  6153  098E  00F7               	movwf	memset@p+1
  6154  098F  0870               	movf	memset@p1,w
  6155  0990  00F6               	movwf	memset@p
  6156  0991                     i1l2673:	
  6157  0991  3001               	movlw	1
  6158  0992  02F4               	subwf	memset@n,f
  6159  0993  3000               	movlw	0
  6160  0994  3BF5               	subwfb	memset@n+1,f
  6161  0995  0A74               	incf	memset@n,w
  6162  0996  1903               	btfsc	3,2
  6163  0997  0A75               	incf	memset@n+1,w
  6164  0998  1903               	btfsc	3,2
  6165  0999  0008               	return
  6166  099A  0876               	movf	memset@p,w
  6167  099B  0086               	movwf	6
  6168  099C  0877               	movf	memset@p+1,w
  6169  099D  0087               	movwf	7
  6170  099E  0872               	movf	memset@c,w
  6171  099F  0081               	movwf	1
  6172  09A0  3001               	movlw	1
  6173  09A1  07F6               	addwf	memset@p,f
  6174  09A2  3000               	movlw	0
  6175  09A3  3DF7               	addwfc	memset@p+1,f
  6176  09A4  2991               	goto	i1l2673
  6177  09A5                     __end_of_memset:	
  6178                           ;	Return value of _memset is never used
  6179                           
  6180                           
  6181                           	psect	text24
  6182  0C16                     __ptext24:	
  6183 ;; *************** function _USBStdGetStatusHandler *****************
  6184 ;; Defined at:
  6185 ;;		line 2129 in file "../lib/usb/src/usb_device.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  p               2    1[COMMON] PTR struct __BDT
  6190 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      void 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;Total ram usage:        3 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_USBCheckStdRequest
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function _USBStdGetStatusHandler
  6215  0C16                     _USBStdGetStatusHandler:	
  6216                           
  6217                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6221  0C16  0020               	movlb	0	; select bank0
  6222  0C17  01D8               	clrf	88	;volatile
  6223                           
  6224                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6225  0C18  01D9               	clrf	89	;volatile
  6226                           
  6227                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6228  0C19  2C52               	goto	i1l2839
  6229  0C1A                     i1l323:	
  6230                           ;usb_device.c: 2135: {
  6231                           ;usb_device.c: 2136: case (0x00):
  6232                           
  6233                           
  6234                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6235  0C1A  0023               	movlb	3	; select bank3
  6236  0C1B  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6237                           
  6238                           ;usb_device.c: 2145: }
  6239                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6240                           
  6241                           ;usb_device.c: 2143: {
  6242                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6243                           
  6244                           ;usb_device.c: 2142: if(0 == 1)
  6245  0C1C  0023               	movlb	3	; select bank3
  6246  0C1D  035C               	decf	_RemoteWakeup^(0+384),w	;volatile
  6247  0C1E  1D03               	btfss	3,2
  6248  0C1F  2C5E               	goto	i1l326
  6249                           
  6250                           ;usb_device.c: 2148: {
  6251                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6252  0C20  0020               	movlb	0	; select bank0
  6253  0C21  14D8               	bsf	88,1	;volatile
  6254                           
  6255                           ;usb_device.c: 2150: }
  6256                           ;usb_device.c: 2151: break;
  6257  0C22  2C5E               	goto	i1l326
  6258  0C23                     i1l327:	
  6259                           ;usb_device.c: 2152: case (0x01):
  6260                           
  6261                           
  6262                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6263  0C23  0023               	movlb	3	; select bank3
  6264  0C24  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6265                           
  6266                           ;usb_device.c: 2154: break;
  6267  0C25  2C5E               	goto	i1l326
  6268  0C26                     i1l328:	
  6269                           ;usb_device.c: 2155: case (0x02):
  6270                           
  6271                           
  6272                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6273  0C26  0023               	movlb	3	; select bank3
  6274  0C27  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6275                           
  6276                           ;usb_device.c: 2160: {
  6277                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6278                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6279  0C28  0020               	movlb	0	; select bank0
  6280  0C29  1BD4               	btfsc	84,7	;volatile
  6281  0C2A  2C36               	goto	i1l2829
  6282                           
  6283                           ;usb_device.c: 2164: {
  6284                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6285  0C2B  0854               	movf	84,w	;volatile
  6286  0C2C  390F               	andlw	15
  6287  0C2D  0709               	addwf	9,w
  6288  0C2E  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6289  0C2F  0086               	movwf	6
  6290  0C30  3001               	movlw	1	; select bank3/4
  6291  0C31  0087               	movwf	7
  6292  0C32  3F40               	moviw [0]fsr1
  6293  0C33  00F1               	movwf	USBStdGetStatusHandler@p
  6294  0C34  3F41               	moviw [1]fsr1
  6295  0C35  2C40               	goto	L6
  6296  0C36                     i1l2829:	
  6297                           ;usb_device.c: 2166: }
  6298                           
  6299                           
  6300                           ;usb_device.c: 2167: else
  6301                           ;usb_device.c: 2168: {
  6302                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6303  0C36  0854               	movf	84,w	;volatile
  6304  0C37  390F               	andlw	15
  6305  0C38  0709               	addwf	9,w
  6306  0C39  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6307  0C3A  0086               	movwf	6
  6308  0C3B  3001               	movlw	1	; select bank3/4
  6309  0C3C  0087               	movwf	7
  6310  0C3D  3F40               	moviw [0]fsr1
  6311  0C3E  00F1               	movwf	USBStdGetStatusHandler@p
  6312  0C3F  3F41               	moviw [1]fsr1
  6313  0C40                     L6:	
  6314  0C40  00F2               	movwf	USBStdGetStatusHandler@p+1
  6315                           
  6316                           ;usb_device.c: 2170: }
  6317                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6318  0C41  0871               	movf	USBStdGetStatusHandler@p,w
  6319  0C42  0086               	movwf	6
  6320  0C43  0872               	movf	USBStdGetStatusHandler@p+1,w
  6321  0C44  0087               	movwf	7
  6322  0C45  1F81               	btfss	1,7
  6323  0C46  2C5E               	goto	i1l326
  6324  0C47  0871               	movf	USBStdGetStatusHandler@p,w
  6325  0C48  0086               	movwf	6
  6326  0C49  0872               	movf	USBStdGetStatusHandler@p+1,w
  6327  0C4A  0087               	movwf	7
  6328  0C4B  1D01               	btfss	1,2
  6329  0C4C  2C5E               	goto	i1l326
  6330                           
  6331                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6332  0C4D  3001               	movlw	1
  6333  0C4E  00F0               	movwf	??_USBStdGetStatusHandler
  6334  0C4F  0870               	movf	??_USBStdGetStatusHandler,w
  6335  0C50  00D8               	movwf	88	;volatile
  6336                           
  6337                           ;usb_device.c: 2175: }
  6338                           ;usb_device.c: 2176: }
  6339                           
  6340                           ;usb_device.c: 2174: break;
  6341  0C51  2C5E               	goto	i1l326
  6342  0C52                     i1l2839:	
  6343  0C52  0850               	movf	80,w	;volatile
  6344  0C53  391F               	andlw	31
  6345                           
  6346                           ; Switch size 1, requested type "space"
  6347                           ; Number of cases is 3, Range of values is 0 to 2
  6348                           ; switch strategies available:
  6349                           ; Name         Instructions Cycles
  6350                           ; simple_byte           10     6 (average)
  6351                           ; direct_byte           12     6 (fixed)
  6352                           ; jumptable            260     6 (fixed)
  6353                           ;	Chosen strategy is simple_byte
  6354  0C54  3A00               	xorlw	0	; case 0
  6355  0C55  1903               	skipnz
  6356  0C56  2C1A               	goto	i1l323
  6357  0C57  3A01               	xorlw	1	; case 1
  6358  0C58  1903               	skipnz
  6359  0C59  2C23               	goto	i1l327
  6360  0C5A  3A03               	xorlw	3	; case 2
  6361  0C5B  1903               	skipnz
  6362  0C5C  2C26               	goto	i1l328
  6363  0C5D  2C5E               	goto	i1l326
  6364  0C5E                     i1l326:	
  6365                           
  6366                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6367  0C5E  0023               	movlb	3	; select bank3
  6368  0C5F  1FB5               	btfss	(_inPipes^(0+384)+2),7	;volatile
  6369  0C60  0008               	return
  6370                           
  6371                           ;usb_device.c: 2179: {
  6372                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6373  0C61  3058               	movlw	88
  6374  0C62  00B3               	movwf	_inPipes^(0+384)	;volatile
  6375  0C63  3000               	movlw	0
  6376  0C64  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6377                           
  6378                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6379  0C65  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6380                           
  6381                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6382  0C66  3002               	movlw	2
  6383  0C67  00F0               	movwf	??_USBStdGetStatusHandler
  6384  0C68  0870               	movf	??_USBStdGetStatusHandler,w
  6385  0C69  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6386  0C6A  0008               	return
  6387  0C6B                     __end_of_USBStdGetStatusHandler:	
  6388                           
  6389                           	psect	text25
  6390  0F81                     __ptext25:	
  6391 ;; *************** function _USBStdGetDscHandler *****************
  6392 ;; Defined at:
  6393 ;;		line 2043 in file "../lib/usb/src/usb_device.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;Total ram usage:        3 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_USBCheckStdRequest
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function _USBStdGetDscHandler
  6422  0F81                     _USBStdGetDscHandler:	
  6423                           
  6424                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6425                           
  6426                           ;incstack = 0
  6427                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6428  0F81  3080               	movlw	128
  6429  0F82  0020               	movlb	0	; select bank0
  6430  0F83  0650               	xorwf	80,w	;volatile
  6431  0F84  1D03               	btfss	3,2
  6432  0F85  0008               	return
  6433                           
  6434                           ;usb_device.c: 2046: {
  6435                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6436  0F86  30C0               	movlw	192
  6437  0F87  00F0               	movwf	??_USBStdGetDscHandler
  6438  0F88  0870               	movf	??_USBStdGetDscHandler,w
  6439  0F89  0023               	movlb	3	; select bank3
  6440  0F8A  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  6441                           
  6442                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6443  0F8B  2FF3               	goto	i1l2817
  6444  0F8C                     i1l2791:	
  6445                           ;usb_device.c: 2050: {
  6446                           ;usb_device.c: 2051: case 0x01:
  6447                           
  6448                           
  6449                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6450  0F8C  30AB               	movlw	low (_device_dsc| (0+32768))
  6451  0F8D  0023               	movlb	3	; select bank3
  6452  0F8E  00B3               	movwf	_inPipes^(0+384)	;volatile
  6453  0F8F  3090               	movlw	high (_device_dsc| (0+32768))
  6454  0F90  00B4               	movwf	(_inPipes^(0+384)+1)	;volatile
  6455                           
  6456                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6457  0F91  3000               	movlw	0
  6458  0F92  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6459  0F93  3012               	movlw	18
  6460  0F94  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6461                           
  6462                           ;usb_device.c: 2058: break;
  6463  0F95  0008               	return
  6464  0F96                     i1l2795:	
  6465                           ;usb_device.c: 2059: case 0x02:
  6466                           
  6467                           
  6468                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6469  0F96  0020               	movlb	0	; select bank0
  6470  0F97  0852               	movf	82,w	;volatile
  6471  0F98  1D03               	btfss	3,2
  6472  0F99  2FC9               	goto	i1l2803
  6473                           
  6474                           ;usb_device.c: 2064: {
  6475                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6476  0F9A  0852               	movf	82,w	;volatile
  6477  0F9B  00F0               	movwf	??_USBStdGetDscHandler
  6478  0F9C  01F1               	clrf	??_USBStdGetDscHandler+1
  6479  0F9D  35F0               	lslf	??_USBStdGetDscHandler,f
  6480  0F9E  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6481  0F9F  30C7               	movlw	low (_USB_CD_Ptr| (0+32768))
  6482  0FA0  0770               	addwf	??_USBStdGetDscHandler,w
  6483  0FA1  0084               	movwf	4
  6484  0FA2  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  6485  0FA3  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6486  0FA4  0085               	movwf	5
  6487  0FA5  3F00               	moviw [0]fsr0
  6488  0FA6  0023               	movlb	3	; select bank3
  6489  0FA7  00B3               	movwf	_inPipes^(0+384)	;volatile
  6490  0FA8  3F01               	moviw [1]fsr0
  6491  0FA9  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6492                           
  6493                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6494  0FAA  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6495  0FAB  00F1               	movwf	??_USBStdGetDscHandler+1
  6496  0FAC  0833               	movf	_inPipes^(0+384),w	;volatile
  6497  0FAD  00F0               	movwf	??_USBStdGetDscHandler
  6498  0FAE  3002               	movlw	2
  6499  0FAF  0770               	addwf	??_USBStdGetDscHandler,w
  6500  0FB0  0084               	movwf	4
  6501  0FB1  0871               	movf	??_USBStdGetDscHandler+1,w
  6502  0FB2  1803               	skipnc
  6503  0FB3  0A71               	incf	??_USBStdGetDscHandler+1,w
  6504  0FB4  0085               	movwf	5
  6505  0FB5  0800               	movf	0,w	;code access
  6506  0FB6  00F2               	movwf	??_USBStdGetDscHandler+2
  6507  0FB7  0872               	movf	??_USBStdGetDscHandler+2,w
  6508  0FB8  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6509                           
  6510                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6511  0FB9  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6512  0FBA  00F1               	movwf	??_USBStdGetDscHandler+1
  6513  0FBB  0833               	movf	_inPipes^(0+384),w	;volatile
  6514  0FBC  00F0               	movwf	??_USBStdGetDscHandler
  6515  0FBD  3003               	movlw	3
  6516  0FBE  0770               	addwf	??_USBStdGetDscHandler,w
  6517  0FBF  0084               	movwf	4
  6518  0FC0  0871               	movf	??_USBStdGetDscHandler+1,w
  6519  0FC1  1803               	skipnc
  6520  0FC2  0A71               	incf	??_USBStdGetDscHandler+1,w
  6521  0FC3  0085               	movwf	5
  6522  0FC4  0800               	movf	0,w	;code access
  6523  0FC5  00F2               	movwf	??_USBStdGetDscHandler+2
  6524  0FC6  0872               	movf	??_USBStdGetDscHandler+2,w
  6525  0FC7  00B7               	movwf	(_inPipes^(0+384)+4)	;volatile
  6526                           
  6527                           ;usb_device.c: 2076: }
  6528  0FC8  0008               	return
  6529  0FC9                     i1l2803:	
  6530                           
  6531                           ;usb_device.c: 2077: else
  6532                           ;usb_device.c: 2078: {
  6533                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6534  0FC9  0023               	movlb	3	; select bank3
  6535  0FCA  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6536                           
  6537                           ;usb_device.c: 2080: }
  6538                           ;usb_device.c: 2081: break;
  6539  0FCB  0008               	return
  6540  0FCC                     i1l2805:	
  6541                           ;usb_device.c: 2082: case 0x03:
  6542                           
  6543                           
  6544                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6545  0FCC  3003               	movlw	3
  6546  0FCD  0020               	movlb	0	; select bank0
  6547  0FCE  0252               	subwf	82,w	;volatile
  6548  0FCF  1803               	skipnc
  6549  0FD0  2FED               	goto	i1l2811
  6550                           
  6551                           ;usb_device.c: 2087: {
  6552                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6553  0FD1  0852               	movf	82,w	;volatile
  6554  0FD2  00F0               	movwf	??_USBStdGetDscHandler
  6555  0FD3  01F1               	clrf	??_USBStdGetDscHandler+1
  6556  0FD4  35F0               	lslf	??_USBStdGetDscHandler,f
  6557  0FD5  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6558  0FD6  30BD               	movlw	low (_USB_SD_Ptr| (0+32768))
  6559  0FD7  0770               	addwf	??_USBStdGetDscHandler,w
  6560  0FD8  0084               	movwf	4
  6561  0FD9  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  6562  0FDA  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6563  0FDB  0085               	movwf	5
  6564  0FDC  3F00               	moviw [0]fsr0
  6565  0FDD  0023               	movlb	3	; select bank3
  6566  0FDE  00B3               	movwf	_inPipes^(0+384)	;volatile
  6567  0FDF  3F01               	moviw [1]fsr0
  6568  0FE0  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6569                           
  6570                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6571  0FE1  0833               	movf	_inPipes^(0+384),w	;volatile
  6572  0FE2  0084               	movwf	4
  6573  0FE3  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6574  0FE4  0085               	movwf	5
  6575  0FE5  0800               	movf	0,w	;code access
  6576  0FE6  00F0               	movwf	??_USBStdGetDscHandler
  6577  0FE7  01F1               	clrf	??_USBStdGetDscHandler+1
  6578  0FE8  0870               	movf	??_USBStdGetDscHandler,w
  6579  0FE9  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6580  0FEA  0871               	movf	??_USBStdGetDscHandler+1,w
  6581  0FEB  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6582                           
  6583                           ;usb_device.c: 2092: }
  6584  0FEC  0008               	return
  6585  0FED                     i1l2811:	
  6586                           
  6587                           ;usb_device.c: 2102: else
  6588                           ;usb_device.c: 2103: {
  6589                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6590  0FED  0023               	movlb	3	; select bank3
  6591  0FEE  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6592                           
  6593                           ;usb_device.c: 2105: }
  6594                           ;usb_device.c: 2106: break;
  6595  0FEF  0008               	return
  6596  0FF0                     i1l2813:	
  6597                           ;usb_device.c: 2107: default:
  6598                           
  6599                           
  6600                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6601  0FF0  0023               	movlb	3	; select bank3
  6602  0FF1  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6603                           
  6604                           ;usb_device.c: 2110: }
  6605                           
  6606                           ;usb_device.c: 2109: break;
  6607  0FF2  0008               	return
  6608  0FF3                     i1l2817:	
  6609  0FF3  0020               	movlb	0	; select bank0
  6610  0FF4  0853               	movf	83,w	;volatile
  6611                           
  6612                           ; Switch size 1, requested type "space"
  6613                           ; Number of cases is 3, Range of values is 1 to 3
  6614                           ; switch strategies available:
  6615                           ; Name         Instructions Cycles
  6616                           ; simple_byte           10     6 (average)
  6617                           ; direct_byte           15     9 (fixed)
  6618                           ; jumptable            263     9 (fixed)
  6619                           ;	Chosen strategy is simple_byte
  6620  0FF5  3A01               	xorlw	1	; case 1
  6621  0FF6  1903               	skipnz
  6622  0FF7  2F8C               	goto	i1l2791
  6623  0FF8  3A03               	xorlw	3	; case 2
  6624  0FF9  1903               	skipnz
  6625  0FFA  2F96               	goto	i1l2795
  6626  0FFB  3A01               	xorlw	1	; case 3
  6627  0FFC  1903               	skipnz
  6628  0FFD  2FCC               	goto	i1l2805
  6629  0FFE  2FF0               	goto	i1l2813
  6630  0FFF  0008               	return
  6631  1000                     __end_of_USBStdGetDscHandler:	
  6632                           
  6633                           	psect	text26
  6634  0040                     __ptext26:	
  6635 ;; *************** function _USBStdFeatureReqHandler *****************
  6636 ;; Defined at:
  6637 ;;		line 2754 in file "../lib/usb/src/usb_device.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  p               2   11[BANK0 ] PTR struct __BDT
  6642 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6643 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  6644 ;;		 -> UEP0(1), 
  6645 ;;  current_ep_d    1   10[BANK0 ] struct .
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;Total ram usage:        7 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    4
  6662 ;; This function calls:
  6663 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6664 ;; This function is called by:
  6665 ;;		_USBCheckStdRequest
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _USBStdFeatureReqHandler
  6671  0040                     _USBStdFeatureReqHandler:	
  6672                           
  6673                           ;usb_device.c: 2756: BDT_ENTRY *p;
  6674                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  6675                           ;usb_device.c: 2761: unsigned char* pUEP;
  6676                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  6677                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  6678                           
  6679                           ;incstack = 0
  6680                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6681  0040  0020               	movlb	0	; select bank0
  6682  0041  0352               	decf	82,w	;volatile
  6683  0042  1D03               	btfss	3,2
  6684  0043  2858               	goto	i1l2859
  6685  0044  0850               	movf	80,w	;volatile
  6686  0045  391F               	andlw	31
  6687  0046  3A00               	xorlw	0
  6688  0047  1D03               	skipz
  6689  0048  2858               	goto	i1l2859
  6690                           
  6691                           ;usb_device.c: 2801: {
  6692                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  6693  0049  0023               	movlb	3	; select bank3
  6694  004A  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6695                           
  6696                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  6697  004B  3003               	movlw	3
  6698  004C  0020               	movlb	0	; select bank0
  6699  004D  0651               	xorwf	81,w	;volatile
  6700  004E  1D03               	btfss	3,2
  6701  004F  2856               	goto	i1l2857
  6702                           
  6703                           ;usb_device.c: 2804: RemoteWakeup = 1;
  6704  0050  3001               	movlw	1
  6705  0051  00E6               	movwf	??_USBStdFeatureReqHandler
  6706  0052  0866               	movf	??_USBStdFeatureReqHandler,w
  6707  0053  0023               	movlb	3	; select bank3
  6708  0054  00DC               	movwf	_RemoteWakeup^(0+384)	;volatile
  6709  0055  2858               	goto	i1l2859
  6710  0056                     i1l2857:	
  6711                           
  6712                           ;usb_device.c: 2805: else
  6713                           ;usb_device.c: 2806: RemoteWakeup = 0;
  6714  0056  0023               	movlb	3	; select bank3
  6715  0057  01DC               	clrf	_RemoteWakeup^(0+384)	;volatile
  6716  0058                     i1l2859:	
  6717                           
  6718                           ;usb_device.c: 2807: }
  6719                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  6720                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  6721                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6722                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  6723  0058  0020               	movlb	0	; select bank0
  6724  0059  0852               	movf	82,w	;volatile
  6725  005A  1D03               	btfss	3,2
  6726  005B  0008               	return
  6727  005C  0850               	movf	80,w	;volatile
  6728  005D  391F               	andlw	31
  6729  005E  3A02               	xorlw	2
  6730  005F  1D03               	skipz
  6731  0060  0008               	return
  6732  0061  0854               	movf	84,w	;volatile
  6733  0062  390F               	andlw	15
  6734  0063  3A00               	xorlw	0
  6735  0064  1903               	skipnz
  6736  0065  0008               	return
  6737  0066  0854               	movf	84,w	;volatile
  6738  0067  390F               	andlw	15
  6739  0068  00E6               	movwf	??_USBStdFeatureReqHandler
  6740  0069  3003               	movlw	3
  6741  006A  0266               	subwf	??_USBStdFeatureReqHandler,w
  6742  006B  1803               	skipnc
  6743  006C  0008               	return
  6744  006D  3020               	movlw	32
  6745  006E  0022               	movlb	2	; select bank2
  6746  006F  066F               	xorwf	_USBDeviceState^(0+256),w	;volatile
  6747  0070  1D03               	btfss	3,2
  6748  0071  0008               	return
  6749                           
  6750                           ;usb_device.c: 2814: {
  6751                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  6752  0072  0023               	movlb	3	; select bank3
  6753  0073  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6754                           
  6755                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  6756  0074  0020               	movlb	0	; select bank0
  6757  0075  1BD4               	btfsc	84,7	;volatile
  6758  0076  2886               	goto	i1l2873
  6759                           
  6760                           ;usb_device.c: 2821: {
  6761                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6762  0077  0854               	movf	84,w	;volatile
  6763  0078  390F               	andlw	15
  6764  0079  0709               	addwf	9,w
  6765  007A  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6766  007B  0086               	movwf	6
  6767  007C  3001               	movlw	1	; select bank3/4
  6768  007D  0087               	movwf	7
  6769  007E  3F40               	moviw [0]fsr1
  6770  007F  00EB               	movwf	USBStdFeatureReqHandler@p
  6771  0080  3F41               	moviw [1]fsr1
  6772  0081  00EC               	movwf	USBStdFeatureReqHandler@p+1
  6773                           
  6774                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6775  0082  0854               	movf	84,w	;volatile
  6776  0083  390F               	andlw	15
  6777  0084  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6778  0085  2894               	goto	L7
  6779  0086                     i1l2873:	
  6780                           ;usb_device.c: 2824: }
  6781                           
  6782                           
  6783                           ;usb_device.c: 2825: else
  6784                           ;usb_device.c: 2826: {
  6785                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6786  0086  0854               	movf	84,w	;volatile
  6787  0087  390F               	andlw	15
  6788  0088  0709               	addwf	9,w
  6789  0089  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6790  008A  0086               	movwf	6
  6791  008B  3001               	movlw	1	; select bank3/4
  6792  008C  0087               	movwf	7
  6793  008D  3F40               	moviw [0]fsr1
  6794  008E  00EB               	movwf	USBStdFeatureReqHandler@p
  6795  008F  3F41               	moviw [1]fsr1
  6796  0090  00EC               	movwf	USBStdFeatureReqHandler@p+1
  6797                           
  6798                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6799  0091  0854               	movf	84,w	;volatile
  6800  0092  390F               	andlw	15
  6801  0093  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6802  0094                     L7:	
  6803  0094  0086               	movwf	6
  6804  0095  3001               	movlw	1	; select bank3/4
  6805  0096  0087               	movwf	7
  6806  0097  0801               	movf	1,w
  6807  0098  00E6               	movwf	??_USBStdFeatureReqHandler
  6808  0099  0866               	movf	??_USBStdFeatureReqHandler,w
  6809  009A  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data
  6810                           
  6811                           ;usb_device.c: 2829: }
  6812                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  6813  009B  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6814  009C  28A7               	goto	i1l2879
  6815                           
  6816                           ;usb_device.c: 2836: {
  6817                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  6818  009D  30FB               	movlw	251
  6819  009E  00E6               	movwf	??_USBStdFeatureReqHandler
  6820  009F  30FF               	movlw	255
  6821  00A0  00E7               	movwf	??_USBStdFeatureReqHandler+1
  6822  00A1  086B               	movf	USBStdFeatureReqHandler@p,w
  6823  00A2  0566               	andwf	??_USBStdFeatureReqHandler,w
  6824  00A3  00EB               	movwf	USBStdFeatureReqHandler@p
  6825  00A4  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6826  00A5  0567               	andwf	??_USBStdFeatureReqHandler+1,w
  6827  00A6  28AC               	goto	L8
  6828  00A7                     i1l2879:	
  6829                           ;usb_device.c: 2838: }
  6830                           
  6831                           
  6832                           ;usb_device.c: 2839: else
  6833                           ;usb_device.c: 2840: {
  6834                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  6835  00A7  3004               	movlw	4
  6836  00A8  046B               	iorwf	USBStdFeatureReqHandler@p,w
  6837  00A9  00EB               	movwf	USBStdFeatureReqHandler@p
  6838  00AA  3000               	movlw	0
  6839  00AB  046C               	iorwf	USBStdFeatureReqHandler@p+1,w
  6840  00AC                     L8:	
  6841  00AC  00EC               	movwf	USBStdFeatureReqHandler@p+1
  6842                           
  6843                           ;usb_device.c: 2842: }
  6844                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  6845  00AD  1BD4               	btfsc	84,7	;volatile
  6846  00AE  28BB               	goto	i1l2885
  6847                           
  6848                           ;usb_device.c: 2848: {
  6849                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6850  00AF  0854               	movf	84,w	;volatile
  6851  00B0  390F               	andlw	15
  6852  00B1  0709               	addwf	9,w
  6853  00B2  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6854  00B3  0086               	movwf	6
  6855  00B4  3001               	movlw	1	; select bank3/4
  6856  00B5  0087               	movwf	7
  6857  00B6  086B               	movf	USBStdFeatureReqHandler@p,w
  6858  00B7  3FC0               	movwi [0]fsr1
  6859  00B8  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6860  00B9  3FC1               	movwi [1]fsr1
  6861                           
  6862                           ;usb_device.c: 2850: }
  6863  00BA  28C6               	goto	i1l2887
  6864  00BB                     i1l2885:	
  6865                           
  6866                           ;usb_device.c: 2851: else
  6867                           ;usb_device.c: 2852: {
  6868                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6869  00BB  0854               	movf	84,w	;volatile
  6870  00BC  390F               	andlw	15
  6871  00BD  0709               	addwf	9,w
  6872  00BE  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6873  00BF  0086               	movwf	6
  6874  00C0  3001               	movlw	1	; select bank3/4
  6875  00C1  0087               	movwf	7
  6876  00C2  086B               	movf	USBStdFeatureReqHandler@p,w
  6877  00C3  3FC0               	movwi [0]fsr1
  6878  00C4  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6879  00C5  3FC1               	movwi [1]fsr1
  6880  00C6                     i1l2887:	
  6881                           
  6882                           ;usb_device.c: 2854: }
  6883                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  6884  00C6  3003               	movlw	3
  6885  00C7  0651               	xorwf	81,w	;volatile
  6886  00C8  1D03               	btfss	3,2
  6887  00C9  28E8               	goto	i1l2901
  6888                           
  6889                           ;usb_device.c: 2858: {
  6890                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  6891  00CA  086B               	movf	USBStdFeatureReqHandler@p,w
  6892  00CB  0086               	movwf	6
  6893  00CC  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6894  00CD  0087               	movwf	7
  6895  00CE  1F81               	btfss	1,7
  6896  00CF  28DD               	goto	i1l2897
  6897                           
  6898                           ;usb_device.c: 2860: {
  6899                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  6900  00D0  1BD4               	btfsc	84,7	;volatile
  6901  00D1  28D6               	goto	i1l2895
  6902                           
  6903                           ;usb_device.c: 2864: {
  6904                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6905  00D2  0854               	movf	84,w	;volatile
  6906  00D3  390F               	andlw	15
  6907  00D4  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6908  00D5  28D9               	goto	L9
  6909  00D6                     i1l2895:	
  6910                           ;usb_device.c: 2866: }
  6911                           
  6912                           
  6913                           ;usb_device.c: 2867: else
  6914                           ;usb_device.c: 2868: {
  6915                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6916  00D6  0854               	movf	84,w	;volatile
  6917  00D7  390F               	andlw	15
  6918  00D8  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6919  00D9                     L9:	
  6920  00D9  0086               	movwf	6
  6921  00DA  3001               	movlw	1	; select bank3/4
  6922  00DB  0087               	movwf	7
  6923  00DC  1481               	bsf	1,1
  6924  00DD                     i1l2897:	
  6925                           
  6926                           ;usb_device.c: 2870: }
  6927                           ;usb_device.c: 2871: }
  6928                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  6929  00DD  086B               	movf	USBStdFeatureReqHandler@p,w
  6930  00DE  0086               	movwf	6
  6931  00DF  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6932  00E0  0087               	movwf	7
  6933  00E1  1501               	bsf	1,2
  6934                           
  6935                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  6936  00E2  086B               	movf	USBStdFeatureReqHandler@p,w
  6937  00E3  0086               	movwf	6
  6938  00E4  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6939  00E5  0087               	movwf	7
  6940  00E6  1781               	bsf	1,7
  6941                           
  6942                           ;usb_device.c: 2876: }
  6943  00E7  0008               	return
  6944  00E8                     i1l2901:	
  6945                           
  6946                           ;usb_device.c: 2877: else
  6947                           ;usb_device.c: 2878: {
  6948                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6949  00E8  3004               	movlw	4
  6950  00E9  066B               	xorwf	USBStdFeatureReqHandler@p,w
  6951  00EA  00EB               	movwf	USBStdFeatureReqHandler@p
  6952  00EB  3000               	movlw	0
  6953  00EC  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  6954  00ED  00EC               	movwf	USBStdFeatureReqHandler@p+1
  6955                           
  6956                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6957  00EE  086B               	movf	USBStdFeatureReqHandler@p,w
  6958  00EF  0086               	movwf	6
  6959  00F0  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6960  00F1  0087               	movwf	7
  6961  00F2  1F81               	btfss	1,7
  6962  00F3  2911               	goto	i1l2911
  6963                           
  6964                           ;usb_device.c: 2885: {
  6965                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  6966  00F4  307F               	movlw	127
  6967  00F5  00E6               	movwf	??_USBStdFeatureReqHandler
  6968  00F6  086B               	movf	USBStdFeatureReqHandler@p,w
  6969  00F7  0086               	movwf	6
  6970  00F8  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6971  00F9  0087               	movwf	7
  6972  00FA  0866               	movf	??_USBStdFeatureReqHandler,w
  6973  00FB  0581               	andwf	1,f
  6974                           
  6975                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  6976  00FC  086B               	movf	USBStdFeatureReqHandler@p,w
  6977  00FD  0086               	movwf	6
  6978  00FE  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6979  00FF  0087               	movwf	7
  6980  0100  1701               	bsf	1,6
  6981                           
  6982                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6983  0101  3000               	movlw	0
  6984  0102  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6985  0103  3005               	movlw	5
  6986  0104  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6987  0105  086C               	movf	USBStdFeatureReqHandler@p+1,w
  6988  0106  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6989  0107  086B               	movf	USBStdFeatureReqHandler@p,w
  6990  0108  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6991  0109  3002               	movlw	2
  6992  010A  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6993  010B  3000               	movlw	0
  6994  010C  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6995  010D  318A  22C8  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6996                           
  6997                           ;usb_device.c: 2891: }
  6998  0110  2917               	goto	i1l2913
  6999  0111                     i1l2911:	
  7000                           
  7001                           ;usb_device.c: 2892: else
  7002                           ;usb_device.c: 2893: {
  7003                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7004  0111  0020               	movlb	0	; select bank0
  7005  0112  086B               	movf	USBStdFeatureReqHandler@p,w
  7006  0113  0086               	movwf	6
  7007  0114  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7008  0115  0087               	movwf	7
  7009  0116  1701               	bsf	1,6
  7010  0117                     i1l2913:	
  7011                           
  7012                           ;usb_device.c: 2896: }
  7013                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7014  0117  3004               	movlw	4
  7015  0118  0020               	movlb	0	; select bank0
  7016  0119  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7017  011A  00EB               	movwf	USBStdFeatureReqHandler@p
  7018  011B  3000               	movlw	0
  7019  011C  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7020  011D  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7021                           
  7022                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7023  011E  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7024  011F  2926               	goto	i1l419
  7025  0120  086B               	movf	USBStdFeatureReqHandler@p,w
  7026  0121  0086               	movwf	6
  7027  0122  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7028  0123  0087               	movwf	7
  7029  0124  1F81               	btfss	1,7
  7030  0125  294B               	goto	i1l2925
  7031  0126                     i1l419:	
  7032                           
  7033                           ;usb_device.c: 2907: {
  7034                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7035  0126  1BD4               	btfsc	84,7	;volatile
  7036  0127  292C               	goto	i1l2921
  7037                           
  7038                           ;usb_device.c: 2909: {
  7039                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7040  0128  0854               	movf	84,w	;volatile
  7041  0129  390F               	andlw	15
  7042  012A  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7043  012B  292F               	goto	L10
  7044  012C                     i1l2921:	
  7045                           ;usb_device.c: 2911: }
  7046                           
  7047                           
  7048                           ;usb_device.c: 2912: else
  7049                           ;usb_device.c: 2913: {
  7050                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7051  012C  0854               	movf	84,w	;volatile
  7052  012D  390F               	andlw	15
  7053  012E  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7054  012F                     L10:	
  7055  012F  0086               	movwf	6
  7056  0130  3001               	movlw	1	; select bank3/4
  7057  0131  0087               	movwf	7
  7058  0132  1081               	bcf	1,1
  7059                           
  7060                           ;usb_device.c: 2915: }
  7061                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7062  0133  303B               	movlw	59
  7063  0134  00E6               	movwf	??_USBStdFeatureReqHandler
  7064  0135  086B               	movf	USBStdFeatureReqHandler@p,w
  7065  0136  0086               	movwf	6
  7066  0137  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7067  0138  0087               	movwf	7
  7068  0139  0866               	movf	??_USBStdFeatureReqHandler,w
  7069  013A  0581               	andwf	1,f
  7070                           
  7071                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7072  013B  3000               	movlw	0
  7073  013C  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7074  013D  3005               	movlw	5
  7075  013E  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7076  013F  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7077  0140  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7078  0141  086B               	movf	USBStdFeatureReqHandler@p,w
  7079  0142  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7080  0143  3002               	movlw	2
  7081  0144  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7082  0145  3000               	movlw	0
  7083  0146  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7084  0147  318A  22C8  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7085                           
  7086                           ;usb_device.c: 2921: }
  7087  014A  2954               	goto	i1l2927
  7088  014B                     i1l2925:	
  7089                           
  7090                           ;usb_device.c: 2922: else
  7091                           ;usb_device.c: 2923: {
  7092                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7093  014B  303B               	movlw	59
  7094  014C  0020               	movlb	0	; select bank0
  7095  014D  00E6               	movwf	??_USBStdFeatureReqHandler
  7096  014E  086B               	movf	USBStdFeatureReqHandler@p,w
  7097  014F  0086               	movwf	6
  7098  0150  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7099  0151  0087               	movwf	7
  7100  0152  0866               	movf	??_USBStdFeatureReqHandler,w
  7101  0153  0581               	andwf	1,f
  7102  0154                     i1l2927:	
  7103                           
  7104                           ;usb_device.c: 2926: }
  7105                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7106  0154  0020               	movlb	0	; select bank0
  7107  0155  0854               	movf	84,w	;volatile
  7108  0156  390F               	andlw	15
  7109  0157  3E98               	addlw	152
  7110  0158  00E6               	movwf	??_USBStdFeatureReqHandler
  7111  0159  01E7               	clrf	??_USBStdFeatureReqHandler+1
  7112  015A  300E               	movlw	14
  7113  015B  3DE7               	addwfc	??_USBStdFeatureReqHandler+1,f
  7114  015C  0866               	movf	??_USBStdFeatureReqHandler,w
  7115  015D  00E8               	movwf	USBStdFeatureReqHandler@pUEP
  7116  015E  0867               	movf	??_USBStdFeatureReqHandler+1,w
  7117  015F  00E9               	movwf	USBStdFeatureReqHandler@pUEP+1
  7118                           
  7119                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7120  0160  30FE               	movlw	254
  7121  0161  00E6               	movwf	??_USBStdFeatureReqHandler
  7122  0162  0868               	movf	USBStdFeatureReqHandler@pUEP,w
  7123  0163  0086               	movwf	6
  7124  0164  0869               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7125  0165  0087               	movwf	7
  7126  0166  0866               	movf	??_USBStdFeatureReqHandler,w
  7127  0167  0581               	andwf	1,f
  7128  0168  0008               	return
  7129  0169                     __end_of_USBStdFeatureReqHandler:	
  7130                           
  7131                           	psect	text27
  7132  0AC8                     __ptext27:	
  7133 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7134 ;; Defined at:
  7135 ;;		line 51 in file "../src/usb_events.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  event           2    0[BANK0 ] enum E2662
  7138 ;;  pdata           2    2[BANK0 ] PTR void 
  7139 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7140 ;;		 -> BDT(48), 
  7141 ;;  size            2    4[BANK0 ] unsigned int 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;		None
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      unsigned char 
  7146 ;; Registers used:
  7147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7153 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;Total ram usage:        6 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    3
  7160 ;; This function calls:
  7161 ;;		_USBCheckCDCRequest
  7162 ;;		i1_CDCInitEP
  7163 ;;		i1_SYSTEM_Initialize
  7164 ;; This function is called by:
  7165 ;;		_USBDeviceTasks
  7166 ;;		_USBStdSetCfgHandler
  7167 ;;		_USBSuspend
  7168 ;;		_USBWakeFromSuspend
  7169 ;;		_USBCtrlTrfSetupHandler
  7170 ;;		_USBCheckStdRequest
  7171 ;;		_USBStdFeatureReqHandler
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           
  7176                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7177  0AC8                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7178                           
  7179                           ;usb_events.c: 53: switch( (int) event )
  7180                           
  7181                           ;incstack = 0
  7182                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7183  0AC8  2AD7               	goto	i1l2617
  7184  0AC9                     i1l2607:	
  7185                           ;usb_events.c: 64: case EVENT_SUSPEND:
  7186                           
  7187                           ;usb_events.c: 62: break;
  7188                           
  7189                           ;usb_events.c: 58: case EVENT_SOF:
  7190                           
  7191                           ;usb_events.c: 56: break;
  7192                           
  7193                           ;usb_events.c: 54: {
  7194                           ;usb_events.c: 55: case EVENT_TRANSFER:
  7195                           
  7196                           
  7197                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7198  0AC9  3001               	movlw	1
  7199  0ACA  3189  2161         	fcall	i1_SYSTEM_Initialize
  7200                           
  7201                           ;usb_events.c: 75: break;
  7202  0ACC  0008               	return
  7203  0ACD                     i1l2609:	
  7204                           ;usb_events.c: 77: case EVENT_RESUME:
  7205                           
  7206                           
  7207                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7208  0ACD  3002               	movlw	2
  7209  0ACE  3189  2161         	fcall	i1_SYSTEM_Initialize
  7210                           
  7211                           ;usb_events.c: 86: break;
  7212  0AD0  0008               	return
  7213  0AD1                     i1l2611:	
  7214                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  7215                           
  7216                           
  7217                           ;usb_events.c: 91: CDCInitEP();
  7218  0AD1  318A  225B         	fcall	i1_CDCInitEP
  7219                           
  7220                           ;usb_events.c: 96: break;
  7221                           
  7222                           ;usb_events.c: 95: case EVENT_SET_DESCRIPTOR:
  7223                           
  7224                           ;usb_events.c: 93: break;
  7225  0AD3  0008               	return
  7226  0AD4                     i1l2613:	
  7227                           ;usb_events.c: 98: case EVENT_EP0_REQUEST:
  7228                           
  7229                           
  7230                           ;usb_events.c: 101: USBCheckCDCRequest();
  7231  0AD4  318D  2579         	fcall	_USBCheckCDCRequest
  7232                           
  7233                           ;usb_events.c: 112: }
  7234                           
  7235                           ;usb_events.c: 111: break;
  7236                           
  7237                           ;usb_events.c: 110: default:
  7238                           
  7239                           ;usb_events.c: 108: break;
  7240                           
  7241                           ;usb_events.c: 107: case EVENT_TRANSFER_TERMINATED:
  7242                           
  7243                           ;usb_events.c: 105: break;
  7244                           
  7245                           ;usb_events.c: 104: case EVENT_BUS_ERROR:
  7246                           
  7247                           ;usb_events.c: 102: break;
  7248  0AD6  0008               	return
  7249  0AD7                     i1l2617:	
  7250                           
  7251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7252                           ; Switch size 1, requested type "space"
  7253                           ; Number of cases is 2, Range of values is 0 to 127
  7254                           ; switch strategies available:
  7255                           ; Name         Instructions Cycles
  7256                           ; simple_byte            7     4 (average)
  7257                           ; direct_byte          262     6 (fixed)
  7258                           ; jumptable            260     6 (fixed)
  7259                           ;	Chosen strategy is simple_byte
  7260  0AD7  0020               	movlb	0	; select bank0
  7261  0AD8  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7262  0AD9  3A00               	xorlw	0	; case 0
  7263  0ADA  1903               	skipnz
  7264  0ADB  2AE0               	goto	i1l4335
  7265  0ADC  3A7F               	xorlw	127	; case 127
  7266  0ADD  1903               	skipnz
  7267  0ADE  2AFA               	goto	i1l4337
  7268  0ADF  2AFF               	goto	i1l35
  7269  0AE0                     i1l4335:	
  7270                           
  7271                           ; Switch size 1, requested type "space"
  7272                           ; Number of cases is 8, Range of values is 1 to 117
  7273                           ; switch strategies available:
  7274                           ; Name         Instructions Cycles
  7275                           ; simple_byte           25    13 (average)
  7276                           ; direct_byte          243     9 (fixed)
  7277                           ; jumptable            263     9 (fixed)
  7278                           ;	Chosen strategy is simple_byte
  7279  0AE0  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7280  0AE1  3A01               	xorlw	1	; case 1
  7281  0AE2  1903               	skipnz
  7282  0AE3  2AD1               	goto	i1l2611
  7283  0AE4  3A03               	xorlw	3	; case 2
  7284  0AE5  1903               	skipnz
  7285  0AE6  2AFF               	goto	i1l35
  7286  0AE7  3A01               	xorlw	1	; case 3
  7287  0AE8  1903               	skipnz
  7288  0AE9  2AD4               	goto	i1l2613
  7289  0AEA  3A06               	xorlw	6	; case 5
  7290  0AEB  1903               	skipnz
  7291  0AEC  2AFF               	goto	i1l35
  7292  0AED  3A77               	xorlw	119	; case 114
  7293  0AEE  1903               	skipnz
  7294  0AEF  2AFF               	goto	i1l35
  7295  0AF0  3A01               	xorlw	1	; case 115
  7296  0AF1  1903               	skipnz
  7297  0AF2  2AFF               	goto	i1l35
  7298  0AF3  3A07               	xorlw	7	; case 116
  7299  0AF4  1903               	skipnz
  7300  0AF5  2ACD               	goto	i1l2609
  7301  0AF6  3A01               	xorlw	1	; case 117
  7302  0AF7  1903               	skipnz
  7303  0AF8  2AC9               	goto	i1l2607
  7304  0AF9  2AFF               	goto	i1l35
  7305  0AFA                     i1l4337:	
  7306                           
  7307                           ; Switch size 1, requested type "space"
  7308                           ; Number of cases is 1, Range of values is 255 to 255
  7309                           ; switch strategies available:
  7310                           ; Name         Instructions Cycles
  7311                           ; simple_byte            4     3 (average)
  7312                           ; direct_byte            7     5 (fixed)
  7313                           ; jumptable            263     9 (fixed)
  7314                           ;	Chosen strategy is simple_byte
  7315  0AFA  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7316  0AFB  3AFF               	xorlw	255	; case 255
  7317  0AFC  1903               	skipnz
  7318  0AFD  2AFF               	goto	i1l35
  7319  0AFE  2AFF               	goto	i1l35
  7320  0AFF                     i1l35:	
  7321                           ;usb_events.c: 113: return 1;
  7322                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7323                           
  7324  0AFF  0008               	return
  7325  0B00                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7326                           
  7327                           	psect	text28
  7328  0961                     __ptext28:	
  7329 ;; *************** function i1_SYSTEM_Initialize *****************
  7330 ;; Defined at:
  7331 ;;		line 82 in file "system.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  state           1    wreg     enum E2617
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  state           1    0[COMMON] enum E2617
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  1    wreg      void 
  7338 ;; Registers used:
  7339 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;Total ram usage:        1 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function i1_SYSTEM_Initialize
  7360  0961                     i1_SYSTEM_Initialize:	
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  7364                           ;i1SYSTEM_Initialize@state stored from wreg
  7365  0961  00F0               	movwf	i1SYSTEM_Initialize@state
  7366                           
  7367                           ;system.c: 84: switch(state)
  7368  0962  296A               	goto	i1l2603
  7369  0963                     i1l2599:	
  7370                           ;system.c: 85: {
  7371                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  7372                           
  7373                           
  7374                           ;system.c: 90: OSCCON = 0xFC;
  7375  0963  30FC               	movlw	252
  7376  0964  0021               	movlb	1	; select bank1
  7377  0965  0099               	movwf	25	;volatile
  7378                           
  7379                           ;system.c: 91: ACTCON = 0x90;
  7380  0966  3090               	movlw	144
  7381  0967  0027               	movlb	7	; select bank7
  7382  0968  009B               	movwf	27	;volatile
  7383                           
  7384                           ;system.c: 102: }
  7385                           
  7386                           ;system.c: 101: break;
  7387                           
  7388                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  7389                           
  7390                           ;system.c: 98: break;
  7391                           
  7392                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  7393                           
  7394                           ;system.c: 95: break;
  7395  0969  0008               	return
  7396  096A                     i1l2603:	
  7397  096A  0870               	movf	i1SYSTEM_Initialize@state,w
  7398                           
  7399                           ; Switch size 1, requested type "space"
  7400                           ; Number of cases is 3, Range of values is 0 to 2
  7401                           ; switch strategies available:
  7402                           ; Name         Instructions Cycles
  7403                           ; simple_byte           10     6 (average)
  7404                           ; direct_byte           12     6 (fixed)
  7405                           ; jumptable            260     6 (fixed)
  7406                           ;	Chosen strategy is simple_byte
  7407  096B  3A00               	xorlw	0	; case 0
  7408  096C  1903               	skipnz
  7409  096D  2963               	goto	i1l2599
  7410  096E  3A01               	xorlw	1	; case 1
  7411  096F  1903               	skipnz
  7412  0970  2975               	goto	i1l565
  7413  0971  3A03               	xorlw	3	; case 2
  7414  0972  1903               	skipnz
  7415  0973  2975               	goto	i1l565
  7416  0974  2975               	goto	i1l565
  7417  0975                     i1l565:	
  7418  0975  0008               	return
  7419  0976                     __end_ofi1_SYSTEM_Initialize:	
  7420                           
  7421                           	psect	text29
  7422  0A5B                     __ptext29:	
  7423 ;; *************** function i1_CDCInitEP *****************
  7424 ;; Defined at:
  7425 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;		None
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7443 ;;Total ram usage:        1 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    2
  7446 ;; This function calls:
  7447 ;;		i1_USBEnableEndpoint
  7448 ;;		i1_USBTransferOnePacket
  7449 ;; This function is called by:
  7450 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           
  7455                           ;psect for function i1_CDCInitEP
  7456  0A5B                     i1_CDCInitEP:	
  7457                           
  7458                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  7459                           
  7460                           ;incstack = 0
  7461                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7462  0A5B  3000               	movlw	0
  7463  0A5C  0023               	movlb	3	; select bank3
  7464  0A5D  00E2               	movwf	(_line_coding+3)^(0+384)
  7465  0A5E  3000               	movlw	0
  7466  0A5F  00E1               	movwf	(_line_coding+2)^(0+384)
  7467  0A60  304B               	movlw	75
  7468  0A61  00E0               	movwf	(_line_coding+1)^(0+384)
  7469  0A62  3000               	movlw	0
  7470  0A63  00DF               	movwf	_line_coding^(0+384)
  7471                           
  7472                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  7473  0A64  01E3               	clrf	(_line_coding^(0+384)+4)
  7474                           
  7475                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  7476  0A65  01E4               	clrf	(_line_coding^(0+384)+5)
  7477                           
  7478                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  7479  0A66  3008               	movlw	8
  7480  0A67  00FD               	movwf	??i1_CDCInitEP
  7481  0A68  087D               	movf	??i1_CDCInitEP,w
  7482  0A69  00E5               	movwf	(_line_coding^(0+384)+6)
  7483                           
  7484                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  7485  0A6A  01D1               	clrf	_cdc_rx_len^(0+384)
  7486                           
  7487                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  7488  0A6B  301A               	movlw	26
  7489  0A6C  00FD               	movwf	??i1_CDCInitEP
  7490  0A6D  087D               	movf	??i1_CDCInitEP,w
  7491  0A6E  00F7               	movwf	i1USBEnableEndpoint@options
  7492  0A6F  3001               	movlw	1
  7493  0A70  3189  21F8  318A   	fcall	i1_USBEnableEndpoint
  7494                           
  7495                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7496  0A73  301E               	movlw	30
  7497  0A74  00FD               	movwf	??i1_CDCInitEP
  7498  0A75  087D               	movf	??i1_CDCInitEP,w
  7499  0A76  00F7               	movwf	i1USBEnableEndpoint@options
  7500  0A77  3002               	movlw	2
  7501  0A78  3189  21F8  318A   	fcall	i1_USBEnableEndpoint
  7502                           
  7503                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7504  0A7B  01F0               	clrf	i1USBTransferOnePacket@dir
  7505  0A7C  3020               	movlw	32
  7506  0A7D  00F1               	movwf	i1USBTransferOnePacket@data
  7507  0A7E  3001               	movlw	1
  7508  0A7F  00F2               	movwf	i1USBTransferOnePacket@data+1
  7509  0A80  3040               	movlw	64
  7510  0A81  00FD               	movwf	??i1_CDCInitEP
  7511  0A82  087D               	movf	??i1_CDCInitEP,w
  7512  0A83  00F3               	movwf	i1USBTransferOnePacket@len
  7513  0A84  3002               	movlw	2
  7514  0A85  3187  2753         	fcall	i1_USBTransferOnePacket
  7515  0A87  0871               	movf	?i1_USBTransferOnePacket+1,w
  7516  0A88  0023               	movlb	3	; select bank3
  7517  0A89  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  7518  0A8A  0870               	movf	?i1_USBTransferOnePacket,w
  7519  0A8B  00C8               	movwf	_CDCDataOutHandle^(0+384)
  7520                           
  7521                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  7522  0A8C  01C6               	clrf	_CDCDataInHandle^(0+384)
  7523  0A8D  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  7524                           
  7525                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  7526  0A8E  0021               	movlb	1	; select bank1
  7527  0A8F  01E2               	clrf	_cdc_trf_state^(0+128)
  7528  0A90  0008               	return
  7529  0A91                     __end_ofi1_CDCInitEP:	
  7530                           
  7531                           	psect	text30
  7532  0753                     __ptext30:	
  7533 ;; *************** function i1_USBTransferOnePacket *****************
  7534 ;; Defined at:
  7535 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  ep              1    wreg     unsigned char 
  7538 ;;  dir             1    0[COMMON] unsigned char 
  7539 ;;  data            2    1[COMMON] PTR unsigned char 
  7540 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7541 ;;  len             1    3[COMMON] unsigned char 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  ep              1    8[COMMON] unsigned char 
  7544 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  7545 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  2    0[COMMON] PTR void 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;Total ram usage:       11 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		i1_CDCInitEP
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function i1_USBTransferOnePacket
  7570  0753                     i1_USBTransferOnePacket:	
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  7574                           ;i1USBTransferOnePacket@ep stored from wreg
  7575  0753  00F8               	movwf	i1USBTransferOnePacket@ep
  7576                           
  7577                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7578                           ;usb_device.c: 1000: if(dir != 0)
  7579  0754  0870               	movf	i1USBTransferOnePacket@dir,w
  7580  0755  1903               	btfsc	3,2
  7581  0756  2F60               	goto	i1l2509
  7582                           
  7583                           ;usb_device.c: 1001: {
  7584                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7585  0757  3578               	lslf	i1USBTransferOnePacket@ep,w
  7586  0758  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7587  0759  0086               	movwf	6
  7588  075A  3001               	movlw	1	; select bank3/4
  7589  075B  0087               	movwf	7
  7590  075C  3F40               	moviw [0]fsr1
  7591  075D  00F9               	movwf	i1USBTransferOnePacket@handle
  7592  075E  3F41               	moviw [1]fsr1
  7593  075F  2F68               	goto	L11
  7594  0760                     i1l2509:	
  7595                           ;usb_device.c: 1004: }
  7596                           
  7597                           
  7598                           ;usb_device.c: 1005: else
  7599                           ;usb_device.c: 1006: {
  7600                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7601  0760  3578               	lslf	i1USBTransferOnePacket@ep,w
  7602  0761  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7603  0762  0086               	movwf	6
  7604  0763  3001               	movlw	1	; select bank3/4
  7605  0764  0087               	movwf	7
  7606  0765  3F40               	moviw [0]fsr1
  7607  0766  00F9               	movwf	i1USBTransferOnePacket@handle
  7608  0767  3F41               	moviw [1]fsr1
  7609  0768                     L11:	
  7610  0768  00FA               	movwf	i1USBTransferOnePacket@handle+1
  7611                           
  7612                           ;usb_device.c: 1009: }
  7613                           ;usb_device.c: 1013: if(handle == 0)
  7614  0769  0879               	movf	i1USBTransferOnePacket@handle,w
  7615  076A  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  7616  076B  1D03               	btfss	3,2
  7617  076C  2F70               	goto	i1l2517
  7618                           
  7619                           ;usb_device.c: 1014: {
  7620                           ;usb_device.c: 1015: return 0;
  7621  076D  01F0               	clrf	?i1_USBTransferOnePacket
  7622  076E  01F1               	clrf	?i1_USBTransferOnePacket+1
  7623  076F  0008               	return
  7624  0770                     i1l2517:	
  7625                           
  7626                           ;usb_device.c: 1016: }
  7627                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  7628  0770  30FF               	movlw	255
  7629  0771  0571               	andwf	i1USBTransferOnePacket@data,w
  7630  0772  00F4               	movwf	??i1_USBTransferOnePacket
  7631  0773  307F               	movlw	127
  7632  0774  0572               	andwf	i1USBTransferOnePacket@data+1,w
  7633  0775  00F5               	movwf	??i1_USBTransferOnePacket+1
  7634  0776  0879               	movf	i1USBTransferOnePacket@handle,w
  7635  0777  0086               	movwf	6
  7636  0778  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7637  0779  0087               	movwf	7
  7638  077A  3142               	addfsr 1,2
  7639  077B  0874               	movf	??i1_USBTransferOnePacket,w
  7640  077C  3FC0               	movwi [0]fsr1
  7641  077D  0875               	movf	??i1_USBTransferOnePacket+1,w
  7642  077E  3FC1               	movwi [1]fsr1
  7643                           
  7644                           ;usb_device.c: 1030: handle->CNT = len;
  7645  077F  0879               	movf	i1USBTransferOnePacket@handle,w
  7646  0780  3E01               	addlw	1
  7647  0781  00F4               	movwf	??i1_USBTransferOnePacket
  7648  0782  3000               	movlw	0
  7649  0783  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  7650  0784  00F5               	movwf	??i1_USBTransferOnePacket+1
  7651  0785  0874               	movf	??i1_USBTransferOnePacket,w
  7652  0786  0086               	movwf	6
  7653  0787  0875               	movf	??i1_USBTransferOnePacket+1,w
  7654  0788  0087               	movwf	7
  7655  0789  0873               	movf	i1USBTransferOnePacket@len,w
  7656  078A  0081               	movwf	1
  7657                           
  7658                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  7659  078B  3040               	movlw	64
  7660  078C  00F4               	movwf	??i1_USBTransferOnePacket
  7661  078D  0879               	movf	i1USBTransferOnePacket@handle,w
  7662  078E  0086               	movwf	6
  7663  078F  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7664  0790  0087               	movwf	7
  7665  0791  0874               	movf	??i1_USBTransferOnePacket,w
  7666  0792  0581               	andwf	1,f
  7667                           
  7668                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  7669  0793  0879               	movf	i1USBTransferOnePacket@handle,w
  7670  0794  0086               	movwf	6
  7671  0795  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7672  0796  0087               	movwf	7
  7673  0797  1581               	bsf	1,3
  7674                           
  7675                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  7676  0798  0879               	movf	i1USBTransferOnePacket@handle,w
  7677  0799  0086               	movwf	6
  7678  079A  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7679  079B  0087               	movwf	7
  7680  079C  1781               	bsf	1,7
  7681                           
  7682                           ;usb_device.c: 1036: if(dir != 0)
  7683  079D  0870               	movf	i1USBTransferOnePacket@dir,w
  7684  079E  1903               	btfsc	3,2
  7685  079F  2FB9               	goto	i1l2527
  7686                           
  7687                           ;usb_device.c: 1037: {
  7688                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  7689  07A0  3578               	lslf	i1USBTransferOnePacket@ep,w
  7690  07A1  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7691  07A2  0086               	movwf	6
  7692  07A3  3001               	movlw	1	; select bank3/4
  7693  07A4  0087               	movwf	7
  7694  07A5  3F40               	moviw [0]fsr1
  7695  07A6  00F4               	movwf	??i1_USBTransferOnePacket
  7696  07A7  3F41               	moviw [1]fsr1
  7697  07A8  00F5               	movwf	??i1_USBTransferOnePacket+1
  7698  07A9  3004               	movlw	4
  7699  07AA  0674               	xorwf	??i1_USBTransferOnePacket,w
  7700  07AB  00F6               	movwf	??i1_USBTransferOnePacket+2
  7701  07AC  3000               	movlw	0
  7702  07AD  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  7703  07AE  00F7               	movwf	??i1_USBTransferOnePacket+3
  7704  07AF  3578               	lslf	i1USBTransferOnePacket@ep,w
  7705  07B0  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7706  07B1  0086               	movwf	6
  7707  07B2  3001               	movlw	1	; select bank3/4
  7708  07B3  0087               	movwf	7
  7709  07B4  0876               	movf	??i1_USBTransferOnePacket+2,w
  7710  07B5  3FC0               	movwi [0]fsr1
  7711  07B6  0877               	movf	??i1_USBTransferOnePacket+3,w
  7712  07B7  3FC1               	movwi [1]fsr1
  7713                           
  7714                           ;usb_device.c: 1040: }
  7715  07B8  2FD1               	goto	i1l2529
  7716  07B9                     i1l2527:	
  7717                           
  7718                           ;usb_device.c: 1041: else
  7719                           ;usb_device.c: 1042: {
  7720                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  7721  07B9  3578               	lslf	i1USBTransferOnePacket@ep,w
  7722  07BA  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7723  07BB  0086               	movwf	6
  7724  07BC  3001               	movlw	1	; select bank3/4
  7725  07BD  0087               	movwf	7
  7726  07BE  3F40               	moviw [0]fsr1
  7727  07BF  00F4               	movwf	??i1_USBTransferOnePacket
  7728  07C0  3F41               	moviw [1]fsr1
  7729  07C1  00F5               	movwf	??i1_USBTransferOnePacket+1
  7730  07C2  3004               	movlw	4
  7731  07C3  0674               	xorwf	??i1_USBTransferOnePacket,w
  7732  07C4  00F6               	movwf	??i1_USBTransferOnePacket+2
  7733  07C5  3000               	movlw	0
  7734  07C6  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  7735  07C7  00F7               	movwf	??i1_USBTransferOnePacket+3
  7736  07C8  3578               	lslf	i1USBTransferOnePacket@ep,w
  7737  07C9  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7738  07CA  0086               	movwf	6
  7739  07CB  3001               	movlw	1	; select bank3/4
  7740  07CC  0087               	movwf	7
  7741  07CD  0876               	movf	??i1_USBTransferOnePacket+2,w
  7742  07CE  3FC0               	movwi [0]fsr1
  7743  07CF  0877               	movf	??i1_USBTransferOnePacket+3,w
  7744  07D0  3FC1               	movwi [1]fsr1
  7745  07D1                     i1l2529:	
  7746                           
  7747                           ;usb_device.c: 1045: }
  7748                           ;usb_device.c: 1046: return (void*)handle;
  7749  07D1  087A               	movf	i1USBTransferOnePacket@handle+1,w
  7750  07D2  00F1               	movwf	?i1_USBTransferOnePacket+1
  7751  07D3  0879               	movf	i1USBTransferOnePacket@handle,w
  7752  07D4  00F0               	movwf	?i1_USBTransferOnePacket
  7753  07D5  0008               	return
  7754  07D6                     __end_ofi1_USBTransferOnePacket:	
  7755                           
  7756                           	psect	text31
  7757  09F8                     __ptext31:	
  7758 ;; *************** function i1_USBEnableEndpoint *****************
  7759 ;; Defined at:
  7760 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  ep              1    wreg     unsigned char 
  7763 ;;  options         1    7[COMMON] unsigned char 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  ep              1   12[COMMON] unsigned char 
  7766 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
  7767 ;;		 -> UEP0(1), 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7777 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;Total ram usage:        6 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    1
  7784 ;; This function calls:
  7785 ;;		i1_USBConfigureEndpoint
  7786 ;; This function is called by:
  7787 ;;		i1_CDCInitEP
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function i1_USBEnableEndpoint
  7793  09F8                     i1_USBEnableEndpoint:	
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7797                           ;i1USBEnableEndpoint@ep stored from wreg
  7798  09F8  00FC               	movwf	i1USBEnableEndpoint@ep
  7799                           
  7800                           ;usb_device.c: 880: unsigned char* p;
  7801                           ;usb_device.c: 884: if(options & 0x04)
  7802  09F9  1D77               	btfss	i1USBEnableEndpoint@options,2
  7803  09FA  2A00               	goto	i1l2497
  7804                           
  7805                           ;usb_device.c: 885: {
  7806                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  7807  09FB  01F0               	clrf	i1USBConfigureEndpoint@direction
  7808  09FC  087C               	movf	i1USBEnableEndpoint@ep,w
  7809  09FD  318B  233E  3189   	fcall	i1_USBConfigureEndpoint
  7810  0A00                     i1l2497:	
  7811                           
  7812                           ;usb_device.c: 887: }
  7813                           ;usb_device.c: 888: if(options & 0x02)
  7814  0A00  1CF7               	btfss	i1USBEnableEndpoint@options,1
  7815  0A01  2A07               	goto	i1l2501
  7816                           
  7817                           ;usb_device.c: 889: {
  7818                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  7819  0A02  01F0               	clrf	i1USBConfigureEndpoint@direction
  7820  0A03  0AF0               	incf	i1USBConfigureEndpoint@direction,f
  7821  0A04  087C               	movf	i1USBEnableEndpoint@ep,w
  7822  0A05  318B  233E         	fcall	i1_USBConfigureEndpoint
  7823  0A07                     i1l2501:	
  7824                           
  7825                           ;usb_device.c: 891: }
  7826                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  7827  0A07  087C               	movf	i1USBEnableEndpoint@ep,w
  7828  0A08  3E98               	addlw	152
  7829  0A09  00F8               	movwf	??i1_USBEnableEndpoint
  7830  0A0A  01F9               	clrf	??i1_USBEnableEndpoint+1
  7831  0A0B  300E               	movlw	14
  7832  0A0C  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
  7833  0A0D  0878               	movf	??i1_USBEnableEndpoint,w
  7834  0A0E  00FA               	movwf	i1USBEnableEndpoint@p
  7835  0A0F  0879               	movf	??i1_USBEnableEndpoint+1,w
  7836  0A10  00FB               	movwf	i1USBEnableEndpoint@p+1
  7837                           
  7838                           ;usb_device.c: 901: *p = options;
  7839  0A11  087A               	movf	i1USBEnableEndpoint@p,w
  7840  0A12  0086               	movwf	6
  7841  0A13  087B               	movf	i1USBEnableEndpoint@p+1,w
  7842  0A14  0087               	movwf	7
  7843  0A15  0877               	movf	i1USBEnableEndpoint@options,w
  7844  0A16  0081               	movwf	1
  7845  0A17  0008               	return
  7846  0A18                     __end_ofi1_USBEnableEndpoint:	
  7847                           
  7848                           	psect	text32
  7849  0B3E                     __ptext32:	
  7850 ;; *************** function i1_USBConfigureEndpoint *****************
  7851 ;; Defined at:
  7852 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  EPNum           1    wreg     unsigned char 
  7855 ;;  direction       1    0[COMMON] unsigned char 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  EPNum           1    5[COMMON] unsigned char 
  7858 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
  7859 ;;		 -> BDT(48), 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      void 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7869 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;Total ram usage:        7 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		i1_USBEnableEndpoint
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function i1_USBConfigureEndpoint
  7884  0B3E                     i1_USBConfigureEndpoint:	
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7888                           ;i1USBConfigureEndpoint@EPNum stored from wreg
  7889  0B3E  00F5               	movwf	i1USBConfigureEndpoint@EPNum
  7890                           
  7891                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  7892                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  7893  0B3F  3020               	movlw	32
  7894  0B40  00F1               	movwf	??i1_USBConfigureEndpoint
  7895  0B41  0871               	movf	??i1_USBConfigureEndpoint,w
  7896  0B42  00F6               	movwf	i1USBConfigureEndpoint@handle
  7897                           
  7898                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  7899  0B43  0870               	movf	i1USBConfigureEndpoint@direction,w
  7900  0B44  00F1               	movwf	??i1_USBConfigureEndpoint
  7901  0B45  3001               	movlw	1
  7902  0B46                     u179_25:	
  7903  0B46  35F1               	lslf	??i1_USBConfigureEndpoint,f
  7904  0B47  0B89               	decfsz	9,f
  7905  0B48  2B46               	goto	u179_25
  7906  0B49  0875               	movf	i1USBConfigureEndpoint@EPNum,w
  7907  0B4A  00F2               	movwf	??i1_USBConfigureEndpoint+1
  7908  0B4B  3001               	movlw	1
  7909  0B4C                     u180_25:	
  7910  0B4C  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
  7911  0B4D  3EFF               	addlw	-1
  7912  0B4E  1D03               	skipz
  7913  0B4F  2B4C               	goto	u180_25
  7914  0B50  3572               	lslf	??i1_USBConfigureEndpoint+1,w
  7915  0B51  0771               	addwf	??i1_USBConfigureEndpoint,w
  7916  0B52  00F3               	movwf	??i1_USBConfigureEndpoint+2
  7917  0B53  3001               	movlw	1
  7918  0B54                     u181_25:	
  7919  0B54  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
  7920  0B55  3EFF               	addlw	-1
  7921  0B56  1D03               	skipz
  7922  0B57  2B54               	goto	u181_25
  7923  0B58  3573               	lslf	??i1_USBConfigureEndpoint+2,w
  7924  0B59  00F4               	movwf	??i1_USBConfigureEndpoint+3
  7925  0B5A  0874               	movf	??i1_USBConfigureEndpoint+3,w
  7926  0B5B  07F6               	addwf	i1USBConfigureEndpoint@handle,f
  7927                           
  7928                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  7929  0B5C  0876               	movf	i1USBConfigureEndpoint@handle,w
  7930  0B5D  0086               	movwf	6
  7931  0B5E  0187               	clrf	7
  7932  0B5F  1381               	bcf	1,7
  7933                           
  7934                           ;usb_device.c: 1557: if(direction == 0)
  7935  0B60  0870               	movf	i1USBConfigureEndpoint@direction,w
  7936  0B61  1D03               	btfss	3,2
  7937  0B62  2B6D               	goto	i1l2487
  7938                           
  7939                           ;usb_device.c: 1558: {
  7940                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  7941  0B63  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  7942  0B64  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7943  0B65  0086               	movwf	6
  7944  0B66  3001               	movlw	1	; select bank3/4
  7945  0B67  0087               	movwf	7
  7946  0B68  0876               	movf	i1USBConfigureEndpoint@handle,w
  7947  0B69  3FC0               	movwi [0]fsr1
  7948  0B6A  3000               	movlw	0
  7949  0B6B  3FC1               	movwi [1]fsr1
  7950                           
  7951                           ;usb_device.c: 1560: }
  7952  0B6C  2B76               	goto	i1l2489
  7953  0B6D                     i1l2487:	
  7954                           
  7955                           ;usb_device.c: 1561: else
  7956                           ;usb_device.c: 1562: {
  7957                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  7958  0B6D  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  7959  0B6E  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7960  0B6F  0086               	movwf	6
  7961  0B70  3001               	movlw	1	; select bank3/4
  7962  0B71  0087               	movwf	7
  7963  0B72  0876               	movf	i1USBConfigureEndpoint@handle,w
  7964  0B73  3FC0               	movwi [0]fsr1
  7965  0B74  3000               	movlw	0
  7966  0B75  3FC1               	movwi [1]fsr1
  7967  0B76                     i1l2489:	
  7968                           
  7969                           ;usb_device.c: 1564: }
  7970                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  7971  0B76  0876               	movf	i1USBConfigureEndpoint@handle,w
  7972  0B77  0086               	movwf	6
  7973  0B78  0187               	clrf	7
  7974  0B79  1301               	bcf	1,6
  7975                           
  7976                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  7977  0B7A  0876               	movf	i1USBConfigureEndpoint@handle,w
  7978  0B7B  3E04               	addlw	4
  7979  0B7C  0086               	movwf	6
  7980  0B7D  0187               	clrf	7
  7981  0B7E  1701               	bsf	1,6
  7982  0B7F  0008               	return
  7983  0B80                     __end_ofi1_USBConfigureEndpoint:	
  7984                           
  7985                           	psect	text33
  7986  0D79                     __ptext33:	
  7987 ;; *************** function _USBCheckCDCRequest *****************
  7988 ;; Defined at:
  7989 ;;		line 147 in file "../lib/usb/src/usb_device_cdc.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;		None
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  1    wreg      void 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;Total ram usage:        1 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           
  8017                           ;psect for function _USBCheckCDCRequest
  8018  0D79                     _USBCheckCDCRequest:	
  8019                           
  8020                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8021                           
  8022                           ;incstack = 0
  8023                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  8024  0D79  0020               	movlb	0	; select bank0
  8025  0D7A  0850               	movf	80,w	;volatile
  8026  0D7B  391F               	andlw	31
  8027  0D7C  3A01               	xorlw	1
  8028  0D7D  1D03               	btfss	3,2
  8029  0D7E  0008               	return
  8030                           
  8031                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8032  0D7F  0E50               	swapf	80,w	;volatile
  8033  0D80  0C89               	rrf	9,f
  8034  0D81  3903               	andlw	3
  8035  0D82  3A01               	xorlw	1
  8036  0D83  1D03               	btfss	3,2
  8037  0D84  0008               	return
  8038                           
  8039                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8040                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8041  0D85  0854               	movf	84,w	;volatile
  8042  0D86  1903               	btfsc	3,2
  8043  0D87  2DC5               	goto	i1l2577
  8044  0D88  0354               	decf	84,w	;volatile
  8045  0D89  1D03               	btfss	3,2
  8046  0D8A  0008               	return
  8047  0D8B  2DC5               	goto	i1l2577
  8048  0D8C                     i1l2547:	
  8049                           ;usb_device_cdc.c: 167: {
  8050                           ;usb_device_cdc.c: 169: case 0x00:
  8051                           
  8052                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
  8053                           
  8054                           
  8055                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8056  0D8C  302A               	movlw	low _dummy_encapsulated_cmd_response
  8057  0D8D  0023               	movlb	3	; select bank3
  8058  0D8E  00B3               	movwf	_inPipes^(0+384)	;volatile
  8059  0D8F  3002               	movlw	high _dummy_encapsulated_cmd_response
  8060  0D90  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8061                           
  8062                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8063  0D91  3000               	movlw	0
  8064  0D92  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8065  0D93  3008               	movlw	8
  8066  0D94  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8067                           
  8068                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8069  0D95  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  8070                           
  8071                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8072  0D96  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8073                           
  8074                           ;usb_device_cdc.c: 175: break;
  8075  0D97  0008               	return
  8076  0D98                     i1l2555:	
  8077                           ;usb_device_cdc.c: 176: case 0x01:
  8078                           
  8079                           
  8080                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8081  0D98  302A               	movlw	low _dummy_encapsulated_cmd_response
  8082  0D99  0023               	movlb	3	; select bank3
  8083  0D9A  00B3               	movwf	_inPipes^(0+384)	;volatile
  8084  0D9B  3002               	movlw	high _dummy_encapsulated_cmd_response
  8085  0D9C  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8086                           
  8087                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8088  0D9D  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8089                           
  8090                           ;usb_device_cdc.c: 180: break;
  8091  0D9E  0008               	return
  8092  0D9F                     i1l2559:	
  8093                           ;usb_device_cdc.c: 184: case 0x20:
  8094                           
  8095                           
  8096                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8097  0D9F  0020               	movlb	0	; select bank0
  8098  0DA0  0857               	movf	87,w	;volatile
  8099  0DA1  0023               	movlb	3	; select bank3
  8100  0DA2  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  8101  0DA3  0020               	movlb	0	; select bank0
  8102  0DA4  0856               	movf	86,w	;volatile
  8103  0DA5  0023               	movlb	3	; select bank3
  8104  0DA6  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  8105                           
  8106                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8107  0DA7  30DF               	movlw	(low (_line_coding| (0+256)))& (0+255)
  8108  0DA8  00F0               	movwf	??_USBCheckCDCRequest
  8109  0DA9  0870               	movf	??_USBCheckCDCRequest,w
  8110  0DAA  00A0               	movwf	_outPipes^(0+384)	;volatile
  8111                           
  8112                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8113  0DAB  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  8114  0DAC  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  8115                           
  8116                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8117  0DAD  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  8118                           
  8119                           ;usb_device_cdc.c: 189: break;
  8120  0DAE  0008               	return
  8121  0DAF                     i1l2565:	
  8122                           ;usb_device_cdc.c: 191: case 0x21:
  8123                           
  8124                           
  8125                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8126  0DAF  30DF               	movlw	low _line_coding
  8127  0DB0  0023               	movlb	3	; select bank3
  8128  0DB1  00B3               	movwf	_inPipes^(0+384)	;volatile
  8129  0DB2  3001               	movlw	high _line_coding
  8130  0DB3  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8131  0DB4  3000               	movlw	0
  8132  0DB5  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8133  0DB6  3007               	movlw	7
  8134  0DB7  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8135  0DB8  30C1               	movlw	193
  8136  0DB9  00F0               	movwf	??_USBCheckCDCRequest
  8137  0DBA  0870               	movf	??_USBCheckCDCRequest,w
  8138  0DBB  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  8139                           
  8140                           ;usb_device_cdc.c: 196: break;
  8141  0DBC  0008               	return
  8142  0DBD                     i1l2571:	
  8143                           ;usb_device_cdc.c: 198: case 0x22:
  8144                           
  8145                           
  8146                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8147  0DBD  0020               	movlb	0	; select bank0
  8148  0DBE  0852               	movf	82,w	;volatile
  8149  0DBF  00F0               	movwf	??_USBCheckCDCRequest
  8150  0DC0  0870               	movf	??_USBCheckCDCRequest,w
  8151  0DC1  0023               	movlb	3	; select bank3
  8152  0DC2  00CE               	movwf	_control_signal_bitmap^(0+384)
  8153                           
  8154                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8155  0DC3  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8156                           
  8157                           ;usb_device_cdc.c: 258: }
  8158                           
  8159                           ;usb_device_cdc.c: 257: break;
  8160                           
  8161                           ;usb_device_cdc.c: 256: default:
  8162                           
  8163                           ;usb_device_cdc.c: 232: break;
  8164  0DC4  0008               	return
  8165  0DC5                     i1l2577:	
  8166  0DC5  0020               	movlb	0	; select bank0
  8167  0DC6  0851               	movf	81,w	;volatile
  8168                           
  8169                           ; Switch size 1, requested type "space"
  8170                           ; Number of cases is 5, Range of values is 0 to 34
  8171                           ; switch strategies available:
  8172                           ; Name         Instructions Cycles
  8173                           ; simple_byte           16     9 (average)
  8174                           ; direct_byte           76     6 (fixed)
  8175                           ; jumptable            260     6 (fixed)
  8176                           ;	Chosen strategy is simple_byte
  8177  0DC7  3A00               	xorlw	0	; case 0
  8178  0DC8  1903               	skipnz
  8179  0DC9  2D8C               	goto	i1l2547
  8180  0DCA  3A01               	xorlw	1	; case 1
  8181  0DCB  1903               	skipnz
  8182  0DCC  2D98               	goto	i1l2555
  8183  0DCD  3A21               	xorlw	33	; case 32
  8184  0DCE  1903               	skipnz
  8185  0DCF  2D9F               	goto	i1l2559
  8186  0DD0  3A01               	xorlw	1	; case 33
  8187  0DD1  1903               	skipnz
  8188  0DD2  2DAF               	goto	i1l2565
  8189  0DD3  3A03               	xorlw	3	; case 34
  8190  0DD4  1903               	skipnz
  8191  0DD5  2DBD               	goto	i1l2571
  8192  0DD6  2DD7               	goto	i1l479
  8193  0DD7                     i1l479:	
  8194  0DD7  0008               	return
  8195  0DD8                     __end_of_USBCheckCDCRequest:	
  8196                           
  8197                           	psect	text34
  8198  0A91                     __ptext34:	
  8199 ;; *************** function _USBCtrlTrfOutHandler *****************
  8200 ;; Defined at:
  8201 ;;		line 2538 in file "../lib/usb/src/usb_device.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;Total ram usage:        2 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    2
  8222 ;; This function calls:
  8223 ;;		_USBCtrlTrfRxService
  8224 ;; This function is called by:
  8225 ;;		_USBCtrlEPService
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function _USBCtrlTrfOutHandler
  8231  0A91                     _USBCtrlTrfOutHandler:	
  8232                           
  8233                           ;usb_device.c: 2540: if(controlTransferState == 2)
  8234                           
  8235                           ;incstack = 0
  8236                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8237  0A91  3002               	movlw	2
  8238  0A92  0021               	movlb	1	; select bank1
  8239  0A93  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  8240  0A94  1D03               	btfss	3,2
  8241  0A95  2A99               	goto	i1l3117
  8242                           
  8243                           ;usb_device.c: 2541: {
  8244                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  8245  0A96  3184  2481         	fcall	_USBCtrlTrfRxService
  8246                           
  8247                           ;usb_device.c: 2543: }
  8248  0A98  0008               	return
  8249  0A99                     i1l3117:	
  8250                           
  8251                           ;usb_device.c: 2544: else
  8252                           ;usb_device.c: 2545: {
  8253                           ;usb_device.c: 2548: controlTransferState = 0;
  8254  0A99  0021               	movlb	1	; select bank1
  8255  0A9A  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  8256                           
  8257                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  8258  0A9B  0023               	movlb	3	; select bank3
  8259  0A9C  0859               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  8260  0A9D  1D03               	btfss	3,2
  8261  0A9E  2AC5               	goto	i1l3129
  8262                           
  8263                           ;usb_device.c: 2556: {
  8264                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  8265  0A9F  0021               	movlb	1	; select bank1
  8266  0AA0  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8267  0AA1  3E01               	addlw	1
  8268  0AA2  00F6               	movwf	??_USBCtrlTrfOutHandler
  8269  0AA3  3000               	movlw	0
  8270  0AA4  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8271  0AA5  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8272  0AA6  0876               	movf	??_USBCtrlTrfOutHandler,w
  8273  0AA7  0086               	movwf	6
  8274  0AA8  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8275  0AA9  0087               	movwf	7
  8276  0AAA  3008               	movlw	8
  8277  0AAB  0081               	movwf	1
  8278                           
  8279                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8280  0AAC  3050               	movlw	80
  8281  0AAD  00F6               	movwf	??_USBCtrlTrfOutHandler
  8282  0AAE  3000               	movlw	0
  8283  0AAF  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8284  0AB0  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8285  0AB1  0086               	movwf	6
  8286  0AB2  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8287  0AB3  0087               	movwf	7
  8288  0AB4  3142               	addfsr 1,2
  8289  0AB5  0876               	movf	??_USBCtrlTrfOutHandler,w
  8290  0AB6  3FC0               	movwi [0]fsr1
  8291  0AB7  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8292  0AB8  3FC1               	movwi [1]fsr1
  8293                           
  8294                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8295  0AB9  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8296  0ABA  0086               	movwf	6
  8297  0ABB  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8298  0ABC  0087               	movwf	7
  8299  0ABD  300C               	movlw	12
  8300  0ABE  0081               	movwf	1
  8301                           
  8302                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8303  0ABF  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8304  0AC0  0086               	movwf	6
  8305  0AC1  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8306  0AC2  0087               	movwf	7
  8307  0AC3  1781               	bsf	1,7
  8308                           
  8309                           ;usb_device.c: 2561: }
  8310  0AC4  0008               	return
  8311  0AC5                     i1l3129:	
  8312                           
  8313                           ;usb_device.c: 2562: else
  8314                           ;usb_device.c: 2563: {
  8315                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  8316  0AC5  0023               	movlb	3	; select bank3
  8317  0AC6  01D9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8318  0AC7  0008               	return
  8319  0AC8                     __end_of_USBCtrlTrfOutHandler:	
  8320                           
  8321                           	psect	text35
  8322  0481                     __ptext35:	
  8323 ;; *************** function _USBCtrlTrfRxService *****************
  8324 ;; Defined at:
  8325 ;;		line 1852 in file "../lib/usb/src/usb_device.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;		None
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  byteToRead      1    5[COMMON] unsigned char 
  8330 ;;  i               1    4[COMMON] unsigned char 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;Total ram usage:        4 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:    1
  8347 ;; This function calls:
  8348 ;;		_USBCtrlEPAllowStatusStage
  8349 ;; This function is called by:
  8350 ;;		_USBCtrlTrfOutHandler
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           
  8355                           ;psect for function _USBCtrlTrfRxService
  8356  0481                     _USBCtrlTrfRxService:	
  8357                           
  8358                           ;usb_device.c: 1854: uint8_t byteToRead;
  8359                           ;usb_device.c: 1855: uint8_t i;
  8360                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8361                           
  8362                           ;incstack = 0
  8363                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8364  0481  0021               	movlb	1	; select bank1
  8365  0482  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8366  0483  0086               	movwf	6
  8367  0484  0187               	clrf	7
  8368  0485  3F41               	moviw [1]fsr1
  8369  0486  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8370                           
  8371                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8372  0487  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8373  0488  00F2               	movwf	??_USBCtrlTrfRxService
  8374  0489  01F3               	clrf	??_USBCtrlTrfRxService+1
  8375  048A  0873               	movf	??_USBCtrlTrfRxService+1,w
  8376  048B  0023               	movlb	3	; select bank3
  8377  048C  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8378  048D  1D03               	skipz
  8379  048E  2C91               	goto	u243_25
  8380  048F  0872               	movf	??_USBCtrlTrfRxService,w
  8381  0490  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  8382  0491                     u243_25:	
  8383  0491  1803               	skipnc
  8384  0492  2C97               	goto	i1l286
  8385                           
  8386                           ;usb_device.c: 1866: {
  8387                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8388  0493  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8389  0494  00F2               	movwf	??_USBCtrlTrfRxService
  8390  0495  0872               	movf	??_USBCtrlTrfRxService,w
  8391  0496  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8392  0497                     i1l286:	
  8393                           
  8394                           ;usb_device.c: 1868: }
  8395                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8396  0497  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8397  0498  00F2               	movwf	??_USBCtrlTrfRxService
  8398  0499  01F3               	clrf	??_USBCtrlTrfRxService+1
  8399  049A  0872               	movf	??_USBCtrlTrfRxService,w
  8400  049B  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  8401  049C  0873               	movf	??_USBCtrlTrfRxService+1,w
  8402  049D  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  8403                           
  8404                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8405  049E  01F4               	clrf	USBCtrlTrfRxService@i
  8406  049F                     i1l3001:	
  8407  049F  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8408  04A0  0274               	subwf	USBCtrlTrfRxService@i,w
  8409  04A1  1803               	btfsc	3,0
  8410  04A2  2CB8               	goto	i1l3003
  8411                           
  8412                           ;usb_device.c: 1875: {
  8413                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8414  04A3  0874               	movf	USBCtrlTrfRxService@i,w
  8415  04A4  3E58               	addlw	88
  8416  04A5  0086               	movwf	6
  8417  04A6  0187               	clrf	7
  8418  04A7  0801               	movf	1,w
  8419  04A8  00F2               	movwf	??_USBCtrlTrfRxService
  8420  04A9  0820               	movf	_outPipes^(0+384),w	;volatile
  8421  04AA  0086               	movwf	6
  8422  04AB  3001               	movlw	1	; select bank2/3
  8423  04AC  0087               	movwf	7
  8424  04AD  0872               	movf	??_USBCtrlTrfRxService,w
  8425  04AE  0081               	movwf	1
  8426  04AF  3001               	movlw	1
  8427  04B0  00F2               	movwf	??_USBCtrlTrfRxService
  8428  04B1  0872               	movf	??_USBCtrlTrfRxService,w
  8429  04B2  07A0               	addwf	_outPipes^(0+384),f	;volatile
  8430  04B3  3001               	movlw	1
  8431  04B4  00F2               	movwf	??_USBCtrlTrfRxService
  8432  04B5  0872               	movf	??_USBCtrlTrfRxService,w
  8433  04B6  07F4               	addwf	USBCtrlTrfRxService@i,f
  8434  04B7  2C9F               	goto	i1l3001
  8435  04B8                     i1l3003:	
  8436                           
  8437                           ;usb_device.c: 1877: }
  8438                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8439  04B8  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8440  04B9  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8441  04BA  1903               	btfsc	3,2
  8442  04BB  2CF3               	goto	i1l3015
  8443                           
  8444                           ;usb_device.c: 1882: {
  8445                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  8446  04BC  0021               	movlb	1	; select bank1
  8447  04BD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8448  04BE  3E01               	addlw	1
  8449  04BF  00F2               	movwf	??_USBCtrlTrfRxService
  8450  04C0  3000               	movlw	0
  8451  04C1  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8452  04C2  00F3               	movwf	??_USBCtrlTrfRxService+1
  8453  04C3  0872               	movf	??_USBCtrlTrfRxService,w
  8454  04C4  0086               	movwf	6
  8455  04C5  0873               	movf	??_USBCtrlTrfRxService+1,w
  8456  04C6  0087               	movwf	7
  8457  04C7  3008               	movlw	8
  8458  04C8  0081               	movwf	1
  8459                           
  8460                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8461  04C9  3058               	movlw	88
  8462  04CA  00F2               	movwf	??_USBCtrlTrfRxService
  8463  04CB  3000               	movlw	0
  8464  04CC  00F3               	movwf	??_USBCtrlTrfRxService+1
  8465  04CD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8466  04CE  0086               	movwf	6
  8467  04CF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8468  04D0  0087               	movwf	7
  8469  04D1  3142               	addfsr 1,2
  8470  04D2  0872               	movf	??_USBCtrlTrfRxService,w
  8471  04D3  3FC0               	movwi [0]fsr1
  8472  04D4  0873               	movf	??_USBCtrlTrfRxService+1,w
  8473  04D5  3FC1               	movwi [1]fsr1
  8474                           
  8475                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8476  04D6  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8477  04D7  0086               	movwf	6
  8478  04D8  0187               	clrf	7
  8479  04D9  1B01               	btfsc	1,6
  8480  04DA  2CE7               	goto	i1l3013
  8481                           
  8482                           ;usb_device.c: 1886: {
  8483                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8484  04DB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8485  04DC  0086               	movwf	6
  8486  04DD  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8487  04DE  0087               	movwf	7
  8488  04DF  3048               	movlw	72
  8489  04E0  0081               	movwf	1
  8490                           
  8491                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8492  04E1  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8493  04E2  0086               	movwf	6
  8494  04E3  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8495  04E4  0087               	movwf	7
  8496  04E5  1781               	bsf	1,7
  8497                           
  8498                           ;usb_device.c: 1889: }
  8499  04E6  0008               	return
  8500  04E7                     i1l3013:	
  8501                           
  8502                           ;usb_device.c: 1890: else
  8503                           ;usb_device.c: 1891: {
  8504                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8505  04E7  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8506  04E8  0086               	movwf	6
  8507  04E9  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8508  04EA  0087               	movwf	7
  8509  04EB  3008               	movlw	8
  8510  04EC  0081               	movwf	1
  8511                           
  8512                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8513  04ED  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8514  04EE  0086               	movwf	6
  8515  04EF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8516  04F0  0087               	movwf	7
  8517  04F1  1781               	bsf	1,7
  8518                           
  8519                           ;usb_device.c: 1894: }
  8520                           ;usb_device.c: 1895: }
  8521  04F2  0008               	return
  8522  04F3                     i1l3015:	
  8523                           
  8524                           ;usb_device.c: 1896: else
  8525                           ;usb_device.c: 1897: {
  8526                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8527  04F3  0021               	movlb	1	; select bank1
  8528  04F4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8529  04F5  3E01               	addlw	1
  8530  04F6  00F2               	movwf	??_USBCtrlTrfRxService
  8531  04F7  3000               	movlw	0
  8532  04F8  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8533  04F9  00F3               	movwf	??_USBCtrlTrfRxService+1
  8534  04FA  0872               	movf	??_USBCtrlTrfRxService,w
  8535  04FB  0086               	movwf	6
  8536  04FC  0873               	movf	??_USBCtrlTrfRxService+1,w
  8537  04FD  0087               	movwf	7
  8538  04FE  3008               	movlw	8
  8539  04FF  0081               	movwf	1
  8540                           
  8541                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8542  0500  3050               	movlw	80
  8543  0501  00F2               	movwf	??_USBCtrlTrfRxService
  8544  0502  3000               	movlw	0
  8545  0503  00F3               	movwf	??_USBCtrlTrfRxService+1
  8546  0504  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8547  0505  0086               	movwf	6
  8548  0506  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8549  0507  0087               	movwf	7
  8550  0508  3142               	addfsr 1,2
  8551  0509  0872               	movf	??_USBCtrlTrfRxService,w
  8552  050A  3FC0               	movwi [0]fsr1
  8553  050B  0873               	movf	??_USBCtrlTrfRxService+1,w
  8554  050C  3FC1               	movwi [1]fsr1
  8555                           
  8556                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8557  050D  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8558  050E  0086               	movwf	6
  8559  050F  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8560  0510  0087               	movwf	7
  8561  0511  3004               	movlw	4
  8562  0512  0081               	movwf	1
  8563                           
  8564                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8565  0513  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8566  0514  0086               	movwf	6
  8567  0515  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8568  0516  0087               	movwf	7
  8569  0517  1781               	bsf	1,7
  8570                           
  8571                           ;usb_device.c: 1915: {
  8572                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8573  0518  0023               	movlb	3	; select bank3
  8574  0519  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8575  051A  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8576                           
  8577                           ;usb_device.c: 1926: }
  8578                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8579  051B  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8580                           
  8581                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8582  051C  0857               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  8583  051D  1D03               	btfss	3,2
  8584  051E  0008               	return
  8585                           
  8586                           ;usb_device.c: 1942: {
  8587                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8588  051F  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  8589  0521  0008               	return
  8590  0522                     __end_of_USBCtrlTrfRxService:	
  8591                           
  8592                           	psect	text36
  8593  0F0F                     __ptext36:	
  8594 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8595 ;; Defined at:
  8596 ;;		line 1416 in file "../lib/usb/src/usb_device.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;		None
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;		None
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  1    wreg      void 
  8603 ;; Registers used:
  8604 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;Total ram usage:        2 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; This function calls:
  8617 ;;		Nothing
  8618 ;; This function is called by:
  8619 ;;		_USBDeviceTasks
  8620 ;;		_USBCtrlEPServiceComplete
  8621 ;;		_USBCtrlTrfRxService
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _USBCtrlEPAllowStatusStage
  8627  0F0F                     _USBCtrlEPAllowStatusStage:	
  8628                           
  8629                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8633  0F0F  0023               	movlb	3	; select bank3
  8634  0F10  0856               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  8635  0F11  1D03               	btfss	3,2
  8636  0F12  0008               	return
  8637                           
  8638                           ;usb_device.c: 1424: {
  8639                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8640  0F13  3001               	movlw	1
  8641  0F14  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8642  0F15  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8643  0F16  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8644                           
  8645                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8646  0F17  0855               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  8647  0F18  1D03               	btfss	3,2
  8648  0F19  0008               	return
  8649                           
  8650                           ;usb_device.c: 1427: {
  8651                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8652  0F1A  3001               	movlw	1
  8653  0F1B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8654  0F1C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8655  0F1D  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8656                           
  8657                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8658  0F1E  3002               	movlw	2
  8659  0F1F  0021               	movlb	1	; select bank1
  8660  0F20  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  8661  0F21  1D03               	btfss	3,2
  8662  0F22  2F36               	goto	i1l2691
  8663                           
  8664                           ;usb_device.c: 1433: {
  8665                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8666  0F23  0023               	movlb	3	; select bank3
  8667  0F24  0827               	movf	_pBDTEntryIn^(0+384),w
  8668  0F25  0086               	movwf	6
  8669  0F26  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8670  0F27  0087               	movwf	7
  8671  0F28  3141               	addfsr 1,1
  8672  0F29  0181               	clrf	1
  8673                           
  8674                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8675  0F2A  0827               	movf	_pBDTEntryIn^(0+384),w
  8676  0F2B  0086               	movwf	6
  8677  0F2C  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8678  0F2D  0087               	movwf	7
  8679  0F2E  3048               	movlw	72
  8680  0F2F  0081               	movwf	1
  8681                           
  8682                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8683  0F30  0827               	movf	_pBDTEntryIn^(0+384),w
  8684  0F31  0086               	movwf	6
  8685  0F32  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8686  0F33  0087               	movwf	7
  8687  0F34  1781               	bsf	1,7
  8688                           
  8689                           ;usb_device.c: 1437: }
  8690  0F35  0008               	return
  8691  0F36                     i1l2691:	
  8692                           
  8693                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  8694  0F36  0021               	movlb	1	; select bank1
  8695  0F37  0363               	decf	_controlTransferState^(0+128),w	;volatile
  8696  0F38  1D03               	btfss	3,2
  8697  0F39  0008               	return
  8698                           
  8699                           ;usb_device.c: 1439: {
  8700                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  8701  0F3A  0023               	movlb	3	; select bank3
  8702  0F3B  01D9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8703                           
  8704                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  8705  0F3C  3008               	movlw	8
  8706  0F3D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8707  0F3E  0021               	movlb	1	; select bank1
  8708  0F3F  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  8709  0F40  0086               	movwf	6
  8710  0F41  0187               	clrf	7
  8711  0F42  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8712  0F43  0081               	movwf	1
  8713                           
  8714                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8715  0F44  3050               	movlw	80
  8716  0F45  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8717  0F46  3000               	movlw	0
  8718  0F47  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8719  0F48  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8720  0F49  3E02               	addlw	2
  8721  0F4A  0086               	movwf	6
  8722  0F4B  0187               	clrf	7
  8723  0F4C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8724  0F4D  3FC0               	movwi [0]fsr1
  8725  0F4E  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8726  0F4F  3FC1               	movwi [1]fsr1
  8727                           
  8728                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8729  0F50  3004               	movlw	4
  8730  0F51  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8731  0F52  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8732  0F53  0086               	movwf	6
  8733  0F54  0187               	clrf	7
  8734  0F55  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8735  0F56  0081               	movwf	1
  8736                           
  8737                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8738  0F57  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8739  0F58  0086               	movwf	6
  8740  0F59  0187               	clrf	7
  8741  0F5A  1781               	bsf	1,7
  8742                           
  8743                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  8744  0F5B  3001               	movlw	1
  8745  0F5C  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8746  0F5D  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8747  0F5E  0023               	movlb	3	; select bank3
  8748  0F5F  00D9               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8749                           
  8750                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  8751  0F60  0021               	movlb	1	; select bank1
  8752  0F61  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8753  0F62  3E01               	addlw	1
  8754  0F63  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8755  0F64  3000               	movlw	0
  8756  0F65  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8757  0F66  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8758  0F67  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8759  0F68  0086               	movwf	6
  8760  0F69  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8761  0F6A  0087               	movwf	7
  8762  0F6B  3008               	movlw	8
  8763  0F6C  0081               	movwf	1
  8764                           
  8765                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8766  0F6D  3050               	movlw	80
  8767  0F6E  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8768  0F6F  3000               	movlw	0
  8769  0F70  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8770  0F71  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8771  0F72  0086               	movwf	6
  8772  0F73  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8773  0F74  0087               	movwf	7
  8774  0F75  3142               	addfsr 1,2
  8775  0F76  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8776  0F77  3FC0               	movwi [0]fsr1
  8777  0F78  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8778  0F79  3FC1               	movwi [1]fsr1
  8779                           
  8780                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8781  0F7A  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8782  0F7B  0086               	movwf	6
  8783  0F7C  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8784  0F7D  0087               	movwf	7
  8785  0F7E  3080               	movlw	128
  8786  0F7F  0081               	movwf	1
  8787  0F80  0008               	return
  8788  0F81                     __end_of_USBCtrlEPAllowStatusStage:	
  8789                           
  8790                           	psect	text37
  8791  0EA2                     __ptext37:	
  8792 ;; *************** function _USBCtrlTrfInHandler *****************
  8793 ;; Defined at:
  8794 ;;		line 2592 in file "../lib/usb/src/usb_device.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  lastDTS         1    5[COMMON] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;Total ram usage:        3 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    1
  8815 ;; This function calls:
  8816 ;;		_USBCtrlTrfTxService
  8817 ;; This function is called by:
  8818 ;;		_USBCtrlEPService
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           
  8823                           ;psect for function _USBCtrlTrfInHandler
  8824  0EA2                     _USBCtrlTrfInHandler:	
  8825                           
  8826                           ;usb_device.c: 2594: uint8_t lastDTS;
  8827                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8828                           
  8829                           ;incstack = 0
  8830                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8831  0EA2  0023               	movlb	3	; select bank3
  8832  0EA3  0827               	movf	_pBDTEntryIn^(0+384),w
  8833  0EA4  0086               	movwf	6
  8834  0EA5  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8835  0EA6  0087               	movwf	7
  8836  0EA7  3000               	movlw	0
  8837  0EA8  1B01               	btfsc	1,6
  8838  0EA9  3001               	movlw	1
  8839  0EAA  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  8840                           
  8841                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  8842  0EAB  3004               	movlw	4
  8843  0EAC  0627               	xorwf	_pBDTEntryIn^(0+384),w
  8844  0EAD  00A7               	movwf	_pBDTEntryIn^(0+384)
  8845  0EAE  3000               	movlw	0
  8846  0EAF  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  8847  0EB0  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  8848                           
  8849                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  8850  0EB1  3008               	movlw	8
  8851  0EB2  0022               	movlb	2	; select bank2
  8852  0EB3  066F               	xorwf	_USBDeviceState^(0+256),w	;volatile
  8853  0EB4  1D03               	btfss	3,2
  8854  0EB5  2EC5               	goto	i1l3145
  8855                           
  8856                           ;usb_device.c: 2605: {
  8857                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  8858  0EB6  0020               	movlb	0	; select bank0
  8859  0EB7  0852               	movf	82,w	;volatile
  8860  0EB8  397F               	andlw	127
  8861  0EB9  003D               	movlb	29	; select bank29
  8862  0EBA  0096               	movwf	22	;volatile
  8863                           
  8864                           ;usb_device.c: 2607: if(UADDR != 0u)
  8865  0EBB  0816               	movf	22,w	;volatile
  8866  0EBC  1903               	btfsc	3,2
  8867  0EBD  2EC0               	goto	i1l3143
  8868                           
  8869                           ;usb_device.c: 2608: {
  8870                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  8871  0EBE  3010               	movlw	16
  8872  0EBF  2EC1               	goto	L12
  8873  0EC0                     i1l3143:	
  8874                           ;usb_device.c: 2610: }
  8875                           
  8876                           
  8877                           ;usb_device.c: 2611: else
  8878                           ;usb_device.c: 2612: {
  8879                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  8880  0EC0  3004               	movlw	4
  8881  0EC1                     L12:	
  8882  0EC1  00F3               	movwf	??_USBCtrlTrfInHandler
  8883  0EC2  0873               	movf	??_USBCtrlTrfInHandler,w
  8884  0EC3  0022               	movlb	2	; select bank2
  8885  0EC4  00EF               	movwf	_USBDeviceState^(0+256)	;volatile
  8886  0EC5                     i1l3145:	
  8887                           
  8888                           ;usb_device.c: 2614: }
  8889                           ;usb_device.c: 2615: }
  8890                           ;usb_device.c: 2618: if(controlTransferState == 1)
  8891  0EC5  0021               	movlb	1	; select bank1
  8892  0EC6  0363               	decf	_controlTransferState^(0+128),w	;volatile
  8893  0EC7  1D03               	btfss	3,2
  8894  0EC8  2F06               	goto	i1l371
  8895                           
  8896                           ;usb_device.c: 2619: {
  8897                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  8898  0EC9  3058               	movlw	88
  8899  0ECA  00F3               	movwf	??_USBCtrlTrfInHandler
  8900  0ECB  3000               	movlw	0
  8901  0ECC  00F4               	movwf	??_USBCtrlTrfInHandler+1
  8902  0ECD  0023               	movlb	3	; select bank3
  8903  0ECE  0827               	movf	_pBDTEntryIn^(0+384),w
  8904  0ECF  0086               	movwf	6
  8905  0ED0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8906  0ED1  0087               	movwf	7
  8907  0ED2  3142               	addfsr 1,2
  8908  0ED3  0873               	movf	??_USBCtrlTrfInHandler,w
  8909  0ED4  3FC0               	movwi [0]fsr1
  8910  0ED5  0874               	movf	??_USBCtrlTrfInHandler+1,w
  8911  0ED6  3FC1               	movwi [1]fsr1
  8912                           
  8913                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  8914  0ED7  318E  263A  318E   	fcall	_USBCtrlTrfTxService
  8915                           
  8916                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  8917  0EDA  3002               	movlw	2
  8918  0EDB  0023               	movlb	3	; select bank3
  8919  0EDC  065E               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  8920  0EDD  1D03               	btfss	3,2
  8921  0EDE  2EEB               	goto	i1l3155
  8922                           
  8923                           ;usb_device.c: 2628: {
  8924                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  8925  0EDF  0827               	movf	_pBDTEntryIn^(0+384),w
  8926  0EE0  0086               	movwf	6
  8927  0EE1  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8928  0EE2  0087               	movwf	7
  8929  0EE3  3004               	movlw	4
  8930  0EE4  0081               	movwf	1
  8931                           
  8932                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8933  0EE5  0827               	movf	_pBDTEntryIn^(0+384),w
  8934  0EE6  0086               	movwf	6
  8935  0EE7  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8936  0EE8  0087               	movwf	7
  8937  0EE9  1781               	bsf	1,7
  8938                           
  8939                           ;usb_device.c: 2633: }
  8940  0EEA  0008               	return
  8941  0EEB                     i1l3155:	
  8942                           
  8943                           ;usb_device.c: 2634: else
  8944                           ;usb_device.c: 2635: {
  8945                           ;usb_device.c: 2636: if(lastDTS == 0)
  8946  0EEB  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  8947  0EEC  1D03               	btfss	3,2
  8948  0EED  2EFA               	goto	i1l3159
  8949                           
  8950                           ;usb_device.c: 2637: {
  8951                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8952  0EEE  0827               	movf	_pBDTEntryIn^(0+384),w
  8953  0EEF  0086               	movwf	6
  8954  0EF0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8955  0EF1  0087               	movwf	7
  8956  0EF2  3048               	movlw	72
  8957  0EF3  0081               	movwf	1
  8958                           
  8959                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8960  0EF4  0827               	movf	_pBDTEntryIn^(0+384),w
  8961  0EF5  0086               	movwf	6
  8962  0EF6  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8963  0EF7  0087               	movwf	7
  8964  0EF8  1781               	bsf	1,7
  8965                           
  8966                           ;usb_device.c: 2640: }
  8967  0EF9  0008               	return
  8968  0EFA                     i1l3159:	
  8969                           
  8970                           ;usb_device.c: 2641: else
  8971                           ;usb_device.c: 2642: {
  8972                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  8973  0EFA  0827               	movf	_pBDTEntryIn^(0+384),w
  8974  0EFB  0086               	movwf	6
  8975  0EFC  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8976  0EFD  0087               	movwf	7
  8977  0EFE  3008               	movlw	8
  8978  0EFF  0081               	movwf	1
  8979                           
  8980                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8981  0F00  0827               	movf	_pBDTEntryIn^(0+384),w
  8982  0F01  0086               	movwf	6
  8983  0F02  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  8984  0F03  0087               	movwf	7
  8985  0F04  1781               	bsf	1,7
  8986                           
  8987                           ;usb_device.c: 2645: }
  8988                           ;usb_device.c: 2646: }
  8989                           ;usb_device.c: 2647: }
  8990  0F05  0008               	return
  8991  0F06                     i1l371:	
  8992                           
  8993                           ;usb_device.c: 2648: else
  8994                           ;usb_device.c: 2649: {
  8995                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  8996  0F06  0023               	movlb	3	; select bank3
  8997  0F07  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  8998  0F08  2F0C               	goto	i1l3163
  8999                           
  9000                           ;usb_device.c: 2656: {
  9001                           ;usb_device.c: 2657: outPipes[0].pFunc();
  9002  0F09  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9003  0F0A  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9004                           
  9005                           ;usb_device.c: 2658: }
  9006                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  9007  0F0B  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9008  0F0C                     i1l3163:	
  9009                           
  9010                           ;usb_device.c: 2660: }
  9011                           ;usb_device.c: 2662: controlTransferState = 0;
  9012  0F0C  0021               	movlb	1	; select bank1
  9013  0F0D  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  9014  0F0E  0008               	return
  9015  0F0F                     __end_of_USBCtrlTrfInHandler:	
  9016                           
  9017                           	psect	text38
  9018  0E3A                     __ptext38:	
  9019 ;; *************** function _USBCtrlTrfTxService *****************
  9020 ;; Defined at:
  9021 ;;		line 1771 in file "../lib/usb/src/usb_device.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;		None
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;  byteToSend      1    2[COMMON] unsigned char 
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;Total ram usage:        3 bytes
  9040 ;; Hardware stack levels used:    1
  9041 ;; This function calls:
  9042 ;;		Nothing
  9043 ;; This function is called by:
  9044 ;;		_USBCtrlEPAllowDataStage
  9045 ;;		_USBCtrlTrfInHandler
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           
  9050                           ;psect for function _USBCtrlTrfTxService
  9051  0E3A                     _USBCtrlTrfTxService:	
  9052                           
  9053                           ;usb_device.c: 1773: uint8_t byteToSend;
  9054                           ;usb_device.c: 1777: byteToSend = 8;
  9055                           
  9056                           ;incstack = 0
  9057                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9058  0E3A  3008               	movlw	8
  9059  0E3B  00F0               	movwf	??_USBCtrlTrfTxService
  9060  0E3C  0870               	movf	??_USBCtrlTrfTxService,w
  9061  0E3D  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9062                           
  9063                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  9064  0E3E  3000               	movlw	0
  9065  0E3F  0023               	movlb	3	; select bank3
  9066  0E40  0237               	subwf	((_inPipes+1)^(0+384)+3),w	;volatile
  9067  0E41  3008               	movlw	8
  9068  0E42  1903               	skipnz
  9069  0E43  0236               	subwf	(_inPipes^(0+384)+3),w	;volatile
  9070  0E44  1803               	skipnc
  9071  0E45  2E56               	goto	i1l271
  9072                           
  9073                           ;usb_device.c: 1779: {
  9074                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  9075  0E46  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  9076  0E47  00F0               	movwf	??_USBCtrlTrfTxService
  9077  0E48  0870               	movf	??_USBCtrlTrfTxService,w
  9078  0E49  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9079                           
  9080                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  9081  0E4A  085E               	movf	_shortPacketStatus^(0+384),w	;volatile
  9082  0E4B  1D03               	btfss	3,2
  9083  0E4C  2E4F               	goto	i1l2635
  9084                           
  9085                           ;usb_device.c: 1788: {
  9086                           ;usb_device.c: 1789: shortPacketStatus = 1;
  9087  0E4D  3001               	movlw	1
  9088  0E4E  2E53               	goto	L13
  9089  0E4F                     i1l2635:	
  9090                           ;usb_device.c: 1790: }
  9091                           
  9092                           
  9093                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  9094  0E4F  035E               	decf	_shortPacketStatus^(0+384),w	;volatile
  9095  0E50  1D03               	btfss	3,2
  9096  0E51  2E56               	goto	i1l271
  9097                           
  9098                           ;usb_device.c: 1792: {
  9099                           ;usb_device.c: 1793: shortPacketStatus = 2;
  9100  0E52  3002               	movlw	2
  9101  0E53                     L13:	
  9102  0E53  00F0               	movwf	??_USBCtrlTrfTxService
  9103  0E54  0870               	movf	??_USBCtrlTrfTxService,w
  9104  0E55  00DE               	movwf	_shortPacketStatus^(0+384)	;volatile
  9105  0E56                     i1l271:	
  9106                           
  9107                           ;usb_device.c: 1794: }
  9108                           ;usb_device.c: 1795: }
  9109                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  9110  0E56  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9111  0E57  00F0               	movwf	??_USBCtrlTrfTxService
  9112  0E58  01F1               	clrf	??_USBCtrlTrfTxService+1
  9113  0E59  0870               	movf	??_USBCtrlTrfTxService,w
  9114  0E5A  02B6               	subwf	(_inPipes^(0+384)+3),f	;volatile
  9115  0E5B  0871               	movf	??_USBCtrlTrfTxService+1,w
  9116  0E5C  3BB7               	subwfb	((_inPipes+1)^(0+384)+3),f	;volatile
  9117                           
  9118                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  9119  0E5D  0827               	movf	_pBDTEntryIn^(0+384),w
  9120  0E5E  3E01               	addlw	1
  9121  0E5F  00F0               	movwf	??_USBCtrlTrfTxService
  9122  0E60  3000               	movlw	0
  9123  0E61  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  9124  0E62  00F1               	movwf	??_USBCtrlTrfTxService+1
  9125  0E63  0870               	movf	??_USBCtrlTrfTxService,w
  9126  0E64  0086               	movwf	6
  9127  0E65  0871               	movf	??_USBCtrlTrfTxService+1,w
  9128  0E66  0087               	movwf	7
  9129  0E67  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9130  0E68  0081               	movwf	1
  9131                           
  9132                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  9133  0E69  3058               	movlw	88
  9134  0E6A  00F0               	movwf	??_USBCtrlTrfTxService
  9135  0E6B  0870               	movf	??_USBCtrlTrfTxService,w
  9136  0E6C  00DD               	movwf	_pDst^(0+384)
  9137                           
  9138                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9139  0E6D  1C35               	btfss	(_inPipes^(0+384)+2),0	;volatile
  9140  0E6E  2E85               	goto	i1l2655
  9141  0E6F  2E9E               	goto	i1l2665
  9142  0E70                     i1l2647:	
  9143                           ;usb_device.c: 1810: {
  9144                           ;usb_device.c: 1811: while(byteToSend)
  9145                           
  9146                           
  9147                           ;usb_device.c: 1812: {
  9148                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  9149  0E70  0833               	movf	_inPipes^(0+384),w	;volatile
  9150  0E71  0084               	movwf	4
  9151  0E72  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9152  0E73  0085               	movwf	5
  9153  0E74  0800               	movf	0,w	;code access
  9154  0E75  00F0               	movwf	??_USBCtrlTrfTxService
  9155  0E76  085D               	movf	_pDst^(0+384),w
  9156  0E77  0086               	movwf	6
  9157  0E78  0187               	clrf	7
  9158  0E79  0870               	movf	??_USBCtrlTrfTxService,w
  9159  0E7A  0081               	movwf	1
  9160  0E7B  3001               	movlw	1
  9161  0E7C  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9162  0E7D  3000               	movlw	0
  9163  0E7E  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9164  0E7F  3001               	movlw	1
  9165  0E80  00F0               	movwf	??_USBCtrlTrfTxService
  9166  0E81  0870               	movf	??_USBCtrlTrfTxService,w
  9167  0E82  07DD               	addwf	_pDst^(0+384),f
  9168                           
  9169                           ;usb_device.c: 1814: byteToSend--;
  9170  0E83  3001               	movlw	1
  9171  0E84  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9172  0E85                     i1l2655:	
  9173  0E85  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9174  0E86  1903               	btfsc	3,2
  9175  0E87  0008               	return
  9176  0E88  2E70               	goto	i1l2647
  9177  0E89                     i1l2657:	
  9178                           ;usb_device.c: 1817: else
  9179                           ;usb_device.c: 1818: {
  9180                           ;usb_device.c: 1819: while(byteToSend)
  9181                           
  9182                           ;usb_device.c: 1815: }
  9183                           ;usb_device.c: 1816: }
  9184                           
  9185                           
  9186                           ;usb_device.c: 1820: {
  9187                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  9188  0E89  0833               	movf	_inPipes^(0+384),w	;volatile
  9189  0E8A  0084               	movwf	4
  9190  0E8B  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9191  0E8C  0085               	movwf	5
  9192  0E8D  0800               	movf	0,w	;code access
  9193  0E8E  00F0               	movwf	??_USBCtrlTrfTxService
  9194  0E8F  085D               	movf	_pDst^(0+384),w
  9195  0E90  0086               	movwf	6
  9196  0E91  0187               	clrf	7
  9197  0E92  0870               	movf	??_USBCtrlTrfTxService,w
  9198  0E93  0081               	movwf	1
  9199  0E94  3001               	movlw	1
  9200  0E95  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9201  0E96  3000               	movlw	0
  9202  0E97  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9203  0E98  3001               	movlw	1
  9204  0E99  00F0               	movwf	??_USBCtrlTrfTxService
  9205  0E9A  0870               	movf	??_USBCtrlTrfTxService,w
  9206  0E9B  07DD               	addwf	_pDst^(0+384),f
  9207                           
  9208                           ;usb_device.c: 1822: byteToSend--;
  9209  0E9C  3001               	movlw	1
  9210  0E9D  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9211  0E9E                     i1l2665:	
  9212  0E9E  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9213  0E9F  1903               	btfsc	3,2
  9214  0EA0  0008               	return
  9215  0EA1  2E89               	goto	i1l2657
  9216  0EA2                     __end_of_USBCtrlTrfTxService:	
  9217  007E                     btemp	set	126	;btemp
  9218  007E                     int$flags	set	126
  9219  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         226
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      6      12
    BANK2            16     15      16
    BANK3            80      4      77
    BANK4            80      0      18
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0[8]), RAM(DATA[4096]), SetupPkt(BANK0[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1782_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1782_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1782_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1782_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S249$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S239$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S239$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S215$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S215$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S215$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S215$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8200
                                              0 BANK3      4     4      0
                          _CDCInitEP
                       _CDCTxService
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (1) _getsUSBUSART                                         4     3      1    2332
                                             11 BANK2      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             11 BANK2      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _CDCInitEP                                            1     1      0    3045
                                             13 BANK2      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    2093
                                              0 BANK2     11     7      4
 ---------------------------------------------------------------------------------
 (2) _USBEnableEndpoint                                    6     5      1     952
                                              7 BANK2      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBConfigureEndpoint                                 7     6      1     524
                                              0 BANK2      7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   27385
                                              5 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   27385
                                             15 BANK0      1     1      0
                                              3 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   16120
                                              0 BANK1      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   15891
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12150
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4335
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     526
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4120
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3649
                                              0 BANK0      6     0      6
                 _USBCheckCDCRequest
                        i1_CDCInitEP
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_CDCInitEP                                          1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) i1_USBEnableEndpoint                                  6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) i1_USBConfigureEndpoint                               7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
   _getsUSBUSART
     _USBTransferOnePacket

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_SYSTEM_Initialize
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_SYSTEM_Initialize
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      6       C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      F      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      4D      11       96.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      12      13       22.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     119      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     119      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 25 09:16:18 2018

                              _USB_SD_Ptr 10BD                                         pc 0002  
                             __CFG_CP$OFF 0000                             _USBDeviceInit 031D  
                      __size_of_CDCInitEP 003E                               __CFG_LVP$ON 0000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0060      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
                                     l233 09CE                                       l173 0364  
             __end_of_USBStdGetDscHandler 1000                                       l615 0694  
                                     l617 0697                                       l618 069A  
                                     l619 069D                                       l565 098C  
                                     _BDT 0020                                       _RB7 006F  
                                     _UIE 0E92                                       _UIR 0E90  
                              _USBSuspend 09D9                      USBStdSetCfgHandler@i 006A  
                    USBStdSetCfgHandler@p 0067               __end_ofi1_SYSTEM_Initialize 0976  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                          _USBDeviceTasks 0169                            _USBDeviceState 016F  
                   ??_USBCtrlTrfRxService 0072                            ??_getsUSBUSART 016C  
                USBEnableEndpoint@options 0167                                      l4011 032D  
                                    l4103 09D3                                      l4111 0CD0  
                                    l4121 0CE7                                      l4027 034B  
                                    l4019 033E                                      l4123 0D06  
                                    l4115 0CE5                USBConfigureEndpoint@handle 0166  
                                    l4061 038C                                      l4125 0D1B  
                                    l4151 0289                                      l4039 0369  
                                    l4145 026A                                      l4137 0260  
                                    l4241 0660                                      l4067 03B0  
                                    l4157 0293                                      l4255 06A0  
                                    l4271 06CB                                      l4169 02B2  
                                    l4177 02CE                                      l4195 02FE  
                                    l4179 02D3                                      l4187 02EF  
                                    l4197 0304                                      l4189 02F3  
                                    l4269 06BC                                      l4199 031A  
                                    l3931 0BB9                                      l3943 0A49  
                                    l3951 06DD                                      l3929 0BB0  
                                    l3939 0A41                                      l3971 074E  
                                    l3981 0980                                      l3959 06ED  
                                    l3969 0736                                      l3977 0979  
                                    u4007 06AF                                      u3575 0B89  
                                    u3585 0B8F                                      i1l35 0AFF  
                                    u3595 0B97                                      u3695 034E  
                   ??_USBCtrlTrfTxService 0070                                      u3987 066C  
                                    u3997 068C                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                              ?i1_CDCInitEP 0070  
                            __CFG_WRT$OFF 0000                           _CDCDataInHandle 01C6  
  USBStdFeatureReqHandler@current_ep_data 006A                                      _pDst 01DD  
                                    _main 0642                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                             _BaudRateGen 01B8                                      fsr1l 0006  
                         _USBDeviceAttach 09BD                                      btemp 007E  
                                    start 0012                             __CFG_IESO$OFF 0000  
              __end_of_USBCheckStdRequest 0E3A                    ??_USBCtrlTrfOutHandler 0076  
                           __CFG_MCLRE$ON 0000                 ??_USBStdFeatureReqHandler 0066  
                ??_USBStdGetStatusHandler 0070                            ?_USBDeviceInit 0070  
                             _writeBuffer 0320                                     ?_main 0070  
              i1USBEnableEndpoint@options 0077                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0092                    __end_of_USBDeviceTasks 0250  
               ?_USBCtrlEPServiceComplete 0070                                     i1l323 0C1A  
                                   i1l173 0419                                     i1l326 0C5E  
                                   i1l190 01C9                                     i1l271 0E56  
                                   i1l327 0C23                                     i1l328 0C26  
                                   i1l184 018C                                     i1l258 056A  
                                   i1l194 01F4                                     i1l371 0F06  
                                   i1l419 0126                                     i1l195 024D  
                                   i1l196 01FD                                     i1l286 0497  
                                   i1l383 0E39                                     i1l385 0DE0  
                                   i1l394 0E13                                     i1l565 0975  
                                   i1l479 0DD7                                     _UADDR 0E96  
                                   _TRISB 008D                                     _TRISC 008E  
                                   _USTAT 0E8F        __size_of_USBCtrlEPAllowStatusStage 0072  
                          __CFG_FCMEN$OFF 0000           __end_of_USBCtrlEPAllowDataStage 0D79  
                                   _sd000 10C3                                     _sd001 1077  
                                   _sd002 1043            ?_USBIncrement1msInternalTimers 0070  
                                   main@i 01EC                            __CFG_BOREN$OFF 0000  
                       __end_of_CDCInitEP 0B3E                                     status 0003  
                                   wtemp0 007E              __size_of_USBStdSetCfgHandler 008E  
                         __initialization 0014                              __end_of_main 06CF  
                   _control_signal_bitmap 01CE                            __CFG_LPBOR$OFF 0000  
               __size_of_USBCtrlEPService 0057                                    ??_main 01E9  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                     __CFG_USBLSCLK$48MHz 0000                           i1_USBDeviceInit 03D4  
                            _cdc_mem_type 01CF                   __end_of_USBDeviceAttach 09D9  
                        _CDCDataOutHandle 01C8                                    i1S4333 0800  
                                  _ACTCON 039B                                    _ANSELB 018D  
                                  _ANSELC 018E                           getsUSBUSART@len 016B  
                  SYSTEM_Initialize@state 0160                     __size_of_CDCTxService 00CD  
                                  i1l3001 049F                                    i1l3003 04B8  
                                  i1l3013 04E7                                    i1l3015 04F3  
                                  i1l3051 0E03                                    i1l3035 0DE9  
                                  i1l3117 0A99                                    i1l2501 0A07  
                                  i1l3061 0E20                                    i1l3037 0DEC  
                                  i1l3143 0EC0                                    i1l3047 0DFD  
                                  i1l3039 0DEF                                    i1l3207 07F6  
                                  i1l3311 041E                                    i1l3145 0EC5  
                                  i1l3129 0AC5                                    i1l3049 0E00  
                                  i1l3065 0E2E                                    i1l3225 0CB1  
                                  i1l3209 07F8                                    i1l3163 0F0C  
                                  i1l3155 0EEB                                    i1l2603 096A  
                                  i1l2611 0AD1                                    i1l3227 0CB4  
                                  i1l2517 0770                                    i1l2509 0760  
                                  i1l2613 0AD4                                    i1l3229 0CB7  
                                  i1l3333 043B                                    i1l3159 0EFA  
                                  i1l2527 07B9                                    i1l2607 0AC9  
                                  i1l3175 0A2C                                    i1l3511 01A5  
                                  i1l2529 07D1                                    i1l2609 0ACD  
                                  i1l2617 0AD7                                    i1l3177 0A35  
                                  i1l3505 019F                                    i1l2635 0E4F  
                                  i1l2571 0DBD                                    i1l2555 0D98  
                                  i1l2547 0D8C                                    i1l2811 0FED  
                                  i1l2803 0FC9                                    i1l2723 0D4A  
                                  i1l3339 045F                                    i1l3291 03F4  
                                  i1l3283 03E3                                    i1l2565 0DAF  
                                  i1l2901 00E8                                    i1l2813 0FF0  
                                  i1l2805 0FCC                                    i1l3541 01EC  
                                  i1l3533 01D6                                    i1l3517 01BA  
                                  i1l2647 0E70                                    i1l2655 0E85  
                                  i1l2559 0D9F                                    i1l2487 0B6D  
                                  i1l4335 0AE0                                    i1l2911 0111  
                                  i1l2751 05D1                                    i1l2743 05C0  
                                  i1l2727 0D5D                                    i1l3527 01CF  
                                  i1l2657 0E89                                    i1l2665 0E9E  
                                  i1l2577 0DC5                                    i1l2489 0B76  
                                  i1l2497 0A00                                    i1l4337 0AFA  
                                  i1l2921 012C                                    i1l2913 0117  
                                  i1l2817 0FF3                                    i1l2673 0991  
                                  i1l2761 05E7                                    i1l3561 021B  
                                  i1l2691 0F36                                    i1l3299 0400  
                                  i1l3491 0186                                    i1l3483 0179  
                                  i1l2925 014B                                    i1l2829 0C36  
                                  i1l2941 0534                                    i1l2599 0963  
                                  i1l2927 0154                                    i1l2791 0F8C  
                                  i1l2839 0C52                                    i1l2783 062C  
                                  i1l2767 05FB                                    i1l3567 0234  
                                  i1l2873 0086                                    i1l2857 0056  
                                  i1l2945 0538                                    i1l3569 0243  
                                  i1l2859 0058                                    i1l2795 0F96  
                                  i1l2963 0579                                    i1l2971 0582  
                                  i1l2885 00BB                                    u204_25 0D54  
                                  i1l2895 00D6                                    i1l2887 00C6  
                                  i1l2879 00A7                                    i1l2897 00DD  
                                  u243_25 0491                                    u180_25 0B4C  
                                  u181_25 0B54                                    u280_25 0403  
                                  u179_25 0B46                                    u268_25 0C7A  
                                  _OSCCON 0099                             CDCTxService@i 016C  
            i1USBTransferOnePacket@handle 0079                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 01DE                           USBDeviceTasks@i 006F  
             USBStdFeatureReqHandler@pUEP 0068                  USBTransferOnePacket@data 0161  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 0160  
                          __CFG_STVREN$ON 0000                      __end_of_getsUSBUSART 0D1D  
                       _USBEnableEndpoint 0A38           __size_of_USBStdGetStatusHandler 0055  
                                  _memset 098D                      i1USBEnableEndpoint@p 007A  
                      ?_USBEnableEndpoint 0167             __size_of_USBTransferOnePacket 0084  
                            _CDCTxService 0250                       ??_USBEnableEndpoint 0168  
            i1USBConfigureEndpoint@handle 0076                               _CtrlTrfData 0058  
                    _controlTransferState 00E3                         _SYSTEM_Initialize 0976  
                 __end_of__initialization 003C                i1USBTransferOnePacket@data 0071  
                    __size_ofi1_CDCInitEP 0036                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0027                       __size_of_USBSuspend 001F  
                    i1USBDeviceInit@i_821 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0A5B                             __end_of_sd000 10C7  
                           __end_of_sd001 10AB                             __end_of_sd002 1077  
                     ??_SYSTEM_Initialize 0160          __size_of_USBCtrlEPAllowDataStage 005C  
           __size_of_USBConfigureEndpoint 0043                   __end_ofi1_USBDeviceInit 0481  
             __end_of_USBCtrlTrfInHandler 0F0F                                _cdc_notice 0220  
                              _cdc_rx_len 01D1                                _cdc_tx_len 01D0  
                ??_USBCtrlTrfSetupHandler 006E                   _USBTicksSinceSuspendEnd 01D2  
                        ?_USBDeviceAttach 0070                 __end_of_SYSTEM_Initialize 098D  
                  _USBStdGetStatusHandler 0C16                                __pbssBANK1 00E0  
                              __pbssBANK2 016F                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                __pbssBANK5 02A0  
                              __pbssBANK6 0320               __size_of_USBWakeFromSuspend 0020  
                             _pBDTEntryIn 01A7          __end_of_USBCtrlEPServiceComplete 05B4  
             __size_of_USBCheckCDCRequest 005F                                __pmaintext 0642  
                    USBCtrlTrfRxService@i 0074                           __CFG_PLLMULT$3x 0000  
                              __pintentry 0004              __size_ofi1_USBEnableEndpoint 0020  
                                 ?_memset 0070                                _device_dsc 10AB  
                        _USBCtrlEPService 0C6B                                _ep_data_in 01C3  
             __end_of_USBCtrlTrfRxService 0522                        _USBCheckStdRequest 0DD8  
                       _configDescriptor1 1000                                   u270_2m0 0CAD  
             __end_of_USBCtrlTrfTxService 0EA2                       _USBStdSetCfgHandler 05B4  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92                                   _UIRbits 0E90  
            __size_ofi1_SYSTEM_Initialize 0015                             _cdc_trf_state 00E2  
                ??i1_USBTransferOnePacket 0074                                   _pCDCDst 01CA  
                                 _pCDCSrc 01CC                     __size_of_getsUSBUSART 005B  
         ??_USBIncrement1msInternalTimers 0070                      ?_USBStdSetCfgHandler 0070  
                               _CDCInitEP 0B00                __size_of_USBEnableEndpoint 0023  
                              _readBuffer 02A0                      ??_USBCheckStdRequest 006D  
           __size_of_USBCtrlTrfOutHandler 0037                          ??_USBDeviceTasks 00E9  
                       ??_USBStallHandler 0070                          ?i1_USBDeviceInit 0070  
                      getsUSBUSART@buffer 016E                           __size_of_memset 0018  
               __end_of_configDescriptor1 1043                                   __ptext1 0CC2  
                                 __ptext2 031D                                   __ptext3 09BD  
                                 __ptext4 0976                                   __ptext5 0250  
                                 __ptext6 0B00                                   __ptext7 06CF  
                                 __ptext8 0A38                                   __ptext9 0B80  
                                 _inPipes 01B3               _USBDeferOUTDataStagePackets 01D3  
                            ??_USBSuspend 0066                     i1USBEnableEndpoint@ep 007C  
                      __end_of_USB_CD_Ptr 10C9                __size_of_SYSTEM_Initialize 0017  
         __size_of_USBCtrlTrfSetupHandler 0053                                   clrloop0 095C  
                ??i1_USBConfigureEndpoint 0071                      end_of_initialization 003C  
                            _getsUSBUSART 0CC2                        __end_of_USB_SD_Ptr 10C3  
                     _pBDTEntryEP0OutNext 00E0                                   memset@c 0072  
                                 memset@n 0074                                   memset@p 0076  
                         _USB1msTickCount 01BC           _dummy_encapsulated_cmd_response 022A  
                ?_USBStdFeatureReqHandler 0070                     ??_USBStdSetCfgHandler 0066  
                        __CFG_CLKOUTEN$ON 0000                                ?_CDCInitEP 0070  
                      __end_of_USBSuspend 09F8                   _USBCtrlEPAllowDataStage 0D1D  
                _USBCtrlEPServiceComplete 0522                _USBStatusStageEnabledFlag1 01D6  
              _USBStatusStageEnabledFlag2 01D5                        USBEnableEndpoint@p 016A  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                        __CFG_FOSC$INTOSC 0000                        _BothEP0OutUOWNsSet 01D9  
               USBStdSetCfgHandler@i_1572 0069                 USBConfigureEndpoint@EPNum 0165  
              ?_USBCtrlEPAllowStatusStage 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0064  
                               _USTATcopy 00E5                  i1USBTransferOnePacket@ep 0078  
            __end_of_USBTransferOnePacket 0753           __size_ofi1_USBTransferOnePacket 0083  
                      __CFG_PLLEN$ENABLED 0000                        USBDeviceInit@i_821 0163  
                  _USBCtrlTrfSetupHandler 0BC3                     __end_of_USBDeviceInit 03D4  
   __end_of_USBIncrement1msInternalTimers 09BD    __size_of_USBIncrement1msInternalTimers 0018  
           _USBIncrement1msInternalTimers 09A5                            __end_of_memset 09A5  
                       _USBBusIsSuspended 01DB                       start_initialization 0014  
                 ?_USBStdGetStatusHandler 0070             USBCtrlTrfRxService@byteToRead 0075  
                             _cdc_data_rx 0120                               _cdc_data_tx 00A0  
            __end_of_USBConfigureEndpoint 0BC3           __end_of_USBStdFeatureReqHandler 0169  
                     i1_USBEnableEndpoint 09F8           __size_ofi1_USBConfigureEndpoint 0042  
                           ??i1_CDCInitEP 007D         __end_of_USBCtrlEPAllowStatusStage 0F81  
                __end_of_USBCtrlEPService 0CC2                 ??_USBCtrlEPAllowDataStage 0073  
                             ??_CDCInitEP 016D                            USBDeviceInit@i 0164  
                          USBDeviceInit@p 0161                    _pBDTEntryEP0OutCurrent 00E4  
                 USBTransferOnePacket@dir 0160                   USBTransferOnePacket@len 0163  
             i1USBConfigureEndpoint@EPNum 0075                       _USBStdGetDscHandler 0F81  
                    ?i1_USBEnableEndpoint 0077                                  ??_memset 0076  
                     i1_SYSTEM_Initialize 0961                    i1_USBTransferOnePacket 0753  
                  _USBActiveConfiguration 01E8            __end_of_USBStdGetStatusHandler 0C6B  
               i1USBTransferOnePacket@dir 0070                 i1USBTransferOnePacket@len 0073  
                               ___latbits 0002                             __pcstackBANK0 0060  
                           __pcstackBANK1 00E6                             __pcstackBANK2 0160  
                           __pcstackBANK3 01E9              __size_of_USBCtrlTrfInHandler 006D  
                    ?_USBStdGetDscHandler 0070                      ?i1_SYSTEM_Initialize 0070  
              __end_of_USBWakeFromSuspend 0A38                           _USBStallHandler 07D6  
                            _pBDTEntryOut 01AD                __end_of_USBCheckCDCRequest 0DD8  
                __size_of_USBDeviceAttach 001C                       __end_ofi1_CDCInitEP 0A91  
                   ??i1_USBEnableEndpoint 0078                    i1_USBConfigureEndpoint 0B3E  
                               __pswtext1 0800                      _USBTransferOnePacket 06CF  
                        main@numBytesRead 01EB              __end_of_USBCtrlTrfOutHandler 0AC8  
                   ??_USBStdGetDscHandler 0070                               _ep_data_out 01C0  
            __size_of_USBCtrlTrfRxService 00A1             USBConfigureEndpoint@direction 0160  
                   ??i1_SYSTEM_Initialize 0070              __size_of_USBCtrlTrfTxService 0068  
              ??_USBCtrlEPServiceComplete 0075                                 clear_ram0 095B  
                                _PIE2bits 0092                                  _PIR2bits 0012  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 01D4  
             __size_of_USBCheckStdRequest 0062                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 0B80          __size_of_USBStdFeatureReqHandler 0129  
                   ?_USBTransferOnePacket 0160                         _SYS_InterruptHigh 0004  
                           ?_CDCTxService 0070                              _RemoteWakeup 01DC  
                      ?_SYS_InterruptHigh 0070                  __size_ofi1_USBDeviceInit 00AD  
                 __end_of_USBStallHandler 07FD               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 0642                               i1_CDCInitEP 0A5B  
                     ??_SYS_InterruptHigh 00EB                        __end_of_device_dsc 10BD  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 0168                                  _SetupPkt 0050  
                   ?_USBConfigureEndpoint 0160                         ??_USBDeviceAttach 0160  
               __end_of_SYS_InterruptHigh 0012                               _line_coding 01DF  
                          ??_CDCTxService 016B                   __size_of_USBDeviceTasks 00E7  
                                __ptext11 0169                                  __ptext20 0D1D  
                                __ptext12 03D4                                  __ptext21 0DD8  
                                __ptext13 0A18                                  __ptext30 0753  
                                __ptext22 05B4                                  __ptext14 09D9  
                                __ptext31 09F8                                  __ptext23 098D  
                                __ptext15 07D6                                  __ptext32 0B3E  
                                __ptext24 0C16                                  __ptext16 09A5  
                                __ptext33 0D79                                  __ptext25 0F81  
                                __ptext17 0C6B                                  __ptext34 0A91  
                                __ptext26 0040                                  __ptext18 0BC3  
                                __ptext35 0481                                  __ptext27 0AC8  
                                __ptext19 0522                                  __ptext36 0F0F  
                                __ptext28 0961                                  __ptext37 0EA2  
                                __ptext29 0A5B                                  __ptext38 0E3A  
          __end_of_USBCtrlTrfSetupHandler 0C16                             __size_of_main 008D  
                       ?_USBCtrlEPService 0070           i1USBConfigureEndpoint@direction 0070  
                      ??_USBCtrlEPService 00E6                       _USBCtrlTrfInHandler 0EA2  
                                _outPipes 01A0                      _USBCtrlTrfOutHandler 0A91  
                                int$flags 007E                   ?i1_USBTransferOnePacket 0070  
               _USBCtrlEPAllowStatusStage 0F0F                    ??_USBTransferOnePacket 0164  
               _USBDeferStatusStagePacket 01D7                  CDCTxService@byte_to_send 016D  
                        i1USBDeviceInit@i 0074                          i1USBDeviceInit@p 0071  
                              _INTCONbits 000B                  i1SYSTEM_Initialize@state 0070  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 0072  
                                memset@p1 0070                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 006B                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00B7   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B00  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0038          ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007E           _USER_USB_CALLBACK_EVENT_HANDLER 0AC8  
                       ??i1_USBDeviceInit 0070                   ?i1_USBConfigureEndpoint 0070  
          __end_ofi1_USBTransferOnePacket 07D6                    ??_USBConfigureEndpoint 0161  
                   ?_USBCtrlTrfOutHandler 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0481                        _USBWakeFromSuspend 0A18  
                 _USBStdFeatureReqHandler 0040                        _USBCheckCDCRequest 0D79  
                     _USBCtrlTrfTxService 0E3A                __size_of_SYS_InterruptHigh 000E  
                           __pstringtext1 10BD                             __pstringtext2 10C7  
                           __pstringtext3 1000                             __pstringtext4 1043  
                           __pstringtext5 1077                             __pstringtext6 10AB  
                           __pstringtext7 10C3                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 0073                     _USBAlternateInterface 01E6  
                     ?_USBCheckCDCRequest 0070                       USBEnableEndpoint@ep 016C  
                         _endpoint_number 01DA                      ?_USBCtrlTrfRxService 0070  
                           ?_getsUSBUSART 016B                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 01D8  
          __end_ofi1_USBConfigureEndpoint 0B80                      ??_USBWakeFromSuspend 0066  
             __end_ofi1_USBEnableEndpoint 0A18                USBTransferOnePacket@handle 0169  
                    __end_of_CDCTxService 031D                      ??_USBCheckCDCRequest 0070  
                              _USB_CD_Ptr 10C7  
