

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu May 25 17:19:32 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext1,local,class=CONST,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x20,48,_BDT
    68                           	dabs	1,0x58,8,_CtrlTrfData
    69                           	dabs	1,0x50,8,_SetupPkt
    70                           	dabs	1,0xA0,64,_cdc_data_tx
    71                           	dabs	1,0x120,64,_cdc_data_rx
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 1.42
    75                           ; Generated 13/04/2017 GMT
    76                           ; 
    77                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F1459 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0115                     	;# 
   159  0116                     	;# 
   160  0117                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  011D                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  0191                     	;# 
   168  0191                     	;# 
   169  0192                     	;# 
   170  0193                     	;# 
   171  0193                     	;# 
   172  0194                     	;# 
   173  0195                     	;# 
   174  0196                     	;# 
   175  0197                     	;# 
   176  0199                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019C                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  0391                     	;# 
   202  0392                     	;# 
   203  0393                     	;# 
   204  0394                     	;# 
   205  0395                     	;# 
   206  0396                     	;# 
   207  039A                     	;# 
   208  039B                     	;# 
   209  0611                     	;# 
   210  0612                     	;# 
   211  0613                     	;# 
   212  0613                     	;# 
   213  0614                     	;# 
   214  0615                     	;# 
   215  0616                     	;# 
   216  0616                     	;# 
   217  0691                     	;# 
   218  0692                     	;# 
   219  0693                     	;# 
   220  0694                     	;# 
   221  0695                     	;# 
   222  0E8E                     	;# 
   223  0E8F                     	;# 
   224  0E90                     	;# 
   225  0E91                     	;# 
   226  0E92                     	;# 
   227  0E93                     	;# 
   228  0E94                     	;# 
   229  0E94                     	;# 
   230  0E95                     	;# 
   231  0E96                     	;# 
   232  0E97                     	;# 
   233  0E98                     	;# 
   234  0E99                     	;# 
   235  0E9A                     	;# 
   236  0E9B                     	;# 
   237  0E9C                     	;# 
   238  0E9D                     	;# 
   239  0E9E                     	;# 
   240  0E9F                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  0111                     	;# 
   299  0112                     	;# 
   300  0113                     	;# 
   301  0114                     	;# 
   302  0115                     	;# 
   303  0116                     	;# 
   304  0117                     	;# 
   305  0118                     	;# 
   306  0119                     	;# 
   307  011D                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  018E                     	;# 
   311  0191                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0194                     	;# 
   317  0195                     	;# 
   318  0196                     	;# 
   319  0197                     	;# 
   320  0199                     	;# 
   321  019A                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020C                     	;# 
   329  020D                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0213                     	;# 
   336  0214                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0217                     	;# 
   345  0391                     	;# 
   346  0392                     	;# 
   347  0393                     	;# 
   348  0394                     	;# 
   349  0395                     	;# 
   350  0396                     	;# 
   351  039A                     	;# 
   352  039B                     	;# 
   353  0611                     	;# 
   354  0612                     	;# 
   355  0613                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0615                     	;# 
   359  0616                     	;# 
   360  0616                     	;# 
   361  0691                     	;# 
   362  0692                     	;# 
   363  0693                     	;# 
   364  0694                     	;# 
   365  0695                     	;# 
   366  0E8E                     	;# 
   367  0E8F                     	;# 
   368  0E90                     	;# 
   369  0E91                     	;# 
   370  0E92                     	;# 
   371  0E93                     	;# 
   372  0E94                     	;# 
   373  0E94                     	;# 
   374  0E95                     	;# 
   375  0E96                     	;# 
   376  0E97                     	;# 
   377  0E98                     	;# 
   378  0E99                     	;# 
   379  0E9A                     	;# 
   380  0E9B                     	;# 
   381  0E9C                     	;# 
   382  0E9D                     	;# 
   383  0E9E                     	;# 
   384  0E9F                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  0111                     	;# 
   443  0112                     	;# 
   444  0113                     	;# 
   445  0114                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011D                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  018E                     	;# 
   455  0191                     	;# 
   456  0191                     	;# 
   457  0192                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0197                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019D                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  020C                     	;# 
   473  020D                     	;# 
   474  0211                     	;# 
   475  0211                     	;# 
   476  0212                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0213                     	;# 
   480  0214                     	;# 
   481  0214                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0216                     	;# 
   486  0216                     	;# 
   487  0217                     	;# 
   488  0217                     	;# 
   489  0391                     	;# 
   490  0392                     	;# 
   491  0393                     	;# 
   492  0394                     	;# 
   493  0395                     	;# 
   494  0396                     	;# 
   495  039A                     	;# 
   496  039B                     	;# 
   497  0611                     	;# 
   498  0612                     	;# 
   499  0613                     	;# 
   500  0613                     	;# 
   501  0614                     	;# 
   502  0615                     	;# 
   503  0616                     	;# 
   504  0616                     	;# 
   505  0691                     	;# 
   506  0692                     	;# 
   507  0693                     	;# 
   508  0694                     	;# 
   509  0695                     	;# 
   510  0E8E                     	;# 
   511  0E8F                     	;# 
   512  0E90                     	;# 
   513  0E91                     	;# 
   514  0E92                     	;# 
   515  0E93                     	;# 
   516  0E94                     	;# 
   517  0E94                     	;# 
   518  0E95                     	;# 
   519  0E96                     	;# 
   520  0E97                     	;# 
   521  0E98                     	;# 
   522  0E99                     	;# 
   523  0E9A                     	;# 
   524  0E9B                     	;# 
   525  0E9C                     	;# 
   526  0E9D                     	;# 
   527  0E9E                     	;# 
   528  0E9F                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE9                     	;# 
   535  0FEA                     	;# 
   536  0FEB                     	;# 
   537  0FED                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  008E                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0095                     	;# 
   572  0096                     	;# 
   573  0097                     	;# 
   574  0098                     	;# 
   575  0099                     	;# 
   576  009A                     	;# 
   577  009B                     	;# 
   578  009B                     	;# 
   579  009C                     	;# 
   580  009D                     	;# 
   581  009E                     	;# 
   582  009F                     	;# 
   583  010C                     	;# 
   584  010D                     	;# 
   585  010E                     	;# 
   586  0111                     	;# 
   587  0112                     	;# 
   588  0113                     	;# 
   589  0114                     	;# 
   590  0115                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  0118                     	;# 
   594  0119                     	;# 
   595  011D                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  018E                     	;# 
   599  0191                     	;# 
   600  0191                     	;# 
   601  0192                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0194                     	;# 
   605  0195                     	;# 
   606  0196                     	;# 
   607  0197                     	;# 
   608  0199                     	;# 
   609  019A                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019C                     	;# 
   613  019D                     	;# 
   614  019E                     	;# 
   615  019F                     	;# 
   616  020C                     	;# 
   617  020D                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  0391                     	;# 
   634  0392                     	;# 
   635  0393                     	;# 
   636  0394                     	;# 
   637  0395                     	;# 
   638  0396                     	;# 
   639  039A                     	;# 
   640  039B                     	;# 
   641  0611                     	;# 
   642  0612                     	;# 
   643  0613                     	;# 
   644  0613                     	;# 
   645  0614                     	;# 
   646  0615                     	;# 
   647  0616                     	;# 
   648  0616                     	;# 
   649  0691                     	;# 
   650  0692                     	;# 
   651  0693                     	;# 
   652  0694                     	;# 
   653  0695                     	;# 
   654  0E8E                     	;# 
   655  0E8F                     	;# 
   656  0E90                     	;# 
   657  0E91                     	;# 
   658  0E92                     	;# 
   659  0E93                     	;# 
   660  0E94                     	;# 
   661  0E94                     	;# 
   662  0E95                     	;# 
   663  0E96                     	;# 
   664  0E97                     	;# 
   665  0E98                     	;# 
   666  0E99                     	;# 
   667  0E9A                     	;# 
   668  0E9B                     	;# 
   669  0E9C                     	;# 
   670  0E9D                     	;# 
   671  0E9E                     	;# 
   672  0E9F                     	;# 
   673  0FE4                     	;# 
   674  0FE5                     	;# 
   675  0FE6                     	;# 
   676  0FE7                     	;# 
   677  0FE8                     	;# 
   678  0FE9                     	;# 
   679  0FEA                     	;# 
   680  0FEB                     	;# 
   681  0FED                     	;# 
   682  0FEE                     	;# 
   683  0FEF                     	;# 
   684  0000                     	;# 
   685  0001                     	;# 
   686  0002                     	;# 
   687  0003                     	;# 
   688  0004                     	;# 
   689  0005                     	;# 
   690  0006                     	;# 
   691  0007                     	;# 
   692  0008                     	;# 
   693  0009                     	;# 
   694  000A                     	;# 
   695  000B                     	;# 
   696  000C                     	;# 
   697  000D                     	;# 
   698  000E                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0015                     	;# 
   702  0016                     	;# 
   703  0016                     	;# 
   704  0017                     	;# 
   705  0018                     	;# 
   706  0019                     	;# 
   707  001A                     	;# 
   708  001B                     	;# 
   709  001C                     	;# 
   710  008C                     	;# 
   711  008D                     	;# 
   712  008E                     	;# 
   713  0091                     	;# 
   714  0092                     	;# 
   715  0095                     	;# 
   716  0096                     	;# 
   717  0097                     	;# 
   718  0098                     	;# 
   719  0099                     	;# 
   720  009A                     	;# 
   721  009B                     	;# 
   722  009B                     	;# 
   723  009C                     	;# 
   724  009D                     	;# 
   725  009E                     	;# 
   726  009F                     	;# 
   727  010C                     	;# 
   728  010D                     	;# 
   729  010E                     	;# 
   730  0111                     	;# 
   731  0112                     	;# 
   732  0113                     	;# 
   733  0114                     	;# 
   734  0115                     	;# 
   735  0116                     	;# 
   736  0117                     	;# 
   737  0118                     	;# 
   738  0119                     	;# 
   739  011D                     	;# 
   740  018C                     	;# 
   741  018D                     	;# 
   742  018E                     	;# 
   743  0191                     	;# 
   744  0191                     	;# 
   745  0192                     	;# 
   746  0193                     	;# 
   747  0193                     	;# 
   748  0194                     	;# 
   749  0195                     	;# 
   750  0196                     	;# 
   751  0197                     	;# 
   752  0199                     	;# 
   753  019A                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019C                     	;# 
   757  019D                     	;# 
   758  019E                     	;# 
   759  019F                     	;# 
   760  020C                     	;# 
   761  020D                     	;# 
   762  0211                     	;# 
   763  0211                     	;# 
   764  0212                     	;# 
   765  0212                     	;# 
   766  0213                     	;# 
   767  0213                     	;# 
   768  0214                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0216                     	;# 
   774  0216                     	;# 
   775  0217                     	;# 
   776  0217                     	;# 
   777  0391                     	;# 
   778  0392                     	;# 
   779  0393                     	;# 
   780  0394                     	;# 
   781  0395                     	;# 
   782  0396                     	;# 
   783  039A                     	;# 
   784  039B                     	;# 
   785  0611                     	;# 
   786  0612                     	;# 
   787  0613                     	;# 
   788  0613                     	;# 
   789  0614                     	;# 
   790  0615                     	;# 
   791  0616                     	;# 
   792  0616                     	;# 
   793  0691                     	;# 
   794  0692                     	;# 
   795  0693                     	;# 
   796  0694                     	;# 
   797  0695                     	;# 
   798  0E8E                     	;# 
   799  0E8F                     	;# 
   800  0E90                     	;# 
   801  0E91                     	;# 
   802  0E92                     	;# 
   803  0E93                     	;# 
   804  0E94                     	;# 
   805  0E94                     	;# 
   806  0E95                     	;# 
   807  0E96                     	;# 
   808  0E97                     	;# 
   809  0E98                     	;# 
   810  0E99                     	;# 
   811  0E9A                     	;# 
   812  0E9B                     	;# 
   813  0E9C                     	;# 
   814  0E9D                     	;# 
   815  0E9E                     	;# 
   816  0E9F                     	;# 
   817  0FE4                     	;# 
   818  0FE5                     	;# 
   819  0FE6                     	;# 
   820  0FE7                     	;# 
   821  0FE8                     	;# 
   822  0FE9                     	;# 
   823  0FEA                     	;# 
   824  0FEB                     	;# 
   825  0FED                     	;# 
   826  0FEE                     	;# 
   827  0FEF                     	;# 
   828  0000                     	;# 
   829  0001                     	;# 
   830  0002                     	;# 
   831  0003                     	;# 
   832  0004                     	;# 
   833  0005                     	;# 
   834  0006                     	;# 
   835  0007                     	;# 
   836  0008                     	;# 
   837  0009                     	;# 
   838  000A                     	;# 
   839  000B                     	;# 
   840  000C                     	;# 
   841  000D                     	;# 
   842  000E                     	;# 
   843  0011                     	;# 
   844  0012                     	;# 
   845  0015                     	;# 
   846  0016                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  008C                     	;# 
   855  008D                     	;# 
   856  008E                     	;# 
   857  0091                     	;# 
   858  0092                     	;# 
   859  0095                     	;# 
   860  0096                     	;# 
   861  0097                     	;# 
   862  0098                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  009F                     	;# 
   871  010C                     	;# 
   872  010D                     	;# 
   873  010E                     	;# 
   874  0111                     	;# 
   875  0112                     	;# 
   876  0113                     	;# 
   877  0114                     	;# 
   878  0115                     	;# 
   879  0116                     	;# 
   880  0117                     	;# 
   881  0118                     	;# 
   882  0119                     	;# 
   883  011D                     	;# 
   884  018C                     	;# 
   885  018D                     	;# 
   886  018E                     	;# 
   887  0191                     	;# 
   888  0191                     	;# 
   889  0192                     	;# 
   890  0193                     	;# 
   891  0193                     	;# 
   892  0194                     	;# 
   893  0195                     	;# 
   894  0196                     	;# 
   895  0197                     	;# 
   896  0199                     	;# 
   897  019A                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020D                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0391                     	;# 
   922  0392                     	;# 
   923  0393                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  039A                     	;# 
   928  039B                     	;# 
   929  0611                     	;# 
   930  0612                     	;# 
   931  0613                     	;# 
   932  0613                     	;# 
   933  0614                     	;# 
   934  0615                     	;# 
   935  0616                     	;# 
   936  0616                     	;# 
   937  0691                     	;# 
   938  0692                     	;# 
   939  0693                     	;# 
   940  0694                     	;# 
   941  0695                     	;# 
   942  0E8E                     	;# 
   943  0E8F                     	;# 
   944  0E90                     	;# 
   945  0E91                     	;# 
   946  0E92                     	;# 
   947  0E93                     	;# 
   948  0E94                     	;# 
   949  0E94                     	;# 
   950  0E95                     	;# 
   951  0E96                     	;# 
   952  0E97                     	;# 
   953  0E98                     	;# 
   954  0E99                     	;# 
   955  0E9A                     	;# 
   956  0E9B                     	;# 
   957  0E9C                     	;# 
   958  0E9D                     	;# 
   959  0E9E                     	;# 
   960  0E9F                     	;# 
   961  0FE4                     	;# 
   962  0FE5                     	;# 
   963  0FE6                     	;# 
   964  0FE7                     	;# 
   965  0FE8                     	;# 
   966  0FE9                     	;# 
   967  0FEA                     	;# 
   968  0FEB                     	;# 
   969  0FED                     	;# 
   970  0FEE                     	;# 
   971  0FEF                     	;# 
   972  0000                     	;# 
   973  0001                     	;# 
   974  0002                     	;# 
   975  0003                     	;# 
   976  0004                     	;# 
   977  0005                     	;# 
   978  0006                     	;# 
   979  0007                     	;# 
   980  0008                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  0011                     	;# 
   988  0012                     	;# 
   989  0015                     	;# 
   990  0016                     	;# 
   991  0016                     	;# 
   992  0017                     	;# 
   993  0018                     	;# 
   994  0019                     	;# 
   995  001A                     	;# 
   996  001B                     	;# 
   997  001C                     	;# 
   998  008C                     	;# 
   999  008D                     	;# 
  1000  008E                     	;# 
  1001  0091                     	;# 
  1002  0092                     	;# 
  1003  0095                     	;# 
  1004  0096                     	;# 
  1005  0097                     	;# 
  1006  0098                     	;# 
  1007  0099                     	;# 
  1008  009A                     	;# 
  1009  009B                     	;# 
  1010  009B                     	;# 
  1011  009C                     	;# 
  1012  009D                     	;# 
  1013  009E                     	;# 
  1014  009F                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  0111                     	;# 
  1019  0112                     	;# 
  1020  0113                     	;# 
  1021  0114                     	;# 
  1022  0115                     	;# 
  1023  0116                     	;# 
  1024  0117                     	;# 
  1025  0118                     	;# 
  1026  0119                     	;# 
  1027  011D                     	;# 
  1028  018C                     	;# 
  1029  018D                     	;# 
  1030  018E                     	;# 
  1031  0191                     	;# 
  1032  0191                     	;# 
  1033  0192                     	;# 
  1034  0193                     	;# 
  1035  0193                     	;# 
  1036  0194                     	;# 
  1037  0195                     	;# 
  1038  0196                     	;# 
  1039  0197                     	;# 
  1040  0199                     	;# 
  1041  019A                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019C                     	;# 
  1045  019D                     	;# 
  1046  019E                     	;# 
  1047  019F                     	;# 
  1048  020C                     	;# 
  1049  020D                     	;# 
  1050  0211                     	;# 
  1051  0211                     	;# 
  1052  0212                     	;# 
  1053  0212                     	;# 
  1054  0213                     	;# 
  1055  0213                     	;# 
  1056  0214                     	;# 
  1057  0214                     	;# 
  1058  0215                     	;# 
  1059  0215                     	;# 
  1060  0215                     	;# 
  1061  0216                     	;# 
  1062  0216                     	;# 
  1063  0217                     	;# 
  1064  0217                     	;# 
  1065  0391                     	;# 
  1066  0392                     	;# 
  1067  0393                     	;# 
  1068  0394                     	;# 
  1069  0395                     	;# 
  1070  0396                     	;# 
  1071  039A                     	;# 
  1072  039B                     	;# 
  1073  0611                     	;# 
  1074  0612                     	;# 
  1075  0613                     	;# 
  1076  0613                     	;# 
  1077  0614                     	;# 
  1078  0615                     	;# 
  1079  0616                     	;# 
  1080  0616                     	;# 
  1081  0691                     	;# 
  1082  0692                     	;# 
  1083  0693                     	;# 
  1084  0694                     	;# 
  1085  0695                     	;# 
  1086  0E8E                     	;# 
  1087  0E8F                     	;# 
  1088  0E90                     	;# 
  1089  0E91                     	;# 
  1090  0E92                     	;# 
  1091  0E93                     	;# 
  1092  0E94                     	;# 
  1093  0E94                     	;# 
  1094  0E95                     	;# 
  1095  0E96                     	;# 
  1096  0E97                     	;# 
  1097  0E98                     	;# 
  1098  0E99                     	;# 
  1099  0E9A                     	;# 
  1100  0E9B                     	;# 
  1101  0E9C                     	;# 
  1102  0E9D                     	;# 
  1103  0E9E                     	;# 
  1104  0E9F                     	;# 
  1105  0FE4                     	;# 
  1106  0FE5                     	;# 
  1107  0FE6                     	;# 
  1108  0FE7                     	;# 
  1109  0FE8                     	;# 
  1110  0FE9                     	;# 
  1111  0FEA                     	;# 
  1112  0FEB                     	;# 
  1113  0FED                     	;# 
  1114  0FEE                     	;# 
  1115  0FEF                     	;# 
  1116                           
  1117                           	psect	stringtext1
  1118  10BD                     __pstringtext1:	
  1119  10BD                     _USB_SD_Ptr:	
  1120  10BD  34C3               	retlw	low (_sd000| (0+32768))
  1121  10BE  3490               	retlw	high (_sd000| (0+32768))
  1122  10BF  3477               	retlw	low (_sd001| (0+32768))
  1123  10C0  3490               	retlw	high (_sd001| (0+32768))
  1124  10C1  3443               	retlw	low (_sd002| (0+32768))
  1125  10C2  3490               	retlw	high (_sd002| (0+32768))
  1126  10C3                     __end_of_USB_SD_Ptr:	
  1127                           
  1128                           	psect	stringtext2
  1129  10C7                     __pstringtext2:	
  1130  10C7                     _USB_CD_Ptr:	
  1131  10C7  3400               	retlw	low (_configDescriptor1| (0+32768))
  1132  10C8  3490               	retlw	high (_configDescriptor1| (0+32768))
  1133  10C9                     __end_of_USB_CD_Ptr:	
  1134                           
  1135                           	psect	stringtext3
  1136  1000                     __pstringtext3:	
  1137  1000                     _configDescriptor1:	
  1138  1000  3409               	retlw	9
  1139  1001  3402               	retlw	2
  1140  1002  3443               	retlw	67
  1141  1003  3400               	retlw	0
  1142  1004  3402               	retlw	2
  1143  1005  3401               	retlw	1
  1144  1006  3400               	retlw	0
  1145  1007  34C0               	retlw	192
  1146  1008  3432               	retlw	50
  1147  1009  3409               	retlw	9
  1148  100A  3404               	retlw	4
  1149  100B  3400               	retlw	0
  1150  100C  3400               	retlw	0
  1151  100D  3401               	retlw	1
  1152  100E  3402               	retlw	2
  1153  100F  3402               	retlw	2
  1154  1010  3401               	retlw	1
  1155  1011  3400               	retlw	0
  1156  1012  3405               	retlw	5
  1157  1013  3424               	retlw	36
  1158  1014  3400               	retlw	0
  1159  1015  3410               	retlw	16
  1160  1016  3401               	retlw	1
  1161  1017  3404               	retlw	4
  1162  1018  3424               	retlw	36
  1163  1019  3402               	retlw	2
  1164  101A  3402               	retlw	2
  1165  101B  3405               	retlw	5
  1166  101C  3424               	retlw	36
  1167  101D  3406               	retlw	6
  1168  101E  3400               	retlw	0
  1169  101F  3401               	retlw	1
  1170  1020  3405               	retlw	5
  1171  1021  3424               	retlw	36
  1172  1022  3401               	retlw	1
  1173  1023  3400               	retlw	0
  1174  1024  3401               	retlw	1
  1175  1025  3407               	retlw	7
  1176  1026  3405               	retlw	5
  1177  1027  3481               	retlw	129
  1178  1028  3403               	retlw	3
  1179  1029  3408               	retlw	8
  1180  102A  3400               	retlw	0
  1181  102B  3402               	retlw	2
  1182  102C  3409               	retlw	9
  1183  102D  3404               	retlw	4
  1184  102E  3401               	retlw	1
  1185  102F  3400               	retlw	0
  1186  1030  3402               	retlw	2
  1187  1031  340A               	retlw	10
  1188  1032  3400               	retlw	0
  1189  1033  3400               	retlw	0
  1190  1034  3400               	retlw	0
  1191  1035  3407               	retlw	7
  1192  1036  3405               	retlw	5
  1193  1037  3402               	retlw	2
  1194  1038  3402               	retlw	2
  1195  1039  3440               	retlw	64
  1196  103A  3400               	retlw	0
  1197  103B  3400               	retlw	0
  1198  103C  3407               	retlw	7
  1199  103D  3405               	retlw	5
  1200  103E  3482               	retlw	130
  1201  103F  3402               	retlw	2
  1202  1040  3440               	retlw	64
  1203  1041  3400               	retlw	0
  1204  1042  3400               	retlw	0
  1205  1043                     __end_of_configDescriptor1:	
  1206                           
  1207                           	psect	stringtext4
  1208  1043                     __pstringtext4:	
  1209  1043                     _sd002:	
  1210  1043  3434               	retlw	52
  1211  1044  3403               	retlw	3
  1212  1045  3443               	retlw	67
  1213  1046  3400               	retlw	0
  1214  1047  3444               	retlw	68
  1215  1048  3400               	retlw	0
  1216  1049  3443               	retlw	67
  1217  104A  3400               	retlw	0
  1218  104B  3420               	retlw	32
  1219  104C  3400               	retlw	0
  1220  104D  3452               	retlw	82
  1221  104E  3400               	retlw	0
  1222  104F  3453               	retlw	83
  1223  1050  3400               	retlw	0
  1224  1051  342D               	retlw	45
  1225  1052  3400               	retlw	0
  1226  1053  3432               	retlw	50
  1227  1054  3400               	retlw	0
  1228  1055  3433               	retlw	51
  1229  1056  3400               	retlw	0
  1230  1057  3432               	retlw	50
  1231  1058  3400               	retlw	0
  1232  1059  3420               	retlw	32
  1233  105A  3400               	retlw	0
  1234  105B  3445               	retlw	69
  1235  105C  3400               	retlw	0
  1236  105D  346D               	retlw	109
  1237  105E  3400               	retlw	0
  1238  105F  3475               	retlw	117
  1239  1060  3400               	retlw	0
  1240  1061  346C               	retlw	108
  1241  1062  3400               	retlw	0
  1242  1063  3461               	retlw	97
  1243  1064  3400               	retlw	0
  1244  1065  3474               	retlw	116
  1245  1066  3400               	retlw	0
  1246  1067  3469               	retlw	105
  1247  1068  3400               	retlw	0
  1248  1069  346F               	retlw	111
  1249  106A  3400               	retlw	0
  1250  106B  346E               	retlw	110
  1251  106C  3400               	retlw	0
  1252  106D  3420               	retlw	32
  1253  106E  3400               	retlw	0
  1254  106F  3444               	retlw	68
  1255  1070  3400               	retlw	0
  1256  1071  3465               	retlw	101
  1257  1072  3400               	retlw	0
  1258  1073  346D               	retlw	109
  1259  1074  3400               	retlw	0
  1260  1075  346F               	retlw	111
  1261  1076  3400               	retlw	0
  1262  1077                     __end_of_sd002:	
  1263                           
  1264                           	psect	stringtext5
  1265  1077                     __pstringtext5:	
  1266  1077                     _sd001:	
  1267  1077  3434               	retlw	52
  1268  1078  3403               	retlw	3
  1269  1079  344D               	retlw	77
  1270  107A  3400               	retlw	0
  1271  107B  3469               	retlw	105
  1272  107C  3400               	retlw	0
  1273  107D  3463               	retlw	99
  1274  107E  3400               	retlw	0
  1275  107F  3472               	retlw	114
  1276  1080  3400               	retlw	0
  1277  1081  346F               	retlw	111
  1278  1082  3400               	retlw	0
  1279  1083  3463               	retlw	99
  1280  1084  3400               	retlw	0
  1281  1085  3468               	retlw	104
  1282  1086  3400               	retlw	0
  1283  1087  3469               	retlw	105
  1284  1088  3400               	retlw	0
  1285  1089  3470               	retlw	112
  1286  108A  3400               	retlw	0
  1287  108B  3420               	retlw	32
  1288  108C  3400               	retlw	0
  1289  108D  3454               	retlw	84
  1290  108E  3400               	retlw	0
  1291  108F  3465               	retlw	101
  1292  1090  3400               	retlw	0
  1293  1091  3463               	retlw	99
  1294  1092  3400               	retlw	0
  1295  1093  3468               	retlw	104
  1296  1094  3400               	retlw	0
  1297  1095  346E               	retlw	110
  1298  1096  3400               	retlw	0
  1299  1097  346F               	retlw	111
  1300  1098  3400               	retlw	0
  1301  1099  346C               	retlw	108
  1302  109A  3400               	retlw	0
  1303  109B  346F               	retlw	111
  1304  109C  3400               	retlw	0
  1305  109D  3467               	retlw	103
  1306  109E  3400               	retlw	0
  1307  109F  3479               	retlw	121
  1308  10A0  3400               	retlw	0
  1309  10A1  3420               	retlw	32
  1310  10A2  3400               	retlw	0
  1311  10A3  3449               	retlw	73
  1312  10A4  3400               	retlw	0
  1313  10A5  346E               	retlw	110
  1314  10A6  3400               	retlw	0
  1315  10A7  3463               	retlw	99
  1316  10A8  3400               	retlw	0
  1317  10A9  342E               	retlw	46
  1318  10AA  3400               	retlw	0
  1319  10AB                     __end_of_sd001:	
  1320                           
  1321                           	psect	stringtext6
  1322  10AB                     __pstringtext6:	
  1323  10AB                     _device_dsc:	
  1324  10AB  3412               	retlw	18
  1325  10AC  3401               	retlw	1
  1326  10AD  3400               	retlw	0
  1327  10AE  3402               	retlw	2
  1328  10AF  3402               	retlw	2
  1329  10B0  3400               	retlw	0
  1330  10B1  3400               	retlw	0
  1331  10B2  3408               	retlw	8
  1332  10B3  34D8               	retlw	216
  1333  10B4  3404               	retlw	4
  1334  10B5  340A               	retlw	10
  1335  10B6  3400               	retlw	0
  1336  10B7  3400               	retlw	0
  1337  10B8  3401               	retlw	1
  1338  10B9  3401               	retlw	1
  1339  10BA  3402               	retlw	2
  1340  10BB  3400               	retlw	0
  1341  10BC  3401               	retlw	1
  1342  10BD                     __end_of_device_dsc:	
  1343                           
  1344                           	psect	stringtext7
  1345  10C3                     __pstringtext7:	
  1346  10C3                     _sd000:	
  1347  10C3  3404               	retlw	4
  1348  10C4  3403               	retlw	3
  1349  10C5  3409               	retlw	9
  1350  10C6  3404               	retlw	4
  1351  10C7                     __end_of_sd000:	
  1352  000B                     _INTCONbits	set	11
  1353  0012                     _PIR2bits	set	18
  1354  006F                     _RB7	set	111
  1355  009E                     _ADCON1	set	158
  1356  0092                     _PIE2bits	set	146
  1357  0099                     _OSCCON	set	153
  1358  009B                     _ADRESL	set	155
  1359  009C                     _ADRESH	set	156
  1360  009D                     _ADCON0bits	set	157
  1361  046F                     _TRISB7	set	1135
  1362  0C73                     _ANSC3	set	3187
  1363  0C72                     _ANSC2	set	3186
  1364  039B                     _ACTCON	set	923
  1365  0E98                     _UEP0bits	set	3736
  1366  0E8E                     _UCON	set	3726
  1367  0E8F                     _USTAT	set	3727
  1368  0E92                     _UIEbits	set	3730
  1369  0E90                     _UIRbits	set	3728
  1370  0E96                     _UADDR	set	3734
  1371  0E8E                     _UCONbits	set	3726
  1372  0E92                     _UIE	set	3730
  1373  0E97                     _UEIE	set	3735
  1374  0E91                     _UCFG	set	3729
  1375  0E90                     _UIR	set	3728
  1376  0E93                     _UEIR	set	3731
  1377  0E99                     _UEP1	set	3737
  1378  0E98                     _UEP0	set	3736
  1379                           
  1380                           ; #config settings
  1381  0000                     
  1382                           	psect	cinit
  1383  0014                     start_initialization:	
  1384  0014                     __initialization:	
  1385                           
  1386                           ; Clear objects allocated to BANK1
  1387  0014  0021               	movlb	1	; select bank1
  1388  0015  01E0               	clrf	__pbssBANK1& (0+127)
  1389  0016  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  1390  0017  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  1391  0018  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  1392  0019  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  1393  001A  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  1394                           
  1395                           ; Clear objects allocated to BANK3
  1396  001B  30A0               	movlw	low __pbssBANK3
  1397  001C  0084               	movwf	4
  1398  001D  3001               	movlw	high __pbssBANK3
  1399  001E  0085               	movwf	5
  1400  001F  304A               	movlw	74
  1401  0020  3189  2126  3180   	fcall	clear_ram0
  1402                           
  1403                           ; Clear objects allocated to BANK4
  1404  0023  3020               	movlw	low __pbssBANK4
  1405  0024  0084               	movwf	4
  1406  0025  3002               	movlw	high __pbssBANK4
  1407  0026  0085               	movwf	5
  1408  0027  3012               	movlw	18
  1409  0028  3189  2126  3180   	fcall	clear_ram0
  1410                           
  1411                           ; Clear objects allocated to BANK5
  1412  002B  30A0               	movlw	low __pbssBANK5
  1413  002C  0084               	movwf	4
  1414  002D  3002               	movlw	high __pbssBANK5
  1415  002E  0085               	movwf	5
  1416  002F  3040               	movlw	64
  1417  0030  3189  2126  3180   	fcall	clear_ram0
  1418                           
  1419                           ; Clear objects allocated to BANK6
  1420  0033  3020               	movlw	low __pbssBANK6
  1421  0034  0084               	movwf	4
  1422  0035  3003               	movlw	high __pbssBANK6
  1423  0036  0085               	movwf	5
  1424  0037  3040               	movlw	64
  1425  0038  3189  2126         	fcall	clear_ram0
  1426  003A                     end_of_initialization:	
  1427                           ;End of C runtime variable initialization code
  1428                           
  1429  003A                     __end_of__initialization:	
  1430  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1431  003B  0020               	movlb	0
  1432  003C  3185  2D20         	ljmp	_main	;jump to C main() function
  1433                           
  1434                           	psect	bssBANK1
  1435  00E0                     __pbssBANK1:	
  1436  00E0                     _pBDTEntryEP0OutNext:	
  1437  00E0                     	ds	2
  1438  00E2                     _controlTransferState:	
  1439  00E2                     	ds	1
  1440  00E3                     _pBDTEntryEP0OutCurrent:	
  1441  00E3                     	ds	1
  1442  00E4                     _USBDeviceState:	
  1443  00E4                     	ds	1
  1444  00E5                     _USTATcopy:	
  1445  00E5                     	ds	1
  1446                           
  1447                           	psect	bssBANK3
  1448  01A0                     __pbssBANK3:	
  1449  01A0                     _outPipes:	
  1450  01A0                     	ds	7
  1451  01A7                     _pBDTEntryIn:	
  1452  01A7                     	ds	6
  1453  01AD                     _pBDTEntryOut:	
  1454  01AD                     	ds	6
  1455  01B3                     _inPipes:	
  1456  01B3                     	ds	5
  1457  01B8                     _BaudRateGen:	
  1458  01B8                     	ds	4
  1459  01BC                     _USB1msTickCount:	
  1460  01BC                     	ds	4
  1461  01C0                     _ep_data_out:	
  1462  01C0                     	ds	3
  1463  01C3                     _ep_data_in:	
  1464  01C3                     	ds	3
  1465  01C6                     _CDCDataInHandle:	
  1466  01C6                     	ds	2
  1467  01C8                     _CDCDataOutHandle:	
  1468  01C8                     	ds	2
  1469  01CA                     _pCDCDst:	
  1470  01CA                     	ds	2
  1471  01CC                     _pCDCSrc:	
  1472  01CC                     	ds	2
  1473  01CE                     _control_signal_bitmap:	
  1474  01CE                     	ds	1
  1475  01CF                     _cdc_mem_type:	
  1476  01CF                     	ds	1
  1477  01D0                     _cdc_tx_len:	
  1478  01D0                     	ds	1
  1479  01D1                     _cdc_trf_state:	
  1480  01D1                     	ds	1
  1481  01D2                     _cdc_rx_len:	
  1482  01D2                     	ds	1
  1483  01D3                     _USBTicksSinceSuspendEnd:	
  1484  01D3                     	ds	1
  1485  01D4                     _USBDeferOUTDataStagePackets:	
  1486  01D4                     	ds	1
  1487  01D5                     _USBDeferINDataStagePackets:	
  1488  01D5                     	ds	1
  1489  01D6                     _USBStatusStageEnabledFlag2:	
  1490  01D6                     	ds	1
  1491  01D7                     _USBStatusStageEnabledFlag1:	
  1492  01D7                     	ds	1
  1493  01D8                     _USBDeferStatusStagePacket:	
  1494  01D8                     	ds	1
  1495  01D9                     _USBStatusStageTimeoutCounter:	
  1496  01D9                     	ds	1
  1497  01DA                     _BothEP0OutUOWNsSet:	
  1498  01DA                     	ds	1
  1499  01DB                     _endpoint_number:	
  1500  01DB                     	ds	1
  1501  01DC                     _USBBusIsSuspended:	
  1502  01DC                     	ds	1
  1503  01DD                     _RemoteWakeup:	
  1504  01DD                     	ds	1
  1505  01DE                     _pDst:	
  1506  01DE                     	ds	1
  1507  01DF                     _shortPacketStatus:	
  1508  01DF                     	ds	1
  1509  01E0                     _line_coding:	
  1510  01E0                     	ds	7
  1511  01E7                     _USBAlternateInterface:	
  1512  01E7                     	ds	2
  1513  01E9                     _USBActiveConfiguration:	
  1514  01E9                     	ds	1
  1515                           
  1516                           	psect	bssBANK4
  1517  0220                     __pbssBANK4:	
  1518  0220                     _cdc_notice:	
  1519  0220                     	ds	10
  1520  022A                     _dummy_encapsulated_cmd_response:	
  1521  022A                     	ds	8
  1522                           
  1523                           	psect	bssBANK5
  1524  02A0                     __pbssBANK5:	
  1525  02A0                     _readBuffer:	
  1526  02A0                     	ds	64
  1527                           
  1528                           	psect	bssBANK6
  1529  0320                     __pbssBANK6:	
  1530  0320                     _writeBuffer:	
  1531  0320                     	ds	64
  1532                           
  1533                           	psect	clrtext
  1534  0926                     clear_ram0:	
  1535                           ;	Called with FSR0 containing the base address, and
  1536                           ;	WREG with the size to clear
  1537                           
  1538  0926  0064               	clrwdt	;clear the watchdog before getting into this loop
  1539  0927                     clrloop0:	
  1540  0927  0180               	clrf	0	;clear RAM location pointed to by FSR
  1541  0928  3101               	addfsr 0,1
  1542  0929  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1543  092A  2927               	goto	clrloop0	;have we reached the end yet?
  1544  092B  3400               	retlw	0	;all done for this memory range, return
  1545                           
  1546                           	psect	cstackBANK3
  1547  01EA                     __pcstackBANK3:	
  1548  01EA                     ??_main:	
  1549                           
  1550                           ; 1 bytes @ 0x0
  1551  01EA                     	ds	2
  1552  01EC                     main@numBytesRead:	
  1553                           
  1554                           ; 1 bytes @ 0x2
  1555  01EC                     	ds	1
  1556  01ED                     main@v2:	
  1557                           
  1558                           ; 2 bytes @ 0x3
  1559  01ED                     	ds	2
  1560                           
  1561                           	psect	cstackBANK2
  1562  0160                     __pcstackBANK2:	
  1563  0160                     ?_USBConfigureEndpoint:	
  1564  0160                     ??_ADC_StartConversion:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0160                     ??_ADC_IsConversionDone:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0160                     ??_SYSTEM_Initialize:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0160                     ??_USBDeviceInit:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0160                     ??_USBDeviceAttach:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0160                     ?_putUSBUSART:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0160                     ?_USBTransferOnePacket:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0160                     ?_ADC_GetConversionResult:	
  1586                           ; 2 bytes @ 0x0
  1587                           
  1588  0160                     SYSTEM_Initialize@state:	
  1589                           ; 2 bytes @ 0x0
  1590                           
  1591  0160                     USBTransferOnePacket@dir:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0160                     USBConfigureEndpoint@direction:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0160                     putUSBUSART@length:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600                           
  1601                           ; 1 bytes @ 0x0
  1602  0160                     	ds	1
  1603  0161                     ??_USBConfigureEndpoint:	
  1604  0161                     ??_putUSBUSART:	
  1605                           ; 1 bytes @ 0x1
  1606                           
  1607  0161                     USBDeviceInit@p:	
  1608                           ; 1 bytes @ 0x1
  1609                           
  1610  0161                     USBTransferOnePacket@data:	
  1611                           ; 2 bytes @ 0x1
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0x1
  1615  0161                     	ds	1
  1616  0162                     ??_ADC_GetConversionResult:	
  1617  0162                     putUSBUSART@data:	
  1618                           ; 1 bytes @ 0x2
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x2
  1622  0162                     	ds	1
  1623  0163                     USBDeviceInit@i_885:	
  1624  0163                     USBTransferOnePacket@len:	
  1625                           ; 1 bytes @ 0x3
  1626                           
  1627                           
  1628                           ; 1 bytes @ 0x3
  1629  0163                     	ds	1
  1630  0164                     ??_USBTransferOnePacket:	
  1631  0164                     USBDeviceInit@i:	
  1632                           ; 1 bytes @ 0x4
  1633                           
  1634                           
  1635                           ; 1 bytes @ 0x4
  1636  0164                     	ds	1
  1637  0165                     USBConfigureEndpoint@EPNum:	
  1638                           
  1639                           ; 1 bytes @ 0x5
  1640  0165                     	ds	1
  1641  0166                     USBConfigureEndpoint@handle:	
  1642                           
  1643                           ; 1 bytes @ 0x6
  1644  0166                     	ds	1
  1645  0167                     ?_USBEnableEndpoint:	
  1646  0167                     USBEnableEndpoint@options:	
  1647                           ; 1 bytes @ 0x7
  1648                           
  1649                           
  1650                           ; 1 bytes @ 0x7
  1651  0167                     	ds	1
  1652  0168                     ??_USBEnableEndpoint:	
  1653  0168                     USBTransferOnePacket@ep:	
  1654                           ; 1 bytes @ 0x8
  1655                           
  1656                           
  1657                           ; 1 bytes @ 0x8
  1658  0168                     	ds	1
  1659  0169                     USBTransferOnePacket@handle:	
  1660                           
  1661                           ; 2 bytes @ 0x9
  1662  0169                     	ds	1
  1663  016A                     USBEnableEndpoint@p:	
  1664                           
  1665                           ; 2 bytes @ 0xA
  1666  016A                     	ds	1
  1667  016B                     ?_getsUSBUSART:	
  1668  016B                     ??_CDCTxService:	
  1669                           ; 1 bytes @ 0xB
  1670                           
  1671  016B                     getsUSBUSART@len:	
  1672                           ; 1 bytes @ 0xB
  1673                           
  1674                           
  1675                           ; 1 bytes @ 0xB
  1676  016B                     	ds	1
  1677  016C                     ??_getsUSBUSART:	
  1678  016C                     USBEnableEndpoint@ep:	
  1679                           ; 1 bytes @ 0xC
  1680                           
  1681  016C                     CDCTxService@i:	
  1682                           ; 1 bytes @ 0xC
  1683                           
  1684                           
  1685                           ; 1 bytes @ 0xC
  1686  016C                     	ds	1
  1687  016D                     ??_CDCInitEP:	
  1688  016D                     CDCTxService@byte_to_send:	
  1689                           ; 1 bytes @ 0xD
  1690                           
  1691                           
  1692                           ; 1 bytes @ 0xD
  1693  016D                     	ds	1
  1694  016E                     getsUSBUSART@buffer:	
  1695                           
  1696                           ; 1 bytes @ 0xE
  1697  016E                     	ds	1
  1698                           
  1699                           	psect	cstackBANK1
  1700  00E6                     __pcstackBANK1:	
  1701  00E6                     ??_USBCtrlEPService:	
  1702                           
  1703                           ; 1 bytes @ 0x0
  1704  00E6                     	ds	3
  1705  00E9                     ??_USBDeviceTasks:	
  1706                           
  1707                           ; 1 bytes @ 0x3
  1708  00E9                     	ds	2
  1709  00EB                     ??_SYS_InterruptHigh:	
  1710                           
  1711                           ; 1 bytes @ 0x5
  1712  00EB                     	ds	1
  1713                           
  1714                           	psect	cstackCOMMON
  1715  0070                     __pcstackCOMMON:	
  1716  0070                     ?_USBDeviceTasks:	
  1717  0070                     ?_CDCInitEP:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ?_USBCheckCDCRequest:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ??_USBCheckCDCRequest:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0070                     ?_USBWakeFromSuspend:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ?_USBSuspend:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0070                     ?_USBIncrement1msInternalTimers:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0070                     ??_USBIncrement1msInternalTimers:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0070                     ?_USBCtrlEPAllowStatusStage:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0070                     ??_USBCtrlEPAllowStatusStage:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0070                     ?_USBStallHandler:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0070                     ??_USBStallHandler:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0070                     ?_USBCtrlEPService:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0070                     ?_USBCtrlTrfTxService:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0070                     ??_USBCtrlTrfTxService:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  0070                     ?_USBCtrlTrfSetupHandler:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  0070                     ?_USBCtrlTrfOutHandler:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0070                     ?_USBCtrlTrfInHandler:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0070                     ?_USBCheckStdRequest:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0070                     ?_USBStdFeatureReqHandler:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0070                     ?_ADC_StartConversion:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0070                     ?_ADC_IsConversionDone:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  0070                     ?_SYSTEM_Initialize:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0070                     ?_SYS_InterruptHigh:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  0070                     ?_USBDeviceInit:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  0070                     ?_USBDeviceAttach:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792  0070                     ?_USBCtrlEPAllowDataStage:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795  0070                     ?_USBCtrlEPServiceComplete:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798  0070                     ?_USBCtrlTrfRxService:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801  0070                     ?_USBStdSetCfgHandler:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804  0070                     ?_USBStdGetDscHandler:	
  1805                           ; 1 bytes @ 0x0
  1806                           
  1807  0070                     ??_USBStdGetDscHandler:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810  0070                     ?_USBStdGetStatusHandler:	
  1811                           ; 1 bytes @ 0x0
  1812                           
  1813  0070                     ??_USBStdGetStatusHandler:	
  1814                           ; 1 bytes @ 0x0
  1815                           
  1816  0070                     ?_CDCTxService:	
  1817                           ; 1 bytes @ 0x0
  1818                           
  1819  0070                     ?_main:	
  1820                           ; 1 bytes @ 0x0
  1821                           
  1822  0070                     ?i1_SYSTEM_Initialize:	
  1823                           ; 1 bytes @ 0x0
  1824                           
  1825  0070                     ??i1_SYSTEM_Initialize:	
  1826                           ; 1 bytes @ 0x0
  1827                           
  1828  0070                     ?i1_USBDeviceInit:	
  1829                           ; 1 bytes @ 0x0
  1830                           
  1831  0070                     ??i1_USBDeviceInit:	
  1832                           ; 1 bytes @ 0x0
  1833                           
  1834  0070                     ?i1_USBConfigureEndpoint:	
  1835                           ; 1 bytes @ 0x0
  1836                           
  1837  0070                     ?i1_CDCInitEP:	
  1838                           ; 1 bytes @ 0x0
  1839                           
  1840  0070                     ?_memset:	
  1841                           ; 1 bytes @ 0x0
  1842                           
  1843  0070                     ?i1_USBTransferOnePacket:	
  1844                           ; 2 bytes @ 0x0
  1845                           
  1846  0070                     i1SYSTEM_Initialize@state:	
  1847                           ; 2 bytes @ 0x0
  1848                           
  1849  0070                     i1USBTransferOnePacket@dir:	
  1850                           ; 1 bytes @ 0x0
  1851                           
  1852  0070                     i1USBConfigureEndpoint@direction:	
  1853                           ; 1 bytes @ 0x0
  1854                           
  1855  0070                     memset@p1:	
  1856                           ; 1 bytes @ 0x0
  1857                           
  1858                           
  1859                           ; 2 bytes @ 0x0
  1860  0070                     	ds	1
  1861  0071                     ??i1_USBConfigureEndpoint:	
  1862  0071                     USBStdGetStatusHandler@p:	
  1863                           ; 1 bytes @ 0x1
  1864                           
  1865  0071                     i1USBDeviceInit@p:	
  1866                           ; 2 bytes @ 0x1
  1867                           
  1868  0071                     i1USBTransferOnePacket@data:	
  1869                           ; 2 bytes @ 0x1
  1870                           
  1871                           
  1872                           ; 2 bytes @ 0x1
  1873  0071                     	ds	1
  1874  0072                     ??_USBCtrlTrfRxService:	
  1875  0072                     USBCtrlTrfTxService@byteToSend:	
  1876                           ; 1 bytes @ 0x2
  1877                           
  1878  0072                     memset@c:	
  1879                           ; 1 bytes @ 0x2
  1880                           
  1881                           
  1882                           ; 2 bytes @ 0x2
  1883  0072                     	ds	1
  1884  0073                     ??_USBCtrlTrfInHandler:	
  1885  0073                     ??_USBCtrlEPAllowDataStage:	
  1886                           ; 1 bytes @ 0x3
  1887                           
  1888  0073                     i1USBDeviceInit@i_885:	
  1889                           ; 1 bytes @ 0x3
  1890                           
  1891  0073                     i1USBTransferOnePacket@len:	
  1892                           ; 1 bytes @ 0x3
  1893                           
  1894                           
  1895                           ; 1 bytes @ 0x3
  1896  0073                     	ds	1
  1897  0074                     ??i1_USBTransferOnePacket:	
  1898  0074                     USBCtrlTrfRxService@i:	
  1899                           ; 1 bytes @ 0x4
  1900                           
  1901  0074                     i1USBDeviceInit@i:	
  1902                           ; 1 bytes @ 0x4
  1903                           
  1904  0074                     memset@n:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907                           
  1908                           ; 2 bytes @ 0x4
  1909  0074                     	ds	1
  1910  0075                     ??_USBCtrlEPServiceComplete:	
  1911  0075                     USBCtrlTrfRxService@byteToRead:	
  1912                           ; 1 bytes @ 0x5
  1913                           
  1914  0075                     USBCtrlTrfInHandler@lastDTS:	
  1915                           ; 1 bytes @ 0x5
  1916                           
  1917  0075                     i1USBConfigureEndpoint@EPNum:	
  1918                           ; 1 bytes @ 0x5
  1919                           
  1920                           
  1921                           ; 1 bytes @ 0x5
  1922  0075                     	ds	1
  1923  0076                     ??_memset:	
  1924  0076                     ??_USBCtrlTrfOutHandler:	
  1925                           ; 1 bytes @ 0x6
  1926                           
  1927  0076                     i1USBConfigureEndpoint@handle:	
  1928                           ; 1 bytes @ 0x6
  1929                           
  1930  0076                     memset@p:	
  1931                           ; 1 bytes @ 0x6
  1932                           
  1933                           
  1934                           ; 2 bytes @ 0x6
  1935  0076                     	ds	1
  1936  0077                     ?i1_USBEnableEndpoint:	
  1937  0077                     i1USBEnableEndpoint@options:	
  1938                           ; 1 bytes @ 0x7
  1939                           
  1940                           
  1941                           ; 1 bytes @ 0x7
  1942  0077                     	ds	1
  1943  0078                     ??i1_USBEnableEndpoint:	
  1944  0078                     i1USBTransferOnePacket@ep:	
  1945                           ; 1 bytes @ 0x8
  1946                           
  1947                           
  1948                           ; 1 bytes @ 0x8
  1949  0078                     	ds	1
  1950  0079                     i1USBTransferOnePacket@handle:	
  1951                           
  1952                           ; 2 bytes @ 0x9
  1953  0079                     	ds	1
  1954  007A                     i1USBEnableEndpoint@p:	
  1955                           
  1956                           ; 2 bytes @ 0xA
  1957  007A                     	ds	2
  1958  007C                     i1USBEnableEndpoint@ep:	
  1959                           
  1960                           ; 1 bytes @ 0xC
  1961  007C                     	ds	1
  1962  007D                     ??i1_CDCInitEP:	
  1963                           
  1964                           ; 1 bytes @ 0xD
  1965  007D                     	ds	1
  1966  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1967                           
  1968                           	psect	cstackBANK0
  1969  0060                     __pcstackBANK0:	
  1970                           ; 1 bytes @ 0xE
  1971                           
  1972  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1973  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976                           
  1977                           ; 2 bytes @ 0x0
  1978  0060                     	ds	2
  1979  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1980                           
  1981                           ; 2 bytes @ 0x2
  1982  0062                     	ds	2
  1983  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1984                           
  1985                           ; 2 bytes @ 0x4
  1986  0064                     	ds	2
  1987  0066                     ??_USBWakeFromSuspend:	
  1988  0066                     ??_USBSuspend:	
  1989                           ; 1 bytes @ 0x6
  1990                           
  1991  0066                     ??_USBStdFeatureReqHandler:	
  1992                           ; 1 bytes @ 0x6
  1993                           
  1994  0066                     ??_USBStdSetCfgHandler:	
  1995                           ; 1 bytes @ 0x6
  1996                           
  1997                           
  1998                           ; 1 bytes @ 0x6
  1999  0066                     	ds	1
  2000  0067                     USBStdSetCfgHandler@p:	
  2001                           
  2002                           ; 2 bytes @ 0x7
  2003  0067                     	ds	1
  2004  0068                     USBStdFeatureReqHandler@pUEP:	
  2005                           
  2006                           ; 2 bytes @ 0x8
  2007  0068                     	ds	1
  2008  0069                     USBStdSetCfgHandler@i_1636:	
  2009                           
  2010                           ; 1 bytes @ 0x9
  2011  0069                     	ds	1
  2012  006A                     USBStdSetCfgHandler@i:	
  2013  006A                     USBStdFeatureReqHandler@current_ep_data:	
  2014                           ; 1 bytes @ 0xA
  2015                           
  2016                           
  2017                           ; 1 bytes @ 0xA
  2018  006A                     	ds	1
  2019  006B                     USBStdFeatureReqHandler@p:	
  2020                           
  2021                           ; 2 bytes @ 0xB
  2022  006B                     	ds	2
  2023  006D                     ??_USBCheckStdRequest:	
  2024                           
  2025                           ; 1 bytes @ 0xD
  2026  006D                     	ds	1
  2027  006E                     ??_USBCtrlTrfSetupHandler:	
  2028                           
  2029                           ; 1 bytes @ 0xE
  2030  006E                     	ds	1
  2031  006F                     USBDeviceTasks@i:	
  2032                           
  2033                           ; 1 bytes @ 0xF
  2034  006F                     	ds	1
  2035                           
  2036                           	psect	maintext
  2037  0520                     __pmaintext:	
  2038 ;;
  2039 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2040 ;;
  2041 ;; *************** function _main *****************
  2042 ;; Defined at:
  2043 ;;		line 16 in file "../src/main.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  v2              2    3[BANK3 ] unsigned int 
  2048 ;;  result          2    0        unsigned int 
  2049 ;;  v1              2    0        unsigned int 
  2050 ;;  numBytesRead    1    2[BANK3 ] unsigned char 
  2051 ;;  a               1    0        unsigned char 
  2052 ;;  i               1    0        unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : B1F/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  2066 ;;Total ram usage:        5 bytes
  2067 ;; Hardware stack levels required when called:   13
  2068 ;; This function calls:
  2069 ;;		_ADC_GetConversionResult
  2070 ;;		_ADC_IsConversionDone
  2071 ;;		_ADC_StartConversion
  2072 ;;		_CDCInitEP
  2073 ;;		_CDCTxService
  2074 ;;		_SYSTEM_Initialize
  2075 ;;		_USBDeviceAttach
  2076 ;;		_USBDeviceInit
  2077 ;;		_getsUSBUSART
  2078 ;;		_putUSBUSART
  2079 ;; This function is called by:
  2080 ;;		Startup code after reset
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function _main
  2086  0520                     _main:	
  2087                           
  2088                           ;main.c: 18: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2089                           
  2090                           ;incstack = 0
  2091                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2092  0520  3000               	movlw	0
  2093  0521  3189  2151  3185   	fcall	_SYSTEM_Initialize
  2094                           
  2095                           ;main.c: 20: USBDeviceInit();
  2096  0524  3183  231B  3185   	fcall	_USBDeviceInit
  2097                           
  2098                           ;main.c: 21: USBDeviceAttach();
  2099  0527  3189  2198  3185   	fcall	_USBDeviceAttach
  2100                           
  2101                           ;main.c: 22: CDCInitEP();
  2102  052A  318B  2302  3185   	fcall	_CDCInitEP
  2103                           
  2104                           ;main.c: 23: {line_coding.dwDTERate=1200;};
  2105  052D  3000               	movlw	0
  2106  052E  0023               	movlb	3	; select bank3
  2107  052F  00E3               	movwf	(_line_coding+3)^(0+384)
  2108  0530  3000               	movlw	0
  2109  0531  00E2               	movwf	(_line_coding+2)^(0+384)
  2110  0532  3004               	movlw	4
  2111  0533  00E1               	movwf	(_line_coding+1)^(0+384)
  2112  0534  30B0               	movlw	176
  2113  0535  00E0               	movwf	_line_coding^(0+384)
  2114                           
  2115                           ;main.c: 25: TRISB7=0;
  2116  0536  0021               	movlb	1	; select bank1
  2117  0537  138D               	bcf	13,7	;volatile
  2118                           
  2119                           ;main.c: 26: ANSC2=1;
  2120  0538  0023               	movlb	3	; select bank3
  2121  0539  150E               	bsf	14,2	;volatile
  2122                           
  2123                           ;main.c: 27: ANSC3=1;
  2124  053A  158E               	bsf	14,3	;volatile
  2125                           
  2126                           ;main.c: 28: RB7=1;
  2127  053B  0020               	movlb	0	; select bank0
  2128  053C  178D               	bsf	13,7	;volatile
  2129  053D                     l4313:	
  2130                           ;main.c: 33: while(1){
  2131                           
  2132                           
  2133                           ;main.c: 34: if( (cdc_trf_state == 0) == 1){
  2134  053D  0023               	movlb	3	; select bank3
  2135  053E  0851               	movf	_cdc_trf_state^(0+384),w
  2136  053F  1D03               	btfss	3,2
  2137  0540  2DB9               	goto	l4353
  2138                           
  2139                           ;main.c: 35: uint8_t i, numBytesRead, a;
  2140                           ;main.c: 36: adc_result_t v1, v2=0, result;
  2141  0541  01ED               	clrf	main@v2^(0+384)
  2142  0542  01EE               	clrf	(main@v2+1)^(0+384)
  2143                           
  2144                           ;main.c: 38: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  2145  0543  3040               	movlw	64
  2146  0544  00EA               	movwf	??_main^(0+384)
  2147  0545  086A               	movf	??_main^(0+384),w
  2148  0546  0022               	movlb	2	; select bank2
  2149  0547  00EB               	movwf	getsUSBUSART@len^(0+256)
  2150  0548  30A0               	movlw	(low (_readBuffer| (0+512)))& (0+255)
  2151  0549  318C  24C3  3185   	fcall	_getsUSBUSART
  2152  054C  0023               	movlb	3	; select bank3
  2153  054D  00EB               	movwf	(??_main+1)^(0+384)
  2154  054E  086B               	movf	(??_main+1)^(0+384),w
  2155  054F  00EC               	movwf	main@numBytesRead^(0+384)
  2156                           
  2157                           ;main.c: 40: if(numBytesRead > 0 && readBuffer[0] == 'A'){
  2158  0550  086C               	movf	main@numBytesRead^(0+384),w
  2159  0551  1903               	btfsc	3,2
  2160  0552  2DB9               	goto	l4353
  2161  0553  3041               	movlw	65
  2162  0554  0025               	movlb	5	; select bank5
  2163  0555  0620               	xorwf	_readBuffer^(0+640),w
  2164  0556  1D03               	btfss	3,2
  2165  0557  2DB9               	goto	l4353
  2166                           
  2167                           ;main.c: 55: RB7=0;
  2168  0558  0020               	movlb	0	; select bank0
  2169  0559  138D               	bcf	13,7	;volatile
  2170                           
  2171                           ;main.c: 56: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2172  055A  3015               	movlw	21
  2173  055B  0023               	movlb	3	; select bank3
  2174  055C  00EB               	movwf	(??_main^(0+384)+1)
  2175  055D  304B               	movlw	75
  2176  055E  00EA               	movwf	??_main^(0+384)
  2177  055F  30BE               	movlw	190
  2178  0560                     u3997:	
  2179  0560  0B89               	decfsz	9,f
  2180  0561  2D60               	goto	u3997
  2181  0562  0BEA               	decfsz	??_main^(0+384),f
  2182  0563  2D60               	goto	u3997
  2183  0564  0BEB               	decfsz	(??_main^(0+384)+1),f
  2184  0565  2D60               	goto	u3997
  2185  0566  0000               	nop
  2186                           
  2187                           ;main.c: 57: RB7=1;
  2188  0567  0020               	movlb	0	; select bank0
  2189  0568  178D               	bsf	13,7	;volatile
  2190                           
  2191                           ;main.c: 58: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2192  0569  3015               	movlw	21
  2193  056A  0023               	movlb	3	; select bank3
  2194  056B  00EB               	movwf	(??_main^(0+384)+1)
  2195  056C  304B               	movlw	75
  2196  056D  00EA               	movwf	??_main^(0+384)
  2197  056E  30BE               	movlw	190
  2198  056F                     u4007:	
  2199  056F  0B89               	decfsz	9,f
  2200  0570  2D6F               	goto	u4007
  2201  0571  0BEA               	decfsz	??_main^(0+384),f
  2202  0572  2D6F               	goto	u4007
  2203  0573  0BEB               	decfsz	(??_main^(0+384)+1),f
  2204  0574  2D6F               	goto	u4007
  2205  0575  0000               	nop
  2206                           
  2207                           ;main.c: 60: ADCON0bits.CHS = 0b00111;
  2208  0576  0021               	movlb	1	; select bank1
  2209  0577  081D               	movf	29,w	;volatile
  2210  0578  3983               	andlw	-125
  2211  0579  381C               	iorlw	28
  2212  057A  009D               	movwf	29	;volatile
  2213                           
  2214                           ;main.c: 61: ADCON0bits.ADON=1;
  2215  057B  141D               	bsf	29,0	;volatile
  2216                           
  2217                           ;main.c: 62: ADCON1 = 0xE0;
  2218  057C  30E0               	movlw	224
  2219  057D  009E               	movwf	30	;volatile
  2220                           
  2221                           ;main.c: 63: ADC_StartConversion();
  2222  057E  3189  2123  3185   	fcall	_ADC_StartConversion
  2223  0581                     l4337:	
  2224                           ;main.c: 64: while(!ADC_IsConversionDone());
  2225                           
  2226  0581  3189  212C  3185   	fcall	_ADC_IsConversionDone
  2227  0584  3A00               	xorlw	0
  2228  0585  1903               	skipnz
  2229  0586  2D81               	goto	l4337
  2230                           
  2231                           ;main.c: 65: v2 = ADC_GetConversionResult();
  2232  0587  3189  2133  3185   	fcall	_ADC_GetConversionResult
  2233  058A  0022               	movlb	2	; select bank2
  2234  058B  0861               	movf	(?_ADC_GetConversionResult+1)^(0+256),w
  2235  058C  0023               	movlb	3	; select bank3
  2236  058D  00EE               	movwf	(main@v2+1)^(0+384)
  2237  058E  0022               	movlb	2	; select bank2
  2238  058F  0860               	movf	?_ADC_GetConversionResult^(0+256),w
  2239  0590  0023               	movlb	3	; select bank3
  2240  0591  00ED               	movwf	main@v2^(0+384)
  2241                           
  2242                           ;main.c: 68: RB7=0;
  2243  0592  0020               	movlb	0	; select bank0
  2244  0593  138D               	bcf	13,7	;volatile
  2245                           
  2246                           ;main.c: 69: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2247  0594  3015               	movlw	21
  2248  0595  0023               	movlb	3	; select bank3
  2249  0596  00EB               	movwf	(??_main^(0+384)+1)
  2250  0597  304B               	movlw	75
  2251  0598  00EA               	movwf	??_main^(0+384)
  2252  0599  30BE               	movlw	190
  2253  059A                     u4017:	
  2254  059A  0B89               	decfsz	9,f
  2255  059B  2D9A               	goto	u4017
  2256  059C  0BEA               	decfsz	??_main^(0+384),f
  2257  059D  2D9A               	goto	u4017
  2258  059E  0BEB               	decfsz	(??_main^(0+384)+1),f
  2259  059F  2D9A               	goto	u4017
  2260  05A0  0000               	nop
  2261                           
  2262                           ;main.c: 70: RB7=1;
  2263  05A1  0020               	movlb	0	; select bank0
  2264  05A2  178D               	bsf	13,7	;volatile
  2265                           
  2266                           ;main.c: 79: writeBuffer[0]=(uint8_t)v2;
  2267  05A3  0023               	movlb	3	; select bank3
  2268  05A4  086D               	movf	main@v2^(0+384),w
  2269  05A5  00EA               	movwf	??_main^(0+384)
  2270  05A6  086A               	movf	??_main^(0+384),w
  2271  05A7  0026               	movlb	6	; select bank6
  2272  05A8  00A0               	movwf	_writeBuffer^(0+768)
  2273                           
  2274                           ;main.c: 80: writeBuffer[1]=(uint8_t)(v2>>8);
  2275  05A9  0023               	movlb	3	; select bank3
  2276  05AA  086E               	movf	(main@v2+1)^(0+384),w
  2277  05AB  00EA               	movwf	??_main^(0+384)
  2278  05AC  086A               	movf	??_main^(0+384),w
  2279  05AD  0026               	movlb	6	; select bank6
  2280  05AE  00A1               	movwf	(_writeBuffer^(0+768)+1)
  2281                           
  2282                           ;main.c: 81: putUSBUSART(writeBuffer, 2);
  2283  05AF  3002               	movlw	2
  2284  05B0  0023               	movlb	3	; select bank3
  2285  05B1  00EA               	movwf	??_main^(0+384)
  2286  05B2  086A               	movf	??_main^(0+384),w
  2287  05B3  0022               	movlb	2	; select bank2
  2288  05B4  00E0               	movwf	putUSBUSART@length^(0+256)
  2289  05B5  3020               	movlw	(low (_writeBuffer| (0+768)))& (0+255)
  2290  05B6  3187  27E4  3185   	fcall	_putUSBUSART
  2291  05B9                     l4353:	
  2292                           
  2293                           ;main.c: 83: }
  2294                           ;main.c: 84: }
  2295                           ;main.c: 85: CDCTxService();
  2296  05B9  3182  224B  3185   	fcall	_CDCTxService
  2297  05BC  2D3D               	goto	l4313
  2298  05BD                     __end_of_main:	
  2299                           
  2300                           	psect	text1
  2301  07E4                     __ptext1:	
  2302 ;; *************** function _putUSBUSART *****************
  2303 ;; Defined at:
  2304 ;;		line 556 in file "../lib/usb/src/usb_device_cdc.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  data            1    wreg     PTR unsigned char 
  2307 ;;		 -> writeBuffer(64), 
  2308 ;;  length          1    0[BANK2 ] unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  data            1    2[BANK2 ] PTR unsigned char 
  2311 ;;		 -> writeBuffer(64), 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2321 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2322 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2323 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;Total ram usage:        3 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:   10
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           
  2336                           ;psect for function _putUSBUSART
  2337  07E4                     _putUSBUSART:	
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  2341                           ;putUSBUSART@data stored from wreg
  2342  07E4  0022               	movlb	2	; select bank2
  2343  07E5  00E2               	movwf	putUSBUSART@data^(0+256)
  2344                           
  2345                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2346  07E6  0021               	movlb	1	; select bank1
  2347  07E7  1112               	bcf	18,2	;volatile
  2348                           
  2349                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2350  07E8  0023               	movlb	3	; select bank3
  2351  07E9  0851               	movf	_cdc_trf_state^(0+384),w
  2352  07EA  1D03               	btfss	3,2
  2353  07EB  2FFC               	goto	l4203
  2354                           
  2355                           ;usb_device_cdc.c: 583: {
  2356                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2357  07EC  0022               	movlb	2	; select bank2
  2358  07ED  0862               	movf	putUSBUSART@data^(0+256),w
  2359  07EE  00E1               	movwf	??_putUSBUSART^(0+256)
  2360  07EF  0861               	movf	??_putUSBUSART^(0+256),w
  2361  07F0  0023               	movlb	3	; select bank3
  2362  07F1  00CC               	movwf	_pCDCSrc^(0+384)
  2363  07F2  0022               	movlb	2	; select bank2
  2364  07F3  0860               	movf	putUSBUSART@length^(0+256),w
  2365  07F4  00E1               	movwf	??_putUSBUSART^(0+256)
  2366  07F5  0861               	movf	??_putUSBUSART^(0+256),w
  2367  07F6  0023               	movlb	3	; select bank3
  2368  07F7  00D0               	movwf	_cdc_tx_len^(0+384)
  2369  07F8  01CF               	clrf	_cdc_mem_type^(0+384)
  2370  07F9  0ACF               	incf	_cdc_mem_type^(0+384),f
  2371  07FA  01D1               	clrf	_cdc_trf_state^(0+384)
  2372  07FB  0AD1               	incf	_cdc_trf_state^(0+384),f
  2373  07FC                     l4203:	
  2374                           
  2375                           ;usb_device_cdc.c: 585: }
  2376                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2377  07FC  0021               	movlb	1	; select bank1
  2378  07FD  1512               	bsf	18,2	;volatile
  2379  07FE  0008               	return
  2380  07FF                     __end_of_putUSBUSART:	
  2381                           
  2382                           	psect	text2
  2383  0CC3                     __ptext2:	
  2384 ;; *************** function _getsUSBUSART *****************
  2385 ;; Defined at:
  2386 ;;		line 485 in file "../lib/usb/src/usb_device_cdc.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  buffer          1    wreg     PTR unsigned char 
  2389 ;;		 -> readBuffer(64), 
  2390 ;;  len             1   11[BANK2 ] unsigned char 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  buffer          1   14[BANK2 ] PTR unsigned char 
  2393 ;;		 -> readBuffer(64), 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      unsigned char 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2403 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;Total ram usage:        4 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:   11
  2410 ;; This function calls:
  2411 ;;		_USBTransferOnePacket
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _getsUSBUSART
  2419  0CC3                     _getsUSBUSART:	
  2420                           
  2421                           ;incstack = 0
  2422                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2423                           ;getsUSBUSART@buffer stored from wreg
  2424  0CC3  0022               	movlb	2	; select bank2
  2425  0CC4  00EE               	movwf	getsUSBUSART@buffer^(0+256)
  2426                           
  2427                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2428  0CC5  0023               	movlb	3	; select bank3
  2429  0CC6  01D2               	clrf	_cdc_rx_len^(0+384)
  2430                           
  2431                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2432  0CC7  0848               	movf	_CDCDataOutHandle^(0+384),w
  2433  0CC8  0449               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  2434  0CC9  1903               	btfsc	3,2
  2435  0CCA  2CD1               	goto	l4175
  2436  0CCB  0848               	movf	_CDCDataOutHandle^(0+384),w
  2437  0CCC  0086               	movwf	6
  2438  0CCD  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2439  0CCE  0087               	movwf	7
  2440  0CCF  1B81               	btfsc	1,7
  2441  0CD0  2D1C               	goto	l4189
  2442  0CD1                     l4175:	
  2443                           
  2444                           ;usb_device_cdc.c: 490: {
  2445                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2446  0CD1  0848               	movf	_CDCDataOutHandle^(0+384),w
  2447  0CD2  0086               	movwf	6
  2448  0CD3  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2449  0CD4  0087               	movwf	7
  2450  0CD5  3141               	addfsr 1,1
  2451  0CD6  0022               	movlb	2	; select bank2
  2452  0CD7  086B               	movf	getsUSBUSART@len^(0+256),w
  2453  0CD8  0201               	subwf	1,w
  2454  0CD9  1803               	skipnc
  2455  0CDA  2CE6               	goto	l4179
  2456                           
  2457                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2458  0CDB  0023               	movlb	3	; select bank3
  2459  0CDC  0848               	movf	_CDCDataOutHandle^(0+384),w
  2460  0CDD  0086               	movwf	6
  2461  0CDE  0849               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2462  0CDF  0087               	movwf	7
  2463  0CE0  3141               	addfsr 1,1
  2464  0CE1  0801               	movf	1,w
  2465  0CE2  0022               	movlb	2	; select bank2
  2466  0CE3  00EC               	movwf	??_getsUSBUSART^(0+256)
  2467  0CE4  086C               	movf	??_getsUSBUSART^(0+256),w
  2468  0CE5  00EB               	movwf	getsUSBUSART@len^(0+256)
  2469  0CE6                     l4179:	
  2470                           
  2471                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2472  0CE6  0023               	movlb	3	; select bank3
  2473  0CE7  01D2               	clrf	_cdc_rx_len^(0+384)
  2474  0CE8                     l4185:	
  2475  0CE8  0022               	movlb	2	; select bank2
  2476  0CE9  086B               	movf	getsUSBUSART@len^(0+256),w
  2477  0CEA  0023               	movlb	3	; select bank3
  2478  0CEB  0252               	subwf	_cdc_rx_len^(0+384),w
  2479  0CEC  1803               	btfsc	3,0
  2480  0CED  2D07               	goto	l4187
  2481                           
  2482                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2483  0CEE  0852               	movf	_cdc_rx_len^(0+384),w
  2484  0CEF  3E20               	addlw	32
  2485  0CF0  0086               	movwf	6
  2486  0CF1  3001               	movlw	1	; select bank2/3
  2487  0CF2  0087               	movwf	7
  2488  0CF3  0801               	movf	1,w
  2489  0CF4  0022               	movlb	2	; select bank2
  2490  0CF5  00EC               	movwf	??_getsUSBUSART^(0+256)
  2491  0CF6  0023               	movlb	3	; select bank3
  2492  0CF7  0852               	movf	_cdc_rx_len^(0+384),w
  2493  0CF8  0022               	movlb	2	; select bank2
  2494  0CF9  076E               	addwf	getsUSBUSART@buffer^(0+256),w
  2495  0CFA  00ED               	movwf	(??_getsUSBUSART+1)^(0+256)
  2496  0CFB  086D               	movf	(??_getsUSBUSART+1)^(0+256),w
  2497  0CFC  0086               	movwf	6
  2498  0CFD  3002               	movlw	2	; select bank4/5
  2499  0CFE  0087               	movwf	7
  2500  0CFF  086C               	movf	??_getsUSBUSART^(0+256),w
  2501  0D00  0081               	movwf	1
  2502  0D01  3001               	movlw	1
  2503  0D02  00EC               	movwf	??_getsUSBUSART^(0+256)
  2504  0D03  086C               	movf	??_getsUSBUSART^(0+256),w
  2505  0D04  0023               	movlb	3	; select bank3
  2506  0D05  07D2               	addwf	_cdc_rx_len^(0+384),f
  2507  0D06  2CE8               	goto	l4185
  2508  0D07                     l4187:	
  2509                           
  2510                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2511  0D07  0022               	movlb	2	; select bank2
  2512  0D08  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  2513  0D09  3020               	movlw	32
  2514  0D0A  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  2515  0D0B  3001               	movlw	1
  2516  0D0C  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  2517  0D0D  3040               	movlw	64
  2518  0D0E  00EC               	movwf	??_getsUSBUSART^(0+256)
  2519  0D0F  086C               	movf	??_getsUSBUSART^(0+256),w
  2520  0D10  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  2521  0D11  3002               	movlw	2
  2522  0D12  3186  26DD         	fcall	_USBTransferOnePacket
  2523  0D14  0022               	movlb	2	; select bank2
  2524  0D15  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  2525  0D16  0023               	movlb	3	; select bank3
  2526  0D17  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  2527  0D18  0022               	movlb	2	; select bank2
  2528  0D19  0860               	movf	?_USBTransferOnePacket^(0+256),w
  2529  0D1A  0023               	movlb	3	; select bank3
  2530  0D1B  00C8               	movwf	_CDCDataOutHandle^(0+384)
  2531  0D1C                     l4189:	
  2532                           
  2533                           ;usb_device_cdc.c: 510: }
  2534                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2535  0D1C  0852               	movf	_cdc_rx_len^(0+384),w
  2536  0D1D  0008               	return
  2537  0D1E                     __end_of_getsUSBUSART:	
  2538                           
  2539                           	psect	text3
  2540  031B                     __ptext3:	
  2541 ;; *************** function _USBDeviceInit *****************
  2542 ;; Defined at:
  2543 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  p               2    1[BANK2 ] PTR unsigned char 
  2548 ;;		 -> UEP1(1), 
  2549 ;;  i               1    3[BANK2 ] unsigned char 
  2550 ;;  i               1    4[BANK2 ] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;Total ram usage:        5 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:   10
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function _USBDeviceInit
  2576  031B                     _USBDeviceInit:	
  2577                           
  2578                           ;usb_device.c: 279: uint8_t i;
  2579                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2583  031B  0021               	movlb	1	; select bank1
  2584  031C  1112               	bcf	18,2	;volatile
  2585                           
  2586                           ;usb_device.c: 285: ;
  2587                           ;usb_device.c: 288: {UEIR = 0;};
  2588  031D  003D               	movlb	29	; select bank29
  2589  031E  0193               	clrf	19	;volatile
  2590                           
  2591                           ;usb_device.c: 291: {UIR = 0;};
  2592  031F  0190               	clrf	16	;volatile
  2593                           
  2594                           ;usb_device.c: 294: UEP0 = 0;
  2595  0320  0198               	clrf	24	;volatile
  2596                           
  2597                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  2598  0321  300E               	movlw	14
  2599  0322  0022               	movlb	2	; select bank2
  2600  0323  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  2601  0324  3099               	movlw	153
  2602  0325  00E1               	movwf	USBDeviceInit@p^(0+256)
  2603  0326  01E3               	clrf	USBDeviceInit@i_885^(0+256)
  2604  0327  3002               	movlw	2
  2605  0328  0263               	subwf	USBDeviceInit@i_885^(0+256),w
  2606  0329  1803               	btfsc	3,0
  2607  032A  2B3C               	goto	l4083
  2608  032B                     l4075:	
  2609  032B  0861               	movf	USBDeviceInit@p^(0+256),w
  2610  032C  0086               	movwf	6
  2611  032D  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  2612  032E  0087               	movwf	7
  2613  032F  0181               	clrf	1
  2614  0330  3001               	movlw	1
  2615  0331  07E1               	addwf	USBDeviceInit@p^(0+256),f
  2616  0332  3000               	movlw	0
  2617  0333  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  2618  0334  3001               	movlw	1
  2619  0335  00E0               	movwf	??_USBDeviceInit^(0+256)
  2620  0336  0860               	movf	??_USBDeviceInit^(0+256),w
  2621  0337  07E3               	addwf	USBDeviceInit@i_885^(0+256),f
  2622  0338  3002               	movlw	2
  2623  0339  0263               	subwf	USBDeviceInit@i_885^(0+256),w
  2624  033A  1C03               	skipc
  2625  033B  2B2B               	goto	l4075
  2626  033C                     l4083:	
  2627                           
  2628                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2629  033C  3016               	movlw	22
  2630  033D  003D               	movlb	29	; select bank29
  2631  033E  0091               	movwf	17	;volatile
  2632  033F  309F               	movlw	159
  2633  0340  0097               	movwf	23	;volatile
  2634  0341  307B               	movlw	123
  2635  0342  0092               	movwf	18	;volatile
  2636                           
  2637                           ;usb_device.c: 301: ;
  2638                           ;usb_device.c: 304: ;
  2639                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  2640  0343  0022               	movlb	2	; select bank2
  2641  0344  01E4               	clrf	USBDeviceInit@i^(0+256)
  2642  0345  300C               	movlw	12
  2643  0346  0264               	subwf	USBDeviceInit@i^(0+256),w
  2644  0347  1803               	btfsc	3,0
  2645  0348  2B62               	goto	l210
  2646  0349                     l4091:	
  2647                           
  2648                           ;usb_device.c: 308: {
  2649                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  2650  0349  0864               	movf	USBDeviceInit@i^(0+256),w
  2651  034A  00E0               	movwf	??_USBDeviceInit^(0+256)
  2652  034B  3001               	movlw	1
  2653  034C                     u3695:	
  2654  034C  35E0               	lslf	??_USBDeviceInit^(0+256),f
  2655  034D  3EFF               	addlw	-1
  2656  034E  1D03               	skipz
  2657  034F  2B4C               	goto	u3695
  2658  0350  3560               	lslf	??_USBDeviceInit^(0+256),w
  2659  0351  3E20               	addlw	32
  2660  0352  0086               	movwf	6
  2661  0353  0187               	clrf	7
  2662  0354  3000               	movlw	0
  2663  0355  3FC0               	movwi [0]fsr1
  2664  0356  3000               	movlw	0
  2665  0357  3FC1               	movwi [1]fsr1
  2666  0358  3FC2               	movwi [2]fsr1
  2667  0359  3FC3               	movwi [3]fsr1
  2668  035A  3001               	movlw	1
  2669  035B  00E0               	movwf	??_USBDeviceInit^(0+256)
  2670  035C  0860               	movf	??_USBDeviceInit^(0+256),w
  2671  035D  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2672  035E  300C               	movlw	12
  2673  035F  0264               	subwf	USBDeviceInit@i^(0+256),w
  2674  0360  1C03               	skipc
  2675  0361  2B49               	goto	l4091
  2676  0362                     l210:	
  2677                           
  2678                           ;usb_device.c: 310: }
  2679                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  2680  0362  003D               	movlb	29	; select bank29
  2681  0363  170E               	bsf	14,6	;volatile
  2682                           
  2683                           ;usb_device.c: 316: UADDR = 0x00;
  2684  0364  0196               	clrf	22	;volatile
  2685                           
  2686                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  2687  0365  120E               	bcf	14,4	;volatile
  2688                           
  2689                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  2690  0366  130E               	bcf	14,6	;volatile
  2691  0367                     l4103:	
  2692                           ;usb_device.c: 325: do
  2693                           
  2694                           
  2695                           ;usb_device.c: 326: {
  2696                           ;usb_device.c: 327: (UIR &= 0xF7);
  2697  0367  30F7               	movlw	247
  2698  0368  0022               	movlb	2	; select bank2
  2699  0369  00E0               	movwf	??_USBDeviceInit^(0+256)
  2700  036A  0860               	movf	??_USBDeviceInit^(0+256),w
  2701  036B  003D               	movlb	29	; select bank29
  2702  036C  0590               	andwf	16,f	;volatile
  2703                           
  2704                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  2705  036D  0023               	movlb	3	; select bank3
  2706  036E  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  2707                           
  2708                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  2709  036F  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  2710                           
  2711                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  2712  0370  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  2713  0371  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  2714                           
  2715                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  2716  0372  003D               	movlb	29	; select bank29
  2717  0373  1990               	btfsc	16,3	;volatile
  2718  0374  2B67               	goto	l4103
  2719                           
  2720                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  2721  0375  3001               	movlw	1
  2722  0376  0022               	movlb	2	; select bank2
  2723  0377  00E0               	movwf	??_USBDeviceInit^(0+256)
  2724  0378  0860               	movf	??_USBDeviceInit^(0+256),w
  2725  0379  0023               	movlb	3	; select bank3
  2726  037A  00D7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  2727                           
  2728                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  2729  037B  3001               	movlw	1
  2730  037C  0022               	movlb	2	; select bank2
  2731  037D  00E0               	movwf	??_USBDeviceInit^(0+256)
  2732  037E  0860               	movf	??_USBDeviceInit^(0+256),w
  2733  037F  0023               	movlb	3	; select bank3
  2734  0380  00D6               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  2735                           
  2736                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  2737  0381  01D5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  2738                           
  2739                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  2740  0382  01D4               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  2741                           
  2742                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  2743  0383  01DC               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  2744                           
  2745                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  2746  0384  0022               	movlb	2	; select bank2
  2747  0385  01E4               	clrf	USBDeviceInit@i^(0+256)
  2748  0386  3003               	movlw	3
  2749  0387  0264               	subwf	USBDeviceInit@i^(0+256),w
  2750  0388  1803               	btfsc	3,0
  2751  0389  2BAE               	goto	l4131
  2752  038A                     l4125:	
  2753                           
  2754                           ;usb_device.c: 346: {
  2755                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  2756  038A  3564               	lslf	USBDeviceInit@i^(0+256),w
  2757  038B  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  2758  038C  0086               	movwf	6
  2759  038D  3001               	movlw	1	; select bank3/4
  2760  038E  0087               	movwf	7
  2761  038F  3000               	movlw	0
  2762  0390  3FC0               	movwi [0]fsr1
  2763  0391  3FC1               	movwi [1]fsr1
  2764                           
  2765                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  2766  0392  3564               	lslf	USBDeviceInit@i^(0+256),w
  2767  0393  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2768  0394  0086               	movwf	6
  2769  0395  3001               	movlw	1	; select bank3/4
  2770  0396  0087               	movwf	7
  2771  0397  3000               	movlw	0
  2772  0398  3FC0               	movwi [0]fsr1
  2773  0399  3FC1               	movwi [1]fsr1
  2774                           
  2775                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  2776  039A  0864               	movf	USBDeviceInit@i^(0+256),w
  2777  039B  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2778  039C  0086               	movwf	6
  2779  039D  3001               	movlw	1	; select bank3/4
  2780  039E  0087               	movwf	7
  2781  039F  0181               	clrf	1
  2782                           
  2783                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  2784  03A0  0864               	movf	USBDeviceInit@i^(0+256),w
  2785  03A1  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2786  03A2  0086               	movwf	6
  2787  03A3  3001               	movlw	1	; select bank3/4
  2788  03A4  0087               	movwf	7
  2789  03A5  0181               	clrf	1
  2790  03A6  3001               	movlw	1
  2791  03A7  00E0               	movwf	??_USBDeviceInit^(0+256)
  2792  03A8  0860               	movf	??_USBDeviceInit^(0+256),w
  2793  03A9  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2794  03AA  3003               	movlw	3
  2795  03AB  0264               	subwf	USBDeviceInit@i^(0+256),w
  2796  03AC  1C03               	skipc
  2797  03AD  2B8A               	goto	l4125
  2798  03AE                     l4131:	
  2799                           
  2800                           ;usb_device.c: 351: }
  2801                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2802  03AE  3028               	movlw	40
  2803  03AF  0023               	movlb	3	; select bank3
  2804  03B0  00A7               	movwf	_pBDTEntryIn^(0+384)
  2805  03B1  3000               	movlw	0
  2806  03B2  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  2807                           
  2808                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  2809  03B3  3016               	movlw	22
  2810  03B4  003D               	movlb	29	; select bank29
  2811  03B5  0098               	movwf	24	;volatile
  2812                           
  2813                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2814  03B6  3000               	movlw	0
  2815  03B7  0020               	movlb	0	; select bank0
  2816  03B8  00A3               	movwf	35	;volatile
  2817  03B9  3050               	movlw	80
  2818  03BA  00A2               	movwf	34	;volatile
  2819                           
  2820                           ;usb_device.c: 359: BDT[0].CNT = 8;
  2821  03BB  3008               	movlw	8
  2822  03BC  00A1               	movwf	33	;volatile
  2823                           
  2824                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  2825  03BD  3004               	movlw	4
  2826  03BE  0022               	movlb	2	; select bank2
  2827  03BF  00E0               	movwf	??_USBDeviceInit^(0+256)
  2828  03C0  0860               	movf	??_USBDeviceInit^(0+256),w
  2829  03C1  0020               	movlb	0	; select bank0
  2830  03C2  00A0               	movwf	32	;volatile
  2831                           
  2832                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  2833  03C3  17A0               	bsf	32,7	;volatile
  2834                           
  2835                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  2836  03C4  0023               	movlb	3	; select bank3
  2837  03C5  01E9               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  2838                           
  2839                           ;usb_device.c: 366: USB1msTickCount = 0;
  2840  03C6  3000               	movlw	0
  2841  03C7  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  2842  03C8  3000               	movlw	0
  2843  03C9  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  2844  03CA  3000               	movlw	0
  2845  03CB  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  2846  03CC  3000               	movlw	0
  2847  03CD  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  2848                           
  2849                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  2850  03CE  01D3               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  2851                           
  2852                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  2853  03CF  0021               	movlb	1	; select bank1
  2854  03D0  01E4               	clrf	_USBDeviceState^(0+128)	;volatile
  2855  03D1  0008               	return
  2856  03D2                     __end_of_USBDeviceInit:	
  2857                           
  2858                           	psect	text4
  2859  0998                     __ptext4:	
  2860 ;; *************** function _USBDeviceAttach *****************
  2861 ;; Defined at:
  2862 ;;		line 1352 in file "../lib/usb/src/usb_device.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;Total ram usage:        1 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:   10
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function _USBDeviceAttach
  2892  0998                     _USBDeviceAttach:	
  2893                           
  2894                           ;usb_device.c: 1356: {
  2895                           ;usb_device.c: 1357: if(1 == 1)
  2896                           
  2897                           ;incstack = 0
  2898                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2899  0998  0021               	movlb	1	; select bank1
  2900  0999  0864               	movf	_USBDeviceState^(0+128),w	;volatile
  2901  099A  1D03               	btfss	3,2
  2902  099B  0008               	return
  2903                           
  2904                           ;usb_device.c: 1358: {
  2905                           ;usb_device.c: 1360: UCON = 0;
  2906  099C  003D               	movlb	29	; select bank29
  2907  099D  018E               	clrf	14	;volatile
  2908                           
  2909                           ;usb_device.c: 1363: UIE = 0;
  2910  099E  0192               	clrf	18	;volatile
  2911                           
  2912                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2913  099F  3016               	movlw	22
  2914  09A0  0091               	movwf	17	;volatile
  2915  09A1  309F               	movlw	159
  2916  09A2  0097               	movwf	23	;volatile
  2917  09A3  307B               	movlw	123
  2918  09A4  0092               	movwf	18	;volatile
  2919                           
  2920                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2921  09A5  0021               	movlb	1	; select bank1
  2922  09A6  1512               	bsf	18,2	;volatile
  2923  09A7  170B               	bsf	11,6	;volatile
  2924  09A8  178B               	bsf	11,7	;volatile
  2925  09A9                     l270:	
  2926                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2927                           
  2928  09A9  003D               	movlb	29	; select bank29
  2929  09AA  198E               	btfsc	14,3	;volatile
  2930  09AB  29AE               	goto	l4167
  2931  09AC  158E               	bsf	14,3	;volatile
  2932  09AD  29A9               	goto	l270
  2933  09AE                     l4167:	
  2934                           
  2935                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  2936  09AE  3001               	movlw	1
  2937  09AF  0022               	movlb	2	; select bank2
  2938  09B0  00E0               	movwf	??_USBDeviceAttach^(0+256)
  2939  09B1  0860               	movf	??_USBDeviceAttach^(0+256),w
  2940  09B2  0021               	movlb	1	; select bank1
  2941  09B3  00E4               	movwf	_USBDeviceState^(0+128)	;volatile
  2942  09B4  0008               	return
  2943  09B5                     __end_of_USBDeviceAttach:	
  2944                           
  2945                           	psect	text5
  2946  0951                     __ptext5:	
  2947 ;; *************** function _SYSTEM_Initialize *****************
  2948 ;; Defined at:
  2949 ;;		line 82 in file "mcc_generated_files/mcc.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  state           1    wreg     enum E2617
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  state           1    0[BANK2 ] enum E2617
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;Total ram usage:        1 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:   10
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _SYSTEM_Initialize
  2979  0951                     _SYSTEM_Initialize:	
  2980                           
  2981                           ;incstack = 0
  2982                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  2983                           ;SYSTEM_Initialize@state stored from wreg
  2984  0951  0022               	movlb	2	; select bank2
  2985  0952  00E0               	movwf	SYSTEM_Initialize@state^(0+256)
  2986                           
  2987                           ;mcc.c: 84: switch(state)
  2988  0953  295B               	goto	l4045
  2989  0954                     l4041:	
  2990                           ;mcc.c: 85: {
  2991                           ;mcc.c: 86: case SYSTEM_STATE_USB_START:
  2992                           
  2993                           
  2994                           ;mcc.c: 90: OSCCON = 0xFC;
  2995  0954  30FC               	movlw	252
  2996  0955  0021               	movlb	1	; select bank1
  2997  0956  0099               	movwf	25	;volatile
  2998                           
  2999                           ;mcc.c: 91: ACTCON = 0x90;
  3000  0957  3090               	movlw	144
  3001  0958  0027               	movlb	7	; select bank7
  3002  0959  009B               	movwf	27	;volatile
  3003                           
  3004                           ;mcc.c: 102: }
  3005                           
  3006                           ;mcc.c: 101: break;
  3007                           
  3008                           ;mcc.c: 100: case SYSTEM_STATE_USB_RESUME:
  3009                           
  3010                           ;mcc.c: 98: break;
  3011                           
  3012                           ;mcc.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  3013                           
  3014                           ;mcc.c: 95: break;
  3015  095A  0008               	return
  3016  095B                     l4045:	
  3017  095B  0022               	movlb	2	; select bank2
  3018  095C  0860               	movf	SYSTEM_Initialize@state^(0+256),w
  3019                           
  3020                           ; Switch size 1, requested type "space"
  3021                           ; Number of cases is 3, Range of values is 0 to 2
  3022                           ; switch strategies available:
  3023                           ; Name         Instructions Cycles
  3024                           ; simple_byte           10     6 (average)
  3025                           ; direct_byte           12     6 (fixed)
  3026                           ; jumptable            260     6 (fixed)
  3027                           ;	Chosen strategy is simple_byte
  3028  095D  3A00               	xorlw	0	; case 0
  3029  095E  1903               	skipnz
  3030  095F  2954               	goto	l4041
  3031  0960  3A01               	xorlw	1	; case 1
  3032  0961  1903               	skipnz
  3033  0962  2967               	goto	l32
  3034  0963  3A03               	xorlw	3	; case 2
  3035  0964  1903               	skipnz
  3036  0965  2967               	goto	l32
  3037  0966  2967               	goto	l32
  3038  0967                     l32:	
  3039  0967  0008               	return
  3040  0968                     __end_of_SYSTEM_Initialize:	
  3041                           
  3042                           	psect	text6
  3043  024B                     __ptext6:	
  3044 ;; *************** function _CDCTxService *****************
  3045 ;; Defined at:
  3046 ;;		line 836 in file "../lib/usb/src/usb_device_cdc.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  byte_to_send    1   13[BANK2 ] unsigned char 
  3051 ;;  i               1   12[BANK2 ] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;Total ram usage:        3 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:   11
  3068 ;; This function calls:
  3069 ;;		_USBTransferOnePacket
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _CDCTxService
  3077  024B                     _CDCTxService:	
  3078                           
  3079                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3080                           ;usb_device_cdc.c: 839: uint8_t i;
  3081                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3085  024B  0021               	movlb	1	; select bank1
  3086  024C  1112               	bcf	18,2	;volatile
  3087                           
  3088                           ;usb_device_cdc.c: 843: {};
  3089                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3090  024D  0023               	movlb	3	; select bank3
  3091  024E  0846               	movf	_CDCDataInHandle^(0+384),w
  3092  024F  0447               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  3093  0250  1903               	btfsc	3,2
  3094  0251  2A5B               	goto	l4213
  3095  0252  0846               	movf	_CDCDataInHandle^(0+384),w
  3096  0253  0086               	movwf	6
  3097  0254  0847               	movf	(_CDCDataInHandle+1)^(0+384),w
  3098  0255  0087               	movwf	7
  3099  0256  1F81               	btfss	1,7
  3100  0257  2A5B               	goto	l4213
  3101                           
  3102                           ;usb_device_cdc.c: 846: {
  3103                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3104  0258  0021               	movlb	1	; select bank1
  3105  0259  1512               	bsf	18,2	;volatile
  3106                           
  3107                           ;usb_device_cdc.c: 848: return;
  3108  025A  0008               	return
  3109  025B                     l4213:	
  3110                           
  3111                           ;usb_device_cdc.c: 849: }
  3112                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3113  025B  3003               	movlw	3
  3114  025C  0023               	movlb	3	; select bank3
  3115  025D  0651               	xorwf	_cdc_trf_state^(0+384),w
  3116  025E  1903               	btfsc	3,2
  3117                           
  3118                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3119  025F  01D1               	clrf	_cdc_trf_state^(0+384)
  3120                           
  3121                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3122  0260  0851               	movf	_cdc_trf_state^(0+384),w
  3123  0261  1D03               	btfss	3,2
  3124  0262  2A66               	goto	l4221
  3125                           
  3126                           ;usb_device_cdc.c: 863: {
  3127                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3128  0263  0021               	movlb	1	; select bank1
  3129  0264  1512               	bsf	18,2	;volatile
  3130                           
  3131                           ;usb_device_cdc.c: 865: return;
  3132  0265  0008               	return
  3133  0266                     l4221:	
  3134                           
  3135                           ;usb_device_cdc.c: 866: }
  3136                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3137  0266  3002               	movlw	2
  3138  0267  0023               	movlb	3	; select bank3
  3139  0268  0651               	xorwf	_cdc_trf_state^(0+384),w
  3140  0269  1D03               	btfss	3,2
  3141  026A  2A86               	goto	l4227
  3142                           
  3143                           ;usb_device_cdc.c: 872: {
  3144                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3145  026B  0022               	movlb	2	; select bank2
  3146  026C  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3147  026D  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3148  026E  3000               	movlw	0
  3149  026F  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3150  0270  3000               	movlw	0
  3151  0271  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3152  0272  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  3153  0273  3002               	movlw	2
  3154  0274  3186  26DD  3182   	fcall	_USBTransferOnePacket
  3155  0277  0022               	movlb	2	; select bank2
  3156  0278  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3157  0279  0023               	movlb	3	; select bank3
  3158  027A  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3159  027B  0022               	movlb	2	; select bank2
  3160  027C  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3161  027D  0023               	movlb	3	; select bank3
  3162  027E  00C6               	movwf	_CDCDataInHandle^(0+384)
  3163                           
  3164                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3165  027F  3003               	movlw	3
  3166  0280  0022               	movlb	2	; select bank2
  3167  0281  00EB               	movwf	??_CDCTxService^(0+256)
  3168  0282  086B               	movf	??_CDCTxService^(0+256),w
  3169  0283  0023               	movlb	3	; select bank3
  3170  0284  00D1               	movwf	_cdc_trf_state^(0+384)
  3171                           
  3172                           ;usb_device_cdc.c: 876: }
  3173  0285  2B18               	goto	l4275
  3174  0286                     l4227:	
  3175                           
  3176                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3177  0286  0351               	decf	_cdc_trf_state^(0+384),w
  3178  0287  1D03               	btfss	3,2
  3179  0288  2B18               	goto	l4275
  3180                           
  3181                           ;usb_device_cdc.c: 878: {
  3182                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3183  0289  3041               	movlw	65
  3184  028A  0250               	subwf	_cdc_tx_len^(0+384),w
  3185  028B  1C03               	skipc
  3186  028C  2A8F               	goto	l4233
  3187                           
  3188                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3189  028D  3040               	movlw	64
  3190  028E  2A91               	goto	L1
  3191  028F                     l4233:	
  3192                           
  3193                           ;usb_device_cdc.c: 884: else
  3194                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3195  028F  0023               	movlb	3	; select bank3
  3196  0290  0850               	movf	_cdc_tx_len^(0+384),w
  3197  0291                     L1:	
  3198  0291  0022               	movlb	2	; select bank2
  3199  0292  00EB               	movwf	??_CDCTxService^(0+256)
  3200  0293  086B               	movf	??_CDCTxService^(0+256),w
  3201  0294  00ED               	movwf	CDCTxService@byte_to_send^(0+256)
  3202                           
  3203                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3204  0295  036D               	decf	CDCTxService@byte_to_send^(0+256),w
  3205  0296  3AFF               	xorlw	255
  3206  0297  0023               	movlb	3	; select bank3
  3207  0298  0750               	addwf	_cdc_tx_len^(0+384),w
  3208  0299  0022               	movlb	2	; select bank2
  3209  029A  00EB               	movwf	??_CDCTxService^(0+256)
  3210  029B  086B               	movf	??_CDCTxService^(0+256),w
  3211  029C  0023               	movlb	3	; select bank3
  3212  029D  00D0               	movwf	_cdc_tx_len^(0+384)
  3213                           
  3214                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3215  029E  30A0               	movlw	160
  3216  029F  0022               	movlb	2	; select bank2
  3217  02A0  00EB               	movwf	??_CDCTxService^(0+256)
  3218  02A1  086B               	movf	??_CDCTxService^(0+256),w
  3219  02A2  0023               	movlb	3	; select bank3
  3220  02A3  00CA               	movwf	_pCDCDst^(0+384)
  3221                           
  3222                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3223  02A4  0022               	movlb	2	; select bank2
  3224  02A5  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  3225  02A6  00EB               	movwf	??_CDCTxService^(0+256)
  3226  02A7  086B               	movf	??_CDCTxService^(0+256),w
  3227  02A8  00EC               	movwf	CDCTxService@i^(0+256)
  3228                           
  3229                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3230  02A9  0023               	movlb	3	; select bank3
  3231  02AA  084F               	movf	_cdc_mem_type^(0+384),w
  3232  02AB  1903               	btfsc	3,2
  3233  02AC  2ACB               	goto	l4253
  3234  02AD  2AED               	goto	l4263
  3235  02AE                     l4245:	
  3236                           ;usb_device_cdc.c: 896: {
  3237                           ;usb_device_cdc.c: 897: while(i)
  3238                           
  3239                           
  3240                           ;usb_device_cdc.c: 898: {
  3241                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3242  02AE  0023               	movlb	3	; select bank3
  3243  02AF  084C               	movf	_pCDCSrc^(0+384),w
  3244  02B0  0086               	movwf	6
  3245  02B1  3003               	movlw	3	; select bank6/7
  3246  02B2  0087               	movwf	7
  3247  02B3  0801               	movf	1,w
  3248  02B4  0022               	movlb	2	; select bank2
  3249  02B5  00EB               	movwf	??_CDCTxService^(0+256)
  3250  02B6  0023               	movlb	3	; select bank3
  3251  02B7  084A               	movf	_pCDCDst^(0+384),w
  3252  02B8  0086               	movwf	6
  3253  02B9  0187               	clrf	7
  3254  02BA  0022               	movlb	2	; select bank2
  3255  02BB  086B               	movf	??_CDCTxService^(0+256),w
  3256  02BC  0081               	movwf	1
  3257                           
  3258                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3259  02BD  3001               	movlw	1
  3260  02BE  00EB               	movwf	??_CDCTxService^(0+256)
  3261  02BF  086B               	movf	??_CDCTxService^(0+256),w
  3262  02C0  0023               	movlb	3	; select bank3
  3263  02C1  07CA               	addwf	_pCDCDst^(0+384),f
  3264                           
  3265                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3266  02C2  3001               	movlw	1
  3267  02C3  0022               	movlb	2	; select bank2
  3268  02C4  00EB               	movwf	??_CDCTxService^(0+256)
  3269  02C5  086B               	movf	??_CDCTxService^(0+256),w
  3270  02C6  0023               	movlb	3	; select bank3
  3271  02C7  07CC               	addwf	_pCDCSrc^(0+384),f
  3272                           
  3273                           ;usb_device_cdc.c: 902: i--;
  3274  02C8  3001               	movlw	1
  3275  02C9  0022               	movlb	2	; select bank2
  3276  02CA  02EC               	subwf	CDCTxService@i^(0+256),f
  3277  02CB                     l4253:	
  3278  02CB  0022               	movlb	2	; select bank2
  3279  02CC  086C               	movf	CDCTxService@i^(0+256),w
  3280  02CD  1903               	btfsc	3,2
  3281  02CE  2AF1               	goto	l4265
  3282  02CF  2AAE               	goto	l4245
  3283  02D0                     l4255:	
  3284                           ;usb_device_cdc.c: 905: else
  3285                           ;usb_device_cdc.c: 906: {
  3286                           ;usb_device_cdc.c: 907: while(i)
  3287                           
  3288                           ;usb_device_cdc.c: 903: }
  3289                           ;usb_device_cdc.c: 904: }
  3290                           
  3291                           
  3292                           ;usb_device_cdc.c: 908: {
  3293                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3294  02D0  0023               	movlb	3	; select bank3
  3295  02D1  084C               	movf	_pCDCSrc^(0+384),w
  3296  02D2  0086               	movwf	6
  3297  02D3  3003               	movlw	3	; select bank6/7
  3298  02D4  0087               	movwf	7
  3299  02D5  0801               	movf	1,w
  3300  02D6  0022               	movlb	2	; select bank2
  3301  02D7  00EB               	movwf	??_CDCTxService^(0+256)
  3302  02D8  0023               	movlb	3	; select bank3
  3303  02D9  084A               	movf	_pCDCDst^(0+384),w
  3304  02DA  0086               	movwf	6
  3305  02DB  0187               	clrf	7
  3306  02DC  0022               	movlb	2	; select bank2
  3307  02DD  086B               	movf	??_CDCTxService^(0+256),w
  3308  02DE  0081               	movwf	1
  3309                           
  3310                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3311  02DF  3001               	movlw	1
  3312  02E0  00EB               	movwf	??_CDCTxService^(0+256)
  3313  02E1  086B               	movf	??_CDCTxService^(0+256),w
  3314  02E2  0023               	movlb	3	; select bank3
  3315  02E3  07CA               	addwf	_pCDCDst^(0+384),f
  3316                           
  3317                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3318  02E4  3001               	movlw	1
  3319  02E5  0022               	movlb	2	; select bank2
  3320  02E6  00EB               	movwf	??_CDCTxService^(0+256)
  3321  02E7  086B               	movf	??_CDCTxService^(0+256),w
  3322  02E8  0023               	movlb	3	; select bank3
  3323  02E9  07CC               	addwf	_pCDCSrc^(0+384),f
  3324                           
  3325                           ;usb_device_cdc.c: 912: i--;
  3326  02EA  3001               	movlw	1
  3327  02EB  0022               	movlb	2	; select bank2
  3328  02EC  02EC               	subwf	CDCTxService@i^(0+256),f
  3329  02ED                     l4263:	
  3330  02ED  0022               	movlb	2	; select bank2
  3331  02EE  086C               	movf	CDCTxService@i^(0+256),w
  3332  02EF  1D03               	btfss	3,2
  3333  02F0  2AD0               	goto	l4255
  3334  02F1                     l4265:	
  3335                           
  3336                           ;usb_device_cdc.c: 913: }
  3337                           ;usb_device_cdc.c: 914: }
  3338                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3339  02F1  0023               	movlb	3	; select bank3
  3340  02F2  0850               	movf	_cdc_tx_len^(0+384),w
  3341  02F3  1D03               	btfss	3,2
  3342  02F4  2B02               	goto	l4273
  3343                           
  3344                           ;usb_device_cdc.c: 921: {
  3345                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  3346  02F5  3040               	movlw	64
  3347  02F6  0022               	movlb	2	; select bank2
  3348  02F7  066D               	xorwf	CDCTxService@byte_to_send^(0+256),w
  3349  02F8  1D03               	btfss	3,2
  3350  02F9  2AFC               	goto	l4271
  3351                           
  3352                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3353  02FA  3002               	movlw	2
  3354  02FB  2AFE               	goto	L2
  3355  02FC                     l4271:	
  3356                           
  3357                           ;usb_device_cdc.c: 924: else
  3358                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3359  02FC  3003               	movlw	3
  3360  02FD  0022               	movlb	2	; select bank2
  3361  02FE                     L2:	
  3362  02FE  00EB               	movwf	??_CDCTxService^(0+256)
  3363  02FF  086B               	movf	??_CDCTxService^(0+256),w
  3364  0300  0023               	movlb	3	; select bank3
  3365  0301  00D1               	movwf	_cdc_trf_state^(0+384)
  3366  0302                     l4273:	
  3367                           
  3368                           ;usb_device_cdc.c: 926: }
  3369                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3370  0302  0022               	movlb	2	; select bank2
  3371  0303  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3372  0304  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3373  0305  30A0               	movlw	160
  3374  0306  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3375  0307  3000               	movlw	0
  3376  0308  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3377  0309  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  3378  030A  00EB               	movwf	??_CDCTxService^(0+256)
  3379  030B  086B               	movf	??_CDCTxService^(0+256),w
  3380  030C  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3381  030D  3002               	movlw	2
  3382  030E  3186  26DD         	fcall	_USBTransferOnePacket
  3383  0310  0022               	movlb	2	; select bank2
  3384  0311  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3385  0312  0023               	movlb	3	; select bank3
  3386  0313  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3387  0314  0022               	movlb	2	; select bank2
  3388  0315  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3389  0316  0023               	movlb	3	; select bank3
  3390  0317  00C6               	movwf	_CDCDataInHandle^(0+384)
  3391  0318                     l4275:	
  3392                           
  3393                           ;usb_device_cdc.c: 929: }
  3394                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3395  0318  0021               	movlb	1	; select bank1
  3396  0319  1512               	bsf	18,2	;volatile
  3397  031A  0008               	return
  3398  031B                     __end_of_CDCTxService:	
  3399                           
  3400                           	psect	text7
  3401  0B02                     __ptext7:	
  3402 ;; *************** function _CDCInitEP *****************
  3403 ;; Defined at:
  3404 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:   12
  3425 ;; This function calls:
  3426 ;;		_USBEnableEndpoint
  3427 ;;		_USBTransferOnePacket
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function _CDCInitEP
  3435  0B02                     _CDCInitEP:	
  3436                           
  3437                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3441  0B02  3000               	movlw	0
  3442  0B03  0023               	movlb	3	; select bank3
  3443  0B04  00E3               	movwf	(_line_coding+3)^(0+384)
  3444  0B05  3000               	movlw	0
  3445  0B06  00E2               	movwf	(_line_coding+2)^(0+384)
  3446  0B07  304B               	movlw	75
  3447  0B08  00E1               	movwf	(_line_coding+1)^(0+384)
  3448  0B09  3000               	movlw	0
  3449  0B0A  00E0               	movwf	_line_coding^(0+384)
  3450                           
  3451                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  3452  0B0B  01E4               	clrf	(_line_coding^(0+384)+4)
  3453                           
  3454                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  3455  0B0C  01E5               	clrf	(_line_coding^(0+384)+5)
  3456                           
  3457                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  3458  0B0D  3008               	movlw	8
  3459  0B0E  0022               	movlb	2	; select bank2
  3460  0B0F  00ED               	movwf	??_CDCInitEP^(0+256)
  3461  0B10  086D               	movf	??_CDCInitEP^(0+256),w
  3462  0B11  0023               	movlb	3	; select bank3
  3463  0B12  00E6               	movwf	(_line_coding^(0+384)+6)
  3464                           
  3465                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  3466  0B13  01D2               	clrf	_cdc_rx_len^(0+384)
  3467                           
  3468                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  3469  0B14  301A               	movlw	26
  3470  0B15  0022               	movlb	2	; select bank2
  3471  0B16  00ED               	movwf	??_CDCInitEP^(0+256)
  3472  0B17  086D               	movf	??_CDCInitEP^(0+256),w
  3473  0B18  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3474  0B19  3001               	movlw	1
  3475  0B1A  318A  2214  318B   	fcall	_USBEnableEndpoint
  3476                           
  3477                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  3478  0B1D  301E               	movlw	30
  3479  0B1E  0022               	movlb	2	; select bank2
  3480  0B1F  00ED               	movwf	??_CDCInitEP^(0+256)
  3481  0B20  086D               	movf	??_CDCInitEP^(0+256),w
  3482  0B21  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  3483  0B22  3002               	movlw	2
  3484  0B23  318A  2214  318B   	fcall	_USBEnableEndpoint
  3485                           
  3486                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3487  0B26  0022               	movlb	2	; select bank2
  3488  0B27  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3489  0B28  3020               	movlw	32
  3490  0B29  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3491  0B2A  3001               	movlw	1
  3492  0B2B  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3493  0B2C  3040               	movlw	64
  3494  0B2D  00ED               	movwf	??_CDCInitEP^(0+256)
  3495  0B2E  086D               	movf	??_CDCInitEP^(0+256),w
  3496  0B2F  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3497  0B30  3002               	movlw	2
  3498  0B31  3186  26DD         	fcall	_USBTransferOnePacket
  3499  0B33  0022               	movlb	2	; select bank2
  3500  0B34  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3501  0B35  0023               	movlb	3	; select bank3
  3502  0B36  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  3503  0B37  0022               	movlb	2	; select bank2
  3504  0B38  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3505  0B39  0023               	movlb	3	; select bank3
  3506  0B3A  00C8               	movwf	_CDCDataOutHandle^(0+384)
  3507                           
  3508                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  3509  0B3B  01C6               	clrf	_CDCDataInHandle^(0+384)
  3510  0B3C  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  3511                           
  3512                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  3513  0B3D  01D1               	clrf	_cdc_trf_state^(0+384)
  3514  0B3E  0008               	return
  3515  0B3F                     __end_of_CDCInitEP:	
  3516                           
  3517                           	psect	text8
  3518  06DD                     __ptext8:	
  3519 ;; *************** function _USBTransferOnePacket *****************
  3520 ;; Defined at:
  3521 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  ep              1    wreg     unsigned char 
  3524 ;;  dir             1    0[BANK2 ] unsigned char 
  3525 ;;  data            2    1[BANK2 ] PTR unsigned char 
  3526 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  3527 ;;  len             1    3[BANK2 ] unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  ep              1    8[BANK2 ] unsigned char 
  3530 ;;  handle          2    9[BANK2 ] PTR volatile struct __BD
  3531 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    0[BANK2 ] PTR void 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3541 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;Total ram usage:       11 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:   10
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_CDCInitEP
  3552 ;;		_getsUSBUSART
  3553 ;;		_CDCTxService
  3554 ;;		_USBCDCEventHandler
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _USBTransferOnePacket
  3560  06DD                     _USBTransferOnePacket:	
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  3564                           ;USBTransferOnePacket@ep stored from wreg
  3565  06DD  0022               	movlb	2	; select bank2
  3566  06DE  00E8               	movwf	USBTransferOnePacket@ep^(0+256)
  3567                           
  3568                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  3569                           ;usb_device.c: 1000: if(dir != 0)
  3570  06DF  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3571  06E0  1903               	btfsc	3,2
  3572  06E1  2EEB               	goto	l4005
  3573                           
  3574                           ;usb_device.c: 1001: {
  3575                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  3576  06E2  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3577  06E3  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3578  06E4  0086               	movwf	6
  3579  06E5  3001               	movlw	1	; select bank3/4
  3580  06E6  0087               	movwf	7
  3581  06E7  3F40               	moviw [0]fsr1
  3582  06E8  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3583  06E9  3F41               	moviw [1]fsr1
  3584  06EA  2EF3               	goto	L3
  3585  06EB                     l4005:	
  3586                           ;usb_device.c: 1004: }
  3587                           
  3588                           
  3589                           ;usb_device.c: 1005: else
  3590                           ;usb_device.c: 1006: {
  3591                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  3592  06EB  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3593  06EC  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3594  06ED  0086               	movwf	6
  3595  06EE  3001               	movlw	1	; select bank3/4
  3596  06EF  0087               	movwf	7
  3597  06F0  3F40               	moviw [0]fsr1
  3598  06F1  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  3599  06F2  3F41               	moviw [1]fsr1
  3600  06F3                     L3:	
  3601  06F3  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  3602                           
  3603                           ;usb_device.c: 1009: }
  3604                           ;usb_device.c: 1013: if(handle == 0)
  3605  06F4  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3606  06F5  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+256),w
  3607  06F6  1D03               	btfss	3,2
  3608  06F7  2EFB               	goto	l4013
  3609                           
  3610                           ;usb_device.c: 1014: {
  3611                           ;usb_device.c: 1015: return 0;
  3612  06F8  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  3613  06F9  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  3614  06FA  0008               	return
  3615  06FB                     l4013:	
  3616                           
  3617                           ;usb_device.c: 1016: }
  3618                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  3619  06FB  30FF               	movlw	255
  3620  06FC  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  3621  06FD  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3622  06FE  307F               	movlw	127
  3623  06FF  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  3624  0700  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3625  0701  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3626  0702  0086               	movwf	6
  3627  0703  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3628  0704  0087               	movwf	7
  3629  0705  3142               	addfsr 1,2
  3630  0706  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3631  0707  3FC0               	movwi [0]fsr1
  3632  0708  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  3633  0709  3FC1               	movwi [1]fsr1
  3634                           
  3635                           ;usb_device.c: 1030: handle->CNT = len;
  3636  070A  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3637  070B  3E01               	addlw	1
  3638  070C  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3639  070D  3000               	movlw	0
  3640  070E  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  3641  070F  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3642  0710  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3643  0711  0086               	movwf	6
  3644  0712  0865               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  3645  0713  0087               	movwf	7
  3646  0714  0863               	movf	USBTransferOnePacket@len^(0+256),w
  3647  0715  0081               	movwf	1
  3648                           
  3649                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  3650  0716  3040               	movlw	64
  3651  0717  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3652  0718  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3653  0719  0086               	movwf	6
  3654  071A  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3655  071B  0087               	movwf	7
  3656  071C  0864               	movf	??_USBTransferOnePacket^(0+256),w
  3657  071D  0581               	andwf	1,f
  3658                           
  3659                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  3660  071E  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3661  071F  0086               	movwf	6
  3662  0720  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3663  0721  0087               	movwf	7
  3664  0722  1581               	bsf	1,3
  3665                           
  3666                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  3667  0723  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3668  0724  0086               	movwf	6
  3669  0725  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3670  0726  0087               	movwf	7
  3671  0727  1781               	bsf	1,7
  3672                           
  3673                           ;usb_device.c: 1036: if(dir != 0)
  3674  0728  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3675  0729  1903               	btfsc	3,2
  3676  072A  2F44               	goto	l4023
  3677                           
  3678                           ;usb_device.c: 1037: {
  3679                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  3680  072B  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3681  072C  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3682  072D  0086               	movwf	6
  3683  072E  3001               	movlw	1	; select bank3/4
  3684  072F  0087               	movwf	7
  3685  0730  3F40               	moviw [0]fsr1
  3686  0731  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3687  0732  3F41               	moviw [1]fsr1
  3688  0733  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3689  0734  3004               	movlw	4
  3690  0735  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3691  0736  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3692  0737  3000               	movlw	0
  3693  0738  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3694  0739  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3695  073A  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3696  073B  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3697  073C  0086               	movwf	6
  3698  073D  3001               	movlw	1	; select bank3/4
  3699  073E  0087               	movwf	7
  3700  073F  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3701  0740  3FC0               	movwi [0]fsr1
  3702  0741  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3703  0742  3FC1               	movwi [1]fsr1
  3704                           
  3705                           ;usb_device.c: 1040: }
  3706  0743  2F5C               	goto	l4025
  3707  0744                     l4023:	
  3708                           
  3709                           ;usb_device.c: 1041: else
  3710                           ;usb_device.c: 1042: {
  3711                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  3712  0744  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3713  0745  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3714  0746  0086               	movwf	6
  3715  0747  3001               	movlw	1	; select bank3/4
  3716  0748  0087               	movwf	7
  3717  0749  3F40               	moviw [0]fsr1
  3718  074A  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  3719  074B  3F41               	moviw [1]fsr1
  3720  074C  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3721  074D  3004               	movlw	4
  3722  074E  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  3723  074F  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3724  0750  3000               	movlw	0
  3725  0751  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  3726  0752  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3727  0753  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  3728  0754  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3729  0755  0086               	movwf	6
  3730  0756  3001               	movlw	1	; select bank3/4
  3731  0757  0087               	movwf	7
  3732  0758  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3733  0759  3FC0               	movwi [0]fsr1
  3734  075A  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3735  075B  3FC1               	movwi [1]fsr1
  3736  075C                     l4025:	
  3737                           
  3738                           ;usb_device.c: 1045: }
  3739                           ;usb_device.c: 1046: return (void*)handle;
  3740  075C  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3741  075D  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  3742  075E  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  3743  075F  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  3744  0760  0008               	return
  3745  0761                     __end_of_USBTransferOnePacket:	
  3746                           
  3747                           	psect	text9
  3748  0A14                     __ptext9:	
  3749 ;; *************** function _USBEnableEndpoint *****************
  3750 ;; Defined at:
  3751 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  ep              1    wreg     unsigned char 
  3754 ;;  options         1    7[BANK2 ] unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  ep              1   12[BANK2 ] unsigned char 
  3757 ;;  p               2   10[BANK2 ] PTR unsigned char 
  3758 ;;		 -> UEP0(1), 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3768 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;Total ram usage:        6 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:   11
  3775 ;; This function calls:
  3776 ;;		_USBConfigureEndpoint
  3777 ;; This function is called by:
  3778 ;;		_CDCInitEP
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function _USBEnableEndpoint
  3784  0A14                     _USBEnableEndpoint:	
  3785                           
  3786                           ;incstack = 0
  3787                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3788                           ;USBEnableEndpoint@ep stored from wreg
  3789  0A14  0022               	movlb	2	; select bank2
  3790  0A15  00EC               	movwf	USBEnableEndpoint@ep^(0+256)
  3791                           
  3792                           ;usb_device.c: 880: unsigned char* p;
  3793                           ;usb_device.c: 884: if(options & 0x04)
  3794  0A16  1D67               	btfss	USBEnableEndpoint@options^(0+256),2
  3795  0A17  2A1D               	goto	l3993
  3796                           
  3797                           ;usb_device.c: 885: {
  3798                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  3799  0A18  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3800  0A19  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3801  0A1A  318B  2381  318A   	fcall	_USBConfigureEndpoint
  3802  0A1D                     l3993:	
  3803                           
  3804                           ;usb_device.c: 887: }
  3805                           ;usb_device.c: 888: if(options & 0x02)
  3806  0A1D  0022               	movlb	2	; select bank2
  3807  0A1E  1CE7               	btfss	USBEnableEndpoint@options^(0+256),1
  3808  0A1F  2A25               	goto	l3997
  3809                           
  3810                           ;usb_device.c: 889: {
  3811                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  3812  0A20  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  3813  0A21  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  3814  0A22  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3815  0A23  318B  2381         	fcall	_USBConfigureEndpoint
  3816  0A25                     l3997:	
  3817                           
  3818                           ;usb_device.c: 891: }
  3819                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  3820  0A25  0022               	movlb	2	; select bank2
  3821  0A26  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  3822  0A27  3E98               	addlw	152
  3823  0A28  00E8               	movwf	??_USBEnableEndpoint^(0+256)
  3824  0A29  01E9               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  3825  0A2A  300E               	movlw	14
  3826  0A2B  3DE9               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  3827  0A2C  0868               	movf	??_USBEnableEndpoint^(0+256),w
  3828  0A2D  00EA               	movwf	USBEnableEndpoint@p^(0+256)
  3829  0A2E  0869               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  3830  0A2F  00EB               	movwf	(USBEnableEndpoint@p+1)^(0+256)
  3831                           
  3832                           ;usb_device.c: 901: *p = options;
  3833  0A30  086A               	movf	USBEnableEndpoint@p^(0+256),w
  3834  0A31  0086               	movwf	6
  3835  0A32  086B               	movf	(USBEnableEndpoint@p+1)^(0+256),w
  3836  0A33  0087               	movwf	7
  3837  0A34  0867               	movf	USBEnableEndpoint@options^(0+256),w
  3838  0A35  0081               	movwf	1
  3839  0A36  0008               	return
  3840  0A37                     __end_of_USBEnableEndpoint:	
  3841                           
  3842                           	psect	text10
  3843  0B81                     __ptext10:	
  3844 ;; *************** function _USBConfigureEndpoint *****************
  3845 ;; Defined at:
  3846 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  EPNum           1    wreg     unsigned char 
  3849 ;;  direction       1    0[BANK2 ] unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  EPNum           1    5[BANK2 ] unsigned char 
  3852 ;;  handle          1    6[BANK2 ] PTR volatile struct __BD
  3853 ;;		 -> BDT(48), 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3863 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;Total ram usage:        7 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:   10
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_USBEnableEndpoint
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _USBConfigureEndpoint
  3879  0B81                     _USBConfigureEndpoint:	
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  3883                           ;USBConfigureEndpoint@EPNum stored from wreg
  3884  0B81  0022               	movlb	2	; select bank2
  3885  0B82  00E5               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  3886                           
  3887                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  3888                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  3889  0B83  3020               	movlw	32
  3890  0B84  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3891  0B85  0861               	movf	??_USBConfigureEndpoint^(0+256),w
  3892  0B86  00E6               	movwf	USBConfigureEndpoint@handle^(0+256)
  3893                           
  3894                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  3895  0B87  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  3896  0B88  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  3897  0B89  3001               	movlw	1
  3898  0B8A                     u3575:	
  3899  0B8A  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  3900  0B8B  0B89               	decfsz	9,f
  3901  0B8C  2B8A               	goto	u3575
  3902  0B8D  0865               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  3903  0B8E  00E2               	movwf	(??_USBConfigureEndpoint+1)^(0+256)
  3904  0B8F  3001               	movlw	1
  3905  0B90                     u3585:	
  3906  0B90  35E2               	lslf	(??_USBConfigureEndpoint+1)^(0+256),f
  3907  0B91  3EFF               	addlw	-1
  3908  0B92  1D03               	skipz
  3909  0B93  2B90               	goto	u3585
  3910  0B94  3562               	lslf	(??_USBConfigureEndpoint+1)^(0+256),w
  3911  0B95  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  3912  0B96  00E3               	movwf	(??_USBConfigureEndpoint+2)^(0+256)
  3913  0B97  3001               	movlw	1
  3914  0B98                     u3595:	
  3915  0B98  35E3               	lslf	(??_USBConfigureEndpoint+2)^(0+256),f
  3916  0B99  3EFF               	addlw	-1
  3917  0B9A  1D03               	skipz
  3918  0B9B  2B98               	goto	u3595
  3919  0B9C  3563               	lslf	(??_USBConfigureEndpoint+2)^(0+256),w
  3920  0B9D  00E4               	movwf	(??_USBConfigureEndpoint+3)^(0+256)
  3921  0B9E  0864               	movf	(??_USBConfigureEndpoint+3)^(0+256),w
  3922  0B9F  07E6               	addwf	USBConfigureEndpoint@handle^(0+256),f
  3923                           
  3924                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  3925  0BA0  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3926  0BA1  0086               	movwf	6
  3927  0BA2  0187               	clrf	7
  3928  0BA3  1381               	bcf	1,7
  3929                           
  3930                           ;usb_device.c: 1557: if(direction == 0)
  3931  0BA4  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  3932  0BA5  1D03               	btfss	3,2
  3933  0BA6  2BB1               	goto	l3983
  3934                           
  3935                           ;usb_device.c: 1558: {
  3936                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  3937  0BA7  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  3938  0BA8  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3939  0BA9  0086               	movwf	6
  3940  0BAA  3001               	movlw	1	; select bank3/4
  3941  0BAB  0087               	movwf	7
  3942  0BAC  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3943  0BAD  3FC0               	movwi [0]fsr1
  3944  0BAE  3000               	movlw	0
  3945  0BAF  3FC1               	movwi [1]fsr1
  3946                           
  3947                           ;usb_device.c: 1560: }
  3948  0BB0  2BBA               	goto	l3985
  3949  0BB1                     l3983:	
  3950                           
  3951                           ;usb_device.c: 1561: else
  3952                           ;usb_device.c: 1562: {
  3953                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  3954  0BB1  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  3955  0BB2  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3956  0BB3  0086               	movwf	6
  3957  0BB4  3001               	movlw	1	; select bank3/4
  3958  0BB5  0087               	movwf	7
  3959  0BB6  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3960  0BB7  3FC0               	movwi [0]fsr1
  3961  0BB8  3000               	movlw	0
  3962  0BB9  3FC1               	movwi [1]fsr1
  3963  0BBA                     l3985:	
  3964                           
  3965                           ;usb_device.c: 1564: }
  3966                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  3967  0BBA  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3968  0BBB  0086               	movwf	6
  3969  0BBC  0187               	clrf	7
  3970  0BBD  1301               	bcf	1,6
  3971                           
  3972                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  3973  0BBE  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  3974  0BBF  3E04               	addlw	4
  3975  0BC0  0086               	movwf	6
  3976  0BC1  0187               	clrf	7
  3977  0BC2  1701               	bsf	1,6
  3978  0BC3  0008               	return
  3979  0BC4                     __end_of_USBConfigureEndpoint:	
  3980                           
  3981                           	psect	text11
  3982  0923                     __ptext11:	
  3983 ;; *************** function _ADC_StartConversion *****************
  3984 ;; Defined at:
  3985 ;;		line 93 in file "mcc_generated_files/adc.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		None
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:   10
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _ADC_StartConversion
  4015  0923                     _ADC_StartConversion:	
  4016                           
  4017                           ;adc.c: 96: ADCON0bits.GO_nDONE = 1;
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _ADC_StartConversion: []
  4021  0923  0021               	movlb	1	; select bank1
  4022  0924  149D               	bsf	29,1	;volatile
  4023  0925  0008               	return
  4024  0926                     __end_of_ADC_StartConversion:	
  4025                           
  4026                           	psect	text12
  4027  092C                     __ptext12:	
  4028 ;; *************** function _ADC_IsConversionDone *****************
  4029 ;; Defined at:
  4030 ;;		line 100 in file "mcc_generated_files/adc.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      unsigned char 
  4037 ;; Registers used:
  4038 ;;		wreg, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:   10
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _ADC_IsConversionDone
  4060  092C                     _ADC_IsConversionDone:	
  4061                           
  4062                           ;adc.c: 103: return (!ADCON0bits.GO_nDONE);
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  4066  092C  1003               	clrc
  4067  092D  0021               	movlb	1	; select bank1
  4068  092E  1C9D               	btfss	29,1	;volatile
  4069  092F  1403               	setc
  4070  0930  3000               	movlw	0
  4071  0931  3D09               	addwfc	9,w
  4072  0932  0008               	return
  4073  0933                     __end_of_ADC_IsConversionDone:	
  4074                           
  4075                           	psect	text13
  4076  0933                     __ptext13:	
  4077 ;; *************** function _ADC_GetConversionResult *****************
  4078 ;; Defined at:
  4079 ;;		line 106 in file "mcc_generated_files/adc.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2    0[BANK2 ] unsigned int 
  4086 ;; Registers used:
  4087 ;;		wreg
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4093 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;Total ram usage:        2 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:   10
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _ADC_GetConversionResult
  4109  0933                     _ADC_GetConversionResult:	
  4110                           
  4111                           ;adc.c: 109: return ((ADRESH << 8) + ADRESL);
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _ADC_GetConversionResult: [wreg]
  4115  0933  0021               	movlb	1	; select bank1
  4116  0934  081C               	movf	28,w	;volatile
  4117  0935  0022               	movlb	2	; select bank2
  4118  0936  00E1               	movwf	(?_ADC_GetConversionResult+1)^(0+256)
  4119  0937  0021               	movlb	1	; select bank1
  4120  0938  081B               	movf	27,w	;volatile
  4121  0939  0022               	movlb	2	; select bank2
  4122  093A  00E0               	movwf	?_ADC_GetConversionResult^(0+256)
  4123  093B  0008               	return
  4124  093C                     __end_of_ADC_GetConversionResult:	
  4125                           
  4126                           	psect	intentry
  4127  0004                     __pintentry:	
  4128 ;; *************** function _SYS_InterruptHigh *****************
  4129 ;; Defined at:
  4130 ;;		line 107 in file "mcc_generated_files/mcc.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;Total ram usage:        1 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    9
  4151 ;; This function calls:
  4152 ;;		_USBDeviceTasks
  4153 ;; This function is called by:
  4154 ;;		Interrupt level 1
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158  0004                     _SYS_InterruptHigh:	
  4159                           
  4160                           ;incstack = 0
  4161  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4162                           
  4163                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4164  0005  3180               	pagesel	$
  4165  0006  0020               	movlb	0	; select bank0
  4166  0007  087F               	movf	127,w
  4167  0008  0021               	movlb	1	; select bank1
  4168  0009  00EB               	movwf	??_SYS_InterruptHigh^(0+128)
  4169                           
  4170                           ;mcc.c: 110: USBDeviceTasks();
  4171  000A  3181  2167         	fcall	_USBDeviceTasks
  4172  000C  0021               	movlb	1	; select bank1
  4173  000D  086B               	movf	??_SYS_InterruptHigh^(0+128),w
  4174  000E  0020               	movlb	0	; select bank0
  4175  000F  00FF               	movwf	127
  4176  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4177  0011  0009               	retfie
  4178  0012                     __end_of_SYS_InterruptHigh:	
  4179                           
  4180                           	psect	text15
  4181  0167                     __ptext15:	
  4182 ;; *************** function _USBDeviceTasks *****************
  4183 ;; Defined at:
  4184 ;;		line 477 in file "../lib/usb/src/usb_device.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  i               1   15[BANK0 ] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;Total ram usage:        3 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    8
  4205 ;; This function calls:
  4206 ;;		_USBCtrlEPAllowStatusStage
  4207 ;;		_USBCtrlEPService
  4208 ;;		_USBIncrement1msInternalTimers
  4209 ;;		_USBStallHandler
  4210 ;;		_USBSuspend
  4211 ;;		_USBWakeFromSuspend
  4212 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4213 ;;		i1_USBDeviceInit
  4214 ;; This function is called by:
  4215 ;;		_SYS_InterruptHigh
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _USBDeviceTasks
  4221  0167                     _USBDeviceTasks:	
  4222                           
  4223                           ;usb_device.c: 479: uint8_t i;
  4224                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4225                           
  4226                           ;incstack = 0
  4227                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4228  0167  0021               	movlb	1	; select bank1
  4229  0168  0364               	decf	_USBDeviceState^(0+128),w	;volatile
  4230  0169  1D03               	btfss	3,2
  4231  016A  2976               	goto	i1l3427
  4232                           
  4233                           ;usb_device.c: 591: {
  4234                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4235  016B  003D               	movlb	29	; select bank29
  4236  016C  1A8E               	btfsc	14,5	;volatile
  4237  016D  2976               	goto	i1l3427
  4238                           
  4239                           ;usb_device.c: 602: {
  4240                           ;usb_device.c: 608: {UIR = 0;};
  4241  016E  0190               	clrf	16	;volatile
  4242                           
  4243                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4244  016F  1412               	bsf	18,0	;volatile
  4245                           
  4246                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4247  0170  1612               	bsf	18,4	;volatile
  4248                           
  4249                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4250  0171  3002               	movlw	2
  4251  0172  0021               	movlb	1	; select bank1
  4252  0173  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4253  0174  0869               	movf	??_USBDeviceTasks^(0+128),w
  4254  0175  00E4               	movwf	_USBDeviceState^(0+128)	;volatile
  4255  0176                     i1l3427:	
  4256                           
  4257                           ;usb_device.c: 617: }
  4258                           ;usb_device.c: 618: }
  4259                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4260  0176  003D               	movlb	29	; select bank29
  4261  0177  1910               	btfsc	16,2	;volatile
  4262  0178  1D12               	btfss	18,2	;volatile
  4263  0179  2983               	goto	i1l3435
  4264                           
  4265                           ;usb_device.c: 635: {
  4266                           ;usb_device.c: 636: (UIR &= 0xFB);
  4267  017A  30FB               	movlw	251
  4268  017B  0021               	movlb	1	; select bank1
  4269  017C  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4270  017D  0869               	movf	??_USBDeviceTasks^(0+128),w
  4271  017E  003D               	movlb	29	; select bank29
  4272  017F  0590               	andwf	16,f	;volatile
  4273                           
  4274                           ;usb_device.c: 640: USBWakeFromSuspend();
  4275  0180  3189  21F4  3181   	fcall	_USBWakeFromSuspend
  4276  0183                     i1l3435:	
  4277                           
  4278                           ;usb_device.c: 642: }
  4279                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4280  0183  003D               	movlb	29	; select bank29
  4281  0184  1C8E               	btfss	14,1	;volatile
  4282  0185  2989               	goto	i1l221
  4283                           
  4284                           ;usb_device.c: 648: {
  4285                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4286  0186  0020               	movlb	0	; select bank0
  4287  0187  1112               	bcf	18,2	;volatile
  4288                           
  4289                           ;usb_device.c: 650: return;
  4290  0188  0008               	return
  4291  0189                     i1l221:	
  4292                           
  4293                           ;usb_device.c: 651: }
  4294                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4295  0189  1810               	btfsc	16,0	;volatile
  4296  018A  1C12               	btfss	18,0	;volatile
  4297  018B  299A               	goto	i1l3449
  4298                           
  4299                           ;usb_device.c: 664: {
  4300                           ;usb_device.c: 665: USBDeviceInit();
  4301  018C  3183  23D2  3181   	fcall	i1_USBDeviceInit
  4302                           
  4303                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4304  018F  0021               	movlb	1	; select bank1
  4305  0190  1512               	bsf	18,2	;volatile
  4306                           
  4307                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4308  0191  3004               	movlw	4
  4309  0192  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4310  0193  0869               	movf	??_USBDeviceTasks^(0+128),w
  4311  0194  00E4               	movwf	_USBDeviceState^(0+128)	;volatile
  4312                           
  4313                           ;usb_device.c: 681: (UIR &= 0xFE);
  4314  0195  30FE               	movlw	254
  4315  0196  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4316  0197  0869               	movf	??_USBDeviceTasks^(0+128),w
  4317  0198  003D               	movlb	29	; select bank29
  4318  0199  0590               	andwf	16,f	;volatile
  4319  019A                     i1l3449:	
  4320                           
  4321                           ;usb_device.c: 682: }
  4322                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4323  019A  1A10               	btfsc	16,4	;volatile
  4324  019B  1E12               	btfss	18,4	;volatile
  4325  019C  29A0               	goto	i1l3455
  4326                           
  4327                           ;usb_device.c: 688: {
  4328                           ;usb_device.c: 694: USBSuspend();
  4329  019D  3189  21B5  3181   	fcall	_USBSuspend
  4330  01A0                     i1l3455:	
  4331                           
  4332                           ;usb_device.c: 696: }
  4333                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4334  01A0  003D               	movlb	29	; select bank29
  4335  01A1  1F10               	btfss	16,6	;volatile
  4336  01A2  29CA               	goto	i1l3471
  4337                           
  4338                           ;usb_device.c: 709: {
  4339                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4340  01A3  1F12               	btfss	18,6	;volatile
  4341  01A4  29B5               	goto	i1l3461
  4342                           
  4343                           ;usb_device.c: 712: {
  4344                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4345  01A5  3073               	movlw	115
  4346  01A6  0020               	movlb	0	; select bank0
  4347  01A7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4348  01A8  3000               	movlw	0
  4349  01A9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4350  01AA  3000               	movlw	0
  4351  01AB  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4352  01AC  3000               	movlw	0
  4353  01AD  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4354  01AE  3001               	movlw	1
  4355  01AF  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4356  01B0  3000               	movlw	0
  4357  01B1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4358  01B2  318A  22CA  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4359  01B5                     i1l3461:	
  4360                           
  4361                           ;usb_device.c: 714: }
  4362                           ;usb_device.c: 715: (UIR &= 0xBF);
  4363  01B5  30BF               	movlw	191
  4364  01B6  0021               	movlb	1	; select bank1
  4365  01B7  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4366  01B8  0869               	movf	??_USBDeviceTasks^(0+128),w
  4367  01B9  003D               	movlb	29	; select bank29
  4368  01BA  0590               	andwf	16,f	;volatile
  4369                           
  4370                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4371  01BB  3189  2180  3181   	fcall	_USBIncrement1msInternalTimers
  4372                           
  4373                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4374  01BE  0023               	movlb	3	; select bank3
  4375  01BF  0859               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4376  01C0  1903               	btfsc	3,2
  4377  01C1  29C4               	goto	i1l227
  4378                           
  4379                           ;usb_device.c: 736: {
  4380                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4381  01C2  3001               	movlw	1
  4382  01C3  02D9               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4383  01C4                     i1l227:	
  4384                           
  4385                           ;usb_device.c: 738: }
  4386                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4387  01C4  0859               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4388  01C5  1D03               	btfss	3,2
  4389  01C6  29CA               	goto	i1l3471
  4390                           
  4391                           ;usb_device.c: 745: {
  4392                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4393  01C7  318F  270F  3181   	fcall	_USBCtrlEPAllowStatusStage
  4394  01CA                     i1l3471:	
  4395                           
  4396                           ;usb_device.c: 747: }
  4397                           ;usb_device.c: 749: }
  4398                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4399  01CA  003D               	movlb	29	; select bank29
  4400  01CB  1A90               	btfsc	16,5	;volatile
  4401  01CC  1E92               	btfss	18,5	;volatile
  4402  01CD  29D1               	goto	i1l3477
  4403                           
  4404                           ;usb_device.c: 752: {
  4405                           ;usb_device.c: 753: USBStallHandler();
  4406  01CE  318A  2237  3181   	fcall	_USBStallHandler
  4407  01D1                     i1l3477:	
  4408                           
  4409                           ;usb_device.c: 754: }
  4410                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4411  01D1  003D               	movlb	29	; select bank29
  4412  01D2  1890               	btfsc	16,1	;volatile
  4413  01D3  1C92               	btfss	18,1	;volatile
  4414  01D4  29E7               	goto	i1l3485
  4415                           
  4416                           ;usb_device.c: 757: {
  4417                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4418  01D5  30FF               	movlw	255
  4419  01D6  0020               	movlb	0	; select bank0
  4420  01D7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4421  01D8  307F               	movlw	127
  4422  01D9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4423  01DA  3000               	movlw	0
  4424  01DB  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4425  01DC  3000               	movlw	0
  4426  01DD  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4427  01DE  3001               	movlw	1
  4428  01DF  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4429  01E0  3000               	movlw	0
  4430  01E1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4431  01E2  318A  22CA  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4432                           
  4433                           ;usb_device.c: 759: {UEIR = 0;};
  4434  01E5  003D               	movlb	29	; select bank29
  4435  01E6  0193               	clrf	19	;volatile
  4436  01E7                     i1l3485:	
  4437                           
  4438                           ;usb_device.c: 767: }
  4439                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4440  01E7  3004               	movlw	4
  4441  01E8  0021               	movlb	1	; select bank1
  4442  01E9  0264               	subwf	_USBDeviceState^(0+128),w	;volatile
  4443  01EA  1803               	skipnc
  4444  01EB  29EF               	goto	i1l231
  4445                           
  4446                           ;usb_device.c: 775: {
  4447                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4448  01EC  0020               	movlb	0	; select bank0
  4449  01ED  1112               	bcf	18,2	;volatile
  4450                           
  4451                           ;usb_device.c: 777: return;
  4452  01EE  0008               	return
  4453  01EF                     i1l231:	
  4454                           
  4455                           ;usb_device.c: 778: }
  4456                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4457  01EF  003D               	movlb	29	; select bank29
  4458  01F0  1D92               	btfss	18,3	;volatile
  4459  01F1  2A48               	goto	i1l232
  4460                           
  4461                           ;usb_device.c: 784: {
  4462                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4463  01F2  0020               	movlb	0	; select bank0
  4464  01F3  01EF               	clrf	USBDeviceTasks@i
  4465  01F4  3004               	movlw	4
  4466  01F5  026F               	subwf	USBDeviceTasks@i,w
  4467  01F6  1803               	btfsc	3,0
  4468  01F7  2A48               	goto	i1l232
  4469  01F8                     i1l233:	
  4470                           
  4471                           ;usb_device.c: 786: {
  4472                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4473  01F8  003D               	movlb	29	; select bank29
  4474  01F9  1D90               	btfss	16,3	;volatile
  4475  01FA  2A48               	goto	i1l232
  4476                           
  4477                           ;usb_device.c: 788: {
  4478                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4479  01FB  080F               	movf	15,w	;volatile
  4480  01FC  0021               	movlb	1	; select bank1
  4481  01FD  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4482  01FE  0869               	movf	??_USBDeviceTasks^(0+128),w
  4483  01FF  00E5               	movwf	_USTATcopy^(0+128)	;volatile
  4484                           
  4485                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4486  0200  0C65               	rrf	_USTATcopy^(0+128),w	;volatile
  4487  0201  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4488  0202  0CE9               	rrf	??_USBDeviceTasks^(0+128),f
  4489  0203  0C69               	rrf	??_USBDeviceTasks^(0+128),w
  4490  0204  390F               	andlw	15
  4491  0205  00EA               	movwf	(??_USBDeviceTasks+1)^(0+128)
  4492  0206  086A               	movf	(??_USBDeviceTasks+1)^(0+128),w
  4493  0207  0023               	movlb	3	; select bank3
  4494  0208  00DB               	movwf	_endpoint_number^(0+384)	;volatile
  4495                           
  4496                           ;usb_device.c: 793: (UIR &= 0xF7);
  4497  0209  30F7               	movlw	247
  4498  020A  0021               	movlb	1	; select bank1
  4499  020B  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4500  020C  0869               	movf	??_USBDeviceTasks^(0+128),w
  4501  020D  003D               	movlb	29	; select bank29
  4502  020E  0590               	andwf	16,f	;volatile
  4503                           
  4504                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4505  020F  0021               	movlb	1	; select bank1
  4506  0210  1965               	btfsc	_USTATcopy^(0+128),2	;volatile
  4507  0211  2A16               	goto	i1l3505
  4508                           
  4509                           ;usb_device.c: 799: {
  4510                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4511  0212  0023               	movlb	3	; select bank3
  4512  0213  085B               	movf	_endpoint_number^(0+384),w	;volatile
  4513  0214  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4514  0215  2A19               	goto	L4
  4515  0216                     i1l3505:	
  4516                           ;usb_device.c: 801: }
  4517                           
  4518                           
  4519                           ;usb_device.c: 802: else
  4520                           ;usb_device.c: 803: {
  4521                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4522  0216  0023               	movlb	3	; select bank3
  4523  0217  085B               	movf	_endpoint_number^(0+384),w	;volatile
  4524  0218  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4525  0219                     L4:	
  4526  0219  0086               	movwf	6
  4527  021A  3001               	movlw	1	; select bank3/4
  4528  021B  0087               	movwf	7
  4529  021C  0801               	movf	1,w
  4530  021D  3901               	andlw	1
  4531  021E  0021               	movlb	1	; select bank1
  4532  021F  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4533  0220  3001               	movlw	1
  4534  0221  06E9               	xorwf	??_USBDeviceTasks^(0+128),f
  4535  0222  0801               	movf	1,w
  4536  0223  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4537  0224  39FE               	andlw	-2
  4538  0225  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  4539  0226  0081               	movwf	1
  4540                           
  4541                           ;usb_device.c: 805: }
  4542                           ;usb_device.c: 810: if(endpoint_number == 0)
  4543  0227  0023               	movlb	3	; select bank3
  4544  0228  085B               	movf	_endpoint_number^(0+384),w	;volatile
  4545  0229  1D03               	btfss	3,2
  4546  022A  2A2F               	goto	i1l3511
  4547                           
  4548                           ;usb_device.c: 811: {
  4549                           ;usb_device.c: 812: USBCtrlEPService();
  4550  022B  318C  246C  3181   	fcall	_USBCtrlEPService
  4551                           
  4552                           ;usb_device.c: 813: }
  4553  022E  2A3E               	goto	i1l3513
  4554  022F                     i1l3511:	
  4555                           
  4556                           ;usb_device.c: 814: else
  4557                           ;usb_device.c: 815: {
  4558                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4559  022F  3072               	movlw	114
  4560  0230  0020               	movlb	0	; select bank0
  4561  0231  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4562  0232  3000               	movlw	0
  4563  0233  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4564  0234  30E5               	movlw	low _USTATcopy
  4565  0235  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4566  0236  3000               	movlw	high _USTATcopy
  4567  0237  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4568  0238  3000               	movlw	0
  4569  0239  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4570  023A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4571  023B  318A  22CA  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4572  023E                     i1l3513:	
  4573                           ;usb_device.c: 819: else
  4574                           ;usb_device.c: 820: {
  4575                           ;usb_device.c: 821: break;
  4576                           
  4577                           ;usb_device.c: 817: }
  4578                           ;usb_device.c: 818: }
  4579                           
  4580  023E  3001               	movlw	1
  4581  023F  0021               	movlb	1	; select bank1
  4582  0240  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4583  0241  0869               	movf	??_USBDeviceTasks^(0+128),w
  4584  0242  0020               	movlb	0	; select bank0
  4585  0243  07EF               	addwf	USBDeviceTasks@i,f
  4586  0244  3004               	movlw	4
  4587  0245  026F               	subwf	USBDeviceTasks@i,w
  4588  0246  1C03               	skipc
  4589  0247  29F8               	goto	i1l233
  4590  0248                     i1l232:	
  4591                           
  4592                           ;usb_device.c: 822: }
  4593                           ;usb_device.c: 823: }
  4594                           ;usb_device.c: 824: }
  4595                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4596  0248  0020               	movlb	0	; select bank0
  4597  0249  1112               	bcf	18,2	;volatile
  4598  024A  0008               	return
  4599  024B                     __end_of_USBDeviceTasks:	
  4600                           
  4601                           	psect	text16
  4602  03D2                     __ptext16:	
  4603 ;; *************** function i1_USBDeviceInit *****************
  4604 ;; Defined at:
  4605 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  4610 ;;		 -> UEP1(1), 
  4611 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4612 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;Total ram usage:        5 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_USBDeviceTasks
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           
  4636                           ;psect for function i1_USBDeviceInit
  4637  03D2                     i1_USBDeviceInit:	
  4638                           
  4639                           ;usb_device.c: 279: uint8_t i;
  4640                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4644  03D2  0021               	movlb	1	; select bank1
  4645  03D3  1112               	bcf	18,2	;volatile
  4646                           
  4647                           ;usb_device.c: 285: ;
  4648                           ;usb_device.c: 288: {UEIR = 0;};
  4649  03D4  003D               	movlb	29	; select bank29
  4650  03D5  0193               	clrf	19	;volatile
  4651                           
  4652                           ;usb_device.c: 291: {UIR = 0;};
  4653  03D6  0190               	clrf	16	;volatile
  4654                           
  4655                           ;usb_device.c: 294: UEP0 = 0;
  4656  03D7  0198               	clrf	24	;volatile
  4657                           
  4658                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  4659  03D8  300E               	movlw	14
  4660  03D9  00F2               	movwf	i1USBDeviceInit@p+1
  4661  03DA  3099               	movlw	153
  4662  03DB  00F1               	movwf	i1USBDeviceInit@p
  4663  03DC  01F3               	clrf	i1USBDeviceInit@i_885
  4664  03DD  3002               	movlw	2
  4665  03DE  0273               	subwf	i1USBDeviceInit@i_885,w
  4666  03DF  1803               	btfsc	3,0
  4667  03E0  2BF2               	goto	i1l3329
  4668  03E1                     i1l3321:	
  4669  03E1  0871               	movf	i1USBDeviceInit@p,w
  4670  03E2  0086               	movwf	6
  4671  03E3  0872               	movf	i1USBDeviceInit@p+1,w
  4672  03E4  0087               	movwf	7
  4673  03E5  0181               	clrf	1
  4674  03E6  3001               	movlw	1
  4675  03E7  07F1               	addwf	i1USBDeviceInit@p,f
  4676  03E8  3000               	movlw	0
  4677  03E9  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  4678  03EA  3001               	movlw	1
  4679  03EB  00F0               	movwf	??i1_USBDeviceInit
  4680  03EC  0870               	movf	??i1_USBDeviceInit,w
  4681  03ED  07F3               	addwf	i1USBDeviceInit@i_885,f
  4682  03EE  3002               	movlw	2
  4683  03EF  0273               	subwf	i1USBDeviceInit@i_885,w
  4684  03F0  1C03               	skipc
  4685  03F1  2BE1               	goto	i1l3321
  4686  03F2                     i1l3329:	
  4687                           
  4688                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4689  03F2  3016               	movlw	22
  4690  03F3  003D               	movlb	29	; select bank29
  4691  03F4  0091               	movwf	17	;volatile
  4692  03F5  309F               	movlw	159
  4693  03F6  0097               	movwf	23	;volatile
  4694  03F7  307B               	movlw	123
  4695  03F8  0092               	movwf	18	;volatile
  4696                           
  4697                           ;usb_device.c: 301: ;
  4698                           ;usb_device.c: 304: ;
  4699                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4700  03F9  01F4               	clrf	i1USBDeviceInit@i
  4701  03FA  300C               	movlw	12
  4702  03FB  0274               	subwf	i1USBDeviceInit@i,w
  4703  03FC  1803               	btfsc	3,0
  4704  03FD  2C17               	goto	i1l210
  4705  03FE                     i1l3337:	
  4706                           
  4707                           ;usb_device.c: 308: {
  4708                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4709  03FE  0874               	movf	i1USBDeviceInit@i,w
  4710  03FF  00F0               	movwf	??i1_USBDeviceInit
  4711  0400  3001               	movlw	1
  4712  0401                     u280_25:	
  4713  0401  35F0               	lslf	??i1_USBDeviceInit,f
  4714  0402  3EFF               	addlw	-1
  4715  0403  1D03               	skipz
  4716  0404  2C01               	goto	u280_25
  4717  0405  3570               	lslf	??i1_USBDeviceInit,w
  4718  0406  3E20               	addlw	32
  4719  0407  0086               	movwf	6
  4720  0408  0187               	clrf	7
  4721  0409  3000               	movlw	0
  4722  040A  3FC0               	movwi [0]fsr1
  4723  040B  3000               	movlw	0
  4724  040C  3FC1               	movwi [1]fsr1
  4725  040D  3FC2               	movwi [2]fsr1
  4726  040E  3FC3               	movwi [3]fsr1
  4727  040F  3001               	movlw	1
  4728  0410  00F0               	movwf	??i1_USBDeviceInit
  4729  0411  0870               	movf	??i1_USBDeviceInit,w
  4730  0412  07F4               	addwf	i1USBDeviceInit@i,f
  4731  0413  300C               	movlw	12
  4732  0414  0274               	subwf	i1USBDeviceInit@i,w
  4733  0415  1C03               	skipc
  4734  0416  2BFE               	goto	i1l3337
  4735  0417                     i1l210:	
  4736                           
  4737                           ;usb_device.c: 310: }
  4738                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4739  0417  003D               	movlb	29	; select bank29
  4740  0418  170E               	bsf	14,6	;volatile
  4741                           
  4742                           ;usb_device.c: 316: UADDR = 0x00;
  4743  0419  0196               	clrf	22	;volatile
  4744                           
  4745                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4746  041A  120E               	bcf	14,4	;volatile
  4747                           
  4748                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4749  041B  130E               	bcf	14,6	;volatile
  4750  041C                     i1l3349:	
  4751                           ;usb_device.c: 325: do
  4752                           
  4753                           
  4754                           ;usb_device.c: 326: {
  4755                           ;usb_device.c: 327: (UIR &= 0xF7);
  4756  041C  30F7               	movlw	247
  4757  041D  00F0               	movwf	??i1_USBDeviceInit
  4758  041E  0870               	movf	??i1_USBDeviceInit,w
  4759  041F  0590               	andwf	16,f	;volatile
  4760                           
  4761                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4762  0420  0023               	movlb	3	; select bank3
  4763  0421  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  4764                           
  4765                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4766  0422  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  4767                           
  4768                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4769  0423  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  4770  0424  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  4771                           
  4772                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4773  0425  003D               	movlb	29	; select bank29
  4774  0426  1990               	btfsc	16,3	;volatile
  4775  0427  2C1C               	goto	i1l3349
  4776                           
  4777                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4778  0428  3001               	movlw	1
  4779  0429  00F0               	movwf	??i1_USBDeviceInit
  4780  042A  0870               	movf	??i1_USBDeviceInit,w
  4781  042B  0023               	movlb	3	; select bank3
  4782  042C  00D7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4783                           
  4784                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4785  042D  3001               	movlw	1
  4786  042E  00F0               	movwf	??i1_USBDeviceInit
  4787  042F  0870               	movf	??i1_USBDeviceInit,w
  4788  0430  00D6               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4789                           
  4790                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4791  0431  01D5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4792                           
  4793                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4794  0432  01D4               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4795                           
  4796                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4797  0433  01DC               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4798                           
  4799                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4800  0434  01F4               	clrf	i1USBDeviceInit@i
  4801  0435  3003               	movlw	3
  4802  0436  0274               	subwf	i1USBDeviceInit@i,w
  4803  0437  1803               	btfsc	3,0
  4804  0438  2C5D               	goto	i1l3377
  4805  0439                     i1l3371:	
  4806                           
  4807                           ;usb_device.c: 346: {
  4808                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4809  0439  3574               	lslf	i1USBDeviceInit@i,w
  4810  043A  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4811  043B  0086               	movwf	6
  4812  043C  3001               	movlw	1	; select bank3/4
  4813  043D  0087               	movwf	7
  4814  043E  3000               	movlw	0
  4815  043F  3FC0               	movwi [0]fsr1
  4816  0440  3FC1               	movwi [1]fsr1
  4817                           
  4818                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4819  0441  3574               	lslf	i1USBDeviceInit@i,w
  4820  0442  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4821  0443  0086               	movwf	6
  4822  0444  3001               	movlw	1	; select bank3/4
  4823  0445  0087               	movwf	7
  4824  0446  3000               	movlw	0
  4825  0447  3FC0               	movwi [0]fsr1
  4826  0448  3FC1               	movwi [1]fsr1
  4827                           
  4828                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4829  0449  0874               	movf	i1USBDeviceInit@i,w
  4830  044A  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4831  044B  0086               	movwf	6
  4832  044C  3001               	movlw	1	; select bank3/4
  4833  044D  0087               	movwf	7
  4834  044E  0181               	clrf	1
  4835                           
  4836                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4837  044F  0874               	movf	i1USBDeviceInit@i,w
  4838  0450  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4839  0451  0086               	movwf	6
  4840  0452  3001               	movlw	1	; select bank3/4
  4841  0453  0087               	movwf	7
  4842  0454  0181               	clrf	1
  4843  0455  3001               	movlw	1
  4844  0456  00F0               	movwf	??i1_USBDeviceInit
  4845  0457  0870               	movf	??i1_USBDeviceInit,w
  4846  0458  07F4               	addwf	i1USBDeviceInit@i,f
  4847  0459  3003               	movlw	3
  4848  045A  0274               	subwf	i1USBDeviceInit@i,w
  4849  045B  1C03               	skipc
  4850  045C  2C39               	goto	i1l3371
  4851  045D                     i1l3377:	
  4852                           
  4853                           ;usb_device.c: 351: }
  4854                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4855  045D  3028               	movlw	40
  4856  045E  0023               	movlb	3	; select bank3
  4857  045F  00A7               	movwf	_pBDTEntryIn^(0+384)
  4858  0460  3000               	movlw	0
  4859  0461  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4860                           
  4861                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4862  0462  3016               	movlw	22
  4863  0463  003D               	movlb	29	; select bank29
  4864  0464  0098               	movwf	24	;volatile
  4865                           
  4866                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4867  0465  3000               	movlw	0
  4868  0466  0020               	movlb	0	; select bank0
  4869  0467  00A3               	movwf	35	;volatile
  4870  0468  3050               	movlw	80
  4871  0469  00A2               	movwf	34	;volatile
  4872                           
  4873                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4874  046A  3008               	movlw	8
  4875  046B  00A1               	movwf	33	;volatile
  4876                           
  4877                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4878  046C  3004               	movlw	4
  4879  046D  00F0               	movwf	??i1_USBDeviceInit
  4880  046E  0870               	movf	??i1_USBDeviceInit,w
  4881  046F  00A0               	movwf	32	;volatile
  4882                           
  4883                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4884  0470  17A0               	bsf	32,7	;volatile
  4885                           
  4886                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4887  0471  0023               	movlb	3	; select bank3
  4888  0472  01E9               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  4889                           
  4890                           ;usb_device.c: 366: USB1msTickCount = 0;
  4891  0473  3000               	movlw	0
  4892  0474  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  4893  0475  3000               	movlw	0
  4894  0476  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  4895  0477  3000               	movlw	0
  4896  0478  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  4897  0479  3000               	movlw	0
  4898  047A  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  4899                           
  4900                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4901  047B  01D3               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4902                           
  4903                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4904  047C  0021               	movlb	1	; select bank1
  4905  047D  01E4               	clrf	_USBDeviceState^(0+128)	;volatile
  4906  047E  0008               	return
  4907  047F                     __end_ofi1_USBDeviceInit:	
  4908                           
  4909                           	psect	text17
  4910  09F4                     __ptext17:	
  4911 ;; *************** function _USBWakeFromSuspend *****************
  4912 ;; Defined at:
  4913 ;;		line 2303 in file "../lib/usb/src/usb_device.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:        1 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    4
  4934 ;; This function calls:
  4935 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4936 ;; This function is called by:
  4937 ;;		_USBDeviceTasks
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           
  4942                           ;psect for function _USBWakeFromSuspend
  4943  09F4                     _USBWakeFromSuspend:	
  4944                           
  4945                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  4946                           
  4947                           ;incstack = 0
  4948                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4949  09F4  0023               	movlb	3	; select bank3
  4950  09F5  01DC               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4951                           
  4952                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4953  09F6  3074               	movlw	116
  4954  09F7  0020               	movlb	0	; select bank0
  4955  09F8  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4956  09F9  3000               	movlw	0
  4957  09FA  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4958  09FB  3000               	movlw	0
  4959  09FC  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4960  09FD  3000               	movlw	0
  4961  09FE  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4962  09FF  3000               	movlw	0
  4963  0A00  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4964  0A01  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4965  0A02  318A  22CA  3189   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4966                           
  4967                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  4968  0A05  003D               	movlb	29	; select bank29
  4969  0A06  108E               	bcf	14,1	;volatile
  4970                           
  4971                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  4972  0A07  1112               	bcf	18,2	;volatile
  4973  0A08                     i1l3213:	
  4974                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  4975                           
  4976  0A08  1D10               	btfss	16,2	;volatile
  4977  0A09  2A11               	goto	i1l3215
  4978                           
  4979                           ;usb_device.c: 2343: {
  4980                           ;usb_device.c: 2344: (UIR &= 0xFB);
  4981  0A0A  30FB               	movlw	251
  4982  0A0B  0020               	movlb	0	; select bank0
  4983  0A0C  00E6               	movwf	??_USBWakeFromSuspend
  4984  0A0D  0866               	movf	??_USBWakeFromSuspend,w
  4985  0A0E  003D               	movlb	29	; select bank29
  4986  0A0F  0590               	andwf	16,f	;volatile
  4987  0A10  2A08               	goto	i1l3213
  4988  0A11                     i1l3215:	
  4989                           
  4990                           ;usb_device.c: 2345: }
  4991                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  4992  0A11  0023               	movlb	3	; select bank3
  4993  0A12  01D3               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4994  0A13  0008               	return
  4995  0A14                     __end_of_USBWakeFromSuspend:	
  4996                           
  4997                           	psect	text18
  4998  09B5                     __ptext18:	
  4999 ;; *************** function _USBSuspend *****************
  5000 ;; Defined at:
  5001 ;;		line 2245 in file "../lib/usb/src/usb_device.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;		None
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;Total ram usage:        1 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    4
  5022 ;; This function calls:
  5023 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5024 ;; This function is called by:
  5025 ;;		_USBDeviceTasks
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function _USBSuspend
  5031  09B5                     _USBSuspend:	
  5032                           
  5033                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5034                           
  5035                           ;incstack = 0
  5036                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5037  09B5  003D               	movlb	29	; select bank29
  5038  09B6  1512               	bsf	18,2	;volatile
  5039                           
  5040                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5041  09B7  30EF               	movlw	239
  5042  09B8  0020               	movlb	0	; select bank0
  5043  09B9  00E6               	movwf	??_USBSuspend
  5044  09BA  0866               	movf	??_USBSuspend,w
  5045  09BB  003D               	movlb	29	; select bank29
  5046  09BC  0590               	andwf	16,f	;volatile
  5047                           
  5048                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5049  09BD  148E               	bsf	14,1	;volatile
  5050                           
  5051                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5052  09BE  3001               	movlw	1
  5053  09BF  0020               	movlb	0	; select bank0
  5054  09C0  00E6               	movwf	??_USBSuspend
  5055  09C1  0866               	movf	??_USBSuspend,w
  5056  09C2  0023               	movlb	3	; select bank3
  5057  09C3  00DC               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  5058                           
  5059                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5060  09C4  01D3               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5061                           
  5062                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5063  09C5  3075               	movlw	117
  5064  09C6  0020               	movlb	0	; select bank0
  5065  09C7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5066  09C8  3000               	movlw	0
  5067  09C9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5068  09CA  3000               	movlw	0
  5069  09CB  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5070  09CC  3000               	movlw	0
  5071  09CD  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5072  09CE  3000               	movlw	0
  5073  09CF  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5074  09D0  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5075  09D1  318A  22CA         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5076  09D3  0008               	return
  5077  09D4                     __end_of_USBSuspend:	
  5078                           
  5079                           	psect	text19
  5080  0A37                     __ptext19:	
  5081 ;; *************** function _USBStallHandler *****************
  5082 ;; Defined at:
  5083 ;;		line 2202 in file "../lib/usb/src/usb_device.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;Total ram usage:        1 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_USBDeviceTasks
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function _USBStallHandler
  5112  0A37                     _USBStallHandler:	
  5113                           
  5114                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5115                           
  5116                           ;incstack = 0
  5117                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5118  0A37  003D               	movlb	29	; select bank29
  5119  0A38  1C18               	btfss	24,0	;volatile
  5120  0A39  2A59               	goto	i1l3247
  5121                           
  5122                           ;usb_device.c: 2215: {
  5123                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5124  0A3A  0021               	movlb	1	; select bank1
  5125  0A3B  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5126  0A3C  0086               	movwf	6
  5127  0A3D  0187               	clrf	7
  5128  0A3E  3080               	movlw	128
  5129  0A3F  0601               	xorwf	1,w
  5130  0A40  1D03               	btfss	3,2
  5131  0A41  2A57               	goto	i1l3245
  5132  0A42  0023               	movlb	3	; select bank3
  5133  0A43  0827               	movf	_pBDTEntryIn^(0+384),w
  5134  0A44  0086               	movwf	6
  5135  0A45  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5136  0A46  0087               	movwf	7
  5137  0A47  3084               	movlw	132
  5138  0A48  0601               	xorwf	1,w
  5139  0A49  1D03               	btfss	3,2
  5140  0A4A  2A57               	goto	i1l3245
  5141                           
  5142                           ;usb_device.c: 2218: {
  5143                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5144  0A4B  300C               	movlw	12
  5145  0A4C  00F0               	movwf	??_USBStallHandler
  5146  0A4D  0021               	movlb	1	; select bank1
  5147  0A4E  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5148  0A4F  0086               	movwf	6
  5149  0A50  0187               	clrf	7
  5150  0A51  0870               	movf	??_USBStallHandler,w
  5151  0A52  0081               	movwf	1
  5152                           
  5153                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5154  0A53  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5155  0A54  0086               	movwf	6
  5156  0A55  0187               	clrf	7
  5157  0A56  1781               	bsf	1,7
  5158  0A57                     i1l3245:	
  5159                           
  5160                           ;usb_device.c: 2222: }
  5161                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5162  0A57  003D               	movlb	29	; select bank29
  5163  0A58  1018               	bcf	24,0	;volatile
  5164  0A59                     i1l3247:	
  5165                           
  5166                           ;usb_device.c: 2224: }
  5167                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5168  0A59  30DF               	movlw	223
  5169  0A5A  00F0               	movwf	??_USBStallHandler
  5170  0A5B  0870               	movf	??_USBStallHandler,w
  5171  0A5C  0590               	andwf	16,f	;volatile
  5172  0A5D  0008               	return
  5173  0A5E                     __end_of_USBStallHandler:	
  5174                           
  5175                           	psect	text20
  5176  0980                     __ptext20:	
  5177 ;; *************** function _USBIncrement1msInternalTimers *****************
  5178 ;; Defined at:
  5179 ;;		line 3025 in file "../lib/usb/src/usb_device.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;Total ram usage:        1 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_USBDeviceTasks
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           
  5207                           ;psect for function _USBIncrement1msInternalTimers
  5208  0980                     _USBIncrement1msInternalTimers:	
  5209                           
  5210                           ;usb_device.c: 3033: USB1msTickCount++;
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5214  0980  3001               	movlw	1
  5215  0981  0023               	movlb	3	; select bank3
  5216  0982  07BC               	addwf	_USB1msTickCount^(0+384),f	;volatile
  5217  0983  3000               	movlw	0
  5218  0984  3DBD               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  5219  0985  3000               	movlw	0
  5220  0986  3DBE               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  5221  0987  3000               	movlw	0
  5222  0988  3DBF               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  5223                           
  5224                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5225  0989  085C               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  5226  098A  1D03               	btfss	3,2
  5227  098B  0008               	return
  5228                           
  5229                           ;usb_device.c: 3035: {
  5230                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5231  098C  3001               	movlw	1
  5232  098D  00F0               	movwf	??_USBIncrement1msInternalTimers
  5233  098E  0870               	movf	??_USBIncrement1msInternalTimers,w
  5234  098F  07D3               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  5235                           
  5236                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5237  0990  0853               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  5238  0991  1D03               	btfss	3,2
  5239  0992  0008               	return
  5240                           
  5241                           ;usb_device.c: 3039: {
  5242                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5243  0993  30FF               	movlw	255
  5244  0994  00F0               	movwf	??_USBIncrement1msInternalTimers
  5245  0995  0870               	movf	??_USBIncrement1msInternalTimers,w
  5246  0996  00D3               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5247  0997  0008               	return
  5248  0998                     __end_of_USBIncrement1msInternalTimers:	
  5249                           
  5250                           	psect	text21
  5251  0C6C                     __ptext21:	
  5252 ;; *************** function _USBCtrlEPService *****************
  5253 ;; Defined at:
  5254 ;;		line 2372 in file "../lib/usb/src/usb_device.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:        3 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    7
  5275 ;; This function calls:
  5276 ;;		_USBCtrlTrfInHandler
  5277 ;;		_USBCtrlTrfOutHandler
  5278 ;;		_USBCtrlTrfSetupHandler
  5279 ;; This function is called by:
  5280 ;;		_USBDeviceTasks
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           
  5285                           ;psect for function _USBCtrlEPService
  5286  0C6C                     _USBCtrlEPService:	
  5287                           
  5288                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5289                           
  5290                           ;incstack = 0
  5291                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5292  0C6C  302D               	movlw	45
  5293  0C6D  0021               	movlb	1	; select bank1
  5294  0C6E  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5295  0C6F  0866               	movf	??_USBCtrlEPService^(0+128),w
  5296  0C70  0023               	movlb	3	; select bank3
  5297  0C71  00D9               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  5298                           
  5299                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5300  0C72  0021               	movlb	1	; select bank1
  5301  0C73  0865               	movf	_USTATcopy^(0+128),w	;volatile
  5302  0C74  39FD               	andlw	253
  5303  0C75  1D03               	btfss	3,2
  5304  0C76  2CB8               	goto	i1l3267
  5305                           
  5306                           ;usb_device.c: 2383: {
  5307                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5308  0C77  3665               	lsrf	_USTATcopy^(0+128),w	;volatile
  5309  0C78  393F               	andlw	63
  5310  0C79  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5311  0C7A  3001               	movlw	1
  5312  0C7B                     u268_25:	
  5313  0C7B  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  5314  0C7C  3EFF               	addlw	-1
  5315  0C7D  1D03               	skipz
  5316  0C7E  2C7B               	goto	u268_25
  5317  0C7F  3566               	lslf	??_USBCtrlEPService^(0+128),w
  5318  0C80  3E20               	addlw	32
  5319  0C81  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  5320  0C82  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5321  0C83  00E3               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5322                           
  5323                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5324  0C84  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5325  0C85  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5326  0C86  39FF               	andlw	255
  5327  0C87  1D03               	skipz
  5328  0C88  3000               	movlw	0
  5329  0C89  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5330                           
  5331                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5332  0C8A  3004               	movlw	4
  5333  0C8B  0660               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  5334  0C8C  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5335  0C8D  3000               	movlw	0
  5336  0C8E  0661               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5337  0C8F  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5338                           
  5339                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5340  0C90  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5341  0C91  0086               	movwf	6
  5342  0C92  0187               	clrf	7
  5343  0C93  0C01               	rrf	1,w
  5344  0C94  0C89               	rrf	9,f
  5345  0C95  390F               	andlw	15
  5346  0C96  3A0D               	xorlw	13
  5347  0C97  1D03               	skipz
  5348  0C98  2CB5               	goto	i1l3265
  5349                           
  5350                           ;usb_device.c: 2400: {
  5351                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  5352  0C99  3050               	movlw	80
  5353  0C9A  0086               	movwf	6
  5354  0C9B  0187               	clrf	7
  5355  0C9C  0021               	movlb	1	; select bank1
  5356  0C9D  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5357  0C9E  3E02               	addlw	2
  5358  0C9F  0084               	movwf	4
  5359  0CA0  0185               	clrf	5
  5360  0CA1  3F00               	moviw [0]fsr0
  5361  0CA2  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5362  0CA3  3F01               	moviw [1]fsr0
  5363  0CA4  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5364  0CA5  0866               	movf	??_USBCtrlEPService^(0+128),w
  5365  0CA6  0084               	movwf	4
  5366  0CA7  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5367  0CA8  0085               	movwf	5
  5368  0CA9  3008               	movlw	8
  5369  0CAA  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  5370  0CAB  0868               	movf	(??_USBCtrlEPService+2)^(0+128),w
  5371  0CAC  1903               	skipnz
  5372  0CAD  2CB2               	goto	i1l3263
  5373  0CAE                     u270_2m0:	
  5374  0CAE  0012               	moviw fsr0++
  5375  0CAF  001E               	movwi fsr1++
  5376  0CB0  0BE8               	decfsz	(??_USBCtrlEPService+2)^(0+128),f
  5377  0CB1  2CAE               	goto	u270_2m0
  5378  0CB2                     i1l3263:	
  5379                           
  5380                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5381  0CB2  318B  23C4         	fcall	_USBCtrlTrfSetupHandler
  5382                           
  5383                           ;usb_device.c: 2409: }
  5384  0CB4  0008               	return
  5385  0CB5                     i1l3265:	
  5386                           
  5387                           ;usb_device.c: 2410: else
  5388                           ;usb_device.c: 2411: {
  5389                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  5390  0CB5  318A  2293         	fcall	_USBCtrlTrfOutHandler
  5391                           
  5392                           ;usb_device.c: 2414: }
  5393                           ;usb_device.c: 2415: }
  5394  0CB7  0008               	return
  5395  0CB8                     i1l3267:	
  5396                           
  5397                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5398  0CB8  30FD               	movlw	253
  5399  0CB9  0021               	movlb	1	; select bank1
  5400  0CBA  0565               	andwf	_USTATcopy^(0+128),w	;volatile
  5401  0CBB  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5402  0CBC  3004               	movlw	4
  5403  0CBD  0666               	xorwf	??_USBCtrlEPService^(0+128),w
  5404  0CBE  1D03               	btfss	3,2
  5405  0CBF  0008               	return
  5406                           
  5407                           ;usb_device.c: 2417: {
  5408                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5409  0CC0  318E  26A3         	fcall	_USBCtrlTrfInHandler
  5410  0CC2  0008               	return
  5411  0CC3                     __end_of_USBCtrlEPService:	
  5412                           
  5413                           	psect	text22
  5414  0BC4                     __ptext22:	
  5415 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5416 ;; Defined at:
  5417 ;;		line 2465 in file "../lib/usb/src/usb_device.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5434 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;Total ram usage:        1 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    6
  5438 ;; This function calls:
  5439 ;;		_USBCheckStdRequest
  5440 ;;		_USBCtrlEPServiceComplete
  5441 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5442 ;; This function is called by:
  5443 ;;		_USBCtrlEPService
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           
  5448                           ;psect for function _USBCtrlTrfSetupHandler
  5449  0BC4                     _USBCtrlTrfSetupHandler:	
  5450                           
  5451                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5452                           
  5453                           ;incstack = 0
  5454                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5455  0BC4  0023               	movlb	3	; select bank3
  5456  0BC5  01DF               	clrf	_shortPacketStatus^(0+384)	;volatile
  5457                           
  5458                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5459  0BC6  01D8               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  5460                           
  5461                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5462  0BC7  01D5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5463                           
  5464                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5465  0BC8  01D4               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5466                           
  5467                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5468  0BC9  01DA               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5469                           
  5470                           ;usb_device.c: 2475: controlTransferState = 0;
  5471  0BCA  0021               	movlb	1	; select bank1
  5472  0BCB  01E2               	clrf	_controlTransferState^(0+128)	;volatile
  5473                           
  5474                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5475  0BCC  307F               	movlw	127
  5476  0BCD  0020               	movlb	0	; select bank0
  5477  0BCE  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5478  0BCF  0023               	movlb	3	; select bank3
  5479  0BD0  0827               	movf	_pBDTEntryIn^(0+384),w
  5480  0BD1  0086               	movwf	6
  5481  0BD2  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5482  0BD3  0087               	movwf	7
  5483  0BD4  0020               	movlb	0	; select bank0
  5484  0BD5  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5485  0BD6  0581               	andwf	1,f
  5486                           
  5487                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5488  0BD7  3004               	movlw	4
  5489  0BD8  0023               	movlb	3	; select bank3
  5490  0BD9  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5491  0BDA  00A7               	movwf	_pBDTEntryIn^(0+384)
  5492  0BDB  3000               	movlw	0
  5493  0BDC  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5494  0BDD  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5495                           
  5496                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5497  0BDE  307F               	movlw	127
  5498  0BDF  0020               	movlb	0	; select bank0
  5499  0BE0  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5500  0BE1  0023               	movlb	3	; select bank3
  5501  0BE2  0827               	movf	_pBDTEntryIn^(0+384),w
  5502  0BE3  0086               	movwf	6
  5503  0BE4  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5504  0BE5  0087               	movwf	7
  5505  0BE6  0020               	movlb	0	; select bank0
  5506  0BE7  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5507  0BE8  0581               	andwf	1,f
  5508                           
  5509                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5510  0BE9  3004               	movlw	4
  5511  0BEA  0023               	movlb	3	; select bank3
  5512  0BEB  0627               	xorwf	_pBDTEntryIn^(0+384),w
  5513  0BEC  00A7               	movwf	_pBDTEntryIn^(0+384)
  5514  0BED  3000               	movlw	0
  5515  0BEE  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5516  0BEF  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5517                           
  5518                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5519  0BF0  307F               	movlw	127
  5520  0BF1  0020               	movlb	0	; select bank0
  5521  0BF2  00EE               	movwf	??_USBCtrlTrfSetupHandler
  5522  0BF3  0021               	movlb	1	; select bank1
  5523  0BF4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5524  0BF5  0086               	movwf	6
  5525  0BF6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5526  0BF7  0087               	movwf	7
  5527  0BF8  0020               	movlb	0	; select bank0
  5528  0BF9  086E               	movf	??_USBCtrlTrfSetupHandler,w
  5529  0BFA  0581               	andwf	1,f
  5530                           
  5531                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5532  0BFB  0023               	movlb	3	; select bank3
  5533  0BFC  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  5534                           
  5535                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5536  0BFD  01B6               	clrf	(_inPipes^(0+384)+3)	;volatile
  5537  0BFE  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  5538                           
  5539                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5540  0BFF  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5541                           
  5542                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5543  0C00  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5544  0C01  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5545                           
  5546                           ;usb_device.c: 2500: USBCheckStdRequest();
  5547  0C02  318D  25D9  318B   	fcall	_USBCheckStdRequest
  5548                           
  5549                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5550  0C05  3000               	movlw	0
  5551  0C06  0020               	movlb	0	; select bank0
  5552  0C07  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5553  0C08  3003               	movlw	3
  5554  0C09  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5555  0C0A  3000               	movlw	0
  5556  0C0B  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5557  0C0C  3000               	movlw	0
  5558  0C0D  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5559  0C0E  3000               	movlw	0
  5560  0C0F  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5561  0C10  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5562  0C11  318A  22CA  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5563                           
  5564                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5565  0C14  3185  25BD         	fcall	_USBCtrlEPServiceComplete
  5566  0C16  0008               	return
  5567  0C17                     __end_of_USBCtrlTrfSetupHandler:	
  5568                           
  5569                           	psect	text23
  5570  05BD                     __ptext23:	
  5571 ;; *************** function _USBCtrlEPServiceComplete *****************
  5572 ;; Defined at:
  5573 ;;		line 1616 in file "../lib/usb/src/usb_device.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;Total ram usage:        2 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    2
  5594 ;; This function calls:
  5595 ;;		_USBCtrlEPAllowDataStage
  5596 ;;		_USBCtrlEPAllowStatusStage
  5597 ;; This function is called by:
  5598 ;;		_USBCtrlTrfSetupHandler
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function _USBCtrlEPServiceComplete
  5604  05BD                     _USBCtrlEPServiceComplete:	
  5605                           
  5606                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5607                           
  5608                           ;incstack = 0
  5609                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5610  05BD  003D               	movlb	29	; select bank29
  5611  05BE  120E               	bcf	14,4	;volatile
  5612                           
  5613                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5614  05BF  0023               	movlb	3	; select bank3
  5615  05C0  1BB5               	btfsc	(_inPipes^(0+384)+2),7	;volatile
  5616  05C1  2E05               	goto	i1l295
  5617                           
  5618                           ;usb_device.c: 1629: {
  5619                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5620  05C2  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  5621  05C3  2DD3               	goto	i1l2983
  5622                           
  5623                           ;usb_device.c: 1631: {
  5624                           ;usb_device.c: 1632: controlTransferState = 2;
  5625  05C4  3002               	movlw	2
  5626  05C5  00F5               	movwf	??_USBCtrlEPServiceComplete
  5627  05C6  0875               	movf	??_USBCtrlEPServiceComplete,w
  5628  05C7  0021               	movlb	1	; select bank1
  5629  05C8  00E2               	movwf	_controlTransferState^(0+128)	;volatile
  5630                           
  5631                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5632  05C9  0023               	movlb	3	; select bank3
  5633  05CA  0854               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  5634  05CB  1D03               	btfss	3,2
  5635  05CC  2DCF               	goto	i1l2979
  5636                           
  5637                           ;usb_device.c: 1644: {
  5638                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5639  05CD  318D  251E         	fcall	_USBCtrlEPAllowDataStage
  5640  05CF                     i1l2979:	
  5641                           
  5642                           ;usb_device.c: 1646: }
  5643                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5644  05CF  0023               	movlb	3	; select bank3
  5645  05D0  01D6               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5646                           
  5647                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5648  05D1  01D7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5649                           
  5650                           ;usb_device.c: 1652: }
  5651  05D2  0008               	return
  5652  05D3                     i1l2983:	
  5653                           
  5654                           ;usb_device.c: 1653: else
  5655                           ;usb_device.c: 1654: {
  5656                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5657  05D3  0021               	movlb	1	; select bank1
  5658  05D4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5659  05D5  3E01               	addlw	1
  5660  05D6  00F5               	movwf	??_USBCtrlEPServiceComplete
  5661  05D7  3000               	movlw	0
  5662  05D8  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5663  05D9  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5664  05DA  0875               	movf	??_USBCtrlEPServiceComplete,w
  5665  05DB  0086               	movwf	6
  5666  05DC  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5667  05DD  0087               	movwf	7
  5668  05DE  3008               	movlw	8
  5669  05DF  0081               	movwf	1
  5670                           
  5671                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5672  05E0  3050               	movlw	80
  5673  05E1  00F5               	movwf	??_USBCtrlEPServiceComplete
  5674  05E2  3000               	movlw	0
  5675  05E3  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5676  05E4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5677  05E5  0086               	movwf	6
  5678  05E6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5679  05E7  0087               	movwf	7
  5680  05E8  3142               	addfsr 1,2
  5681  05E9  0875               	movf	??_USBCtrlEPServiceComplete,w
  5682  05EA  3FC0               	movwi [0]fsr1
  5683  05EB  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5684  05EC  3FC1               	movwi [1]fsr1
  5685                           
  5686                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5687  05ED  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5688  05EE  0086               	movwf	6
  5689  05EF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5690  05F0  0087               	movwf	7
  5691  05F1  300C               	movlw	12
  5692  05F2  0081               	movwf	1
  5693                           
  5694                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5695  05F3  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5696  05F4  0086               	movwf	6
  5697  05F5  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5698  05F6  0087               	movwf	7
  5699  05F7  1781               	bsf	1,7
  5700                           
  5701                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5702  05F8  0023               	movlb	3	; select bank3
  5703  05F9  0827               	movf	_pBDTEntryIn^(0+384),w
  5704  05FA  0086               	movwf	6
  5705  05FB  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5706  05FC  0087               	movwf	7
  5707  05FD  3004               	movlw	4
  5708  05FE  0081               	movwf	1
  5709                           
  5710                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5711  05FF  0827               	movf	_pBDTEntryIn^(0+384),w
  5712  0600  0086               	movwf	6
  5713  0601  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5714  0602  0087               	movwf	7
  5715  0603  1781               	bsf	1,7
  5716                           
  5717                           ;usb_device.c: 1665: }
  5718                           ;usb_device.c: 1666: }
  5719  0604  0008               	return
  5720  0605                     i1l295:	
  5721                           
  5722                           ;usb_device.c: 1667: else
  5723                           ;usb_device.c: 1668: {
  5724                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5725  0605  0020               	movlb	0	; select bank0
  5726  0606  1FD0               	btfss	80,7	;volatile
  5727  0607  2E1D               	goto	i1l3009
  5728                           
  5729                           ;usb_device.c: 1670: {
  5730                           ;usb_device.c: 1671: controlTransferState = 1;
  5731  0608  3001               	movlw	1
  5732  0609  00F5               	movwf	??_USBCtrlEPServiceComplete
  5733  060A  0875               	movf	??_USBCtrlEPServiceComplete,w
  5734  060B  0021               	movlb	1	; select bank1
  5735  060C  00E2               	movwf	_controlTransferState^(0+128)	;volatile
  5736                           
  5737                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5738  060D  0023               	movlb	3	; select bank3
  5739  060E  0855               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  5740  060F  1D03               	btfss	3,2
  5741  0610  2E14               	goto	i1l3001
  5742                           
  5743                           ;usb_device.c: 1686: {
  5744                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5745  0611  318D  251E  3185   	fcall	_USBCtrlEPAllowDataStage
  5746  0614                     i1l3001:	
  5747                           
  5748                           ;usb_device.c: 1688: }
  5749                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5750  0614  0023               	movlb	3	; select bank3
  5751  0615  01D6               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5752                           
  5753                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5754  0616  01D7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5755                           
  5756                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5757  0617  0858               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5758  0618  1D03               	btfss	3,2
  5759  0619  0008               	return
  5760                           
  5761                           ;usb_device.c: 1713: {
  5762                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5763  061A  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  5764                           
  5765                           ;usb_device.c: 1715: }
  5766                           ;usb_device.c: 1716: }
  5767  061C  0008               	return
  5768  061D                     i1l3009:	
  5769                           
  5770                           ;usb_device.c: 1717: else
  5771                           ;usb_device.c: 1718: {
  5772                           ;usb_device.c: 1729: controlTransferState = 2;
  5773  061D  3002               	movlw	2
  5774  061E  00F5               	movwf	??_USBCtrlEPServiceComplete
  5775  061F  0875               	movf	??_USBCtrlEPServiceComplete,w
  5776  0620  0021               	movlb	1	; select bank1
  5777  0621  00E2               	movwf	_controlTransferState^(0+128)	;volatile
  5778                           
  5779                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5780  0622  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5781  0623  3E01               	addlw	1
  5782  0624  00F5               	movwf	??_USBCtrlEPServiceComplete
  5783  0625  3000               	movlw	0
  5784  0626  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5785  0627  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5786  0628  0875               	movf	??_USBCtrlEPServiceComplete,w
  5787  0629  0086               	movwf	6
  5788  062A  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5789  062B  0087               	movwf	7
  5790  062C  3008               	movlw	8
  5791  062D  0081               	movwf	1
  5792                           
  5793                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5794  062E  3050               	movlw	80
  5795  062F  00F5               	movwf	??_USBCtrlEPServiceComplete
  5796  0630  3000               	movlw	0
  5797  0631  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5798  0632  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5799  0633  0086               	movwf	6
  5800  0634  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5801  0635  0087               	movwf	7
  5802  0636  3142               	addfsr 1,2
  5803  0637  0875               	movf	??_USBCtrlEPServiceComplete,w
  5804  0638  3FC0               	movwi [0]fsr1
  5805  0639  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5806  063A  3FC1               	movwi [1]fsr1
  5807                           
  5808                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5809  063B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5810  063C  0086               	movwf	6
  5811  063D  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5812  063E  0087               	movwf	7
  5813  063F  3004               	movlw	4
  5814  0640  0081               	movwf	1
  5815                           
  5816                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5817  0641  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5818  0642  0086               	movwf	6
  5819  0643  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5820  0644  0087               	movwf	7
  5821  0645  1781               	bsf	1,7
  5822                           
  5823                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5824  0646  0023               	movlb	3	; select bank3
  5825  0647  01D6               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5826                           
  5827                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5828  0648  01D7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5829                           
  5830                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5831  0649  0858               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5832  064A  1D03               	btfss	3,2
  5833  064B  0008               	return
  5834                           
  5835                           ;usb_device.c: 1741: {
  5836                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5837  064C  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  5838  064E  0008               	return
  5839  064F                     __end_of_USBCtrlEPServiceComplete:	
  5840                           
  5841                           	psect	text24
  5842  0D1E                     __ptext24:	
  5843 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5844 ;; Defined at:
  5845 ;;		line 1488 in file "../lib/usb/src/usb_device.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;Total ram usage:        2 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    1
  5866 ;; This function calls:
  5867 ;;		_USBCtrlTrfTxService
  5868 ;; This function is called by:
  5869 ;;		_USBCtrlEPServiceComplete
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _USBCtrlEPAllowDataStage
  5875  0D1E                     _USBCtrlEPAllowDataStage:	
  5876                           
  5877                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5878                           
  5879                           ;incstack = 0
  5880                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5881  0D1E  0023               	movlb	3	; select bank3
  5882  0D1F  01D5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5883                           
  5884                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5885  0D20  01D4               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5886                           
  5887                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5888  0D21  3002               	movlw	2
  5889  0D22  0021               	movlb	1	; select bank1
  5890  0D23  0662               	xorwf	_controlTransferState^(0+128),w	;volatile
  5891  0D24  1D03               	btfss	3,2
  5892  0D25  2D4B               	goto	i1l2761
  5893                           
  5894                           ;usb_device.c: 1494: {
  5895                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5896  0D26  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5897  0D27  3E01               	addlw	1
  5898  0D28  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5899  0D29  3000               	movlw	0
  5900  0D2A  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5901  0D2B  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5902  0D2C  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5903  0D2D  0086               	movwf	6
  5904  0D2E  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5905  0D2F  0087               	movwf	7
  5906  0D30  3008               	movlw	8
  5907  0D31  0081               	movwf	1
  5908                           
  5909                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5910  0D32  3058               	movlw	88
  5911  0D33  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5912  0D34  3000               	movlw	0
  5913  0D35  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5914  0D36  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5915  0D37  0086               	movwf	6
  5916  0D38  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5917  0D39  0087               	movwf	7
  5918  0D3A  3142               	addfsr 1,2
  5919  0D3B  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5920  0D3C  3FC0               	movwi [0]fsr1
  5921  0D3D  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5922  0D3E  3FC1               	movwi [1]fsr1
  5923                           
  5924                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5925  0D3F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5926  0D40  0086               	movwf	6
  5927  0D41  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5928  0D42  0087               	movwf	7
  5929  0D43  3048               	movlw	72
  5930  0D44  0081               	movwf	1
  5931                           
  5932                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5933  0D45  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5934  0D46  0086               	movwf	6
  5935  0D47  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5936  0D48  0087               	movwf	7
  5937  0D49  1781               	bsf	1,7
  5938                           
  5939                           ;usb_device.c: 1500: }
  5940  0D4A  0008               	return
  5941  0D4B                     i1l2761:	
  5942                           
  5943                           ;usb_device.c: 1501: else
  5944                           ;usb_device.c: 1502: {
  5945                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5946  0D4B  0023               	movlb	3	; select bank3
  5947  0D4C  0837               	movf	((_inPipes+1)^(0+384)+3),w	;volatile
  5948  0D4D  0020               	movlb	0	; select bank0
  5949  0D4E  0257               	subwf	87,w	;volatile
  5950  0D4F  1D03               	skipz
  5951  0D50  2D55               	goto	u204_25
  5952  0D51  0023               	movlb	3	; select bank3
  5953  0D52  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  5954  0D53  0020               	movlb	0	; select bank0
  5955  0D54  0256               	subwf	86,w	;volatile
  5956  0D55                     u204_25:	
  5957  0D55  1803               	skipnc
  5958  0D56  2D5E               	goto	i1l2765
  5959                           
  5960                           ;usb_device.c: 1506: {
  5961                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5962  0D57  0857               	movf	87,w	;volatile
  5963  0D58  0023               	movlb	3	; select bank3
  5964  0D59  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  5965  0D5A  0020               	movlb	0	; select bank0
  5966  0D5B  0856               	movf	86,w	;volatile
  5967  0D5C  0023               	movlb	3	; select bank3
  5968  0D5D  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  5969  0D5E                     i1l2765:	
  5970                           
  5971                           ;usb_device.c: 1508: }
  5972                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5973  0D5E  318E  263B         	fcall	_USBCtrlTrfTxService
  5974                           
  5975                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5976  0D60  3058               	movlw	88
  5977  0D61  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5978  0D62  3000               	movlw	0
  5979  0D63  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5980  0D64  0023               	movlb	3	; select bank3
  5981  0D65  0827               	movf	_pBDTEntryIn^(0+384),w
  5982  0D66  0086               	movwf	6
  5983  0D67  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5984  0D68  0087               	movwf	7
  5985  0D69  3142               	addfsr 1,2
  5986  0D6A  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5987  0D6B  3FC0               	movwi [0]fsr1
  5988  0D6C  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5989  0D6D  3FC1               	movwi [1]fsr1
  5990                           
  5991                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5992  0D6E  0827               	movf	_pBDTEntryIn^(0+384),w
  5993  0D6F  0086               	movwf	6
  5994  0D70  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5995  0D71  0087               	movwf	7
  5996  0D72  3048               	movlw	72
  5997  0D73  0081               	movwf	1
  5998                           
  5999                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6000  0D74  0827               	movf	_pBDTEntryIn^(0+384),w
  6001  0D75  0086               	movwf	6
  6002  0D76  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6003  0D77  0087               	movwf	7
  6004  0D78  1781               	bsf	1,7
  6005  0D79  0008               	return
  6006  0D7A                     __end_of_USBCtrlEPAllowDataStage:	
  6007                           
  6008                           	psect	text25
  6009  0DD9                     __ptext25:	
  6010 ;; *************** function _USBCheckStdRequest *****************
  6011 ;; Defined at:
  6012 ;;		line 2686 in file "../lib/usb/src/usb_device.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;Total ram usage:        1 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    5
  6033 ;; This function calls:
  6034 ;;		_USBStdFeatureReqHandler
  6035 ;;		_USBStdGetDscHandler
  6036 ;;		_USBStdGetStatusHandler
  6037 ;;		_USBStdSetCfgHandler
  6038 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6039 ;; This function is called by:
  6040 ;;		_USBCtrlTrfSetupHandler
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function _USBCheckStdRequest
  6046  0DD9                     _USBCheckStdRequest:	
  6047                           
  6048                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6049                           
  6050                           ;incstack = 0
  6051                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6052  0DD9  0020               	movlb	0	; select bank0
  6053  0DDA  0E50               	swapf	80,w	;volatile
  6054  0DDB  0C89               	rrf	9,f
  6055  0DDC  3903               	andlw	3
  6056  0DDD  3A00               	xorlw	0
  6057  0DDE  1D03               	btfss	3,2
  6058  0DDF  0008               	return
  6059  0DE0  2E2F               	goto	i1l3103
  6060  0DE1                     i1l422:	
  6061                           ;usb_device.c: 2691: {
  6062                           ;usb_device.c: 2692: case 5:
  6063                           
  6064                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  6065                           
  6066                           
  6067                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6068  0DE1  0023               	movlb	3	; select bank3
  6069  0DE2  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6070                           
  6071                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6072  0DE3  3008               	movlw	8
  6073  0DE4  0020               	movlb	0	; select bank0
  6074  0DE5  00ED               	movwf	??_USBCheckStdRequest
  6075  0DE6  086D               	movf	??_USBCheckStdRequest,w
  6076  0DE7  0021               	movlb	1	; select bank1
  6077  0DE8  00E4               	movwf	_USBDeviceState^(0+128)	;volatile
  6078                           
  6079                           ;usb_device.c: 2696: break;
  6080  0DE9  0008               	return
  6081  0DEA                     i1l3073:	
  6082                           ;usb_device.c: 2697: case 6:
  6083                           
  6084                           
  6085                           ;usb_device.c: 2698: USBStdGetDscHandler();
  6086  0DEA  318F  2781         	fcall	_USBStdGetDscHandler
  6087                           
  6088                           ;usb_device.c: 2699: break;
  6089  0DEC  0008               	return
  6090  0DED                     i1l3075:	
  6091                           ;usb_device.c: 2700: case 9:
  6092                           
  6093                           
  6094                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  6095  0DED  3186  264F         	fcall	_USBStdSetCfgHandler
  6096                           
  6097                           ;usb_device.c: 2702: break;
  6098  0DEF  0008               	return
  6099  0DF0                     i1l3077:	
  6100                           ;usb_device.c: 2703: case 8:
  6101                           
  6102                           
  6103                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6104  0DF0  30E9               	movlw	low _USBActiveConfiguration
  6105  0DF1  0023               	movlb	3	; select bank3
  6106  0DF2  00B3               	movwf	_inPipes^(0+384)	;volatile
  6107  0DF3  3001               	movlw	high _USBActiveConfiguration
  6108  0DF4  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6109                           
  6110                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6111  0DF5  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6112                           
  6113                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6114  0DF6  3001               	movlw	1
  6115  0DF7  0020               	movlb	0	; select bank0
  6116  0DF8  00ED               	movwf	??_USBCheckStdRequest
  6117  0DF9  086D               	movf	??_USBCheckStdRequest,w
  6118  0DFA  0023               	movlb	3	; select bank3
  6119  0DFB  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6120                           
  6121                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6122  0DFC  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6123                           
  6124                           ;usb_device.c: 2708: break;
  6125  0DFD  0008               	return
  6126  0DFE                     i1l3085:	
  6127                           ;usb_device.c: 2709: case 0:
  6128                           
  6129                           
  6130                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  6131  0DFE  318C  2417         	fcall	_USBStdGetStatusHandler
  6132                           
  6133                           ;usb_device.c: 2711: break;
  6134  0E00  0008               	return
  6135  0E01                     i1l3087:	
  6136                           ;usb_device.c: 2712: case 1:
  6137                           
  6138                           
  6139                           ;usb_device.c: 2713: case 3:
  6140                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  6141  0E01  3180  203E         	fcall	_USBStdFeatureReqHandler
  6142                           
  6143                           ;usb_device.c: 2715: break;
  6144  0E03  0008               	return
  6145  0E04                     i1l3089:	
  6146                           ;usb_device.c: 2716: case 10:
  6147                           
  6148                           
  6149                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6150  0E04  0020               	movlb	0	; select bank0
  6151  0E05  0854               	movf	84,w	;volatile
  6152  0E06  3EE7               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6153  0E07  0023               	movlb	3	; select bank3
  6154  0E08  00B3               	movwf	_inPipes^(0+384)	;volatile
  6155  0E09  3001               	movlw	1
  6156  0E0A  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6157                           
  6158                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6159  0E0B  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6160                           
  6161                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6162  0E0C  3001               	movlw	1
  6163  0E0D  0020               	movlb	0	; select bank0
  6164  0E0E  00ED               	movwf	??_USBCheckStdRequest
  6165  0E0F  086D               	movf	??_USBCheckStdRequest,w
  6166  0E10  0023               	movlb	3	; select bank3
  6167  0E11  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6168                           
  6169                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6170  0E12  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6171                           
  6172                           ;usb_device.c: 2721: break;
  6173  0E13  0008               	return
  6174  0E14                     i1l431:	
  6175                           ;usb_device.c: 2722: case 11:
  6176                           
  6177                           
  6178                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6179  0E14  0023               	movlb	3	; select bank3
  6180  0E15  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6181                           
  6182                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6183  0E16  0020               	movlb	0	; select bank0
  6184  0E17  0852               	movf	82,w	;volatile
  6185  0E18  00ED               	movwf	??_USBCheckStdRequest
  6186  0E19  0854               	movf	84,w	;volatile
  6187  0E1A  3EE7               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6188  0E1B  0086               	movwf	6
  6189  0E1C  3001               	movlw	1	; select bank3/4
  6190  0E1D  0087               	movwf	7
  6191  0E1E  086D               	movf	??_USBCheckStdRequest,w
  6192  0E1F  0081               	movwf	1
  6193                           
  6194                           ;usb_device.c: 2725: break;
  6195  0E20  0008               	return
  6196  0E21                     i1l3099:	
  6197                           ;usb_device.c: 2726: case 7:
  6198                           
  6199                           
  6200                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6201  0E21  3000               	movlw	0
  6202  0E22  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6203  0E23  3002               	movlw	2
  6204  0E24  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6205  0E25  3000               	movlw	0
  6206  0E26  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6207  0E27  3000               	movlw	0
  6208  0E28  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6209  0E29  3000               	movlw	0
  6210  0E2A  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6211  0E2B  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6212  0E2C  318A  22CA         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6213                           
  6214                           ;usb_device.c: 2732: }
  6215                           
  6216                           ;usb_device.c: 2731: break;
  6217                           
  6218                           ;usb_device.c: 2730: default:
  6219                           
  6220                           ;usb_device.c: 2729: case 12:
  6221                           
  6222                           ;usb_device.c: 2728: break;
  6223  0E2E  0008               	return
  6224  0E2F                     i1l3103:	
  6225  0E2F  0020               	movlb	0	; select bank0
  6226  0E30  0851               	movf	81,w	;volatile
  6227                           
  6228                           ; Switch size 1, requested type "space"
  6229                           ; Number of cases is 11, Range of values is 0 to 12
  6230                           ; switch strategies available:
  6231                           ; Name         Instructions Cycles
  6232                           ; direct_byte           32     6 (fixed)
  6233                           ; simple_byte           34    18 (average)
  6234                           ; jumptable            260     6 (fixed)
  6235                           ;	Chosen strategy is direct_byte
  6236  0E31  0084               	movwf	4
  6237  0E32  300D               	movlw	13
  6238  0E33  0204               	subwf	4,w
  6239  0E34  1803               	skipnc
  6240  0E35  0008               	return
  6241  0E36  3188               	movlp	high i1S4415
  6242  0E37  3504               	lslf	4,w
  6243  0E38  3E00               	addlw	low i1S4415
  6244  0E39  0082               	movwf	2
  6245  0E3A                     i1l420:	
  6246  0E3A  0008               	return
  6247  0E3B                     __end_of_USBCheckStdRequest:	
  6248                           
  6249                           	psect	swtext1
  6250  0800                     __pswtext1:	
  6251  0800                     i1S4415:	
  6252  0800  318D  2DFE         	ljmp	i1l3085
  6253  0802  318E  2E01         	ljmp	i1l3087
  6254  0804  318E  2E3A         	ljmp	i1l420
  6255  0806  318E  2E01         	ljmp	i1l3087
  6256  0808  318E  2E3A         	ljmp	i1l420
  6257  080A  318D  2DE1         	ljmp	i1l422
  6258  080C  318D  2DEA         	ljmp	i1l3073
  6259  080E  318E  2E21         	ljmp	i1l3099
  6260  0810  318D  2DF0         	ljmp	i1l3077
  6261  0812  318D  2DED         	ljmp	i1l3075
  6262  0814  318E  2E04         	ljmp	i1l3089
  6263  0816  318E  2E14         	ljmp	i1l431
  6264  0818  318E  2E3A         	ljmp	i1l420
  6265                           
  6266                           	psect	text26
  6267  064F                     __ptext26:	
  6268 ;; *************** function _USBStdSetCfgHandler *****************
  6269 ;; Defined at:
  6270 ;;		line 1968 in file "../lib/usb/src/usb_device.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;  p               2    7[BANK0 ] PTR unsigned char 
  6275 ;;		 -> UEP1(1), 
  6276 ;;  i               1    9[BANK0 ] unsigned char 
  6277 ;;  i               1   10[BANK0 ] unsigned char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      void 
  6280 ;; Registers used:
  6281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;Total ram usage:        5 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    4
  6294 ;; This function calls:
  6295 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6296 ;;		_memset
  6297 ;; This function is called by:
  6298 ;;		_USBCheckStdRequest
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           
  6303                           ;psect for function _USBStdSetCfgHandler
  6304  064F                     _USBStdSetCfgHandler:	
  6305                           
  6306                           ;usb_device.c: 1970: uint8_t i;
  6307                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6308                           
  6309                           ;incstack = 0
  6310                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6311  064F  0023               	movlb	3	; select bank3
  6312  0650  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6313                           
  6314                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  6315  0651  300E               	movlw	14
  6316  0652  0020               	movlb	0	; select bank0
  6317  0653  00E8               	movwf	USBStdSetCfgHandler@p+1
  6318  0654  3099               	movlw	153
  6319  0655  00E7               	movwf	USBStdSetCfgHandler@p
  6320  0656  01E9               	clrf	USBStdSetCfgHandler@i_1636
  6321  0657  3002               	movlw	2
  6322  0658  0269               	subwf	USBStdSetCfgHandler@i_1636,w
  6323  0659  1803               	btfsc	3,0
  6324  065A  2E6C               	goto	i1l2789
  6325  065B                     i1l2781:	
  6326  065B  0867               	movf	USBStdSetCfgHandler@p,w
  6327  065C  0086               	movwf	6
  6328  065D  0868               	movf	USBStdSetCfgHandler@p+1,w
  6329  065E  0087               	movwf	7
  6330  065F  0181               	clrf	1
  6331  0660  3001               	movlw	1
  6332  0661  07E7               	addwf	USBStdSetCfgHandler@p,f
  6333  0662  3000               	movlw	0
  6334  0663  3DE8               	addwfc	USBStdSetCfgHandler@p+1,f
  6335  0664  3001               	movlw	1
  6336  0665  00E6               	movwf	??_USBStdSetCfgHandler
  6337  0666  0866               	movf	??_USBStdSetCfgHandler,w
  6338  0667  07E9               	addwf	USBStdSetCfgHandler@i_1636,f
  6339  0668  3002               	movlw	2
  6340  0669  0269               	subwf	USBStdSetCfgHandler@i_1636,w
  6341  066A  1C03               	skipc
  6342  066B  2E5B               	goto	i1l2781
  6343  066C                     i1l2789:	
  6344                           
  6345                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6346  066C  3020               	movlw	32
  6347  066D  00F0               	movwf	memset@p1
  6348  066E  3000               	movlw	0
  6349  066F  00F1               	movwf	memset@p1+1
  6350  0670  3000               	movlw	0
  6351  0671  00F2               	movwf	memset@c
  6352  0672  00F3               	movwf	memset@c+1
  6353  0673  3030               	movlw	48
  6354  0674  00F4               	movwf	memset@n
  6355  0675  3000               	movlw	0
  6356  0676  00F5               	movwf	memset@n+1
  6357  0677  3189  2168  3186   	fcall	_memset
  6358                           
  6359                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6360  067A  003D               	movlb	29	; select bank29
  6361  067B  170E               	bsf	14,6	;volatile
  6362                           
  6363                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6364  067C  0020               	movlb	0	; select bank0
  6365  067D  01EA               	clrf	USBStdSetCfgHandler@i
  6366  067E  3003               	movlw	3
  6367  067F  026A               	subwf	USBStdSetCfgHandler@i,w
  6368  0680  1803               	btfsc	3,0
  6369  0681  2E96               	goto	i1l2805
  6370  0682                     i1l2799:	
  6371                           
  6372                           ;usb_device.c: 1988: {
  6373                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6374  0682  086A               	movf	USBStdSetCfgHandler@i,w
  6375  0683  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6376  0684  0086               	movwf	6
  6377  0685  3001               	movlw	1	; select bank3/4
  6378  0686  0087               	movwf	7
  6379  0687  0181               	clrf	1
  6380                           
  6381                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6382  0688  086A               	movf	USBStdSetCfgHandler@i,w
  6383  0689  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6384  068A  0086               	movwf	6
  6385  068B  3001               	movlw	1	; select bank3/4
  6386  068C  0087               	movwf	7
  6387  068D  0181               	clrf	1
  6388  068E  3001               	movlw	1
  6389  068F  00E6               	movwf	??_USBStdSetCfgHandler
  6390  0690  0866               	movf	??_USBStdSetCfgHandler,w
  6391  0691  07EA               	addwf	USBStdSetCfgHandler@i,f
  6392  0692  3003               	movlw	3
  6393  0693  026A               	subwf	USBStdSetCfgHandler@i,w
  6394  0694  1C03               	skipc
  6395  0695  2E82               	goto	i1l2799
  6396  0696                     i1l2805:	
  6397                           
  6398                           ;usb_device.c: 1991: }
  6399                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6400  0696  30E7               	movlw	low _USBAlternateInterface
  6401  0697  00F0               	movwf	memset@p1
  6402  0698  3001               	movlw	high _USBAlternateInterface
  6403  0699  00F1               	movwf	memset@p1+1
  6404  069A  3000               	movlw	0
  6405  069B  00F2               	movwf	memset@c
  6406  069C  00F3               	movwf	memset@c+1
  6407  069D  3002               	movlw	2
  6408  069E  00F4               	movwf	memset@n
  6409  069F  3000               	movlw	0
  6410  06A0  00F5               	movwf	memset@n+1
  6411  06A1  3189  2168  3186   	fcall	_memset
  6412                           
  6413                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6414  06A4  003D               	movlb	29	; select bank29
  6415  06A5  130E               	bcf	14,6	;volatile
  6416                           
  6417                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6418  06A6  3028               	movlw	40
  6419  06A7  0023               	movlb	3	; select bank3
  6420  06A8  00A7               	movwf	_pBDTEntryIn^(0+384)
  6421  06A9  3000               	movlw	0
  6422  06AA  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6423                           
  6424                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6425  06AB  3020               	movlw	32
  6426  06AC  0020               	movlb	0	; select bank0
  6427  06AD  00E6               	movwf	??_USBStdSetCfgHandler
  6428  06AE  0866               	movf	??_USBStdSetCfgHandler,w
  6429  06AF  0021               	movlb	1	; select bank1
  6430  06B0  00E3               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  6431                           
  6432                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6433  06B1  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6434  06B2  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6435  06B3  39FF               	andlw	255
  6436  06B4  1D03               	skipz
  6437  06B5  3000               	movlw	0
  6438  06B6  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  6439                           
  6440                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6441  06B7  0020               	movlb	0	; select bank0
  6442  06B8  0852               	movf	82,w	;volatile
  6443  06B9  00E6               	movwf	??_USBStdSetCfgHandler
  6444  06BA  0866               	movf	??_USBStdSetCfgHandler,w
  6445  06BB  0023               	movlb	3	; select bank3
  6446  06BC  00E9               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  6447                           
  6448                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6449  06BD  0869               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  6450  06BE  1D03               	btfss	3,2
  6451  06BF  2EC7               	goto	i1l2821
  6452                           
  6453                           ;usb_device.c: 2010: {
  6454                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6455  06C0  3010               	movlw	16
  6456  06C1  0020               	movlb	0	; select bank0
  6457  06C2  00E6               	movwf	??_USBStdSetCfgHandler
  6458  06C3  0866               	movf	??_USBStdSetCfgHandler,w
  6459  06C4  0021               	movlb	1	; select bank1
  6460  06C5  00E4               	movwf	_USBDeviceState^(0+128)	;volatile
  6461                           
  6462                           ;usb_device.c: 2013: }
  6463  06C6  0008               	return
  6464  06C7                     i1l2821:	
  6465                           
  6466                           ;usb_device.c: 2014: else
  6467                           ;usb_device.c: 2015: {
  6468                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6469  06C7  3000               	movlw	0
  6470  06C8  0020               	movlb	0	; select bank0
  6471  06C9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6472  06CA  3001               	movlw	1
  6473  06CB  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6474  06CC  30E9               	movlw	low _USBActiveConfiguration
  6475  06CD  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6476  06CE  3001               	movlw	high _USBActiveConfiguration
  6477  06CF  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6478  06D0  3001               	movlw	1
  6479  06D1  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6480  06D2  3000               	movlw	0
  6481  06D3  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6482  06D4  318A  22CA         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6483                           
  6484                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6485  06D6  3020               	movlw	32
  6486  06D7  0020               	movlb	0	; select bank0
  6487  06D8  00E6               	movwf	??_USBStdSetCfgHandler
  6488  06D9  0866               	movf	??_USBStdSetCfgHandler,w
  6489  06DA  0021               	movlb	1	; select bank1
  6490  06DB  00E4               	movwf	_USBDeviceState^(0+128)	;volatile
  6491  06DC  0008               	return
  6492  06DD                     __end_of_USBStdSetCfgHandler:	
  6493                           
  6494                           	psect	text27
  6495  0968                     __ptext27:	
  6496 ;; *************** function _memset *****************
  6497 ;; Defined at:
  6498 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  p1              2    0[COMMON] PTR void 
  6501 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6502 ;;  c               2    2[COMMON] int 
  6503 ;;  n               2    4[COMMON] unsigned int 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  p               2    6[COMMON] PTR unsigned char 
  6506 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  2    0[COMMON] PTR void 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6516 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;Total ram usage:        8 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_USBStdSetCfgHandler
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           
  6530                           ;psect for function _memset
  6531  0968                     _memset:	
  6532                           
  6533                           ;incstack = 0
  6534                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6535  0968  0871               	movf	memset@p1+1,w
  6536  0969  00F7               	movwf	memset@p+1
  6537  096A  0870               	movf	memset@p1,w
  6538  096B  00F6               	movwf	memset@p
  6539  096C                     i1l2711:	
  6540  096C  3001               	movlw	1
  6541  096D  02F4               	subwf	memset@n,f
  6542  096E  3000               	movlw	0
  6543  096F  3BF5               	subwfb	memset@n+1,f
  6544  0970  0A74               	incf	memset@n,w
  6545  0971  1903               	btfsc	3,2
  6546  0972  0A75               	incf	memset@n+1,w
  6547  0973  1903               	btfsc	3,2
  6548  0974  0008               	return
  6549  0975  0876               	movf	memset@p,w
  6550  0976  0086               	movwf	6
  6551  0977  0877               	movf	memset@p+1,w
  6552  0978  0087               	movwf	7
  6553  0979  0872               	movf	memset@c,w
  6554  097A  0081               	movwf	1
  6555  097B  3001               	movlw	1
  6556  097C  07F6               	addwf	memset@p,f
  6557  097D  3000               	movlw	0
  6558  097E  3DF7               	addwfc	memset@p+1,f
  6559  097F  296C               	goto	i1l2711
  6560  0980                     __end_of_memset:	
  6561                           ;	Return value of _memset is never used
  6562                           
  6563                           
  6564                           	psect	text28
  6565  0C17                     __ptext28:	
  6566 ;; *************** function _USBStdGetStatusHandler *****************
  6567 ;; Defined at:
  6568 ;;		line 2129 in file "../lib/usb/src/usb_device.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  p               2    1[COMMON] PTR struct __BDT
  6573 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;Total ram usage:        3 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_USBCheckStdRequest
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _USBStdGetStatusHandler
  6598  0C17                     _USBStdGetStatusHandler:	
  6599                           
  6600                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6604  0C17  0020               	movlb	0	; select bank0
  6605  0C18  01D8               	clrf	88	;volatile
  6606                           
  6607                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6608  0C19  01D9               	clrf	89	;volatile
  6609                           
  6610                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6611  0C1A  2C53               	goto	i1l2877
  6612  0C1B                     i1l360:	
  6613                           ;usb_device.c: 2135: {
  6614                           ;usb_device.c: 2136: case (0x00):
  6615                           
  6616                           
  6617                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6618  0C1B  0023               	movlb	3	; select bank3
  6619  0C1C  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6620                           
  6621                           ;usb_device.c: 2145: }
  6622                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6623                           
  6624                           ;usb_device.c: 2143: {
  6625                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6626                           
  6627                           ;usb_device.c: 2142: if(0 == 1)
  6628  0C1D  0023               	movlb	3	; select bank3
  6629  0C1E  035D               	decf	_RemoteWakeup^(0+384),w	;volatile
  6630  0C1F  1D03               	btfss	3,2
  6631  0C20  2C5F               	goto	i1l363
  6632                           
  6633                           ;usb_device.c: 2148: {
  6634                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6635  0C21  0020               	movlb	0	; select bank0
  6636  0C22  14D8               	bsf	88,1	;volatile
  6637                           
  6638                           ;usb_device.c: 2150: }
  6639                           ;usb_device.c: 2151: break;
  6640  0C23  2C5F               	goto	i1l363
  6641  0C24                     i1l364:	
  6642                           ;usb_device.c: 2152: case (0x01):
  6643                           
  6644                           
  6645                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6646  0C24  0023               	movlb	3	; select bank3
  6647  0C25  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6648                           
  6649                           ;usb_device.c: 2154: break;
  6650  0C26  2C5F               	goto	i1l363
  6651  0C27                     i1l365:	
  6652                           ;usb_device.c: 2155: case (0x02):
  6653                           
  6654                           
  6655                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6656  0C27  0023               	movlb	3	; select bank3
  6657  0C28  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6658                           
  6659                           ;usb_device.c: 2160: {
  6660                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6661                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6662  0C29  0020               	movlb	0	; select bank0
  6663  0C2A  1BD4               	btfsc	84,7	;volatile
  6664  0C2B  2C37               	goto	i1l2867
  6665                           
  6666                           ;usb_device.c: 2164: {
  6667                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6668  0C2C  0854               	movf	84,w	;volatile
  6669  0C2D  390F               	andlw	15
  6670  0C2E  0709               	addwf	9,w
  6671  0C2F  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6672  0C30  0086               	movwf	6
  6673  0C31  3001               	movlw	1	; select bank3/4
  6674  0C32  0087               	movwf	7
  6675  0C33  3F40               	moviw [0]fsr1
  6676  0C34  00F1               	movwf	USBStdGetStatusHandler@p
  6677  0C35  3F41               	moviw [1]fsr1
  6678  0C36  2C41               	goto	L5
  6679  0C37                     i1l2867:	
  6680                           ;usb_device.c: 2166: }
  6681                           
  6682                           
  6683                           ;usb_device.c: 2167: else
  6684                           ;usb_device.c: 2168: {
  6685                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6686  0C37  0854               	movf	84,w	;volatile
  6687  0C38  390F               	andlw	15
  6688  0C39  0709               	addwf	9,w
  6689  0C3A  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6690  0C3B  0086               	movwf	6
  6691  0C3C  3001               	movlw	1	; select bank3/4
  6692  0C3D  0087               	movwf	7
  6693  0C3E  3F40               	moviw [0]fsr1
  6694  0C3F  00F1               	movwf	USBStdGetStatusHandler@p
  6695  0C40  3F41               	moviw [1]fsr1
  6696  0C41                     L5:	
  6697  0C41  00F2               	movwf	USBStdGetStatusHandler@p+1
  6698                           
  6699                           ;usb_device.c: 2170: }
  6700                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6701  0C42  0871               	movf	USBStdGetStatusHandler@p,w
  6702  0C43  0086               	movwf	6
  6703  0C44  0872               	movf	USBStdGetStatusHandler@p+1,w
  6704  0C45  0087               	movwf	7
  6705  0C46  1F81               	btfss	1,7
  6706  0C47  2C5F               	goto	i1l363
  6707  0C48  0871               	movf	USBStdGetStatusHandler@p,w
  6708  0C49  0086               	movwf	6
  6709  0C4A  0872               	movf	USBStdGetStatusHandler@p+1,w
  6710  0C4B  0087               	movwf	7
  6711  0C4C  1D01               	btfss	1,2
  6712  0C4D  2C5F               	goto	i1l363
  6713                           
  6714                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6715  0C4E  3001               	movlw	1
  6716  0C4F  00F0               	movwf	??_USBStdGetStatusHandler
  6717  0C50  0870               	movf	??_USBStdGetStatusHandler,w
  6718  0C51  00D8               	movwf	88	;volatile
  6719                           
  6720                           ;usb_device.c: 2175: }
  6721                           ;usb_device.c: 2176: }
  6722                           
  6723                           ;usb_device.c: 2174: break;
  6724  0C52  2C5F               	goto	i1l363
  6725  0C53                     i1l2877:	
  6726  0C53  0850               	movf	80,w	;volatile
  6727  0C54  391F               	andlw	31
  6728                           
  6729                           ; Switch size 1, requested type "space"
  6730                           ; Number of cases is 3, Range of values is 0 to 2
  6731                           ; switch strategies available:
  6732                           ; Name         Instructions Cycles
  6733                           ; simple_byte           10     6 (average)
  6734                           ; direct_byte           12     6 (fixed)
  6735                           ; jumptable            260     6 (fixed)
  6736                           ;	Chosen strategy is simple_byte
  6737  0C55  3A00               	xorlw	0	; case 0
  6738  0C56  1903               	skipnz
  6739  0C57  2C1B               	goto	i1l360
  6740  0C58  3A01               	xorlw	1	; case 1
  6741  0C59  1903               	skipnz
  6742  0C5A  2C24               	goto	i1l364
  6743  0C5B  3A03               	xorlw	3	; case 2
  6744  0C5C  1903               	skipnz
  6745  0C5D  2C27               	goto	i1l365
  6746  0C5E  2C5F               	goto	i1l363
  6747  0C5F                     i1l363:	
  6748                           
  6749                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6750  0C5F  0023               	movlb	3	; select bank3
  6751  0C60  1FB5               	btfss	(_inPipes^(0+384)+2),7	;volatile
  6752  0C61  0008               	return
  6753                           
  6754                           ;usb_device.c: 2179: {
  6755                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6756  0C62  3058               	movlw	88
  6757  0C63  00B3               	movwf	_inPipes^(0+384)	;volatile
  6758  0C64  3000               	movlw	0
  6759  0C65  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6760                           
  6761                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6762  0C66  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6763                           
  6764                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6765  0C67  3002               	movlw	2
  6766  0C68  00F0               	movwf	??_USBStdGetStatusHandler
  6767  0C69  0870               	movf	??_USBStdGetStatusHandler,w
  6768  0C6A  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6769  0C6B  0008               	return
  6770  0C6C                     __end_of_USBStdGetStatusHandler:	
  6771                           
  6772                           	psect	text29
  6773  0F81                     __ptext29:	
  6774 ;; *************** function _USBStdGetDscHandler *****************
  6775 ;; Defined at:
  6776 ;;		line 2043 in file "../lib/usb/src/usb_device.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6792 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;Total ram usage:        3 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_USBCheckStdRequest
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           
  6804                           ;psect for function _USBStdGetDscHandler
  6805  0F81                     _USBStdGetDscHandler:	
  6806                           
  6807                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6808                           
  6809                           ;incstack = 0
  6810                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6811  0F81  3080               	movlw	128
  6812  0F82  0020               	movlb	0	; select bank0
  6813  0F83  0650               	xorwf	80,w	;volatile
  6814  0F84  1D03               	btfss	3,2
  6815  0F85  0008               	return
  6816                           
  6817                           ;usb_device.c: 2046: {
  6818                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6819  0F86  30C0               	movlw	192
  6820  0F87  00F0               	movwf	??_USBStdGetDscHandler
  6821  0F88  0870               	movf	??_USBStdGetDscHandler,w
  6822  0F89  0023               	movlb	3	; select bank3
  6823  0F8A  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  6824                           
  6825                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6826  0F8B  2FF3               	goto	i1l2855
  6827  0F8C                     i1l2829:	
  6828                           ;usb_device.c: 2050: {
  6829                           ;usb_device.c: 2051: case 0x01:
  6830                           
  6831                           
  6832                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6833  0F8C  30AB               	movlw	low (_device_dsc| (0+32768))
  6834  0F8D  0023               	movlb	3	; select bank3
  6835  0F8E  00B3               	movwf	_inPipes^(0+384)	;volatile
  6836  0F8F  3090               	movlw	high (_device_dsc| (0+32768))
  6837  0F90  00B4               	movwf	(_inPipes^(0+384)+1)	;volatile
  6838                           
  6839                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6840  0F91  3000               	movlw	0
  6841  0F92  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6842  0F93  3012               	movlw	18
  6843  0F94  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6844                           
  6845                           ;usb_device.c: 2058: break;
  6846  0F95  0008               	return
  6847  0F96                     i1l2833:	
  6848                           ;usb_device.c: 2059: case 0x02:
  6849                           
  6850                           
  6851                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6852  0F96  0020               	movlb	0	; select bank0
  6853  0F97  0852               	movf	82,w	;volatile
  6854  0F98  1D03               	btfss	3,2
  6855  0F99  2FC9               	goto	i1l2841
  6856                           
  6857                           ;usb_device.c: 2064: {
  6858                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6859  0F9A  0852               	movf	82,w	;volatile
  6860  0F9B  00F0               	movwf	??_USBStdGetDscHandler
  6861  0F9C  01F1               	clrf	??_USBStdGetDscHandler+1
  6862  0F9D  35F0               	lslf	??_USBStdGetDscHandler,f
  6863  0F9E  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6864  0F9F  30C7               	movlw	low (_USB_CD_Ptr| (0+32768))
  6865  0FA0  0770               	addwf	??_USBStdGetDscHandler,w
  6866  0FA1  0084               	movwf	4
  6867  0FA2  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  6868  0FA3  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6869  0FA4  0085               	movwf	5
  6870  0FA5  3F00               	moviw [0]fsr0
  6871  0FA6  0023               	movlb	3	; select bank3
  6872  0FA7  00B3               	movwf	_inPipes^(0+384)	;volatile
  6873  0FA8  3F01               	moviw [1]fsr0
  6874  0FA9  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6875                           
  6876                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6877  0FAA  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6878  0FAB  00F1               	movwf	??_USBStdGetDscHandler+1
  6879  0FAC  0833               	movf	_inPipes^(0+384),w	;volatile
  6880  0FAD  00F0               	movwf	??_USBStdGetDscHandler
  6881  0FAE  3002               	movlw	2
  6882  0FAF  0770               	addwf	??_USBStdGetDscHandler,w
  6883  0FB0  0084               	movwf	4
  6884  0FB1  0871               	movf	??_USBStdGetDscHandler+1,w
  6885  0FB2  1803               	skipnc
  6886  0FB3  0A71               	incf	??_USBStdGetDscHandler+1,w
  6887  0FB4  0085               	movwf	5
  6888  0FB5  0800               	movf	0,w	;code access
  6889  0FB6  00F2               	movwf	??_USBStdGetDscHandler+2
  6890  0FB7  0872               	movf	??_USBStdGetDscHandler+2,w
  6891  0FB8  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6892                           
  6893                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6894  0FB9  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6895  0FBA  00F1               	movwf	??_USBStdGetDscHandler+1
  6896  0FBB  0833               	movf	_inPipes^(0+384),w	;volatile
  6897  0FBC  00F0               	movwf	??_USBStdGetDscHandler
  6898  0FBD  3003               	movlw	3
  6899  0FBE  0770               	addwf	??_USBStdGetDscHandler,w
  6900  0FBF  0084               	movwf	4
  6901  0FC0  0871               	movf	??_USBStdGetDscHandler+1,w
  6902  0FC1  1803               	skipnc
  6903  0FC2  0A71               	incf	??_USBStdGetDscHandler+1,w
  6904  0FC3  0085               	movwf	5
  6905  0FC4  0800               	movf	0,w	;code access
  6906  0FC5  00F2               	movwf	??_USBStdGetDscHandler+2
  6907  0FC6  0872               	movf	??_USBStdGetDscHandler+2,w
  6908  0FC7  00B7               	movwf	(_inPipes^(0+384)+4)	;volatile
  6909                           
  6910                           ;usb_device.c: 2076: }
  6911  0FC8  0008               	return
  6912  0FC9                     i1l2841:	
  6913                           
  6914                           ;usb_device.c: 2077: else
  6915                           ;usb_device.c: 2078: {
  6916                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6917  0FC9  0023               	movlb	3	; select bank3
  6918  0FCA  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6919                           
  6920                           ;usb_device.c: 2080: }
  6921                           ;usb_device.c: 2081: break;
  6922  0FCB  0008               	return
  6923  0FCC                     i1l2843:	
  6924                           ;usb_device.c: 2082: case 0x03:
  6925                           
  6926                           
  6927                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6928  0FCC  3003               	movlw	3
  6929  0FCD  0020               	movlb	0	; select bank0
  6930  0FCE  0252               	subwf	82,w	;volatile
  6931  0FCF  1803               	skipnc
  6932  0FD0  2FED               	goto	i1l2849
  6933                           
  6934                           ;usb_device.c: 2087: {
  6935                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6936  0FD1  0852               	movf	82,w	;volatile
  6937  0FD2  00F0               	movwf	??_USBStdGetDscHandler
  6938  0FD3  01F1               	clrf	??_USBStdGetDscHandler+1
  6939  0FD4  35F0               	lslf	??_USBStdGetDscHandler,f
  6940  0FD5  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6941  0FD6  30BD               	movlw	low (_USB_SD_Ptr| (0+32768))
  6942  0FD7  0770               	addwf	??_USBStdGetDscHandler,w
  6943  0FD8  0084               	movwf	4
  6944  0FD9  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  6945  0FDA  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6946  0FDB  0085               	movwf	5
  6947  0FDC  3F00               	moviw [0]fsr0
  6948  0FDD  0023               	movlb	3	; select bank3
  6949  0FDE  00B3               	movwf	_inPipes^(0+384)	;volatile
  6950  0FDF  3F01               	moviw [1]fsr0
  6951  0FE0  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6952                           
  6953                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6954  0FE1  0833               	movf	_inPipes^(0+384),w	;volatile
  6955  0FE2  0084               	movwf	4
  6956  0FE3  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  6957  0FE4  0085               	movwf	5
  6958  0FE5  0800               	movf	0,w	;code access
  6959  0FE6  00F0               	movwf	??_USBStdGetDscHandler
  6960  0FE7  01F1               	clrf	??_USBStdGetDscHandler+1
  6961  0FE8  0870               	movf	??_USBStdGetDscHandler,w
  6962  0FE9  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6963  0FEA  0871               	movf	??_USBStdGetDscHandler+1,w
  6964  0FEB  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6965                           
  6966                           ;usb_device.c: 2092: }
  6967  0FEC  0008               	return
  6968  0FED                     i1l2849:	
  6969                           
  6970                           ;usb_device.c: 2102: else
  6971                           ;usb_device.c: 2103: {
  6972                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6973  0FED  0023               	movlb	3	; select bank3
  6974  0FEE  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6975                           
  6976                           ;usb_device.c: 2105: }
  6977                           ;usb_device.c: 2106: break;
  6978  0FEF  0008               	return
  6979  0FF0                     i1l2851:	
  6980                           ;usb_device.c: 2107: default:
  6981                           
  6982                           
  6983                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6984  0FF0  0023               	movlb	3	; select bank3
  6985  0FF1  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6986                           
  6987                           ;usb_device.c: 2110: }
  6988                           
  6989                           ;usb_device.c: 2109: break;
  6990  0FF2  0008               	return
  6991  0FF3                     i1l2855:	
  6992  0FF3  0020               	movlb	0	; select bank0
  6993  0FF4  0853               	movf	83,w	;volatile
  6994                           
  6995                           ; Switch size 1, requested type "space"
  6996                           ; Number of cases is 3, Range of values is 1 to 3
  6997                           ; switch strategies available:
  6998                           ; Name         Instructions Cycles
  6999                           ; simple_byte           10     6 (average)
  7000                           ; direct_byte           15     9 (fixed)
  7001                           ; jumptable            263     9 (fixed)
  7002                           ;	Chosen strategy is simple_byte
  7003  0FF5  3A01               	xorlw	1	; case 1
  7004  0FF6  1903               	skipnz
  7005  0FF7  2F8C               	goto	i1l2829
  7006  0FF8  3A03               	xorlw	3	; case 2
  7007  0FF9  1903               	skipnz
  7008  0FFA  2F96               	goto	i1l2833
  7009  0FFB  3A01               	xorlw	1	; case 3
  7010  0FFC  1903               	skipnz
  7011  0FFD  2FCC               	goto	i1l2843
  7012  0FFE  2FF0               	goto	i1l2851
  7013  0FFF  0008               	return
  7014  1000                     __end_of_USBStdGetDscHandler:	
  7015                           
  7016                           	psect	text30
  7017  003E                     __ptext30:	
  7018 ;; *************** function _USBStdFeatureReqHandler *****************
  7019 ;; Defined at:
  7020 ;;		line 2754 in file "../lib/usb/src/usb_device.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  p               2   11[BANK0 ] PTR struct __BDT
  7025 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7026 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  7027 ;;		 -> UEP0(1), 
  7028 ;;  current_ep_d    1   10[BANK0 ] struct .
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;Total ram usage:        7 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    4
  7045 ;; This function calls:
  7046 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7047 ;; This function is called by:
  7048 ;;		_USBCheckStdRequest
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           
  7053                           ;psect for function _USBStdFeatureReqHandler
  7054  003E                     _USBStdFeatureReqHandler:	
  7055                           
  7056                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7057                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7058                           ;usb_device.c: 2761: unsigned char* pUEP;
  7059                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7060                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7061                           
  7062                           ;incstack = 0
  7063                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7064  003E  0020               	movlb	0	; select bank0
  7065  003F  0352               	decf	82,w	;volatile
  7066  0040  1D03               	btfss	3,2
  7067  0041  2856               	goto	i1l2897
  7068  0042  0850               	movf	80,w	;volatile
  7069  0043  391F               	andlw	31
  7070  0044  3A00               	xorlw	0
  7071  0045  1D03               	skipz
  7072  0046  2856               	goto	i1l2897
  7073                           
  7074                           ;usb_device.c: 2801: {
  7075                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7076  0047  0023               	movlb	3	; select bank3
  7077  0048  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7078                           
  7079                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7080  0049  3003               	movlw	3
  7081  004A  0020               	movlb	0	; select bank0
  7082  004B  0651               	xorwf	81,w	;volatile
  7083  004C  1D03               	btfss	3,2
  7084  004D  2854               	goto	i1l2895
  7085                           
  7086                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7087  004E  3001               	movlw	1
  7088  004F  00E6               	movwf	??_USBStdFeatureReqHandler
  7089  0050  0866               	movf	??_USBStdFeatureReqHandler,w
  7090  0051  0023               	movlb	3	; select bank3
  7091  0052  00DD               	movwf	_RemoteWakeup^(0+384)	;volatile
  7092  0053  2856               	goto	i1l2897
  7093  0054                     i1l2895:	
  7094                           
  7095                           ;usb_device.c: 2805: else
  7096                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7097  0054  0023               	movlb	3	; select bank3
  7098  0055  01DD               	clrf	_RemoteWakeup^(0+384)	;volatile
  7099  0056                     i1l2897:	
  7100                           
  7101                           ;usb_device.c: 2807: }
  7102                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7103                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7104                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7105                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7106  0056  0020               	movlb	0	; select bank0
  7107  0057  0852               	movf	82,w	;volatile
  7108  0058  1D03               	btfss	3,2
  7109  0059  0008               	return
  7110  005A  0850               	movf	80,w	;volatile
  7111  005B  391F               	andlw	31
  7112  005C  3A02               	xorlw	2
  7113  005D  1D03               	skipz
  7114  005E  0008               	return
  7115  005F  0854               	movf	84,w	;volatile
  7116  0060  390F               	andlw	15
  7117  0061  3A00               	xorlw	0
  7118  0062  1903               	skipnz
  7119  0063  0008               	return
  7120  0064  0854               	movf	84,w	;volatile
  7121  0065  390F               	andlw	15
  7122  0066  00E6               	movwf	??_USBStdFeatureReqHandler
  7123  0067  3003               	movlw	3
  7124  0068  0266               	subwf	??_USBStdFeatureReqHandler,w
  7125  0069  1803               	skipnc
  7126  006A  0008               	return
  7127  006B  3020               	movlw	32
  7128  006C  0021               	movlb	1	; select bank1
  7129  006D  0664               	xorwf	_USBDeviceState^(0+128),w	;volatile
  7130  006E  1D03               	btfss	3,2
  7131  006F  0008               	return
  7132                           
  7133                           ;usb_device.c: 2814: {
  7134                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7135  0070  0023               	movlb	3	; select bank3
  7136  0071  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7137                           
  7138                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7139  0072  0020               	movlb	0	; select bank0
  7140  0073  1BD4               	btfsc	84,7	;volatile
  7141  0074  2884               	goto	i1l2911
  7142                           
  7143                           ;usb_device.c: 2821: {
  7144                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7145  0075  0854               	movf	84,w	;volatile
  7146  0076  390F               	andlw	15
  7147  0077  0709               	addwf	9,w
  7148  0078  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7149  0079  0086               	movwf	6
  7150  007A  3001               	movlw	1	; select bank3/4
  7151  007B  0087               	movwf	7
  7152  007C  3F40               	moviw [0]fsr1
  7153  007D  00EB               	movwf	USBStdFeatureReqHandler@p
  7154  007E  3F41               	moviw [1]fsr1
  7155  007F  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7156                           
  7157                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7158  0080  0854               	movf	84,w	;volatile
  7159  0081  390F               	andlw	15
  7160  0082  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7161  0083  2892               	goto	L6
  7162  0084                     i1l2911:	
  7163                           ;usb_device.c: 2824: }
  7164                           
  7165                           
  7166                           ;usb_device.c: 2825: else
  7167                           ;usb_device.c: 2826: {
  7168                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7169  0084  0854               	movf	84,w	;volatile
  7170  0085  390F               	andlw	15
  7171  0086  0709               	addwf	9,w
  7172  0087  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7173  0088  0086               	movwf	6
  7174  0089  3001               	movlw	1	; select bank3/4
  7175  008A  0087               	movwf	7
  7176  008B  3F40               	moviw [0]fsr1
  7177  008C  00EB               	movwf	USBStdFeatureReqHandler@p
  7178  008D  3F41               	moviw [1]fsr1
  7179  008E  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7180                           
  7181                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7182  008F  0854               	movf	84,w	;volatile
  7183  0090  390F               	andlw	15
  7184  0091  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7185  0092                     L6:	
  7186  0092  0086               	movwf	6
  7187  0093  3001               	movlw	1	; select bank3/4
  7188  0094  0087               	movwf	7
  7189  0095  0801               	movf	1,w
  7190  0096  00E6               	movwf	??_USBStdFeatureReqHandler
  7191  0097  0866               	movf	??_USBStdFeatureReqHandler,w
  7192  0098  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data
  7193                           
  7194                           ;usb_device.c: 2829: }
  7195                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7196  0099  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7197  009A  28A5               	goto	i1l2917
  7198                           
  7199                           ;usb_device.c: 2836: {
  7200                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7201  009B  30FB               	movlw	251
  7202  009C  00E6               	movwf	??_USBStdFeatureReqHandler
  7203  009D  30FF               	movlw	255
  7204  009E  00E7               	movwf	??_USBStdFeatureReqHandler+1
  7205  009F  086B               	movf	USBStdFeatureReqHandler@p,w
  7206  00A0  0566               	andwf	??_USBStdFeatureReqHandler,w
  7207  00A1  00EB               	movwf	USBStdFeatureReqHandler@p
  7208  00A2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7209  00A3  0567               	andwf	??_USBStdFeatureReqHandler+1,w
  7210  00A4  28AA               	goto	L7
  7211  00A5                     i1l2917:	
  7212                           ;usb_device.c: 2838: }
  7213                           
  7214                           
  7215                           ;usb_device.c: 2839: else
  7216                           ;usb_device.c: 2840: {
  7217                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7218  00A5  3004               	movlw	4
  7219  00A6  046B               	iorwf	USBStdFeatureReqHandler@p,w
  7220  00A7  00EB               	movwf	USBStdFeatureReqHandler@p
  7221  00A8  3000               	movlw	0
  7222  00A9  046C               	iorwf	USBStdFeatureReqHandler@p+1,w
  7223  00AA                     L7:	
  7224  00AA  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7225                           
  7226                           ;usb_device.c: 2842: }
  7227                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7228  00AB  1BD4               	btfsc	84,7	;volatile
  7229  00AC  28B9               	goto	i1l2923
  7230                           
  7231                           ;usb_device.c: 2848: {
  7232                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7233  00AD  0854               	movf	84,w	;volatile
  7234  00AE  390F               	andlw	15
  7235  00AF  0709               	addwf	9,w
  7236  00B0  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7237  00B1  0086               	movwf	6
  7238  00B2  3001               	movlw	1	; select bank3/4
  7239  00B3  0087               	movwf	7
  7240  00B4  086B               	movf	USBStdFeatureReqHandler@p,w
  7241  00B5  3FC0               	movwi [0]fsr1
  7242  00B6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7243  00B7  3FC1               	movwi [1]fsr1
  7244                           
  7245                           ;usb_device.c: 2850: }
  7246  00B8  28C4               	goto	i1l2925
  7247  00B9                     i1l2923:	
  7248                           
  7249                           ;usb_device.c: 2851: else
  7250                           ;usb_device.c: 2852: {
  7251                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7252  00B9  0854               	movf	84,w	;volatile
  7253  00BA  390F               	andlw	15
  7254  00BB  0709               	addwf	9,w
  7255  00BC  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7256  00BD  0086               	movwf	6
  7257  00BE  3001               	movlw	1	; select bank3/4
  7258  00BF  0087               	movwf	7
  7259  00C0  086B               	movf	USBStdFeatureReqHandler@p,w
  7260  00C1  3FC0               	movwi [0]fsr1
  7261  00C2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7262  00C3  3FC1               	movwi [1]fsr1
  7263  00C4                     i1l2925:	
  7264                           
  7265                           ;usb_device.c: 2854: }
  7266                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7267  00C4  3003               	movlw	3
  7268  00C5  0651               	xorwf	81,w	;volatile
  7269  00C6  1D03               	btfss	3,2
  7270  00C7  28E6               	goto	i1l2939
  7271                           
  7272                           ;usb_device.c: 2858: {
  7273                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7274  00C8  086B               	movf	USBStdFeatureReqHandler@p,w
  7275  00C9  0086               	movwf	6
  7276  00CA  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7277  00CB  0087               	movwf	7
  7278  00CC  1F81               	btfss	1,7
  7279  00CD  28DB               	goto	i1l2935
  7280                           
  7281                           ;usb_device.c: 2860: {
  7282                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7283  00CE  1BD4               	btfsc	84,7	;volatile
  7284  00CF  28D4               	goto	i1l2933
  7285                           
  7286                           ;usb_device.c: 2864: {
  7287                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7288  00D0  0854               	movf	84,w	;volatile
  7289  00D1  390F               	andlw	15
  7290  00D2  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7291  00D3  28D7               	goto	L8
  7292  00D4                     i1l2933:	
  7293                           ;usb_device.c: 2866: }
  7294                           
  7295                           
  7296                           ;usb_device.c: 2867: else
  7297                           ;usb_device.c: 2868: {
  7298                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7299  00D4  0854               	movf	84,w	;volatile
  7300  00D5  390F               	andlw	15
  7301  00D6  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7302  00D7                     L8:	
  7303  00D7  0086               	movwf	6
  7304  00D8  3001               	movlw	1	; select bank3/4
  7305  00D9  0087               	movwf	7
  7306  00DA  1481               	bsf	1,1
  7307  00DB                     i1l2935:	
  7308                           
  7309                           ;usb_device.c: 2870: }
  7310                           ;usb_device.c: 2871: }
  7311                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7312  00DB  086B               	movf	USBStdFeatureReqHandler@p,w
  7313  00DC  0086               	movwf	6
  7314  00DD  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7315  00DE  0087               	movwf	7
  7316  00DF  1501               	bsf	1,2
  7317                           
  7318                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7319  00E0  086B               	movf	USBStdFeatureReqHandler@p,w
  7320  00E1  0086               	movwf	6
  7321  00E2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7322  00E3  0087               	movwf	7
  7323  00E4  1781               	bsf	1,7
  7324                           
  7325                           ;usb_device.c: 2876: }
  7326  00E5  0008               	return
  7327  00E6                     i1l2939:	
  7328                           
  7329                           ;usb_device.c: 2877: else
  7330                           ;usb_device.c: 2878: {
  7331                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7332  00E6  3004               	movlw	4
  7333  00E7  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7334  00E8  00EB               	movwf	USBStdFeatureReqHandler@p
  7335  00E9  3000               	movlw	0
  7336  00EA  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7337  00EB  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7338                           
  7339                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7340  00EC  086B               	movf	USBStdFeatureReqHandler@p,w
  7341  00ED  0086               	movwf	6
  7342  00EE  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7343  00EF  0087               	movwf	7
  7344  00F0  1F81               	btfss	1,7
  7345  00F1  290F               	goto	i1l2949
  7346                           
  7347                           ;usb_device.c: 2885: {
  7348                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7349  00F2  307F               	movlw	127
  7350  00F3  00E6               	movwf	??_USBStdFeatureReqHandler
  7351  00F4  086B               	movf	USBStdFeatureReqHandler@p,w
  7352  00F5  0086               	movwf	6
  7353  00F6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7354  00F7  0087               	movwf	7
  7355  00F8  0866               	movf	??_USBStdFeatureReqHandler,w
  7356  00F9  0581               	andwf	1,f
  7357                           
  7358                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7359  00FA  086B               	movf	USBStdFeatureReqHandler@p,w
  7360  00FB  0086               	movwf	6
  7361  00FC  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7362  00FD  0087               	movwf	7
  7363  00FE  1701               	bsf	1,6
  7364                           
  7365                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7366  00FF  3000               	movlw	0
  7367  0100  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7368  0101  3005               	movlw	5
  7369  0102  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7370  0103  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7371  0104  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7372  0105  086B               	movf	USBStdFeatureReqHandler@p,w
  7373  0106  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7374  0107  3002               	movlw	2
  7375  0108  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7376  0109  3000               	movlw	0
  7377  010A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7378  010B  318A  22CA  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7379                           
  7380                           ;usb_device.c: 2891: }
  7381  010E  2915               	goto	i1l2951
  7382  010F                     i1l2949:	
  7383                           
  7384                           ;usb_device.c: 2892: else
  7385                           ;usb_device.c: 2893: {
  7386                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7387  010F  0020               	movlb	0	; select bank0
  7388  0110  086B               	movf	USBStdFeatureReqHandler@p,w
  7389  0111  0086               	movwf	6
  7390  0112  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7391  0113  0087               	movwf	7
  7392  0114  1701               	bsf	1,6
  7393  0115                     i1l2951:	
  7394                           
  7395                           ;usb_device.c: 2896: }
  7396                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7397  0115  3004               	movlw	4
  7398  0116  0020               	movlb	0	; select bank0
  7399  0117  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7400  0118  00EB               	movwf	USBStdFeatureReqHandler@p
  7401  0119  3000               	movlw	0
  7402  011A  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7403  011B  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7404                           
  7405                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7406  011C  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7407  011D  2924               	goto	i1l456
  7408  011E  086B               	movf	USBStdFeatureReqHandler@p,w
  7409  011F  0086               	movwf	6
  7410  0120  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7411  0121  0087               	movwf	7
  7412  0122  1F81               	btfss	1,7
  7413  0123  2949               	goto	i1l2963
  7414  0124                     i1l456:	
  7415                           
  7416                           ;usb_device.c: 2907: {
  7417                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7418  0124  1BD4               	btfsc	84,7	;volatile
  7419  0125  292A               	goto	i1l2959
  7420                           
  7421                           ;usb_device.c: 2909: {
  7422                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7423  0126  0854               	movf	84,w	;volatile
  7424  0127  390F               	andlw	15
  7425  0128  3EC0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7426  0129  292D               	goto	L9
  7427  012A                     i1l2959:	
  7428                           ;usb_device.c: 2911: }
  7429                           
  7430                           
  7431                           ;usb_device.c: 2912: else
  7432                           ;usb_device.c: 2913: {
  7433                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7434  012A  0854               	movf	84,w	;volatile
  7435  012B  390F               	andlw	15
  7436  012C  3EC3               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7437  012D                     L9:	
  7438  012D  0086               	movwf	6
  7439  012E  3001               	movlw	1	; select bank3/4
  7440  012F  0087               	movwf	7
  7441  0130  1081               	bcf	1,1
  7442                           
  7443                           ;usb_device.c: 2915: }
  7444                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7445  0131  303B               	movlw	59
  7446  0132  00E6               	movwf	??_USBStdFeatureReqHandler
  7447  0133  086B               	movf	USBStdFeatureReqHandler@p,w
  7448  0134  0086               	movwf	6
  7449  0135  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7450  0136  0087               	movwf	7
  7451  0137  0866               	movf	??_USBStdFeatureReqHandler,w
  7452  0138  0581               	andwf	1,f
  7453                           
  7454                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7455  0139  3000               	movlw	0
  7456  013A  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7457  013B  3005               	movlw	5
  7458  013C  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7459  013D  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7460  013E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7461  013F  086B               	movf	USBStdFeatureReqHandler@p,w
  7462  0140  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7463  0141  3002               	movlw	2
  7464  0142  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7465  0143  3000               	movlw	0
  7466  0144  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7467  0145  318A  22CA  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7468                           
  7469                           ;usb_device.c: 2921: }
  7470  0148  2952               	goto	i1l2965
  7471  0149                     i1l2963:	
  7472                           
  7473                           ;usb_device.c: 2922: else
  7474                           ;usb_device.c: 2923: {
  7475                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7476  0149  303B               	movlw	59
  7477  014A  0020               	movlb	0	; select bank0
  7478  014B  00E6               	movwf	??_USBStdFeatureReqHandler
  7479  014C  086B               	movf	USBStdFeatureReqHandler@p,w
  7480  014D  0086               	movwf	6
  7481  014E  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7482  014F  0087               	movwf	7
  7483  0150  0866               	movf	??_USBStdFeatureReqHandler,w
  7484  0151  0581               	andwf	1,f
  7485  0152                     i1l2965:	
  7486                           
  7487                           ;usb_device.c: 2926: }
  7488                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7489  0152  0020               	movlb	0	; select bank0
  7490  0153  0854               	movf	84,w	;volatile
  7491  0154  390F               	andlw	15
  7492  0155  3E98               	addlw	152
  7493  0156  00E6               	movwf	??_USBStdFeatureReqHandler
  7494  0157  01E7               	clrf	??_USBStdFeatureReqHandler+1
  7495  0158  300E               	movlw	14
  7496  0159  3DE7               	addwfc	??_USBStdFeatureReqHandler+1,f
  7497  015A  0866               	movf	??_USBStdFeatureReqHandler,w
  7498  015B  00E8               	movwf	USBStdFeatureReqHandler@pUEP
  7499  015C  0867               	movf	??_USBStdFeatureReqHandler+1,w
  7500  015D  00E9               	movwf	USBStdFeatureReqHandler@pUEP+1
  7501                           
  7502                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7503  015E  30FE               	movlw	254
  7504  015F  00E6               	movwf	??_USBStdFeatureReqHandler
  7505  0160  0868               	movf	USBStdFeatureReqHandler@pUEP,w
  7506  0161  0086               	movwf	6
  7507  0162  0869               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7508  0163  0087               	movwf	7
  7509  0164  0866               	movf	??_USBStdFeatureReqHandler,w
  7510  0165  0581               	andwf	1,f
  7511  0166  0008               	return
  7512  0167                     __end_of_USBStdFeatureReqHandler:	
  7513                           
  7514                           	psect	text31
  7515  0ACA                     __ptext31:	
  7516 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7517 ;; Defined at:
  7518 ;;		line 51 in file "../src/usb_events.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  event           2    0[BANK0 ] enum E2656
  7521 ;;  pdata           2    2[BANK0 ] PTR void 
  7522 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7523 ;;		 -> BDT(48), 
  7524 ;;  size            2    4[BANK0 ] unsigned int 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      unsigned char 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7536 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;Total ram usage:        6 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    3
  7543 ;; This function calls:
  7544 ;;		_USBCheckCDCRequest
  7545 ;;		i1_CDCInitEP
  7546 ;;		i1_SYSTEM_Initialize
  7547 ;; This function is called by:
  7548 ;;		_USBDeviceTasks
  7549 ;;		_USBStdSetCfgHandler
  7550 ;;		_USBSuspend
  7551 ;;		_USBWakeFromSuspend
  7552 ;;		_USBCtrlTrfSetupHandler
  7553 ;;		_USBCheckStdRequest
  7554 ;;		_USBStdFeatureReqHandler
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           
  7559                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7560  0ACA                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7561                           
  7562                           ;usb_events.c: 53: switch( (int) event )
  7563                           
  7564                           ;incstack = 0
  7565                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7566  0ACA  2AD9               	goto	i1l2655
  7567  0ACB                     i1l2645:	
  7568                           ;usb_events.c: 64: case EVENT_SUSPEND:
  7569                           
  7570                           ;usb_events.c: 62: break;
  7571                           
  7572                           ;usb_events.c: 58: case EVENT_SOF:
  7573                           
  7574                           ;usb_events.c: 56: break;
  7575                           
  7576                           ;usb_events.c: 54: {
  7577                           ;usb_events.c: 55: case EVENT_TRANSFER:
  7578                           
  7579                           
  7580                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7581  0ACB  3001               	movlw	1
  7582  0ACC  3189  213C         	fcall	i1_SYSTEM_Initialize
  7583                           
  7584                           ;usb_events.c: 75: break;
  7585  0ACE  0008               	return
  7586  0ACF                     i1l2647:	
  7587                           ;usb_events.c: 77: case EVENT_RESUME:
  7588                           
  7589                           
  7590                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7591  0ACF  3002               	movlw	2
  7592  0AD0  3189  213C         	fcall	i1_SYSTEM_Initialize
  7593                           
  7594                           ;usb_events.c: 86: break;
  7595  0AD2  0008               	return
  7596  0AD3                     i1l2649:	
  7597                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  7598                           
  7599                           
  7600                           ;usb_events.c: 91: CDCInitEP();
  7601  0AD3  318A  225E         	fcall	i1_CDCInitEP
  7602                           
  7603                           ;usb_events.c: 96: break;
  7604                           
  7605                           ;usb_events.c: 95: case EVENT_SET_DESCRIPTOR:
  7606                           
  7607                           ;usb_events.c: 93: break;
  7608  0AD5  0008               	return
  7609  0AD6                     i1l2651:	
  7610                           ;usb_events.c: 98: case EVENT_EP0_REQUEST:
  7611                           
  7612                           
  7613                           ;usb_events.c: 101: USBCheckCDCRequest();
  7614  0AD6  318D  257A         	fcall	_USBCheckCDCRequest
  7615                           
  7616                           ;usb_events.c: 112: }
  7617                           
  7618                           ;usb_events.c: 111: break;
  7619                           
  7620                           ;usb_events.c: 110: default:
  7621                           
  7622                           ;usb_events.c: 108: break;
  7623                           
  7624                           ;usb_events.c: 107: case EVENT_TRANSFER_TERMINATED:
  7625                           
  7626                           ;usb_events.c: 105: break;
  7627                           
  7628                           ;usb_events.c: 104: case EVENT_BUS_ERROR:
  7629                           
  7630                           ;usb_events.c: 102: break;
  7631  0AD8  0008               	return
  7632  0AD9                     i1l2655:	
  7633                           
  7634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7635                           ; Switch size 1, requested type "space"
  7636                           ; Number of cases is 2, Range of values is 0 to 127
  7637                           ; switch strategies available:
  7638                           ; Name         Instructions Cycles
  7639                           ; simple_byte            7     4 (average)
  7640                           ; direct_byte          262     6 (fixed)
  7641                           ; jumptable            260     6 (fixed)
  7642                           ;	Chosen strategy is simple_byte
  7643  0AD9  0020               	movlb	0	; select bank0
  7644  0ADA  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7645  0ADB  3A00               	xorlw	0	; case 0
  7646  0ADC  1903               	skipnz
  7647  0ADD  2AE2               	goto	i1l4417
  7648  0ADE  3A7F               	xorlw	127	; case 127
  7649  0ADF  1903               	skipnz
  7650  0AE0  2AFC               	goto	i1l4419
  7651  0AE1  2B01               	goto	i1l72
  7652  0AE2                     i1l4417:	
  7653                           
  7654                           ; Switch size 1, requested type "space"
  7655                           ; Number of cases is 8, Range of values is 1 to 117
  7656                           ; switch strategies available:
  7657                           ; Name         Instructions Cycles
  7658                           ; simple_byte           25    13 (average)
  7659                           ; direct_byte          243     9 (fixed)
  7660                           ; jumptable            263     9 (fixed)
  7661                           ;	Chosen strategy is simple_byte
  7662  0AE2  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7663  0AE3  3A01               	xorlw	1	; case 1
  7664  0AE4  1903               	skipnz
  7665  0AE5  2AD3               	goto	i1l2649
  7666  0AE6  3A03               	xorlw	3	; case 2
  7667  0AE7  1903               	skipnz
  7668  0AE8  2B01               	goto	i1l72
  7669  0AE9  3A01               	xorlw	1	; case 3
  7670  0AEA  1903               	skipnz
  7671  0AEB  2AD6               	goto	i1l2651
  7672  0AEC  3A06               	xorlw	6	; case 5
  7673  0AED  1903               	skipnz
  7674  0AEE  2B01               	goto	i1l72
  7675  0AEF  3A77               	xorlw	119	; case 114
  7676  0AF0  1903               	skipnz
  7677  0AF1  2B01               	goto	i1l72
  7678  0AF2  3A01               	xorlw	1	; case 115
  7679  0AF3  1903               	skipnz
  7680  0AF4  2B01               	goto	i1l72
  7681  0AF5  3A07               	xorlw	7	; case 116
  7682  0AF6  1903               	skipnz
  7683  0AF7  2ACF               	goto	i1l2647
  7684  0AF8  3A01               	xorlw	1	; case 117
  7685  0AF9  1903               	skipnz
  7686  0AFA  2ACB               	goto	i1l2645
  7687  0AFB  2B01               	goto	i1l72
  7688  0AFC                     i1l4419:	
  7689                           
  7690                           ; Switch size 1, requested type "space"
  7691                           ; Number of cases is 1, Range of values is 255 to 255
  7692                           ; switch strategies available:
  7693                           ; Name         Instructions Cycles
  7694                           ; simple_byte            4     3 (average)
  7695                           ; direct_byte            7     5 (fixed)
  7696                           ; jumptable            263     9 (fixed)
  7697                           ;	Chosen strategy is simple_byte
  7698  0AFC  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7699  0AFD  3AFF               	xorlw	255	; case 255
  7700  0AFE  1903               	skipnz
  7701  0AFF  2B01               	goto	i1l72
  7702  0B00  2B01               	goto	i1l72
  7703  0B01                     i1l72:	
  7704                           ;usb_events.c: 113: return 1;
  7705                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7706                           
  7707  0B01  0008               	return
  7708  0B02                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7709                           
  7710                           	psect	text32
  7711  093C                     __ptext32:	
  7712 ;; *************** function i1_SYSTEM_Initialize *****************
  7713 ;; Defined at:
  7714 ;;		line 82 in file "mcc_generated_files/mcc.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  state           1    wreg     enum E2617
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  state           1    0[COMMON] enum E2617
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;Total ram usage:        1 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; This function calls:
  7735 ;;		Nothing
  7736 ;; This function is called by:
  7737 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           
  7742                           ;psect for function i1_SYSTEM_Initialize
  7743  093C                     i1_SYSTEM_Initialize:	
  7744                           
  7745                           ;incstack = 0
  7746                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  7747                           ;i1SYSTEM_Initialize@state stored from wreg
  7748  093C  00F0               	movwf	i1SYSTEM_Initialize@state
  7749                           
  7750                           ;mcc.c: 84: switch(state)
  7751  093D  2945               	goto	i1l2623
  7752  093E                     i1l2619:	
  7753                           ;mcc.c: 85: {
  7754                           ;mcc.c: 86: case SYSTEM_STATE_USB_START:
  7755                           
  7756                           
  7757                           ;mcc.c: 90: OSCCON = 0xFC;
  7758  093E  30FC               	movlw	252
  7759  093F  0021               	movlb	1	; select bank1
  7760  0940  0099               	movwf	25	;volatile
  7761                           
  7762                           ;mcc.c: 91: ACTCON = 0x90;
  7763  0941  3090               	movlw	144
  7764  0942  0027               	movlb	7	; select bank7
  7765  0943  009B               	movwf	27	;volatile
  7766                           
  7767                           ;mcc.c: 102: }
  7768                           
  7769                           ;mcc.c: 101: break;
  7770                           
  7771                           ;mcc.c: 100: case SYSTEM_STATE_USB_RESUME:
  7772                           
  7773                           ;mcc.c: 98: break;
  7774                           
  7775                           ;mcc.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  7776                           
  7777                           ;mcc.c: 95: break;
  7778  0944  0008               	return
  7779  0945                     i1l2623:	
  7780  0945  0870               	movf	i1SYSTEM_Initialize@state,w
  7781                           
  7782                           ; Switch size 1, requested type "space"
  7783                           ; Number of cases is 3, Range of values is 0 to 2
  7784                           ; switch strategies available:
  7785                           ; Name         Instructions Cycles
  7786                           ; simple_byte           10     6 (average)
  7787                           ; direct_byte           12     6 (fixed)
  7788                           ; jumptable            260     6 (fixed)
  7789                           ;	Chosen strategy is simple_byte
  7790  0946  3A00               	xorlw	0	; case 0
  7791  0947  1903               	skipnz
  7792  0948  293E               	goto	i1l2619
  7793  0949  3A01               	xorlw	1	; case 1
  7794  094A  1903               	skipnz
  7795  094B  2950               	goto	i1l32
  7796  094C  3A03               	xorlw	3	; case 2
  7797  094D  1903               	skipnz
  7798  094E  2950               	goto	i1l32
  7799  094F  2950               	goto	i1l32
  7800  0950                     i1l32:	
  7801  0950  0008               	return
  7802  0951                     __end_ofi1_SYSTEM_Initialize:	
  7803                           
  7804                           	psect	text33
  7805  0A5E                     __ptext33:	
  7806 ;; *************** function i1_CDCInitEP *****************
  7807 ;; Defined at:
  7808 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;		None
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      void 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;Total ram usage:        1 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:    2
  7829 ;; This function calls:
  7830 ;;		i1_USBEnableEndpoint
  7831 ;;		i1_USBTransferOnePacket
  7832 ;; This function is called by:
  7833 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           
  7838                           ;psect for function i1_CDCInitEP
  7839  0A5E                     i1_CDCInitEP:	
  7840                           
  7841                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  7842                           
  7843                           ;incstack = 0
  7844                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7845  0A5E  3000               	movlw	0
  7846  0A5F  0023               	movlb	3	; select bank3
  7847  0A60  00E3               	movwf	(_line_coding+3)^(0+384)
  7848  0A61  3000               	movlw	0
  7849  0A62  00E2               	movwf	(_line_coding+2)^(0+384)
  7850  0A63  304B               	movlw	75
  7851  0A64  00E1               	movwf	(_line_coding+1)^(0+384)
  7852  0A65  3000               	movlw	0
  7853  0A66  00E0               	movwf	_line_coding^(0+384)
  7854                           
  7855                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  7856  0A67  01E4               	clrf	(_line_coding^(0+384)+4)
  7857                           
  7858                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  7859  0A68  01E5               	clrf	(_line_coding^(0+384)+5)
  7860                           
  7861                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  7862  0A69  3008               	movlw	8
  7863  0A6A  00FD               	movwf	??i1_CDCInitEP
  7864  0A6B  087D               	movf	??i1_CDCInitEP,w
  7865  0A6C  00E6               	movwf	(_line_coding^(0+384)+6)
  7866                           
  7867                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  7868  0A6D  01D2               	clrf	_cdc_rx_len^(0+384)
  7869                           
  7870                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  7871  0A6E  301A               	movlw	26
  7872  0A6F  00FD               	movwf	??i1_CDCInitEP
  7873  0A70  087D               	movf	??i1_CDCInitEP,w
  7874  0A71  00F7               	movwf	i1USBEnableEndpoint@options
  7875  0A72  3001               	movlw	1
  7876  0A73  3189  21D4  318A   	fcall	i1_USBEnableEndpoint
  7877                           
  7878                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7879  0A76  301E               	movlw	30
  7880  0A77  00FD               	movwf	??i1_CDCInitEP
  7881  0A78  087D               	movf	??i1_CDCInitEP,w
  7882  0A79  00F7               	movwf	i1USBEnableEndpoint@options
  7883  0A7A  3002               	movlw	2
  7884  0A7B  3189  21D4  318A   	fcall	i1_USBEnableEndpoint
  7885                           
  7886                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7887  0A7E  01F0               	clrf	i1USBTransferOnePacket@dir
  7888  0A7F  3020               	movlw	32
  7889  0A80  00F1               	movwf	i1USBTransferOnePacket@data
  7890  0A81  3001               	movlw	1
  7891  0A82  00F2               	movwf	i1USBTransferOnePacket@data+1
  7892  0A83  3040               	movlw	64
  7893  0A84  00FD               	movwf	??i1_CDCInitEP
  7894  0A85  087D               	movf	??i1_CDCInitEP,w
  7895  0A86  00F3               	movwf	i1USBTransferOnePacket@len
  7896  0A87  3002               	movlw	2
  7897  0A88  3187  2761         	fcall	i1_USBTransferOnePacket
  7898  0A8A  0871               	movf	?i1_USBTransferOnePacket+1,w
  7899  0A8B  0023               	movlb	3	; select bank3
  7900  0A8C  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  7901  0A8D  0870               	movf	?i1_USBTransferOnePacket,w
  7902  0A8E  00C8               	movwf	_CDCDataOutHandle^(0+384)
  7903                           
  7904                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  7905  0A8F  01C6               	clrf	_CDCDataInHandle^(0+384)
  7906  0A90  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  7907                           
  7908                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  7909  0A91  01D1               	clrf	_cdc_trf_state^(0+384)
  7910  0A92  0008               	return
  7911  0A93                     __end_ofi1_CDCInitEP:	
  7912                           
  7913                           	psect	text34
  7914  0761                     __ptext34:	
  7915 ;; *************** function i1_USBTransferOnePacket *****************
  7916 ;; Defined at:
  7917 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  ep              1    wreg     unsigned char 
  7920 ;;  dir             1    0[COMMON] unsigned char 
  7921 ;;  data            2    1[COMMON] PTR unsigned char 
  7922 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7923 ;;  len             1    3[COMMON] unsigned char 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  ep              1    8[COMMON] unsigned char 
  7926 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  7927 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  2    0[COMMON] PTR void 
  7930 ;; Registers used:
  7931 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7939 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7940 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7941 ;;Total ram usage:       11 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		i1_CDCInitEP
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function i1_USBTransferOnePacket
  7952  0761                     i1_USBTransferOnePacket:	
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  7956                           ;i1USBTransferOnePacket@ep stored from wreg
  7957  0761  00F8               	movwf	i1USBTransferOnePacket@ep
  7958                           
  7959                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7960                           ;usb_device.c: 1000: if(dir != 0)
  7961  0762  0870               	movf	i1USBTransferOnePacket@dir,w
  7962  0763  1903               	btfsc	3,2
  7963  0764  2F6E               	goto	i1l2547
  7964                           
  7965                           ;usb_device.c: 1001: {
  7966                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7967  0765  3578               	lslf	i1USBTransferOnePacket@ep,w
  7968  0766  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7969  0767  0086               	movwf	6
  7970  0768  3001               	movlw	1	; select bank3/4
  7971  0769  0087               	movwf	7
  7972  076A  3F40               	moviw [0]fsr1
  7973  076B  00F9               	movwf	i1USBTransferOnePacket@handle
  7974  076C  3F41               	moviw [1]fsr1
  7975  076D  2F76               	goto	L10
  7976  076E                     i1l2547:	
  7977                           ;usb_device.c: 1004: }
  7978                           
  7979                           
  7980                           ;usb_device.c: 1005: else
  7981                           ;usb_device.c: 1006: {
  7982                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7983  076E  3578               	lslf	i1USBTransferOnePacket@ep,w
  7984  076F  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7985  0770  0086               	movwf	6
  7986  0771  3001               	movlw	1	; select bank3/4
  7987  0772  0087               	movwf	7
  7988  0773  3F40               	moviw [0]fsr1
  7989  0774  00F9               	movwf	i1USBTransferOnePacket@handle
  7990  0775  3F41               	moviw [1]fsr1
  7991  0776                     L10:	
  7992  0776  00FA               	movwf	i1USBTransferOnePacket@handle+1
  7993                           
  7994                           ;usb_device.c: 1009: }
  7995                           ;usb_device.c: 1013: if(handle == 0)
  7996  0777  0879               	movf	i1USBTransferOnePacket@handle,w
  7997  0778  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  7998  0779  1D03               	btfss	3,2
  7999  077A  2F7E               	goto	i1l2555
  8000                           
  8001                           ;usb_device.c: 1014: {
  8002                           ;usb_device.c: 1015: return 0;
  8003  077B  01F0               	clrf	?i1_USBTransferOnePacket
  8004  077C  01F1               	clrf	?i1_USBTransferOnePacket+1
  8005  077D  0008               	return
  8006  077E                     i1l2555:	
  8007                           
  8008                           ;usb_device.c: 1016: }
  8009                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8010  077E  30FF               	movlw	255
  8011  077F  0571               	andwf	i1USBTransferOnePacket@data,w
  8012  0780  00F4               	movwf	??i1_USBTransferOnePacket
  8013  0781  307F               	movlw	127
  8014  0782  0572               	andwf	i1USBTransferOnePacket@data+1,w
  8015  0783  00F5               	movwf	??i1_USBTransferOnePacket+1
  8016  0784  0879               	movf	i1USBTransferOnePacket@handle,w
  8017  0785  0086               	movwf	6
  8018  0786  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8019  0787  0087               	movwf	7
  8020  0788  3142               	addfsr 1,2
  8021  0789  0874               	movf	??i1_USBTransferOnePacket,w
  8022  078A  3FC0               	movwi [0]fsr1
  8023  078B  0875               	movf	??i1_USBTransferOnePacket+1,w
  8024  078C  3FC1               	movwi [1]fsr1
  8025                           
  8026                           ;usb_device.c: 1030: handle->CNT = len;
  8027  078D  0879               	movf	i1USBTransferOnePacket@handle,w
  8028  078E  3E01               	addlw	1
  8029  078F  00F4               	movwf	??i1_USBTransferOnePacket
  8030  0790  3000               	movlw	0
  8031  0791  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  8032  0792  00F5               	movwf	??i1_USBTransferOnePacket+1
  8033  0793  0874               	movf	??i1_USBTransferOnePacket,w
  8034  0794  0086               	movwf	6
  8035  0795  0875               	movf	??i1_USBTransferOnePacket+1,w
  8036  0796  0087               	movwf	7
  8037  0797  0873               	movf	i1USBTransferOnePacket@len,w
  8038  0798  0081               	movwf	1
  8039                           
  8040                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8041  0799  3040               	movlw	64
  8042  079A  00F4               	movwf	??i1_USBTransferOnePacket
  8043  079B  0879               	movf	i1USBTransferOnePacket@handle,w
  8044  079C  0086               	movwf	6
  8045  079D  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8046  079E  0087               	movwf	7
  8047  079F  0874               	movf	??i1_USBTransferOnePacket,w
  8048  07A0  0581               	andwf	1,f
  8049                           
  8050                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8051  07A1  0879               	movf	i1USBTransferOnePacket@handle,w
  8052  07A2  0086               	movwf	6
  8053  07A3  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8054  07A4  0087               	movwf	7
  8055  07A5  1581               	bsf	1,3
  8056                           
  8057                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8058  07A6  0879               	movf	i1USBTransferOnePacket@handle,w
  8059  07A7  0086               	movwf	6
  8060  07A8  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8061  07A9  0087               	movwf	7
  8062  07AA  1781               	bsf	1,7
  8063                           
  8064                           ;usb_device.c: 1036: if(dir != 0)
  8065  07AB  0870               	movf	i1USBTransferOnePacket@dir,w
  8066  07AC  1903               	btfsc	3,2
  8067  07AD  2FC7               	goto	i1l2565
  8068                           
  8069                           ;usb_device.c: 1037: {
  8070                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8071  07AE  3578               	lslf	i1USBTransferOnePacket@ep,w
  8072  07AF  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8073  07B0  0086               	movwf	6
  8074  07B1  3001               	movlw	1	; select bank3/4
  8075  07B2  0087               	movwf	7
  8076  07B3  3F40               	moviw [0]fsr1
  8077  07B4  00F4               	movwf	??i1_USBTransferOnePacket
  8078  07B5  3F41               	moviw [1]fsr1
  8079  07B6  00F5               	movwf	??i1_USBTransferOnePacket+1
  8080  07B7  3004               	movlw	4
  8081  07B8  0674               	xorwf	??i1_USBTransferOnePacket,w
  8082  07B9  00F6               	movwf	??i1_USBTransferOnePacket+2
  8083  07BA  3000               	movlw	0
  8084  07BB  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8085  07BC  00F7               	movwf	??i1_USBTransferOnePacket+3
  8086  07BD  3578               	lslf	i1USBTransferOnePacket@ep,w
  8087  07BE  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8088  07BF  0086               	movwf	6
  8089  07C0  3001               	movlw	1	; select bank3/4
  8090  07C1  0087               	movwf	7
  8091  07C2  0876               	movf	??i1_USBTransferOnePacket+2,w
  8092  07C3  3FC0               	movwi [0]fsr1
  8093  07C4  0877               	movf	??i1_USBTransferOnePacket+3,w
  8094  07C5  3FC1               	movwi [1]fsr1
  8095                           
  8096                           ;usb_device.c: 1040: }
  8097  07C6  2FDF               	goto	i1l2567
  8098  07C7                     i1l2565:	
  8099                           
  8100                           ;usb_device.c: 1041: else
  8101                           ;usb_device.c: 1042: {
  8102                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8103  07C7  3578               	lslf	i1USBTransferOnePacket@ep,w
  8104  07C8  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8105  07C9  0086               	movwf	6
  8106  07CA  3001               	movlw	1	; select bank3/4
  8107  07CB  0087               	movwf	7
  8108  07CC  3F40               	moviw [0]fsr1
  8109  07CD  00F4               	movwf	??i1_USBTransferOnePacket
  8110  07CE  3F41               	moviw [1]fsr1
  8111  07CF  00F5               	movwf	??i1_USBTransferOnePacket+1
  8112  07D0  3004               	movlw	4
  8113  07D1  0674               	xorwf	??i1_USBTransferOnePacket,w
  8114  07D2  00F6               	movwf	??i1_USBTransferOnePacket+2
  8115  07D3  3000               	movlw	0
  8116  07D4  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8117  07D5  00F7               	movwf	??i1_USBTransferOnePacket+3
  8118  07D6  3578               	lslf	i1USBTransferOnePacket@ep,w
  8119  07D7  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8120  07D8  0086               	movwf	6
  8121  07D9  3001               	movlw	1	; select bank3/4
  8122  07DA  0087               	movwf	7
  8123  07DB  0876               	movf	??i1_USBTransferOnePacket+2,w
  8124  07DC  3FC0               	movwi [0]fsr1
  8125  07DD  0877               	movf	??i1_USBTransferOnePacket+3,w
  8126  07DE  3FC1               	movwi [1]fsr1
  8127  07DF                     i1l2567:	
  8128                           
  8129                           ;usb_device.c: 1045: }
  8130                           ;usb_device.c: 1046: return (void*)handle;
  8131  07DF  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8132  07E0  00F1               	movwf	?i1_USBTransferOnePacket+1
  8133  07E1  0879               	movf	i1USBTransferOnePacket@handle,w
  8134  07E2  00F0               	movwf	?i1_USBTransferOnePacket
  8135  07E3  0008               	return
  8136  07E4                     __end_ofi1_USBTransferOnePacket:	
  8137                           
  8138                           	psect	text35
  8139  09D4                     __ptext35:	
  8140 ;; *************** function i1_USBEnableEndpoint *****************
  8141 ;; Defined at:
  8142 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  ep              1    wreg     unsigned char 
  8145 ;;  options         1    7[COMMON] unsigned char 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  ep              1   12[COMMON] unsigned char 
  8148 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
  8149 ;;		 -> UEP0(1), 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      void 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8159 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;Total ram usage:        6 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    1
  8166 ;; This function calls:
  8167 ;;		i1_USBConfigureEndpoint
  8168 ;; This function is called by:
  8169 ;;		i1_CDCInitEP
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           
  8174                           ;psect for function i1_USBEnableEndpoint
  8175  09D4                     i1_USBEnableEndpoint:	
  8176                           
  8177                           ;incstack = 0
  8178                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8179                           ;i1USBEnableEndpoint@ep stored from wreg
  8180  09D4  00FC               	movwf	i1USBEnableEndpoint@ep
  8181                           
  8182                           ;usb_device.c: 880: unsigned char* p;
  8183                           ;usb_device.c: 884: if(options & 0x04)
  8184  09D5  1D77               	btfss	i1USBEnableEndpoint@options,2
  8185  09D6  29DC               	goto	i1l2535
  8186                           
  8187                           ;usb_device.c: 885: {
  8188                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8189  09D7  01F0               	clrf	i1USBConfigureEndpoint@direction
  8190  09D8  087C               	movf	i1USBEnableEndpoint@ep,w
  8191  09D9  318B  233F  3189   	fcall	i1_USBConfigureEndpoint
  8192  09DC                     i1l2535:	
  8193                           
  8194                           ;usb_device.c: 887: }
  8195                           ;usb_device.c: 888: if(options & 0x02)
  8196  09DC  1CF7               	btfss	i1USBEnableEndpoint@options,1
  8197  09DD  29E3               	goto	i1l2539
  8198                           
  8199                           ;usb_device.c: 889: {
  8200                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8201  09DE  01F0               	clrf	i1USBConfigureEndpoint@direction
  8202  09DF  0AF0               	incf	i1USBConfigureEndpoint@direction,f
  8203  09E0  087C               	movf	i1USBEnableEndpoint@ep,w
  8204  09E1  318B  233F         	fcall	i1_USBConfigureEndpoint
  8205  09E3                     i1l2539:	
  8206                           
  8207                           ;usb_device.c: 891: }
  8208                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8209  09E3  087C               	movf	i1USBEnableEndpoint@ep,w
  8210  09E4  3E98               	addlw	152
  8211  09E5  00F8               	movwf	??i1_USBEnableEndpoint
  8212  09E6  01F9               	clrf	??i1_USBEnableEndpoint+1
  8213  09E7  300E               	movlw	14
  8214  09E8  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
  8215  09E9  0878               	movf	??i1_USBEnableEndpoint,w
  8216  09EA  00FA               	movwf	i1USBEnableEndpoint@p
  8217  09EB  0879               	movf	??i1_USBEnableEndpoint+1,w
  8218  09EC  00FB               	movwf	i1USBEnableEndpoint@p+1
  8219                           
  8220                           ;usb_device.c: 901: *p = options;
  8221  09ED  087A               	movf	i1USBEnableEndpoint@p,w
  8222  09EE  0086               	movwf	6
  8223  09EF  087B               	movf	i1USBEnableEndpoint@p+1,w
  8224  09F0  0087               	movwf	7
  8225  09F1  0877               	movf	i1USBEnableEndpoint@options,w
  8226  09F2  0081               	movwf	1
  8227  09F3  0008               	return
  8228  09F4                     __end_ofi1_USBEnableEndpoint:	
  8229                           
  8230                           	psect	text36
  8231  0B3F                     __ptext36:	
  8232 ;; *************** function i1_USBConfigureEndpoint *****************
  8233 ;; Defined at:
  8234 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  EPNum           1    wreg     unsigned char 
  8237 ;;  direction       1    0[COMMON] unsigned char 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  EPNum           1    5[COMMON] unsigned char 
  8240 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
  8241 ;;		 -> BDT(48), 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  1    wreg      void 
  8244 ;; Registers used:
  8245 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8251 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;Total ram usage:        7 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		i1_USBEnableEndpoint
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           
  8265                           ;psect for function i1_USBConfigureEndpoint
  8266  0B3F                     i1_USBConfigureEndpoint:	
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8270                           ;i1USBConfigureEndpoint@EPNum stored from wreg
  8271  0B3F  00F5               	movwf	i1USBConfigureEndpoint@EPNum
  8272                           
  8273                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8274                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8275  0B40  3020               	movlw	32
  8276  0B41  00F1               	movwf	??i1_USBConfigureEndpoint
  8277  0B42  0871               	movf	??i1_USBConfigureEndpoint,w
  8278  0B43  00F6               	movwf	i1USBConfigureEndpoint@handle
  8279                           
  8280                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8281  0B44  0870               	movf	i1USBConfigureEndpoint@direction,w
  8282  0B45  00F1               	movwf	??i1_USBConfigureEndpoint
  8283  0B46  3001               	movlw	1
  8284  0B47                     u179_25:	
  8285  0B47  35F1               	lslf	??i1_USBConfigureEndpoint,f
  8286  0B48  0B89               	decfsz	9,f
  8287  0B49  2B47               	goto	u179_25
  8288  0B4A  0875               	movf	i1USBConfigureEndpoint@EPNum,w
  8289  0B4B  00F2               	movwf	??i1_USBConfigureEndpoint+1
  8290  0B4C  3001               	movlw	1
  8291  0B4D                     u180_25:	
  8292  0B4D  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
  8293  0B4E  3EFF               	addlw	-1
  8294  0B4F  1D03               	skipz
  8295  0B50  2B4D               	goto	u180_25
  8296  0B51  3572               	lslf	??i1_USBConfigureEndpoint+1,w
  8297  0B52  0771               	addwf	??i1_USBConfigureEndpoint,w
  8298  0B53  00F3               	movwf	??i1_USBConfigureEndpoint+2
  8299  0B54  3001               	movlw	1
  8300  0B55                     u181_25:	
  8301  0B55  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
  8302  0B56  3EFF               	addlw	-1
  8303  0B57  1D03               	skipz
  8304  0B58  2B55               	goto	u181_25
  8305  0B59  3573               	lslf	??i1_USBConfigureEndpoint+2,w
  8306  0B5A  00F4               	movwf	??i1_USBConfigureEndpoint+3
  8307  0B5B  0874               	movf	??i1_USBConfigureEndpoint+3,w
  8308  0B5C  07F6               	addwf	i1USBConfigureEndpoint@handle,f
  8309                           
  8310                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8311  0B5D  0876               	movf	i1USBConfigureEndpoint@handle,w
  8312  0B5E  0086               	movwf	6
  8313  0B5F  0187               	clrf	7
  8314  0B60  1381               	bcf	1,7
  8315                           
  8316                           ;usb_device.c: 1557: if(direction == 0)
  8317  0B61  0870               	movf	i1USBConfigureEndpoint@direction,w
  8318  0B62  1D03               	btfss	3,2
  8319  0B63  2B6E               	goto	i1l2525
  8320                           
  8321                           ;usb_device.c: 1558: {
  8322                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8323  0B64  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8324  0B65  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8325  0B66  0086               	movwf	6
  8326  0B67  3001               	movlw	1	; select bank3/4
  8327  0B68  0087               	movwf	7
  8328  0B69  0876               	movf	i1USBConfigureEndpoint@handle,w
  8329  0B6A  3FC0               	movwi [0]fsr1
  8330  0B6B  3000               	movlw	0
  8331  0B6C  3FC1               	movwi [1]fsr1
  8332                           
  8333                           ;usb_device.c: 1560: }
  8334  0B6D  2B77               	goto	i1l2527
  8335  0B6E                     i1l2525:	
  8336                           
  8337                           ;usb_device.c: 1561: else
  8338                           ;usb_device.c: 1562: {
  8339                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8340  0B6E  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8341  0B6F  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8342  0B70  0086               	movwf	6
  8343  0B71  3001               	movlw	1	; select bank3/4
  8344  0B72  0087               	movwf	7
  8345  0B73  0876               	movf	i1USBConfigureEndpoint@handle,w
  8346  0B74  3FC0               	movwi [0]fsr1
  8347  0B75  3000               	movlw	0
  8348  0B76  3FC1               	movwi [1]fsr1
  8349  0B77                     i1l2527:	
  8350                           
  8351                           ;usb_device.c: 1564: }
  8352                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8353  0B77  0876               	movf	i1USBConfigureEndpoint@handle,w
  8354  0B78  0086               	movwf	6
  8355  0B79  0187               	clrf	7
  8356  0B7A  1301               	bcf	1,6
  8357                           
  8358                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8359  0B7B  0876               	movf	i1USBConfigureEndpoint@handle,w
  8360  0B7C  3E04               	addlw	4
  8361  0B7D  0086               	movwf	6
  8362  0B7E  0187               	clrf	7
  8363  0B7F  1701               	bsf	1,6
  8364  0B80  0008               	return
  8365  0B81                     __end_ofi1_USBConfigureEndpoint:	
  8366                           
  8367                           	psect	text37
  8368  0D7A                     __ptext37:	
  8369 ;; *************** function _USBCheckCDCRequest *****************
  8370 ;; Defined at:
  8371 ;;		line 147 in file "../lib/usb/src/usb_device_cdc.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8389 ;;Total ram usage:        1 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _USBCheckCDCRequest
  8400  0D7A                     _USBCheckCDCRequest:	
  8401                           
  8402                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  8406  0D7A  0020               	movlb	0	; select bank0
  8407  0D7B  0850               	movf	80,w	;volatile
  8408  0D7C  391F               	andlw	31
  8409  0D7D  3A01               	xorlw	1
  8410  0D7E  1D03               	btfss	3,2
  8411  0D7F  0008               	return
  8412                           
  8413                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8414  0D80  0E50               	swapf	80,w	;volatile
  8415  0D81  0C89               	rrf	9,f
  8416  0D82  3903               	andlw	3
  8417  0D83  3A01               	xorlw	1
  8418  0D84  1D03               	btfss	3,2
  8419  0D85  0008               	return
  8420                           
  8421                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8422                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8423  0D86  0854               	movf	84,w	;volatile
  8424  0D87  1903               	btfsc	3,2
  8425  0D88  2DC6               	goto	i1l2615
  8426  0D89  0354               	decf	84,w	;volatile
  8427  0D8A  1D03               	btfss	3,2
  8428  0D8B  0008               	return
  8429  0D8C  2DC6               	goto	i1l2615
  8430  0D8D                     i1l2585:	
  8431                           ;usb_device_cdc.c: 167: {
  8432                           ;usb_device_cdc.c: 169: case 0x00:
  8433                           
  8434                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
  8435                           
  8436                           
  8437                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8438  0D8D  302A               	movlw	low _dummy_encapsulated_cmd_response
  8439  0D8E  0023               	movlb	3	; select bank3
  8440  0D8F  00B3               	movwf	_inPipes^(0+384)	;volatile
  8441  0D90  3002               	movlw	high _dummy_encapsulated_cmd_response
  8442  0D91  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8443                           
  8444                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8445  0D92  3000               	movlw	0
  8446  0D93  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8447  0D94  3008               	movlw	8
  8448  0D95  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8449                           
  8450                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8451  0D96  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  8452                           
  8453                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8454  0D97  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8455                           
  8456                           ;usb_device_cdc.c: 175: break;
  8457  0D98  0008               	return
  8458  0D99                     i1l2593:	
  8459                           ;usb_device_cdc.c: 176: case 0x01:
  8460                           
  8461                           
  8462                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8463  0D99  302A               	movlw	low _dummy_encapsulated_cmd_response
  8464  0D9A  0023               	movlb	3	; select bank3
  8465  0D9B  00B3               	movwf	_inPipes^(0+384)	;volatile
  8466  0D9C  3002               	movlw	high _dummy_encapsulated_cmd_response
  8467  0D9D  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8468                           
  8469                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8470  0D9E  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8471                           
  8472                           ;usb_device_cdc.c: 180: break;
  8473  0D9F  0008               	return
  8474  0DA0                     i1l2597:	
  8475                           ;usb_device_cdc.c: 184: case 0x20:
  8476                           
  8477                           
  8478                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8479  0DA0  0020               	movlb	0	; select bank0
  8480  0DA1  0857               	movf	87,w	;volatile
  8481  0DA2  0023               	movlb	3	; select bank3
  8482  0DA3  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  8483  0DA4  0020               	movlb	0	; select bank0
  8484  0DA5  0856               	movf	86,w	;volatile
  8485  0DA6  0023               	movlb	3	; select bank3
  8486  0DA7  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  8487                           
  8488                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8489  0DA8  30E0               	movlw	(low (_line_coding| (0+256)))& (0+255)
  8490  0DA9  00F0               	movwf	??_USBCheckCDCRequest
  8491  0DAA  0870               	movf	??_USBCheckCDCRequest,w
  8492  0DAB  00A0               	movwf	_outPipes^(0+384)	;volatile
  8493                           
  8494                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8495  0DAC  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  8496  0DAD  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  8497                           
  8498                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8499  0DAE  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  8500                           
  8501                           ;usb_device_cdc.c: 189: break;
  8502  0DAF  0008               	return
  8503  0DB0                     i1l2603:	
  8504                           ;usb_device_cdc.c: 191: case 0x21:
  8505                           
  8506                           
  8507                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8508  0DB0  30E0               	movlw	low _line_coding
  8509  0DB1  0023               	movlb	3	; select bank3
  8510  0DB2  00B3               	movwf	_inPipes^(0+384)	;volatile
  8511  0DB3  3001               	movlw	high _line_coding
  8512  0DB4  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  8513  0DB5  3000               	movlw	0
  8514  0DB6  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  8515  0DB7  3007               	movlw	7
  8516  0DB8  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  8517  0DB9  30C1               	movlw	193
  8518  0DBA  00F0               	movwf	??_USBCheckCDCRequest
  8519  0DBB  0870               	movf	??_USBCheckCDCRequest,w
  8520  0DBC  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  8521                           
  8522                           ;usb_device_cdc.c: 196: break;
  8523  0DBD  0008               	return
  8524  0DBE                     i1l2609:	
  8525                           ;usb_device_cdc.c: 198: case 0x22:
  8526                           
  8527                           
  8528                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8529  0DBE  0020               	movlb	0	; select bank0
  8530  0DBF  0852               	movf	82,w	;volatile
  8531  0DC0  00F0               	movwf	??_USBCheckCDCRequest
  8532  0DC1  0870               	movf	??_USBCheckCDCRequest,w
  8533  0DC2  0023               	movlb	3	; select bank3
  8534  0DC3  00CE               	movwf	_control_signal_bitmap^(0+384)
  8535                           
  8536                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8537  0DC4  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8538                           
  8539                           ;usb_device_cdc.c: 258: }
  8540                           
  8541                           ;usb_device_cdc.c: 257: break;
  8542                           
  8543                           ;usb_device_cdc.c: 256: default:
  8544                           
  8545                           ;usb_device_cdc.c: 232: break;
  8546  0DC5  0008               	return
  8547  0DC6                     i1l2615:	
  8548  0DC6  0020               	movlb	0	; select bank0
  8549  0DC7  0851               	movf	81,w	;volatile
  8550                           
  8551                           ; Switch size 1, requested type "space"
  8552                           ; Number of cases is 5, Range of values is 0 to 34
  8553                           ; switch strategies available:
  8554                           ; Name         Instructions Cycles
  8555                           ; simple_byte           16     9 (average)
  8556                           ; direct_byte           76     6 (fixed)
  8557                           ; jumptable            260     6 (fixed)
  8558                           ;	Chosen strategy is simple_byte
  8559  0DC8  3A00               	xorlw	0	; case 0
  8560  0DC9  1903               	skipnz
  8561  0DCA  2D8D               	goto	i1l2585
  8562  0DCB  3A01               	xorlw	1	; case 1
  8563  0DCC  1903               	skipnz
  8564  0DCD  2D99               	goto	i1l2593
  8565  0DCE  3A21               	xorlw	33	; case 32
  8566  0DCF  1903               	skipnz
  8567  0DD0  2DA0               	goto	i1l2597
  8568  0DD1  3A01               	xorlw	1	; case 33
  8569  0DD2  1903               	skipnz
  8570  0DD3  2DB0               	goto	i1l2603
  8571  0DD4  3A03               	xorlw	3	; case 34
  8572  0DD5  1903               	skipnz
  8573  0DD6  2DBE               	goto	i1l2609
  8574  0DD7  2DD8               	goto	i1l516
  8575  0DD8                     i1l516:	
  8576  0DD8  0008               	return
  8577  0DD9                     __end_of_USBCheckCDCRequest:	
  8578                           
  8579                           	psect	text38
  8580  0A93                     __ptext38:	
  8581 ;; *************** function _USBCtrlTrfOutHandler *****************
  8582 ;; Defined at:
  8583 ;;		line 2538 in file "../lib/usb/src/usb_device.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;Total ram usage:        2 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    2
  8604 ;; This function calls:
  8605 ;;		_USBCtrlTrfRxService
  8606 ;; This function is called by:
  8607 ;;		_USBCtrlEPService
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function _USBCtrlTrfOutHandler
  8613  0A93                     _USBCtrlTrfOutHandler:	
  8614                           
  8615                           ;usb_device.c: 2540: if(controlTransferState == 2)
  8616                           
  8617                           ;incstack = 0
  8618                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8619  0A93  3002               	movlw	2
  8620  0A94  0021               	movlb	1	; select bank1
  8621  0A95  0662               	xorwf	_controlTransferState^(0+128),w	;volatile
  8622  0A96  1D03               	btfss	3,2
  8623  0A97  2A9B               	goto	i1l3155
  8624                           
  8625                           ;usb_device.c: 2541: {
  8626                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  8627  0A98  3184  247F         	fcall	_USBCtrlTrfRxService
  8628                           
  8629                           ;usb_device.c: 2543: }
  8630  0A9A  0008               	return
  8631  0A9B                     i1l3155:	
  8632                           
  8633                           ;usb_device.c: 2544: else
  8634                           ;usb_device.c: 2545: {
  8635                           ;usb_device.c: 2548: controlTransferState = 0;
  8636  0A9B  0021               	movlb	1	; select bank1
  8637  0A9C  01E2               	clrf	_controlTransferState^(0+128)	;volatile
  8638                           
  8639                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  8640  0A9D  0023               	movlb	3	; select bank3
  8641  0A9E  085A               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  8642  0A9F  1D03               	btfss	3,2
  8643  0AA0  2AC7               	goto	i1l3167
  8644                           
  8645                           ;usb_device.c: 2556: {
  8646                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  8647  0AA1  0021               	movlb	1	; select bank1
  8648  0AA2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8649  0AA3  3E01               	addlw	1
  8650  0AA4  00F6               	movwf	??_USBCtrlTrfOutHandler
  8651  0AA5  3000               	movlw	0
  8652  0AA6  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8653  0AA7  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8654  0AA8  0876               	movf	??_USBCtrlTrfOutHandler,w
  8655  0AA9  0086               	movwf	6
  8656  0AAA  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8657  0AAB  0087               	movwf	7
  8658  0AAC  3008               	movlw	8
  8659  0AAD  0081               	movwf	1
  8660                           
  8661                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8662  0AAE  3050               	movlw	80
  8663  0AAF  00F6               	movwf	??_USBCtrlTrfOutHandler
  8664  0AB0  3000               	movlw	0
  8665  0AB1  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8666  0AB2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8667  0AB3  0086               	movwf	6
  8668  0AB4  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8669  0AB5  0087               	movwf	7
  8670  0AB6  3142               	addfsr 1,2
  8671  0AB7  0876               	movf	??_USBCtrlTrfOutHandler,w
  8672  0AB8  3FC0               	movwi [0]fsr1
  8673  0AB9  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8674  0ABA  3FC1               	movwi [1]fsr1
  8675                           
  8676                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8677  0ABB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8678  0ABC  0086               	movwf	6
  8679  0ABD  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8680  0ABE  0087               	movwf	7
  8681  0ABF  300C               	movlw	12
  8682  0AC0  0081               	movwf	1
  8683                           
  8684                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8685  0AC1  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8686  0AC2  0086               	movwf	6
  8687  0AC3  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8688  0AC4  0087               	movwf	7
  8689  0AC5  1781               	bsf	1,7
  8690                           
  8691                           ;usb_device.c: 2561: }
  8692  0AC6  0008               	return
  8693  0AC7                     i1l3167:	
  8694                           
  8695                           ;usb_device.c: 2562: else
  8696                           ;usb_device.c: 2563: {
  8697                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  8698  0AC7  0023               	movlb	3	; select bank3
  8699  0AC8  01DA               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8700  0AC9  0008               	return
  8701  0ACA                     __end_of_USBCtrlTrfOutHandler:	
  8702                           
  8703                           	psect	text39
  8704  047F                     __ptext39:	
  8705 ;; *************** function _USBCtrlTrfRxService *****************
  8706 ;; Defined at:
  8707 ;;		line 1852 in file "../lib/usb/src/usb_device.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;		None
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  byteToRead      1    5[COMMON] unsigned char 
  8712 ;;  i               1    4[COMMON] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;Total ram usage:        4 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    1
  8729 ;; This function calls:
  8730 ;;		_USBCtrlEPAllowStatusStage
  8731 ;; This function is called by:
  8732 ;;		_USBCtrlTrfOutHandler
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           
  8737                           ;psect for function _USBCtrlTrfRxService
  8738  047F                     _USBCtrlTrfRxService:	
  8739                           
  8740                           ;usb_device.c: 1854: uint8_t byteToRead;
  8741                           ;usb_device.c: 1855: uint8_t i;
  8742                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8743                           
  8744                           ;incstack = 0
  8745                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8746  047F  0021               	movlb	1	; select bank1
  8747  0480  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8748  0481  0086               	movwf	6
  8749  0482  0187               	clrf	7
  8750  0483  3F41               	moviw [1]fsr1
  8751  0484  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8752                           
  8753                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8754  0485  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8755  0486  00F2               	movwf	??_USBCtrlTrfRxService
  8756  0487  01F3               	clrf	??_USBCtrlTrfRxService+1
  8757  0488  0873               	movf	??_USBCtrlTrfRxService+1,w
  8758  0489  0023               	movlb	3	; select bank3
  8759  048A  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8760  048B  1D03               	skipz
  8761  048C  2C8F               	goto	u243_25
  8762  048D  0872               	movf	??_USBCtrlTrfRxService,w
  8763  048E  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  8764  048F                     u243_25:	
  8765  048F  1803               	skipnc
  8766  0490  2C95               	goto	i1l323
  8767                           
  8768                           ;usb_device.c: 1866: {
  8769                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8770  0491  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8771  0492  00F2               	movwf	??_USBCtrlTrfRxService
  8772  0493  0872               	movf	??_USBCtrlTrfRxService,w
  8773  0494  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8774  0495                     i1l323:	
  8775                           
  8776                           ;usb_device.c: 1868: }
  8777                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8778  0495  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8779  0496  00F2               	movwf	??_USBCtrlTrfRxService
  8780  0497  01F3               	clrf	??_USBCtrlTrfRxService+1
  8781  0498  0872               	movf	??_USBCtrlTrfRxService,w
  8782  0499  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  8783  049A  0873               	movf	??_USBCtrlTrfRxService+1,w
  8784  049B  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  8785                           
  8786                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8787  049C  01F4               	clrf	USBCtrlTrfRxService@i
  8788  049D                     i1l3039:	
  8789  049D  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8790  049E  0274               	subwf	USBCtrlTrfRxService@i,w
  8791  049F  1803               	btfsc	3,0
  8792  04A0  2CB6               	goto	i1l3041
  8793                           
  8794                           ;usb_device.c: 1875: {
  8795                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8796  04A1  0874               	movf	USBCtrlTrfRxService@i,w
  8797  04A2  3E58               	addlw	88
  8798  04A3  0086               	movwf	6
  8799  04A4  0187               	clrf	7
  8800  04A5  0801               	movf	1,w
  8801  04A6  00F2               	movwf	??_USBCtrlTrfRxService
  8802  04A7  0820               	movf	_outPipes^(0+384),w	;volatile
  8803  04A8  0086               	movwf	6
  8804  04A9  3001               	movlw	1	; select bank2/3
  8805  04AA  0087               	movwf	7
  8806  04AB  0872               	movf	??_USBCtrlTrfRxService,w
  8807  04AC  0081               	movwf	1
  8808  04AD  3001               	movlw	1
  8809  04AE  00F2               	movwf	??_USBCtrlTrfRxService
  8810  04AF  0872               	movf	??_USBCtrlTrfRxService,w
  8811  04B0  07A0               	addwf	_outPipes^(0+384),f	;volatile
  8812  04B1  3001               	movlw	1
  8813  04B2  00F2               	movwf	??_USBCtrlTrfRxService
  8814  04B3  0872               	movf	??_USBCtrlTrfRxService,w
  8815  04B4  07F4               	addwf	USBCtrlTrfRxService@i,f
  8816  04B5  2C9D               	goto	i1l3039
  8817  04B6                     i1l3041:	
  8818                           
  8819                           ;usb_device.c: 1877: }
  8820                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8821  04B6  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  8822  04B7  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8823  04B8  1903               	btfsc	3,2
  8824  04B9  2CF1               	goto	i1l3053
  8825                           
  8826                           ;usb_device.c: 1882: {
  8827                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  8828  04BA  0021               	movlb	1	; select bank1
  8829  04BB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8830  04BC  3E01               	addlw	1
  8831  04BD  00F2               	movwf	??_USBCtrlTrfRxService
  8832  04BE  3000               	movlw	0
  8833  04BF  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8834  04C0  00F3               	movwf	??_USBCtrlTrfRxService+1
  8835  04C1  0872               	movf	??_USBCtrlTrfRxService,w
  8836  04C2  0086               	movwf	6
  8837  04C3  0873               	movf	??_USBCtrlTrfRxService+1,w
  8838  04C4  0087               	movwf	7
  8839  04C5  3008               	movlw	8
  8840  04C6  0081               	movwf	1
  8841                           
  8842                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8843  04C7  3058               	movlw	88
  8844  04C8  00F2               	movwf	??_USBCtrlTrfRxService
  8845  04C9  3000               	movlw	0
  8846  04CA  00F3               	movwf	??_USBCtrlTrfRxService+1
  8847  04CB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8848  04CC  0086               	movwf	6
  8849  04CD  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8850  04CE  0087               	movwf	7
  8851  04CF  3142               	addfsr 1,2
  8852  04D0  0872               	movf	??_USBCtrlTrfRxService,w
  8853  04D1  3FC0               	movwi [0]fsr1
  8854  04D2  0873               	movf	??_USBCtrlTrfRxService+1,w
  8855  04D3  3FC1               	movwi [1]fsr1
  8856                           
  8857                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8858  04D4  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8859  04D5  0086               	movwf	6
  8860  04D6  0187               	clrf	7
  8861  04D7  1B01               	btfsc	1,6
  8862  04D8  2CE5               	goto	i1l3051
  8863                           
  8864                           ;usb_device.c: 1886: {
  8865                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8866  04D9  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8867  04DA  0086               	movwf	6
  8868  04DB  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8869  04DC  0087               	movwf	7
  8870  04DD  3048               	movlw	72
  8871  04DE  0081               	movwf	1
  8872                           
  8873                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8874  04DF  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8875  04E0  0086               	movwf	6
  8876  04E1  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8877  04E2  0087               	movwf	7
  8878  04E3  1781               	bsf	1,7
  8879                           
  8880                           ;usb_device.c: 1889: }
  8881  04E4  0008               	return
  8882  04E5                     i1l3051:	
  8883                           
  8884                           ;usb_device.c: 1890: else
  8885                           ;usb_device.c: 1891: {
  8886                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8887  04E5  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8888  04E6  0086               	movwf	6
  8889  04E7  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8890  04E8  0087               	movwf	7
  8891  04E9  3008               	movlw	8
  8892  04EA  0081               	movwf	1
  8893                           
  8894                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8895  04EB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8896  04EC  0086               	movwf	6
  8897  04ED  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8898  04EE  0087               	movwf	7
  8899  04EF  1781               	bsf	1,7
  8900                           
  8901                           ;usb_device.c: 1894: }
  8902                           ;usb_device.c: 1895: }
  8903  04F0  0008               	return
  8904  04F1                     i1l3053:	
  8905                           
  8906                           ;usb_device.c: 1896: else
  8907                           ;usb_device.c: 1897: {
  8908                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8909  04F1  0021               	movlb	1	; select bank1
  8910  04F2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8911  04F3  3E01               	addlw	1
  8912  04F4  00F2               	movwf	??_USBCtrlTrfRxService
  8913  04F5  3000               	movlw	0
  8914  04F6  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8915  04F7  00F3               	movwf	??_USBCtrlTrfRxService+1
  8916  04F8  0872               	movf	??_USBCtrlTrfRxService,w
  8917  04F9  0086               	movwf	6
  8918  04FA  0873               	movf	??_USBCtrlTrfRxService+1,w
  8919  04FB  0087               	movwf	7
  8920  04FC  3008               	movlw	8
  8921  04FD  0081               	movwf	1
  8922                           
  8923                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8924  04FE  3050               	movlw	80
  8925  04FF  00F2               	movwf	??_USBCtrlTrfRxService
  8926  0500  3000               	movlw	0
  8927  0501  00F3               	movwf	??_USBCtrlTrfRxService+1
  8928  0502  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8929  0503  0086               	movwf	6
  8930  0504  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8931  0505  0087               	movwf	7
  8932  0506  3142               	addfsr 1,2
  8933  0507  0872               	movf	??_USBCtrlTrfRxService,w
  8934  0508  3FC0               	movwi [0]fsr1
  8935  0509  0873               	movf	??_USBCtrlTrfRxService+1,w
  8936  050A  3FC1               	movwi [1]fsr1
  8937                           
  8938                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8939  050B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8940  050C  0086               	movwf	6
  8941  050D  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8942  050E  0087               	movwf	7
  8943  050F  3004               	movlw	4
  8944  0510  0081               	movwf	1
  8945                           
  8946                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8947  0511  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8948  0512  0086               	movwf	6
  8949  0513  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8950  0514  0087               	movwf	7
  8951  0515  1781               	bsf	1,7
  8952                           
  8953                           ;usb_device.c: 1915: {
  8954                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8955  0516  0023               	movlb	3	; select bank3
  8956  0517  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8957  0518  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8958                           
  8959                           ;usb_device.c: 1926: }
  8960                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8961  0519  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8962                           
  8963                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8964  051A  0858               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  8965  051B  1D03               	btfss	3,2
  8966  051C  0008               	return
  8967                           
  8968                           ;usb_device.c: 1942: {
  8969                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8970  051D  318F  270F         	fcall	_USBCtrlEPAllowStatusStage
  8971  051F  0008               	return
  8972  0520                     __end_of_USBCtrlTrfRxService:	
  8973                           
  8974                           	psect	text40
  8975  0F0F                     __ptext40:	
  8976 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8977 ;; Defined at:
  8978 ;;		line 1416 in file "../lib/usb/src/usb_device.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;		None
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;		None
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  1    wreg      void 
  8985 ;; Registers used:
  8986 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;Total ram usage:        2 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; This function calls:
  8999 ;;		Nothing
  9000 ;; This function is called by:
  9001 ;;		_USBDeviceTasks
  9002 ;;		_USBCtrlEPServiceComplete
  9003 ;;		_USBCtrlTrfRxService
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           
  9008                           ;psect for function _USBCtrlEPAllowStatusStage
  9009  0F0F                     _USBCtrlEPAllowStatusStage:	
  9010                           
  9011                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  9015  0F0F  0023               	movlb	3	; select bank3
  9016  0F10  0857               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  9017  0F11  1D03               	btfss	3,2
  9018  0F12  0008               	return
  9019                           
  9020                           ;usb_device.c: 1424: {
  9021                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9022  0F13  3001               	movlw	1
  9023  0F14  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9024  0F15  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9025  0F16  00D7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9026                           
  9027                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9028  0F17  0856               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  9029  0F18  1D03               	btfss	3,2
  9030  0F19  0008               	return
  9031                           
  9032                           ;usb_device.c: 1427: {
  9033                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9034  0F1A  3001               	movlw	1
  9035  0F1B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9036  0F1C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9037  0F1D  00D6               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9038                           
  9039                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9040  0F1E  3002               	movlw	2
  9041  0F1F  0021               	movlb	1	; select bank1
  9042  0F20  0662               	xorwf	_controlTransferState^(0+128),w	;volatile
  9043  0F21  1D03               	btfss	3,2
  9044  0F22  2F36               	goto	i1l2729
  9045                           
  9046                           ;usb_device.c: 1433: {
  9047                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9048  0F23  0023               	movlb	3	; select bank3
  9049  0F24  0827               	movf	_pBDTEntryIn^(0+384),w
  9050  0F25  0086               	movwf	6
  9051  0F26  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9052  0F27  0087               	movwf	7
  9053  0F28  3141               	addfsr 1,1
  9054  0F29  0181               	clrf	1
  9055                           
  9056                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9057  0F2A  0827               	movf	_pBDTEntryIn^(0+384),w
  9058  0F2B  0086               	movwf	6
  9059  0F2C  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9060  0F2D  0087               	movwf	7
  9061  0F2E  3048               	movlw	72
  9062  0F2F  0081               	movwf	1
  9063                           
  9064                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9065  0F30  0827               	movf	_pBDTEntryIn^(0+384),w
  9066  0F31  0086               	movwf	6
  9067  0F32  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9068  0F33  0087               	movwf	7
  9069  0F34  1781               	bsf	1,7
  9070                           
  9071                           ;usb_device.c: 1437: }
  9072  0F35  0008               	return
  9073  0F36                     i1l2729:	
  9074                           
  9075                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9076  0F36  0021               	movlb	1	; select bank1
  9077  0F37  0362               	decf	_controlTransferState^(0+128),w	;volatile
  9078  0F38  1D03               	btfss	3,2
  9079  0F39  0008               	return
  9080                           
  9081                           ;usb_device.c: 1439: {
  9082                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9083  0F3A  0023               	movlb	3	; select bank3
  9084  0F3B  01DA               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9085                           
  9086                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9087  0F3C  3008               	movlw	8
  9088  0F3D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9089  0F3E  0021               	movlb	1	; select bank1
  9090  0F3F  0A63               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  9091  0F40  0086               	movwf	6
  9092  0F41  0187               	clrf	7
  9093  0F42  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9094  0F43  0081               	movwf	1
  9095                           
  9096                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9097  0F44  3050               	movlw	80
  9098  0F45  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9099  0F46  3000               	movlw	0
  9100  0F47  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9101  0F48  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9102  0F49  3E02               	addlw	2
  9103  0F4A  0086               	movwf	6
  9104  0F4B  0187               	clrf	7
  9105  0F4C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9106  0F4D  3FC0               	movwi [0]fsr1
  9107  0F4E  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9108  0F4F  3FC1               	movwi [1]fsr1
  9109                           
  9110                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9111  0F50  3004               	movlw	4
  9112  0F51  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9113  0F52  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9114  0F53  0086               	movwf	6
  9115  0F54  0187               	clrf	7
  9116  0F55  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9117  0F56  0081               	movwf	1
  9118                           
  9119                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9120  0F57  0863               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9121  0F58  0086               	movwf	6
  9122  0F59  0187               	clrf	7
  9123  0F5A  1781               	bsf	1,7
  9124                           
  9125                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9126  0F5B  3001               	movlw	1
  9127  0F5C  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9128  0F5D  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9129  0F5E  0023               	movlb	3	; select bank3
  9130  0F5F  00DA               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9131                           
  9132                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9133  0F60  0021               	movlb	1	; select bank1
  9134  0F61  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9135  0F62  3E01               	addlw	1
  9136  0F63  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9137  0F64  3000               	movlw	0
  9138  0F65  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9139  0F66  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9140  0F67  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9141  0F68  0086               	movwf	6
  9142  0F69  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9143  0F6A  0087               	movwf	7
  9144  0F6B  3008               	movlw	8
  9145  0F6C  0081               	movwf	1
  9146                           
  9147                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9148  0F6D  3050               	movlw	80
  9149  0F6E  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9150  0F6F  3000               	movlw	0
  9151  0F70  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9152  0F71  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9153  0F72  0086               	movwf	6
  9154  0F73  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9155  0F74  0087               	movwf	7
  9156  0F75  3142               	addfsr 1,2
  9157  0F76  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9158  0F77  3FC0               	movwi [0]fsr1
  9159  0F78  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9160  0F79  3FC1               	movwi [1]fsr1
  9161                           
  9162                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9163  0F7A  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9164  0F7B  0086               	movwf	6
  9165  0F7C  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9166  0F7D  0087               	movwf	7
  9167  0F7E  3080               	movlw	128
  9168  0F7F  0081               	movwf	1
  9169  0F80  0008               	return
  9170  0F81                     __end_of_USBCtrlEPAllowStatusStage:	
  9171                           
  9172                           	psect	text41
  9173  0EA3                     __ptext41:	
  9174 ;; *************** function _USBCtrlTrfInHandler *****************
  9175 ;; Defined at:
  9176 ;;		line 2592 in file "../lib/usb/src/usb_device.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;		None
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  lastDTS         1    5[COMMON] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;Total ram usage:        3 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    1
  9197 ;; This function calls:
  9198 ;;		_USBCtrlTrfTxService
  9199 ;; This function is called by:
  9200 ;;		_USBCtrlEPService
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function _USBCtrlTrfInHandler
  9206  0EA3                     _USBCtrlTrfInHandler:	
  9207                           
  9208                           ;usb_device.c: 2594: uint8_t lastDTS;
  9209                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9210                           
  9211                           ;incstack = 0
  9212                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9213  0EA3  0023               	movlb	3	; select bank3
  9214  0EA4  0827               	movf	_pBDTEntryIn^(0+384),w
  9215  0EA5  0086               	movwf	6
  9216  0EA6  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9217  0EA7  0087               	movwf	7
  9218  0EA8  3000               	movlw	0
  9219  0EA9  1B01               	btfsc	1,6
  9220  0EAA  3001               	movlw	1
  9221  0EAB  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9222                           
  9223                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9224  0EAC  3004               	movlw	4
  9225  0EAD  0627               	xorwf	_pBDTEntryIn^(0+384),w
  9226  0EAE  00A7               	movwf	_pBDTEntryIn^(0+384)
  9227  0EAF  3000               	movlw	0
  9228  0EB0  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  9229  0EB1  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  9230                           
  9231                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9232  0EB2  3008               	movlw	8
  9233  0EB3  0021               	movlb	1	; select bank1
  9234  0EB4  0664               	xorwf	_USBDeviceState^(0+128),w	;volatile
  9235  0EB5  1D03               	btfss	3,2
  9236  0EB6  2EC6               	goto	i1l3183
  9237                           
  9238                           ;usb_device.c: 2605: {
  9239                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9240  0EB7  0020               	movlb	0	; select bank0
  9241  0EB8  0852               	movf	82,w	;volatile
  9242  0EB9  397F               	andlw	127
  9243  0EBA  003D               	movlb	29	; select bank29
  9244  0EBB  0096               	movwf	22	;volatile
  9245                           
  9246                           ;usb_device.c: 2607: if(UADDR != 0u)
  9247  0EBC  0816               	movf	22,w	;volatile
  9248  0EBD  1903               	btfsc	3,2
  9249  0EBE  2EC1               	goto	i1l3181
  9250                           
  9251                           ;usb_device.c: 2608: {
  9252                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9253  0EBF  3010               	movlw	16
  9254  0EC0  2EC2               	goto	L11
  9255  0EC1                     i1l3181:	
  9256                           ;usb_device.c: 2610: }
  9257                           
  9258                           
  9259                           ;usb_device.c: 2611: else
  9260                           ;usb_device.c: 2612: {
  9261                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9262  0EC1  3004               	movlw	4
  9263  0EC2                     L11:	
  9264  0EC2  00F3               	movwf	??_USBCtrlTrfInHandler
  9265  0EC3  0873               	movf	??_USBCtrlTrfInHandler,w
  9266  0EC4  0021               	movlb	1	; select bank1
  9267  0EC5  00E4               	movwf	_USBDeviceState^(0+128)	;volatile
  9268  0EC6                     i1l3183:	
  9269                           
  9270                           ;usb_device.c: 2614: }
  9271                           ;usb_device.c: 2615: }
  9272                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9273  0EC6  0362               	decf	_controlTransferState^(0+128),w	;volatile
  9274  0EC7  1D03               	btfss	3,2
  9275  0EC8  2F06               	goto	i1l408
  9276                           
  9277                           ;usb_device.c: 2619: {
  9278                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9279  0EC9  3058               	movlw	88
  9280  0ECA  00F3               	movwf	??_USBCtrlTrfInHandler
  9281  0ECB  3000               	movlw	0
  9282  0ECC  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9283  0ECD  0023               	movlb	3	; select bank3
  9284  0ECE  0827               	movf	_pBDTEntryIn^(0+384),w
  9285  0ECF  0086               	movwf	6
  9286  0ED0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9287  0ED1  0087               	movwf	7
  9288  0ED2  3142               	addfsr 1,2
  9289  0ED3  0873               	movf	??_USBCtrlTrfInHandler,w
  9290  0ED4  3FC0               	movwi [0]fsr1
  9291  0ED5  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9292  0ED6  3FC1               	movwi [1]fsr1
  9293                           
  9294                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9295  0ED7  318E  263B  318E   	fcall	_USBCtrlTrfTxService
  9296                           
  9297                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9298  0EDA  3002               	movlw	2
  9299  0EDB  0023               	movlb	3	; select bank3
  9300  0EDC  065F               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  9301  0EDD  1D03               	btfss	3,2
  9302  0EDE  2EEB               	goto	i1l3193
  9303                           
  9304                           ;usb_device.c: 2628: {
  9305                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9306  0EDF  0827               	movf	_pBDTEntryIn^(0+384),w
  9307  0EE0  0086               	movwf	6
  9308  0EE1  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9309  0EE2  0087               	movwf	7
  9310  0EE3  3004               	movlw	4
  9311  0EE4  0081               	movwf	1
  9312                           
  9313                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9314  0EE5  0827               	movf	_pBDTEntryIn^(0+384),w
  9315  0EE6  0086               	movwf	6
  9316  0EE7  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9317  0EE8  0087               	movwf	7
  9318  0EE9  1781               	bsf	1,7
  9319                           
  9320                           ;usb_device.c: 2633: }
  9321  0EEA  0008               	return
  9322  0EEB                     i1l3193:	
  9323                           
  9324                           ;usb_device.c: 2634: else
  9325                           ;usb_device.c: 2635: {
  9326                           ;usb_device.c: 2636: if(lastDTS == 0)
  9327  0EEB  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9328  0EEC  1D03               	btfss	3,2
  9329  0EED  2EFA               	goto	i1l3197
  9330                           
  9331                           ;usb_device.c: 2637: {
  9332                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9333  0EEE  0827               	movf	_pBDTEntryIn^(0+384),w
  9334  0EEF  0086               	movwf	6
  9335  0EF0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9336  0EF1  0087               	movwf	7
  9337  0EF2  3048               	movlw	72
  9338  0EF3  0081               	movwf	1
  9339                           
  9340                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9341  0EF4  0827               	movf	_pBDTEntryIn^(0+384),w
  9342  0EF5  0086               	movwf	6
  9343  0EF6  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9344  0EF7  0087               	movwf	7
  9345  0EF8  1781               	bsf	1,7
  9346                           
  9347                           ;usb_device.c: 2640: }
  9348  0EF9  0008               	return
  9349  0EFA                     i1l3197:	
  9350                           
  9351                           ;usb_device.c: 2641: else
  9352                           ;usb_device.c: 2642: {
  9353                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9354  0EFA  0827               	movf	_pBDTEntryIn^(0+384),w
  9355  0EFB  0086               	movwf	6
  9356  0EFC  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9357  0EFD  0087               	movwf	7
  9358  0EFE  3008               	movlw	8
  9359  0EFF  0081               	movwf	1
  9360                           
  9361                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9362  0F00  0827               	movf	_pBDTEntryIn^(0+384),w
  9363  0F01  0086               	movwf	6
  9364  0F02  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9365  0F03  0087               	movwf	7
  9366  0F04  1781               	bsf	1,7
  9367                           
  9368                           ;usb_device.c: 2645: }
  9369                           ;usb_device.c: 2646: }
  9370                           ;usb_device.c: 2647: }
  9371  0F05  0008               	return
  9372  0F06                     i1l408:	
  9373                           
  9374                           ;usb_device.c: 2648: else
  9375                           ;usb_device.c: 2649: {
  9376                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  9377  0F06  0023               	movlb	3	; select bank3
  9378  0F07  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  9379  0F08  2F0C               	goto	i1l3201
  9380                           
  9381                           ;usb_device.c: 2656: {
  9382                           ;usb_device.c: 2657: outPipes[0].pFunc();
  9383  0F09  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9384  0F0A  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9385                           
  9386                           ;usb_device.c: 2658: }
  9387                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  9388  0F0B  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9389  0F0C                     i1l3201:	
  9390                           
  9391                           ;usb_device.c: 2660: }
  9392                           ;usb_device.c: 2662: controlTransferState = 0;
  9393  0F0C  0021               	movlb	1	; select bank1
  9394  0F0D  01E2               	clrf	_controlTransferState^(0+128)	;volatile
  9395  0F0E  0008               	return
  9396  0F0F                     __end_of_USBCtrlTrfInHandler:	
  9397                           
  9398                           	psect	text42
  9399  0E3B                     __ptext42:	
  9400 ;; *************** function _USBCtrlTrfTxService *****************
  9401 ;; Defined at:
  9402 ;;		line 1771 in file "../lib/usb/src/usb_device.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  byteToSend      1    2[COMMON] unsigned char 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;Total ram usage:        3 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_USBCtrlEPAllowDataStage
  9426 ;;		_USBCtrlTrfInHandler
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _USBCtrlTrfTxService
  9432  0E3B                     _USBCtrlTrfTxService:	
  9433                           
  9434                           ;usb_device.c: 1773: uint8_t byteToSend;
  9435                           ;usb_device.c: 1777: byteToSend = 8;
  9436                           
  9437                           ;incstack = 0
  9438                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9439  0E3B  3008               	movlw	8
  9440  0E3C  00F0               	movwf	??_USBCtrlTrfTxService
  9441  0E3D  0870               	movf	??_USBCtrlTrfTxService,w
  9442  0E3E  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9443                           
  9444                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  9445  0E3F  3000               	movlw	0
  9446  0E40  0023               	movlb	3	; select bank3
  9447  0E41  0237               	subwf	((_inPipes+1)^(0+384)+3),w	;volatile
  9448  0E42  3008               	movlw	8
  9449  0E43  1903               	skipnz
  9450  0E44  0236               	subwf	(_inPipes^(0+384)+3),w	;volatile
  9451  0E45  1803               	skipnc
  9452  0E46  2E57               	goto	i1l308
  9453                           
  9454                           ;usb_device.c: 1779: {
  9455                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  9456  0E47  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  9457  0E48  00F0               	movwf	??_USBCtrlTrfTxService
  9458  0E49  0870               	movf	??_USBCtrlTrfTxService,w
  9459  0E4A  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9460                           
  9461                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  9462  0E4B  085F               	movf	_shortPacketStatus^(0+384),w	;volatile
  9463  0E4C  1D03               	btfss	3,2
  9464  0E4D  2E50               	goto	i1l2673
  9465                           
  9466                           ;usb_device.c: 1788: {
  9467                           ;usb_device.c: 1789: shortPacketStatus = 1;
  9468  0E4E  3001               	movlw	1
  9469  0E4F  2E54               	goto	L12
  9470  0E50                     i1l2673:	
  9471                           ;usb_device.c: 1790: }
  9472                           
  9473                           
  9474                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  9475  0E50  035F               	decf	_shortPacketStatus^(0+384),w	;volatile
  9476  0E51  1D03               	btfss	3,2
  9477  0E52  2E57               	goto	i1l308
  9478                           
  9479                           ;usb_device.c: 1792: {
  9480                           ;usb_device.c: 1793: shortPacketStatus = 2;
  9481  0E53  3002               	movlw	2
  9482  0E54                     L12:	
  9483  0E54  00F0               	movwf	??_USBCtrlTrfTxService
  9484  0E55  0870               	movf	??_USBCtrlTrfTxService,w
  9485  0E56  00DF               	movwf	_shortPacketStatus^(0+384)	;volatile
  9486  0E57                     i1l308:	
  9487                           
  9488                           ;usb_device.c: 1794: }
  9489                           ;usb_device.c: 1795: }
  9490                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  9491  0E57  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9492  0E58  00F0               	movwf	??_USBCtrlTrfTxService
  9493  0E59  01F1               	clrf	??_USBCtrlTrfTxService+1
  9494  0E5A  0870               	movf	??_USBCtrlTrfTxService,w
  9495  0E5B  02B6               	subwf	(_inPipes^(0+384)+3),f	;volatile
  9496  0E5C  0871               	movf	??_USBCtrlTrfTxService+1,w
  9497  0E5D  3BB7               	subwfb	((_inPipes+1)^(0+384)+3),f	;volatile
  9498                           
  9499                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  9500  0E5E  0827               	movf	_pBDTEntryIn^(0+384),w
  9501  0E5F  3E01               	addlw	1
  9502  0E60  00F0               	movwf	??_USBCtrlTrfTxService
  9503  0E61  3000               	movlw	0
  9504  0E62  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  9505  0E63  00F1               	movwf	??_USBCtrlTrfTxService+1
  9506  0E64  0870               	movf	??_USBCtrlTrfTxService,w
  9507  0E65  0086               	movwf	6
  9508  0E66  0871               	movf	??_USBCtrlTrfTxService+1,w
  9509  0E67  0087               	movwf	7
  9510  0E68  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9511  0E69  0081               	movwf	1
  9512                           
  9513                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  9514  0E6A  3058               	movlw	88
  9515  0E6B  00F0               	movwf	??_USBCtrlTrfTxService
  9516  0E6C  0870               	movf	??_USBCtrlTrfTxService,w
  9517  0E6D  00DE               	movwf	_pDst^(0+384)
  9518                           
  9519                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9520  0E6E  1C35               	btfss	(_inPipes^(0+384)+2),0	;volatile
  9521  0E6F  2E86               	goto	i1l2693
  9522  0E70  2E9F               	goto	i1l2703
  9523  0E71                     i1l2685:	
  9524                           ;usb_device.c: 1810: {
  9525                           ;usb_device.c: 1811: while(byteToSend)
  9526                           
  9527                           
  9528                           ;usb_device.c: 1812: {
  9529                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  9530  0E71  0833               	movf	_inPipes^(0+384),w	;volatile
  9531  0E72  0084               	movwf	4
  9532  0E73  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9533  0E74  0085               	movwf	5
  9534  0E75  0800               	movf	0,w	;code access
  9535  0E76  00F0               	movwf	??_USBCtrlTrfTxService
  9536  0E77  085E               	movf	_pDst^(0+384),w
  9537  0E78  0086               	movwf	6
  9538  0E79  0187               	clrf	7
  9539  0E7A  0870               	movf	??_USBCtrlTrfTxService,w
  9540  0E7B  0081               	movwf	1
  9541  0E7C  3001               	movlw	1
  9542  0E7D  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9543  0E7E  3000               	movlw	0
  9544  0E7F  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9545  0E80  3001               	movlw	1
  9546  0E81  00F0               	movwf	??_USBCtrlTrfTxService
  9547  0E82  0870               	movf	??_USBCtrlTrfTxService,w
  9548  0E83  07DE               	addwf	_pDst^(0+384),f
  9549                           
  9550                           ;usb_device.c: 1814: byteToSend--;
  9551  0E84  3001               	movlw	1
  9552  0E85  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9553  0E86                     i1l2693:	
  9554  0E86  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9555  0E87  1903               	btfsc	3,2
  9556  0E88  0008               	return
  9557  0E89  2E71               	goto	i1l2685
  9558  0E8A                     i1l2695:	
  9559                           ;usb_device.c: 1817: else
  9560                           ;usb_device.c: 1818: {
  9561                           ;usb_device.c: 1819: while(byteToSend)
  9562                           
  9563                           ;usb_device.c: 1815: }
  9564                           ;usb_device.c: 1816: }
  9565                           
  9566                           
  9567                           ;usb_device.c: 1820: {
  9568                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  9569  0E8A  0833               	movf	_inPipes^(0+384),w	;volatile
  9570  0E8B  0084               	movwf	4
  9571  0E8C  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  9572  0E8D  0085               	movwf	5
  9573  0E8E  0800               	movf	0,w	;code access
  9574  0E8F  00F0               	movwf	??_USBCtrlTrfTxService
  9575  0E90  085E               	movf	_pDst^(0+384),w
  9576  0E91  0086               	movwf	6
  9577  0E92  0187               	clrf	7
  9578  0E93  0870               	movf	??_USBCtrlTrfTxService,w
  9579  0E94  0081               	movwf	1
  9580  0E95  3001               	movlw	1
  9581  0E96  07B3               	addwf	_inPipes^(0+384),f	;volatile
  9582  0E97  3000               	movlw	0
  9583  0E98  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
  9584  0E99  3001               	movlw	1
  9585  0E9A  00F0               	movwf	??_USBCtrlTrfTxService
  9586  0E9B  0870               	movf	??_USBCtrlTrfTxService,w
  9587  0E9C  07DE               	addwf	_pDst^(0+384),f
  9588                           
  9589                           ;usb_device.c: 1822: byteToSend--;
  9590  0E9D  3001               	movlw	1
  9591  0E9E  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9592  0E9F                     i1l2703:	
  9593  0E9F  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9594  0EA0  1903               	btfsc	3,2
  9595  0EA1  0008               	return
  9596  0EA2  2E8A               	goto	i1l2695
  9597  0EA3                     __end_of_USBCtrlTrfTxService:	
  9598  007E                     btemp	set	126	;btemp
  9599  007E                     int$flags	set	126
  9600  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         226
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      6      12
    BANK2            16     15      15
    BANK3            80      5      79
    BANK4            80      0      18
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0[8]), RAM(DATA[4096]), SetupPkt(BANK0[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1846_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1846_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1846_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1846_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S313$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S303$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S303$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S279$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S279$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S279$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S279$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    8405
                                              0 BANK3      5     5      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                          _CDCInitEP
                       _CDCTxService
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (1) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _getsUSBUSART                                         4     3      1    2332
                                             11 BANK2      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             11 BANK2      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _CDCInitEP                                            1     1      0    3045
                                             13 BANK2      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    2093
                                              0 BANK2     11     7      4
 ---------------------------------------------------------------------------------
 (2) _USBEnableEndpoint                                    6     5      1     952
                                              7 BANK2      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBConfigureEndpoint                                 7     6      1     524
                                              0 BANK2      7     6      1
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   27385
                                              5 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   27385
                                             15 BANK0      1     1      0
                                              3 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   16120
                                              0 BANK1      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   15891
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12150
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4335
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     526
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4120
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3649
                                              0 BANK0      6     0      6
                 _USBCheckCDCRequest
                        i1_CDCInitEP
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_CDCInitEP                                          1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) i1_USBEnableEndpoint                                  6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) i1_USBConfigureEndpoint                               7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_StartConversion
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
   _getsUSBUSART
     _USBTransferOnePacket
   _putUSBUSART

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_SYSTEM_Initialize
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_SYSTEM_Initialize
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      6       C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      F       F       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      5      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      12      13       22.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu May 25 17:19:32 2017

                              _USB_SD_Ptr 10BD                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l32 0967  
                           _USBDeviceInit 031B                        __size_of_CDCInitEP 003D  
                             __CFG_LVP$ON 0000      USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062                                       l210 0362  
             __end_of_USBStdGetDscHandler 1000                                       l270 09A9  
                                     _BDT 0020                                       _RB7 006F  
                                     _UIE 0E92                                       _UIR 0E90  
                              _USBSuspend 09B5                      USBStdSetCfgHandler@i 006A  
                    USBStdSetCfgHandler@p 0067               __end_ofi1_SYSTEM_Initialize 0951  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                          _USBDeviceTasks 0167                            _USBDeviceState 00E4  
                   ??_USBCtrlTrfRxService 0072                            ??_getsUSBUSART 016C  
                USBEnableEndpoint@options 0167                                      l4013 06FB  
                                    l4005 06EB                                      l4023 0744  
                                    l4103 0367                                      l4025 075C  
                                    l4041 0954                                      l4131 03AE  
                                    l4203 07FC                USBConfigureEndpoint@handle 0166  
                                    l4221 0266                                      l4213 025B  
                                    l4045 095B                                      l4125 038A  
                                    l4233 028F                                      l4313 053D  
                                    l4227 0286                                      l4091 0349  
                                    l4083 033C                                      l4075 032B  
                                    l4245 02AE                                      l4253 02CB  
                                    l4271 02FC                                      l4255 02D0  
                                    l4263 02ED                                      l4167 09AE  
                                    l4175 0CD1                                      l4273 0302  
                                    l4265 02F1                                      l4185 0CE8  
                                    l4337 0581                                      l4353 05B9  
                                    l4275 0318                                      l4187 0D07  
                                    l4179 0CE6                                      l4189 0D1C  
                                    l3983 0BB1                                      l3985 0BBA  
                                    l3993 0A1D                                      l3997 0A25  
                                    u4007 056F                                      u4017 059A  
                                    u3575 0B8A                                      i1l32 0950  
                                    u3585 0B90                                      u3595 0B98  
                                    u3695 034C                                      i1l72 0B01  
                   ??_USBCtrlTrfTxService 0070                                      u3997 0560  
                                    _UCFG 0E91                                      _UEP0 0E98  
                                    _UEP1 0E99                                      _UEIE 0E97  
                                    _UEIR 0E93                                      _UCON 0E8E  
                            ?i1_CDCInitEP 0070                              __CFG_WRT$OFF 0000  
                         _CDCDataInHandle 01C6    USBStdFeatureReqHandler@current_ep_data 006A  
                                    _pDst 01DE                                      _main 0520  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                               _BaudRateGen 01B8  
                                    fsr1l 0006                           _USBDeviceAttach 0998  
                                    btemp 007E                                      start 0012  
                           __CFG_IESO$OFF 0000                __end_of_USBCheckStdRequest 0E3B  
                  ??_USBCtrlTrfOutHandler 0076                             __CFG_MCLRE$ON 0000  
               ??_USBStdFeatureReqHandler 0066                  ??_USBStdGetStatusHandler 0070  
                          ?_USBDeviceInit 0070                               _writeBuffer 0320  
                                   ?_main 0070                i1USBEnableEndpoint@options 0077  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0092  
                                   _ANSC2 0C72                                     _ANSC3 0C73  
                  __end_of_USBDeviceTasks 024B                 ?_USBCtrlEPServiceComplete 0070  
                                   i1l210 0417                                     i1l221 0189  
                                   i1l231 01EF                                     i1l232 0248  
                                   i1l233 01F8                                     i1l323 0495  
                                   i1l227 01C4                                     i1l308 0E57  
                                   i1l420 0E3A                                     i1l422 0DE1  
                                   i1l431 0E14                                     i1l408 0F06  
                                   i1l360 0C1B                                     i1l363 0C5F  
                                   i1l516 0DD8                                     i1l364 0C24  
                                   i1l365 0C27                                     i1l295 0605  
                                   i1l456 0124                                     _UADDR 0E96  
                                   _USTAT 0E8F          __size_of_ADC_GetConversionResult 0009  
      __size_of_USBCtrlEPAllowStatusStage 0072                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 0D7A                                     _sd000 10C3  
                                   _sd001 1077                                     _sd002 1043  
          ?_USBIncrement1msInternalTimers 0070                            __CFG_BOREN$OFF 0000  
                       __end_of_CDCInitEP 0B3F                                     status 0003  
                                   wtemp0 007E                           putUSBUSART@data 0162  
            __size_of_USBStdSetCfgHandler 008E                           __initialization 0014  
                            __end_of_main 05BD                     _control_signal_bitmap 01CE  
                          __CFG_LPBOR$OFF 0000                 __size_of_USBCtrlEPService 0057  
                                  ??_main 01EA                           ?_USBDeviceTasks 0070  
                             ?_USBSuspend 0070                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 03D2             __size_of_ADC_IsConversionDone 0007  
                            _cdc_mem_type 01CF                   __end_of_USBDeviceAttach 09B5  
                                  _ADCON1 009E                          _CDCDataOutHandle 01C8  
                                  i1S4415 0800                                    _ACTCON 039B  
                                  _ADRESH 009C                                    _ADRESL 009B  
                         getsUSBUSART@len 016B                    SYSTEM_Initialize@state 0160  
                   __size_of_CDCTxService 00D0                                    i1l3001 0614  
                                  i1l3103 0E2F                                    i1l3201 0F0C  
                                  i1l3041 04B6                                    i1l3009 061D  
                                  i1l3051 04E5                                    i1l3053 04F1  
                                  i1l3213 0A08                                    i1l3039 049D  
                                  i1l3215 0A11                                    i1l3073 0DEA  
                                  i1l3321 03E1                                    i1l3155 0A9B  
                                  i1l2603 0DB0                                    i1l3075 0DED  
                                  i1l3181 0EC1                                    i1l2525 0B6E  
                                  i1l3085 0DFE                                    i1l3077 0DF0  
                                  i1l3245 0A57                                    i1l2703 0E9F  
                                  i1l3183 0EC6                                    i1l3167 0AC7  
                                  i1l2615 0DC6                                    i1l2527 0B77  
                                  i1l2535 09DC                                    i1l2623 0945  
                                  i1l2711 096C                                    i1l3087 0E01  
                                  i1l3263 0CB2                                    i1l3247 0A59  
                                  i1l3511 022F                                    i1l3193 0EEB  
                                  i1l2609 0DBE                                    i1l3089 0E04  
                                  i1l3265 0CB5                                    i1l3337 03FE  
                                  i1l3329 03F2                                    i1l3513 023E  
                                  i1l3505 0216                                    i1l2539 09E3  
                                  i1l2555 077E                                    i1l2547 076E  
                                  i1l2619 093E                                    i1l2651 0AD6  
                                  i1l3099 0E21                                    i1l3267 0CB8  
                                  i1l3371 0439                                    i1l3435 0183  
                                  i1l3427 0176                                    i1l3197 0EFA  
                                  i1l2565 07C7                                    i1l2645 0ACB  
                                  i1l2821 06C7                                    i1l2805 0696  
                                  i1l3349 041C                                    i1l3461 01B5  
                                  i1l2567 07DF                                    i1l2647 0ACF  
                                  i1l2655 0AD9                                    i1l2911 0084  
                                  i1l3471 01CA                                    i1l3455 01A0  
                                  i1l2673 0E50                                    i1l2729 0F36  
                                  i1l2593 0D99                                    i1l2585 0D8D  
                                  i1l4417 0AE2                                    i1l2649 0AD3  
                                  i1l2841 0FC9                                    i1l2833 0F96  
                                  i1l2761 0D4B                                    i1l3377 045D  
                                  i1l3449 019A                                    i1l4419 0AFC  
                                  i1l2923 00B9                                    i1l2851 0FF0  
                                  i1l2843 0FCC                                    i1l2685 0E71  
                                  i1l2693 0E86                                    i1l2597 0DA0  
                                  i1l2933 00D4                                    i1l2925 00C4  
                                  i1l2917 00A5                                    i1l2829 0F8C  
                                  i1l2781 065B                                    i1l2765 0D5E  
                                  i1l3485 01E7                                    i1l3477 01D1  
                                  i1l2695 0E8A                                    i1l2951 0115  
                                  i1l2935 00DB                                    i1l2855 0FF3  
                                  i1l2849 0FED                                    i1l2963 0149  
                                  i1l2939 00E6                                    i1l2867 0C37  
                                  i1l2965 0152                                    i1l2949 010F  
                                  i1l2877 0C53                                    i1l2789 066C  
                                  u204_25 0D55                                    i1l2959 012A  
                                  i1l2895 0054                                    i1l2799 0682  
                                  i1l2983 05D3                                    i1l2897 0056  
                                  i1l2979 05CF                                    u243_25 048F  
                                  u180_25 0B4D                                    u181_25 0B55  
                                  u280_25 0401                                    u179_25 0B47  
                                  u268_25 0C7B                                    _OSCCON 0099  
                           CDCTxService@i 016C                                    _TRISB7 046F  
            i1USBTransferOnePacket@handle 0079                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 01DF                           USBDeviceTasks@i 006F  
             USBStdFeatureReqHandler@pUEP 0068                  USBTransferOnePacket@data 0161  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 0160  
                            ?_putUSBUSART 0160                            __CFG_STVREN$ON 0000  
                    __end_of_getsUSBUSART 0D1E                         _USBEnableEndpoint 0A14  
         __size_of_USBStdGetStatusHandler 0055                                    _memset 0968  
                    i1USBEnableEndpoint@p 007A                        ?_USBEnableEndpoint 0167  
                                  main@v2 01ED             __size_of_USBTransferOnePacket 0084  
                            _CDCTxService 024B                       ??_USBEnableEndpoint 0168  
            i1USBConfigureEndpoint@handle 0076                               _CtrlTrfData 0058  
                    _controlTransferState 00E2                         _SYSTEM_Initialize 0951  
                 __end_of__initialization 003A                i1USBTransferOnePacket@data 0071  
                    __size_ofi1_CDCInitEP 0035                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0027                       __size_of_USBSuspend 001F  
                    i1USBDeviceInit@i_885 0073              __size_of_ADC_StartConversion 0003  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 0A37  
                           __end_of_sd000 10C7                             __end_of_sd001 10AB  
                           __end_of_sd002 1077                       ??_SYSTEM_Initialize 0160  
        __size_of_USBCtrlEPAllowDataStage 005C             __size_of_USBConfigureEndpoint 0043  
                 __end_ofi1_USBDeviceInit 047F               __end_of_USBCtrlTrfInHandler 0F0F  
                 _ADC_GetConversionResult 0933                                _cdc_notice 0220  
                              _cdc_rx_len 01D2                                _cdc_tx_len 01D0  
                ??_USBCtrlTrfSetupHandler 006E                   _USBTicksSinceSuspendEnd 01D3  
                        ?_USBDeviceAttach 0070                 __end_of_SYSTEM_Initialize 0968  
                  _USBStdGetStatusHandler 0C17                                __pbssBANK1 00E0  
                              __pbssBANK3 01A0                                __pbssBANK4 0220  
                              __pbssBANK5 02A0                                __pbssBANK6 0320  
             __size_of_USBWakeFromSuspend 0020                               _pBDTEntryIn 01A7  
        __end_of_USBCtrlEPServiceComplete 064F               __size_of_USBCheckCDCRequest 005F  
                              __pmaintext 0520                      USBCtrlTrfRxService@i 0074  
                         __CFG_PLLMULT$3x 0000                                __pintentry 0004  
            __size_ofi1_USBEnableEndpoint 0020                                   ?_memset 0070  
                              _device_dsc 10AB                          _USBCtrlEPService 0C6C  
                              _ep_data_in 01C3               __end_of_USBCtrlTrfRxService 0520  
                      _USBCheckStdRequest 0DD9                         _configDescriptor1 1000  
                                 u270_2m0 0CAE               __end_of_USBCtrlTrfTxService 0EA3  
                     _USBStdSetCfgHandler 064F                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90              __size_ofi1_SYSTEM_Initialize 0015  
                           _cdc_trf_state 01D1                  ??i1_USBTransferOnePacket 0074  
                                 _pCDCDst 01CA                                   _pCDCSrc 01CC  
                   __size_of_getsUSBUSART 005B           ??_USBIncrement1msInternalTimers 0070  
                    ?_USBStdSetCfgHandler 0070                                 _CDCInitEP 0B02  
              __size_of_USBEnableEndpoint 0023                                _readBuffer 02A0  
                    ??_USBCheckStdRequest 006D             __size_of_USBCtrlTrfOutHandler 0037  
                        ??_USBDeviceTasks 00E9                         ??_USBStallHandler 0070  
               ??_ADC_GetConversionResult 0162                          ?i1_USBDeviceInit 0070  
                    __size_of_putUSBUSART 001B                        getsUSBUSART@buffer 016E  
                         __size_of_memset 0018                 __end_of_configDescriptor1 1043  
                                 __ptext1 07E4                                   __ptext2 0CC3  
                                 __ptext3 031B                                   __ptext4 0998  
                                 __ptext5 0951                                   __ptext6 024B  
                                 __ptext7 0B02                                   __ptext8 06DD  
                                 __ptext9 0A14                                   _inPipes 01B3  
             _USBDeferOUTDataStagePackets 01D4                              ??_USBSuspend 0066  
                   i1USBEnableEndpoint@ep 007C                        __end_of_USB_CD_Ptr 10C9  
              __size_of_SYSTEM_Initialize 0017           __size_of_USBCtrlTrfSetupHandler 0053  
                                 clrloop0 0927                  ??i1_USBConfigureEndpoint 0071  
                    end_of_initialization 003A                              _getsUSBUSART 0CC3  
                      __end_of_USB_SD_Ptr 10C3                       _pBDTEntryEP0OutNext 00E0  
                                 memset@c 0072                                   memset@n 0074  
                                 memset@p 0076                           _USB1msTickCount 01BC  
         _dummy_encapsulated_cmd_response 022A                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 0066                          __CFG_CLKOUTEN$ON 0000  
            __end_of_ADC_IsConversionDone 0933                                ?_CDCInitEP 0070  
                      __end_of_USBSuspend 09D4                   _USBCtrlEPAllowDataStage 0D1E  
                _USBCtrlEPServiceComplete 05BD                _USBStatusStageEnabledFlag1 01D7  
              _USBStatusStageEnabledFlag2 01D6                        USBEnableEndpoint@p 016A  
                        __CFG_FOSC$INTOSC 0000                        _BothEP0OutUOWNsSet 01DA  
               USBStdSetCfgHandler@i_1636 0069                       _ADC_StartConversion 0923  
               USBConfigureEndpoint@EPNum 0165                ?_USBCtrlEPAllowStatusStage 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0064                                 _USTATcopy 00E5  
                i1USBTransferOnePacket@ep 0078              __end_of_USBTransferOnePacket 0761  
         __size_ofi1_USBTransferOnePacket 0083                         putUSBUSART@length 0160  
                      __CFG_PLLEN$ENABLED 0000                      ?_ADC_StartConversion 0070  
                      USBDeviceInit@i_885 0163                    _USBCtrlTrfSetupHandler 0BC4  
                   __end_of_USBDeviceInit 03D2     __end_of_USBIncrement1msInternalTimers 0998  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 0980  
                          __end_of_memset 0980                         _USBBusIsSuspended 01DC  
                     start_initialization 0014                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0075                               _cdc_data_rx 0120  
                             _cdc_data_tx 00A0              __end_of_USBConfigureEndpoint 0BC4  
         __end_of_USBStdFeatureReqHandler 0167                       i1_USBEnableEndpoint 09D4  
         __size_ofi1_USBConfigureEndpoint 0042                             ??i1_CDCInitEP 007D  
       __end_of_USBCtrlEPAllowStatusStage 0F81                  __end_of_USBCtrlEPService 0CC3  
               ??_USBCtrlEPAllowDataStage 0073                               ??_CDCInitEP 016D  
                          USBDeviceInit@i 0164                            USBDeviceInit@p 0161  
                   ??_ADC_StartConversion 0160                    _pBDTEntryEP0OutCurrent 00E3  
                 USBTransferOnePacket@dir 0160                   USBTransferOnePacket@len 0163  
             i1USBConfigureEndpoint@EPNum 0075                       _USBStdGetDscHandler 0F81  
                    ?i1_USBEnableEndpoint 0077                                  ??_memset 0076  
                     i1_SYSTEM_Initialize 093C                    i1_USBTransferOnePacket 0761  
                  _USBActiveConfiguration 01E9            __end_of_USBStdGetStatusHandler 0C6C  
               i1USBTransferOnePacket@dir 0070                 i1USBTransferOnePacket@len 0073  
                               ___latbits 0002                             __pcstackBANK0 0060  
                           __pcstackBANK1 00E6                             __pcstackBANK2 0160  
                           __pcstackBANK3 01EA              __size_of_USBCtrlTrfInHandler 006C  
                    _ADC_IsConversionDone 092C                      ?_USBStdGetDscHandler 0070  
                    ?i1_SYSTEM_Initialize 0070                __end_of_USBWakeFromSuspend 0A14  
                         _USBStallHandler 0A37                              _pBDTEntryOut 01AD  
              __end_of_USBCheckCDCRequest 0DD9                  __size_of_USBDeviceAttach 001D  
                     __end_ofi1_CDCInitEP 0A93                     ??i1_USBEnableEndpoint 0078  
                  i1_USBConfigureEndpoint 0B3F                                 __pswtext1 0800  
                    _USBTransferOnePacket 06DD                          main@numBytesRead 01EC  
                   ?_ADC_IsConversionDone 0070              __end_of_USBCtrlTrfOutHandler 0ACA  
                   ??_USBStdGetDscHandler 0070                               _ep_data_out 01C0  
            __size_of_USBCtrlTrfRxService 00A1             USBConfigureEndpoint@direction 0160  
                   ??i1_SYSTEM_Initialize 0070              __size_of_USBCtrlTrfTxService 0068  
              ??_USBCtrlEPServiceComplete 0075                                 clear_ram0 0926  
                                _PIE2bits 0092                                  _PIR2bits 0012  
                           ??_putUSBUSART 0161                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 01D5               __size_of_USBCheckStdRequest 0062  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0B81  
        __size_of_USBStdFeatureReqHandler 0129                                _ADCON0bits 009D  
                   ?_USBTransferOnePacket 0160                         _SYS_InterruptHigh 0004  
                           ?_CDCTxService 0070                              _RemoteWakeup 01DD  
                      ?_SYS_InterruptHigh 0070                  __size_ofi1_USBDeviceInit 00AD  
                 __end_of_USBStallHandler 0A5E               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 06DD                               i1_CDCInitEP 0A5E  
                     ??_SYS_InterruptHigh 00EB                        __end_of_device_dsc 10BD  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 0168                  ?_ADC_GetConversionResult 0160  
                                _SetupPkt 0050                     ?_USBConfigureEndpoint 0160  
                       ??_USBDeviceAttach 0160                 __end_of_SYS_InterruptHigh 0012  
                     __end_of_putUSBUSART 07FF                               _line_coding 01E0  
                          ??_CDCTxService 016B                    ??_ADC_IsConversionDone 0160  
                 __size_of_USBDeviceTasks 00E4                                  __ptext10 0B81  
                                __ptext11 0923                                  __ptext20 0980  
                                __ptext12 092C                                  __ptext21 0C6C  
                                __ptext13 0933                                  __ptext30 003E  
                                __ptext22 0BC4                                  __ptext31 0ACA  
                                __ptext23 05BD                                  __ptext15 0167  
                                __ptext40 0F0F                                  __ptext32 093C  
                                __ptext24 0D1E                                  __ptext16 03D2  
                                __ptext41 0EA3                                  __ptext33 0A5E  
                                __ptext25 0DD9                                  __ptext17 09F4  
                                __ptext42 0E3B                                  __ptext34 0761  
                                __ptext26 064F                                  __ptext18 09B5  
                                __ptext35 09D4                                  __ptext27 0968  
                                __ptext19 0A37                                  __ptext36 0B3F  
                                __ptext28 0C17                                  __ptext37 0D7A  
                                __ptext29 0F81                                  __ptext38 0A93  
                                __ptext39 047F            __end_of_USBCtrlTrfSetupHandler 0C17  
                           __size_of_main 009D                         ?_USBCtrlEPService 0070  
         i1USBConfigureEndpoint@direction 0070                        ??_USBCtrlEPService 00E6  
                     _USBCtrlTrfInHandler 0EA3                                  _outPipes 01A0  
                    _USBCtrlTrfOutHandler 0A93                                  int$flags 007E  
                 ?i1_USBTransferOnePacket 0070                 _USBCtrlEPAllowStatusStage 0F0F  
                  ??_USBTransferOnePacket 0164                 _USBDeferStatusStagePacket 01D8  
                CDCTxService@byte_to_send 016D                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                i1SYSTEM_Initialize@state 0070                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 0072                                  memset@p1 0070  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 006B  
                                intlevel1 0000                    __size_of_USBDeviceInit 00B7  
             __end_of_ADC_StartConversion 0926   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B02  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0038          ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007E           _USER_USB_CALLBACK_EVENT_HANDLER 0ACA  
                       ??i1_USBDeviceInit 0070           __end_of_ADC_GetConversionResult 093C  
                 ?i1_USBConfigureEndpoint 0070            __end_ofi1_USBTransferOnePacket 07E4  
                  ??_USBConfigureEndpoint 0161                     ?_USBCtrlTrfOutHandler 0070  
                             _putUSBUSART 07E4                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 047F                        _USBWakeFromSuspend 09F4  
                 _USBStdFeatureReqHandler 003E                        _USBCheckCDCRequest 0D7A  
                     _USBCtrlTrfTxService 0E3B                __size_of_SYS_InterruptHigh 000E  
                           __pstringtext1 10BD                             __pstringtext2 10C7  
                           __pstringtext3 1000                             __pstringtext4 1043  
                           __pstringtext5 1077                             __pstringtext6 10AB  
                           __pstringtext7 10C3                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 0073                     _USBAlternateInterface 01E7  
                     ?_USBCheckCDCRequest 0070                       USBEnableEndpoint@ep 016C  
                         _endpoint_number 01DB                      ?_USBCtrlTrfRxService 0070  
                           ?_getsUSBUSART 016B                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 01D9  
          __end_ofi1_USBConfigureEndpoint 0B81                      ??_USBWakeFromSuspend 0066  
             __end_ofi1_USBEnableEndpoint 09F4                USBTransferOnePacket@handle 0169  
                    __end_of_CDCTxService 031B                      ??_USBCheckCDCRequest 0070  
                              _USB_CD_Ptr 10C7  
